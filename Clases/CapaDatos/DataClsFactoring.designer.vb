'------------------------------------------------------------------------------
' <auto-generated>
'     Este código fue generado por una herramienta.
'     Versión de runtime:4.0.30319.42000
'
'     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
'     se vuelve a generar el código.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict On
Option Explicit On

Imports System
Imports System.Collections.Generic
Imports System.ComponentModel
Imports System.Data
Imports System.Data.Linq
Imports System.Data.Linq.Mapping
Imports System.Linq
Imports System.Linq.Expressions
Imports System.Reflection


<Global.System.Data.Linq.Mapping.DatabaseAttribute(Name:="BF_FACTOR")>  _
Partial Public Class DataClsFactoringDataContext
	Inherits System.Data.Linq.DataContext
	
	Private Shared mappingSource As System.Data.Linq.Mapping.MappingSource = New AttributeMappingSource()
	
  #Region "Definiciones de métodos de extensibilidad"
  Partial Private Sub OnCreated()
  End Sub
  Partial Private Sub InsertACC_cls(instance As ACC_cls)
    End Sub
  Partial Private Sub UpdateACC_cls(instance As ACC_cls)
    End Sub
  Partial Private Sub DeleteACC_cls(instance As ACC_cls)
    End Sub
  Partial Private Sub InsertACT_IMG_cls(instance As ACT_IMG_cls)
    End Sub
  Partial Private Sub UpdateACT_IMG_cls(instance As ACT_IMG_cls)
    End Sub
  Partial Private Sub DeleteACT_IMG_cls(instance As ACT_IMG_cls)
    End Sub
  Partial Private Sub Insertagd_cls(instance As agd_cls)
    End Sub
  Partial Private Sub Updateagd_cls(instance As agd_cls)
    End Sub
  Partial Private Sub Deleteagd_cls(instance As agd_cls)
    End Sub
  Partial Private Sub Insertapb_cls(instance As apb_cls)
    End Sub
  Partial Private Sub Updateapb_cls(instance As apb_cls)
    End Sub
  Partial Private Sub Deleteapb_cls(instance As apb_cls)
    End Sub
  Partial Private Sub Insertapc_cls(instance As apc_cls)
    End Sub
  Partial Private Sub Updateapc_cls(instance As apc_cls)
    End Sub
  Partial Private Sub Deleteapc_cls(instance As apc_cls)
    End Sub
  Partial Private Sub Insertapl_cls(instance As apl_cls)
    End Sub
  Partial Private Sub Updateapl_cls(instance As apl_cls)
    End Sub
  Partial Private Sub Deleteapl_cls(instance As apl_cls)
    End Sub
  Partial Private Sub Insertavl_cls(instance As avl_cls)
    End Sub
  Partial Private Sub Updateavl_cls(instance As avl_cls)
    End Sub
  Partial Private Sub Deleteavl_cls(instance As avl_cls)
    End Sub
  Partial Private Sub Insertbco_cls(instance As bco_cls)
    End Sub
  Partial Private Sub Updatebco_cls(instance As bco_cls)
    End Sub
  Partial Private Sub Deletebco_cls(instance As bco_cls)
    End Sub
  Partial Private Sub Insertccf_cls(instance As ccf_cls)
    End Sub
  Partial Private Sub Updateccf_cls(instance As ccf_cls)
    End Sub
  Partial Private Sub Deleteccf_cls(instance As ccf_cls)
    End Sub
  Partial Private Sub Insertcco_cls(instance As cco_cls)
    End Sub
  Partial Private Sub Updatecco_cls(instance As cco_cls)
    End Sub
  Partial Private Sub Deletecco_cls(instance As cco_cls)
    End Sub
  Partial Private Sub InsertCDC_cls(instance As CDC_cls)
    End Sub
  Partial Private Sub UpdateCDC_cls(instance As CDC_cls)
    End Sub
  Partial Private Sub DeleteCDC_cls(instance As CDC_cls)
    End Sub
  Partial Private Sub Insertcdn_cls(instance As cdn_cls)
    End Sub
  Partial Private Sub Updatecdn_cls(instance As cdn_cls)
    End Sub
  Partial Private Sub Deletecdn_cls(instance As cdn_cls)
    End Sub
  Partial Private Sub Insertcdp_cls(instance As cdp_cls)
    End Sub
  Partial Private Sub Updatecdp_cls(instance As cdp_cls)
    End Sub
  Partial Private Sub Deletecdp_cls(instance As cdp_cls)
    End Sub
  Partial Private Sub Insertcfc_cls(instance As cfc_cls)
    End Sub
  Partial Private Sub Updatecfc_cls(instance As cfc_cls)
    End Sub
  Partial Private Sub Deletecfc_cls(instance As cfc_cls)
    End Sub
  Partial Private Sub Insertcft_cls(instance As cft_cls)
    End Sub
  Partial Private Sub Updatecft_cls(instance As cft_cls)
    End Sub
  Partial Private Sub Deletecft_cls(instance As cft_cls)
    End Sub
  Partial Private Sub Insertchr_cls(instance As chr_cls)
    End Sub
  Partial Private Sub Updatechr_cls(instance As chr_cls)
    End Sub
  Partial Private Sub Deletechr_cls(instance As chr_cls)
    End Sub
  Partial Private Sub Insertciu_cls(instance As ciu_cls)
    End Sub
  Partial Private Sub Updateciu_cls(instance As ciu_cls)
    End Sub
  Partial Private Sub Deleteciu_cls(instance As ciu_cls)
    End Sub
  Partial Private Sub Insertclf_cls(instance As clf_cls)
    End Sub
  Partial Private Sub Updateclf_cls(instance As clf_cls)
    End Sub
  Partial Private Sub Deleteclf_cls(instance As clf_cls)
    End Sub
  Partial Private Sub Insertcli_cls(instance As cli_cls)
    End Sub
  Partial Private Sub Updatecli_cls(instance As cli_cls)
    End Sub
  Partial Private Sub Deletecli_cls(instance As cli_cls)
    End Sub
  Partial Private Sub Insertcmn_cls(instance As cmn_cls)
    End Sub
  Partial Private Sub Updatecmn_cls(instance As cmn_cls)
    End Sub
  Partial Private Sub Deletecmn_cls(instance As cmn_cls)
    End Sub
  Partial Private Sub Insertcnc_cls(instance As cnc_cls)
    End Sub
  Partial Private Sub Updatecnc_cls(instance As cnc_cls)
    End Sub
  Partial Private Sub Deletecnc_cls(instance As cnc_cls)
    End Sub
  Partial Private Sub Insertcon_cls(instance As con_cls)
    End Sub
  Partial Private Sub Updatecon_cls(instance As con_cls)
    End Sub
  Partial Private Sub Deletecon_cls(instance As con_cls)
    End Sub
  Partial Private Sub Insertcon_com_cls(instance As con_com_cls)
    End Sub
  Partial Private Sub Updatecon_com_cls(instance As con_com_cls)
    End Sub
  Partial Private Sub Deletecon_com_cls(instance As con_com_cls)
    End Sub
  Partial Private Sub Insertcpg_cls(instance As cpg_cls)
    End Sub
  Partial Private Sub Updatecpg_cls(instance As cpg_cls)
    End Sub
  Partial Private Sub Deletecpg_cls(instance As cpg_cls)
    End Sub
  Partial Private Sub Insertcrt_cls(instance As crt_cls)
    End Sub
  Partial Private Sub Updatecrt_cls(instance As crt_cls)
    End Sub
  Partial Private Sub Deletecrt_cls(instance As crt_cls)
    End Sub
  Partial Private Sub Insertctn_cls(instance As ctn_cls)
    End Sub
  Partial Private Sub Updatectn_cls(instance As ctn_cls)
    End Sub
  Partial Private Sub Deletectn_cls(instance As ctn_cls)
    End Sub
  Partial Private Sub Insertctr_cls(instance As ctr_cls)
    End Sub
  Partial Private Sub Updatectr_cls(instance As ctr_cls)
    End Sub
  Partial Private Sub Deletectr_cls(instance As ctr_cls)
    End Sub
  Partial Private Sub Insertcxc_cls(instance As cxc_cls)
    End Sub
  Partial Private Sub Updatecxc_cls(instance As cxc_cls)
    End Sub
  Partial Private Sub Deletecxc_cls(instance As cxc_cls)
    End Sub
  Partial Private Sub Insertcxd_cls(instance As cxd_cls)
    End Sub
  Partial Private Sub Updatecxd_cls(instance As cxd_cls)
    End Sub
  Partial Private Sub Deletecxd_cls(instance As cxd_cls)
    End Sub
  Partial Private Sub Insertcxn_cls(instance As cxn_cls)
    End Sub
  Partial Private Sub Updatecxn_cls(instance As cxn_cls)
    End Sub
  Partial Private Sub Deletecxn_cls(instance As cxn_cls)
    End Sub
  Partial Private Sub Insertcxp_cls(instance As cxp_cls)
    End Sub
  Partial Private Sub Updatecxp_cls(instance As cxp_cls)
    End Sub
  Partial Private Sub Deletecxp_cls(instance As cxp_cls)
    End Sub
  Partial Private Sub Insertcxs_cls(instance As cxs_cls)
    End Sub
  Partial Private Sub Updatecxs_cls(instance As cxs_cls)
    End Sub
  Partial Private Sub Deletecxs_cls(instance As cxs_cls)
    End Sub
  Partial Private Sub Insertdcc_cls(instance As dcc_cls)
    End Sub
  Partial Private Sub Updatedcc_cls(instance As dcc_cls)
    End Sub
  Partial Private Sub Deletedcc_cls(instance As dcc_cls)
    End Sub
  Partial Private Sub Insertdct(instance As dct)
    End Sub
  Partial Private Sub Updatedct(instance As dct)
    End Sub
  Partial Private Sub Deletedct(instance As dct)
    End Sub
  Partial Private Sub Insertddi_cls(instance As ddi_cls)
    End Sub
  Partial Private Sub Updateddi_cls(instance As ddi_cls)
    End Sub
  Partial Private Sub Deleteddi_cls(instance As ddi_cls)
    End Sub
  Partial Private Sub Insertddr_cls(instance As ddr_cls)
    End Sub
  Partial Private Sub Updateddr_cls(instance As ddr_cls)
    End Sub
  Partial Private Sub Deleteddr_cls(instance As ddr_cls)
    End Sub
  Partial Private Sub Insertdeu_cls(instance As deu_cls)
    End Sub
  Partial Private Sub Updatedeu_cls(instance As deu_cls)
    End Sub
  Partial Private Sub Deletedeu_cls(instance As deu_cls)
    End Sub
  Partial Private Sub Insertdeu_mon_cls(instance As deu_mon_cls)
    End Sub
  Partial Private Sub Updatedeu_mon_cls(instance As deu_mon_cls)
    End Sub
  Partial Private Sub Deletedeu_mon_cls(instance As deu_mon_cls)
    End Sub
  Partial Private Sub Insertdgh_cls(instance As dgh_cls)
    End Sub
  Partial Private Sub Updatedgh_cls(instance As dgh_cls)
    End Sub
  Partial Private Sub Deletedgh_cls(instance As dgh_cls)
    End Sub
  Partial Private Sub Insertdoc_cls(instance As doc_cls)
    End Sub
  Partial Private Sub Updatedoc_cls(instance As doc_cls)
    End Sub
  Partial Private Sub Deletedoc_cls(instance As doc_cls)
    End Sub
  Partial Private Sub Insertdoc_com_cls(instance As doc_com_cls)
    End Sub
  Partial Private Sub Updatedoc_com_cls(instance As doc_com_cls)
    End Sub
  Partial Private Sub Deletedoc_com_cls(instance As doc_com_cls)
    End Sub
  Partial Private Sub Insertdoc_con_cls(instance As doc_con_cls)
    End Sub
  Partial Private Sub Updatedoc_con_cls(instance As doc_con_cls)
    End Sub
  Partial Private Sub Deletedoc_con_cls(instance As doc_con_cls)
    End Sub
  Partial Private Sub Insertdoc_dig_ope_cls(instance As doc_dig_ope_cls)
    End Sub
  Partial Private Sub Updatedoc_dig_ope_cls(instance As doc_dig_ope_cls)
    End Sub
  Partial Private Sub Deletedoc_dig_ope_cls(instance As doc_dig_ope_cls)
    End Sub
  Partial Private Sub Insertdoc_est_cls(instance As doc_est_cls)
    End Sub
  Partial Private Sub Updatedoc_est_cls(instance As doc_est_cls)
    End Sub
  Partial Private Sub Deletedoc_est_cls(instance As doc_est_cls)
    End Sub
  Partial Private Sub Insertdoc_rea(instance As doc_rea)
    End Sub
  Partial Private Sub Updatedoc_rea(instance As doc_rea)
    End Sub
  Partial Private Sub Deletedoc_rea(instance As doc_rea)
    End Sub
  Partial Private Sub Insertdor_cls(instance As dor_cls)
    End Sub
  Partial Private Sub Updatedor_cls(instance As dor_cls)
    End Sub
  Partial Private Sub Deletedor_cls(instance As dor_cls)
    End Sub
  Partial Private Sub Insertdpa_cls(instance As dpa_cls)
    End Sub
  Partial Private Sub Updatedpa_cls(instance As dpa_cls)
    End Sub
  Partial Private Sub Deletedpa_cls(instance As dpa_cls)
    End Sub
  Partial Private Sub Insertdpg_cls(instance As dpg_cls)
    End Sub
  Partial Private Sub Updatedpg_cls(instance As dpg_cls)
    End Sub
  Partial Private Sub Deletedpg_cls(instance As dpg_cls)
    End Sub
  Partial Private Sub Insertdpo_cls(instance As dpo_cls)
    End Sub
  Partial Private Sub Updatedpo_cls(instance As dpo_cls)
    End Sub
  Partial Private Sub Deletedpo_cls(instance As dpo_cls)
    End Sub
  Partial Private Sub Insertdrc_cls(instance As drc_cls)
    End Sub
  Partial Private Sub Updatedrc_cls(instance As drc_cls)
    End Sub
  Partial Private Sub Deletedrc_cls(instance As drc_cls)
    End Sub
  Partial Private Sub Insertdsb_cls(instance As dsb_cls)
    End Sub
  Partial Private Sub Updatedsb_cls(instance As dsb_cls)
    End Sub
  Partial Private Sub Deletedsb_cls(instance As dsb_cls)
    End Sub
  Partial Private Sub Insertdsi_cls(instance As dsi_cls)
    End Sub
  Partial Private Sub Updatedsi_cls(instance As dsi_cls)
    End Sub
  Partial Private Sub Deletedsi_cls(instance As dsi_cls)
    End Sub
  Partial Private Sub Insertdvf_cls(instance As dvf_cls)
    End Sub
  Partial Private Sub Updatedvf_cls(instance As dvf_cls)
    End Sub
  Partial Private Sub Deletedvf_cls(instance As dvf_cls)
    End Sub
  Partial Private Sub Insertdxd_cls(instance As dxd_cls)
    End Sub
  Partial Private Sub Updatedxd_cls(instance As dxd_cls)
    End Sub
  Partial Private Sub Deletedxd_cls(instance As dxd_cls)
    End Sub
  Partial Private Sub Insertdxn_cls(instance As dxn_cls)
    End Sub
  Partial Private Sub Updatedxn_cls(instance As dxn_cls)
    End Sub
  Partial Private Sub Deletedxn_cls(instance As dxn_cls)
    End Sub
  Partial Private Sub Insertegr_cls(instance As egr_cls)
    End Sub
  Partial Private Sub Updateegr_cls(instance As egr_cls)
    End Sub
  Partial Private Sub Deleteegr_cls(instance As egr_cls)
    End Sub
  Partial Private Sub Insertegr_sec_cls(instance As egr_sec_cls)
    End Sub
  Partial Private Sub Updateegr_sec_cls(instance As egr_sec_cls)
    End Sub
  Partial Private Sub Deleteegr_sec_cls(instance As egr_sec_cls)
    End Sub
  Partial Private Sub Insertemp_cls(instance As emp_cls)
    End Sub
  Partial Private Sub Updateemp_cls(instance As emp_cls)
    End Sub
  Partial Private Sub Deleteemp_cls(instance As emp_cls)
    End Sub
  Partial Private Sub InsertError_cls(instance As Error_cls)
    End Sub
  Partial Private Sub UpdateError_cls(instance As Error_cls)
    End Sub
  Partial Private Sub DeleteError_cls(instance As Error_cls)
    End Sub
  Partial Private Sub Inserteva_cls(instance As eva_cls)
    End Sub
  Partial Private Sub Updateeva_cls(instance As eva_cls)
    End Sub
  Partial Private Sub Deleteeva_cls(instance As eva_cls)
    End Sub
  Partial Private Sub Insertexd_cls(instance As exd_cls)
    End Sub
  Partial Private Sub Updateexd_cls(instance As exd_cls)
    End Sub
  Partial Private Sub Deleteexd_cls(instance As exd_cls)
    End Sub
  Partial Private Sub Insertfct_cls(instance As fct_cls)
    End Sub
  Partial Private Sub Updatefct_cls(instance As fct_cls)
    End Sub
  Partial Private Sub Deletefct_cls(instance As fct_cls)
    End Sub
  Partial Private Sub Insertfdd_cls(instance As fdd_cls)
    End Sub
  Partial Private Sub Updatefdd_cls(instance As fdd_cls)
    End Sub
  Partial Private Sub Deletefdd_cls(instance As fdd_cls)
    End Sub
  Partial Private Sub Insertfer_cls(instance As fer_cls)
    End Sub
  Partial Private Sub Updatefer_cls(instance As fer_cls)
    End Sub
  Partial Private Sub Deletefer_cls(instance As fer_cls)
    End Sub
  Partial Private Sub InsertGDC_cls(instance As GDC_cls)
    End Sub
  Partial Private Sub UpdateGDC_cls(instance As GDC_cls)
    End Sub
  Partial Private Sub DeleteGDC_cls(instance As GDC_cls)
    End Sub
  Partial Private Sub Insertgdn_cls(instance As gdn_cls)
    End Sub
  Partial Private Sub Updategdn_cls(instance As gdn_cls)
    End Sub
  Partial Private Sub Deletegdn_cls(instance As gdn_cls)
    End Sub
  Partial Private Sub Insertgfn_cls(instance As gfn_cls)
    End Sub
  Partial Private Sub Updategfn_cls(instance As gfn_cls)
    End Sub
  Partial Private Sub Deletegfn_cls(instance As gfn_cls)
    End Sub
  Partial Private Sub Insertgga_cls(instance As gga_cls)
    End Sub
  Partial Private Sub Updategga_cls(instance As gga_cls)
    End Sub
  Partial Private Sub Deletegga_cls(instance As gga_cls)
    End Sub
  Partial Private Sub Insertgnr_cls(instance As gnr_cls)
    End Sub
  Partial Private Sub Updategnr_cls(instance As gnr_cls)
    End Sub
  Partial Private Sub Deletegnr_cls(instance As gnr_cls)
    End Sub
  Partial Private Sub Insertgos_cls(instance As gos_cls)
    End Sub
  Partial Private Sub Updategos_cls(instance As gos_cls)
    End Sub
  Partial Private Sub Deletegos_cls(instance As gos_cls)
    End Sub
  Partial Private Sub Insertgrc_cls(instance As grc_cls)
    End Sub
  Partial Private Sub Updategrc_cls(instance As grc_cls)
    End Sub
  Partial Private Sub Deletegrc_cls(instance As grc_cls)
    End Sub
  Partial Private Sub Insertgsn_cls(instance As gsn_cls)
    End Sub
  Partial Private Sub Updategsn_cls(instance As gsn_cls)
    End Sub
  Partial Private Sub Deletegsn_cls(instance As gsn_cls)
    End Sub
  Partial Private Sub Insertgto_cls(instance As gto_cls)
    End Sub
  Partial Private Sub Updategto_cls(instance As gto_cls)
    End Sub
  Partial Private Sub Deletegto_cls(instance As gto_cls)
    End Sub
  Partial Private Sub Inserthas_cls(instance As has_cls)
    End Sub
  Partial Private Sub Updatehas_cls(instance As has_cls)
    End Sub
  Partial Private Sub Deletehas_cls(instance As has_cls)
    End Sub
  Partial Private Sub Inserthre_cls(instance As hre_cls)
    End Sub
  Partial Private Sub Updatehre_cls(instance As hre_cls)
    End Sub
  Partial Private Sub Deletehre_cls(instance As hre_cls)
    End Sub
  Partial Private Sub Inserting_cls(instance As ing_cls)
    End Sub
  Partial Private Sub Updateing_cls(instance As ing_cls)
    End Sub
  Partial Private Sub Deleteing_cls(instance As ing_cls)
    End Sub
  Partial Private Sub Inserting_sec_cls(instance As ing_sec_cls)
    End Sub
  Partial Private Sub Updateing_sec_cls(instance As ing_sec_cls)
    End Sub
  Partial Private Sub Deleteing_sec_cls(instance As ing_sec_cls)
    End Sub
  Partial Private Sub Insertldc_cls(instance As ldc_cls)
    End Sub
  Partial Private Sub Updateldc_cls(instance As ldc_cls)
    End Sub
  Partial Private Sub Deleteldc_cls(instance As ldc_cls)
    End Sub
  Partial Private Sub Insertnbc_cls(instance As nbc_cls)
    End Sub
  Partial Private Sub Updatenbc_cls(instance As nbc_cls)
    End Sub
  Partial Private Sub Deletenbc_cls(instance As nbc_cls)
    End Sub
  Partial Private Sub Insertnce_cls(instance As nce_cls)
    End Sub
  Partial Private Sub Updatence_cls(instance As nce_cls)
    End Sub
  Partial Private Sub Deletence_cls(instance As nce_cls)
    End Sub
  Partial Private Sub InsertNchr_pld(instance As Nchr_pld)
    End Sub
  Partial Private Sub UpdateNchr_pld(instance As Nchr_pld)
    End Sub
  Partial Private Sub DeleteNchr_pld(instance As Nchr_pld)
    End Sub
  Partial Private Sub Insertncr_cls(instance As ncr_cls)
    End Sub
  Partial Private Sub Updatencr_cls(instance As ncr_cls)
    End Sub
  Partial Private Sub Deletencr_cls(instance As ncr_cls)
    End Sub
  Partial Private Sub Insertnes_cls(instance As nes_cls)
    End Sub
  Partial Private Sub Updatenes_cls(instance As nes_cls)
    End Sub
  Partial Private Sub Deletenes_cls(instance As nes_cls)
    End Sub
  Partial Private Sub InsertNEZ_cls(instance As NEZ_cls)
    End Sub
  Partial Private Sub UpdateNEZ_cls(instance As NEZ_cls)
    End Sub
  Partial Private Sub DeleteNEZ_cls(instance As NEZ_cls)
    End Sub
  Partial Private Sub Insertnma_cls(instance As nma_cls)
    End Sub
  Partial Private Sub Updatenma_cls(instance As nma_cls)
    End Sub
  Partial Private Sub Deletenma_cls(instance As nma_cls)
    End Sub
  Partial Private Sub Insertnmn_cls(instance As nmn_cls)
    End Sub
  Partial Private Sub Updatenmn_cls(instance As nmn_cls)
    End Sub
  Partial Private Sub Deletenmn_cls(instance As nmn_cls)
    End Sub
  Partial Private Sub Insertnnc_cls(instance As nnc_cls)
    End Sub
  Partial Private Sub Updatennc_cls(instance As nnc_cls)
    End Sub
  Partial Private Sub Deletennc_cls(instance As nnc_cls)
    End Sub
  Partial Private Sub Insertnrd_cls(instance As nrd_cls)
    End Sub
  Partial Private Sub Updatenrd_cls(instance As nrd_cls)
    End Sub
  Partial Private Sub Deletenrd_cls(instance As nrd_cls)
    End Sub
  Partial Private Sub Insertntr_cls(instance As ntr_cls)
    End Sub
  Partial Private Sub Updatentr_cls(instance As ntr_cls)
    End Sub
  Partial Private Sub Deletentr_cls(instance As ntr_cls)
    End Sub
  Partial Private Sub Insertope_cls(instance As ope_cls)
    End Sub
  Partial Private Sub Updateope_cls(instance As ope_cls)
    End Sub
  Partial Private Sub Deleteope_cls(instance As ope_cls)
    End Sub
  Partial Private Sub Insertopn_cls(instance As opn_cls)
    End Sub
  Partial Private Sub Updateopn_cls(instance As opn_cls)
    End Sub
  Partial Private Sub Deleteopn_cls(instance As opn_cls)
    End Sub
  Partial Private Sub Insertopo_cls(instance As opo_cls)
    End Sub
  Partial Private Sub Updateopo_cls(instance As opo_cls)
    End Sub
  Partial Private Sub Deleteopo_cls(instance As opo_cls)
    End Sub
  Partial Private Sub Insertorg_cls(instance As org_cls)
    End Sub
  Partial Private Sub Updateorg_cls(instance As org_cls)
    End Sub
  Partial Private Sub Deleteorg_cls(instance As org_cls)
    End Sub
  Partial Private Sub InsertP_001_cls(instance As P_001_cls)
    End Sub
  Partial Private Sub UpdateP_001_cls(instance As P_001_cls)
    End Sub
  Partial Private Sub DeleteP_001_cls(instance As P_001_cls)
    End Sub
  Partial Private Sub InsertP_0010_cls(instance As P_0010_cls)
    End Sub
  Partial Private Sub UpdateP_0010_cls(instance As P_0010_cls)
    End Sub
  Partial Private Sub DeleteP_0010_cls(instance As P_0010_cls)
    End Sub
  Partial Private Sub InsertP_0011_cls(instance As P_0011_cls)
    End Sub
  Partial Private Sub UpdateP_0011_cls(instance As P_0011_cls)
    End Sub
  Partial Private Sub DeleteP_0011_cls(instance As P_0011_cls)
    End Sub
  Partial Private Sub InsertP_0012_cls(instance As P_0012_cls)
    End Sub
  Partial Private Sub UpdateP_0012_cls(instance As P_0012_cls)
    End Sub
  Partial Private Sub DeleteP_0012_cls(instance As P_0012_cls)
    End Sub
  Partial Private Sub InsertP_0015_cls(instance As P_0015_cls)
    End Sub
  Partial Private Sub UpdateP_0015_cls(instance As P_0015_cls)
    End Sub
  Partial Private Sub DeleteP_0015_cls(instance As P_0015_cls)
    End Sub
  Partial Private Sub InsertP_0017_cls(instance As P_0017_cls)
    End Sub
  Partial Private Sub UpdateP_0017_cls(instance As P_0017_cls)
    End Sub
  Partial Private Sub DeleteP_0017_cls(instance As P_0017_cls)
    End Sub
  Partial Private Sub InsertP_0018_cls(instance As P_0018_cls)
    End Sub
  Partial Private Sub UpdateP_0018_cls(instance As P_0018_cls)
    End Sub
  Partial Private Sub DeleteP_0018_cls(instance As P_0018_cls)
    End Sub
  Partial Private Sub InsertP_002_cls(instance As P_002_cls)
    End Sub
  Partial Private Sub UpdateP_002_cls(instance As P_002_cls)
    End Sub
  Partial Private Sub DeleteP_002_cls(instance As P_002_cls)
    End Sub
  Partial Private Sub InsertP_0020_cls(instance As P_0020_cls)
    End Sub
  Partial Private Sub UpdateP_0020_cls(instance As P_0020_cls)
    End Sub
  Partial Private Sub DeleteP_0020_cls(instance As P_0020_cls)
    End Sub
  Partial Private Sub InsertP_0021_cls(instance As P_0021_cls)
    End Sub
  Partial Private Sub UpdateP_0021_cls(instance As P_0021_cls)
    End Sub
  Partial Private Sub DeleteP_0021_cls(instance As P_0021_cls)
    End Sub
  Partial Private Sub InsertP_0022_cls(instance As P_0022_cls)
    End Sub
  Partial Private Sub UpdateP_0022_cls(instance As P_0022_cls)
    End Sub
  Partial Private Sub DeleteP_0022_cls(instance As P_0022_cls)
    End Sub
  Partial Private Sub InsertP_0023_cls(instance As P_0023_cls)
    End Sub
  Partial Private Sub UpdateP_0023_cls(instance As P_0023_cls)
    End Sub
  Partial Private Sub DeleteP_0023_cls(instance As P_0023_cls)
    End Sub
  Partial Private Sub InsertP_0024_cls(instance As P_0024_cls)
    End Sub
  Partial Private Sub UpdateP_0024_cls(instance As P_0024_cls)
    End Sub
  Partial Private Sub DeleteP_0024_cls(instance As P_0024_cls)
    End Sub
  Partial Private Sub InsertP_0025_cls(instance As P_0025_cls)
    End Sub
  Partial Private Sub UpdateP_0025_cls(instance As P_0025_cls)
    End Sub
  Partial Private Sub DeleteP_0025_cls(instance As P_0025_cls)
    End Sub
  Partial Private Sub InsertP_0026_cls(instance As P_0026_cls)
    End Sub
  Partial Private Sub UpdateP_0026_cls(instance As P_0026_cls)
    End Sub
  Partial Private Sub DeleteP_0026_cls(instance As P_0026_cls)
    End Sub
  Partial Private Sub InsertP_0027_cls(instance As P_0027_cls)
    End Sub
  Partial Private Sub UpdateP_0027_cls(instance As P_0027_cls)
    End Sub
  Partial Private Sub DeleteP_0027_cls(instance As P_0027_cls)
    End Sub
  Partial Private Sub InsertP_0028_cls(instance As P_0028_cls)
    End Sub
  Partial Private Sub UpdateP_0028_cls(instance As P_0028_cls)
    End Sub
  Partial Private Sub DeleteP_0028_cls(instance As P_0028_cls)
    End Sub
  Partial Private Sub InsertP_0029_cls(instance As P_0029_cls)
    End Sub
  Partial Private Sub UpdateP_0029_cls(instance As P_0029_cls)
    End Sub
  Partial Private Sub DeleteP_0029_cls(instance As P_0029_cls)
    End Sub
  Partial Private Sub InsertP_003_cls(instance As P_003_cls)
    End Sub
  Partial Private Sub UpdateP_003_cls(instance As P_003_cls)
    End Sub
  Partial Private Sub DeleteP_003_cls(instance As P_003_cls)
    End Sub
  Partial Private Sub InsertP_0030_cls(instance As P_0030_cls)
    End Sub
  Partial Private Sub UpdateP_0030_cls(instance As P_0030_cls)
    End Sub
  Partial Private Sub DeleteP_0030_cls(instance As P_0030_cls)
    End Sub
  Partial Private Sub InsertP_0031_cls(instance As P_0031_cls)
    End Sub
  Partial Private Sub UpdateP_0031_cls(instance As P_0031_cls)
    End Sub
  Partial Private Sub DeleteP_0031_cls(instance As P_0031_cls)
    End Sub
  Partial Private Sub InsertP_0036_cls(instance As P_0036_cls)
    End Sub
  Partial Private Sub UpdateP_0036_cls(instance As P_0036_cls)
    End Sub
  Partial Private Sub DeleteP_0036_cls(instance As P_0036_cls)
    End Sub
  Partial Private Sub InsertP_0040_cls(instance As P_0040_cls)
    End Sub
  Partial Private Sub UpdateP_0040_cls(instance As P_0040_cls)
    End Sub
  Partial Private Sub DeleteP_0040_cls(instance As P_0040_cls)
    End Sub
  Partial Private Sub Insertp_0041_cls(instance As p_0041_cls)
    End Sub
  Partial Private Sub Updatep_0041_cls(instance As p_0041_cls)
    End Sub
  Partial Private Sub Deletep_0041_cls(instance As p_0041_cls)
    End Sub
  Partial Private Sub InsertP_0044_cls(instance As P_0044_cls)
    End Sub
  Partial Private Sub UpdateP_0044_cls(instance As P_0044_cls)
    End Sub
  Partial Private Sub DeleteP_0044_cls(instance As P_0044_cls)
    End Sub
  Partial Private Sub InsertP_0045_cls(instance As P_0045_cls)
    End Sub
  Partial Private Sub UpdateP_0045_cls(instance As P_0045_cls)
    End Sub
  Partial Private Sub DeleteP_0045_cls(instance As P_0045_cls)
    End Sub
  Partial Private Sub InsertP_0048_cls(instance As P_0048_cls)
    End Sub
  Partial Private Sub UpdateP_0048_cls(instance As P_0048_cls)
    End Sub
  Partial Private Sub DeleteP_0048_cls(instance As P_0048_cls)
    End Sub
  Partial Private Sub InsertP_0049_cls(instance As P_0049_cls)
    End Sub
  Partial Private Sub UpdateP_0049_cls(instance As P_0049_cls)
    End Sub
  Partial Private Sub DeleteP_0049_cls(instance As P_0049_cls)
    End Sub
  Partial Private Sub InsertP_005_cls(instance As P_005_cls)
    End Sub
  Partial Private Sub UpdateP_005_cls(instance As P_005_cls)
    End Sub
  Partial Private Sub DeleteP_005_cls(instance As P_005_cls)
    End Sub
  Partial Private Sub InsertP_0051_cls(instance As P_0051_cls)
    End Sub
  Partial Private Sub UpdateP_0051_cls(instance As P_0051_cls)
    End Sub
  Partial Private Sub DeleteP_0051_cls(instance As P_0051_cls)
    End Sub
  Partial Private Sub InsertP_0052_cls(instance As P_0052_cls)
    End Sub
  Partial Private Sub UpdateP_0052_cls(instance As P_0052_cls)
    End Sub
  Partial Private Sub DeleteP_0052_cls(instance As P_0052_cls)
    End Sub
  Partial Private Sub InsertP_0053_cls(instance As P_0053_cls)
    End Sub
  Partial Private Sub UpdateP_0053_cls(instance As P_0053_cls)
    End Sub
  Partial Private Sub DeleteP_0053_cls(instance As P_0053_cls)
    End Sub
  Partial Private Sub Insertp_0054_cls(instance As p_0054_cls)
    End Sub
  Partial Private Sub Updatep_0054_cls(instance As p_0054_cls)
    End Sub
  Partial Private Sub Deletep_0054_cls(instance As p_0054_cls)
    End Sub
  Partial Private Sub InsertP_0055_cls(instance As P_0055_cls)
    End Sub
  Partial Private Sub UpdateP_0055_cls(instance As P_0055_cls)
    End Sub
  Partial Private Sub DeleteP_0055_cls(instance As P_0055_cls)
    End Sub
  Partial Private Sub InsertP_0056_cls(instance As P_0056_cls)
    End Sub
  Partial Private Sub UpdateP_0056_cls(instance As P_0056_cls)
    End Sub
  Partial Private Sub DeleteP_0056_cls(instance As P_0056_cls)
    End Sub
  Partial Private Sub InsertP_0057_cls(instance As P_0057_cls)
    End Sub
  Partial Private Sub UpdateP_0057_cls(instance As P_0057_cls)
    End Sub
  Partial Private Sub DeleteP_0057_cls(instance As P_0057_cls)
    End Sub
  Partial Private Sub InsertP_0058_cls(instance As P_0058_cls)
    End Sub
  Partial Private Sub UpdateP_0058_cls(instance As P_0058_cls)
    End Sub
  Partial Private Sub DeleteP_0058_cls(instance As P_0058_cls)
    End Sub
  Partial Private Sub InsertP_0060_cls(instance As P_0060_cls)
    End Sub
  Partial Private Sub UpdateP_0060_cls(instance As P_0060_cls)
    End Sub
  Partial Private Sub DeleteP_0060_cls(instance As P_0060_cls)
    End Sub
  Partial Private Sub InsertP_0061_cls(instance As P_0061_cls)
    End Sub
  Partial Private Sub UpdateP_0061_cls(instance As P_0061_cls)
    End Sub
  Partial Private Sub DeleteP_0061_cls(instance As P_0061_cls)
    End Sub
  Partial Private Sub InsertP_0062_cls(instance As P_0062_cls)
    End Sub
  Partial Private Sub UpdateP_0062_cls(instance As P_0062_cls)
    End Sub
  Partial Private Sub DeleteP_0062_cls(instance As P_0062_cls)
    End Sub
  Partial Private Sub InsertP_0063_cls(instance As P_0063_cls)
    End Sub
  Partial Private Sub UpdateP_0063_cls(instance As P_0063_cls)
    End Sub
  Partial Private Sub DeleteP_0063_cls(instance As P_0063_cls)
    End Sub
  Partial Private Sub InsertP_0064_cls(instance As P_0064_cls)
    End Sub
  Partial Private Sub UpdateP_0064_cls(instance As P_0064_cls)
    End Sub
  Partial Private Sub DeleteP_0064_cls(instance As P_0064_cls)
    End Sub
  Partial Private Sub InsertP_0065_cls(instance As P_0065_cls)
    End Sub
  Partial Private Sub UpdateP_0065_cls(instance As P_0065_cls)
    End Sub
  Partial Private Sub DeleteP_0065_cls(instance As P_0065_cls)
    End Sub
  Partial Private Sub InsertP_0067_cls(instance As P_0067_cls)
    End Sub
  Partial Private Sub UpdateP_0067_cls(instance As P_0067_cls)
    End Sub
  Partial Private Sub DeleteP_0067_cls(instance As P_0067_cls)
    End Sub
  Partial Private Sub InsertP_0068_cls(instance As P_0068_cls)
    End Sub
  Partial Private Sub UpdateP_0068_cls(instance As P_0068_cls)
    End Sub
  Partial Private Sub DeleteP_0068_cls(instance As P_0068_cls)
    End Sub
  Partial Private Sub InsertP_0069_cls(instance As P_0069_cls)
    End Sub
  Partial Private Sub UpdateP_0069_cls(instance As P_0069_cls)
    End Sub
  Partial Private Sub DeleteP_0069_cls(instance As P_0069_cls)
    End Sub
  Partial Private Sub InsertP_007_cls(instance As P_007_cls)
    End Sub
  Partial Private Sub UpdateP_007_cls(instance As P_007_cls)
    End Sub
  Partial Private Sub DeleteP_007_cls(instance As P_007_cls)
    End Sub
  Partial Private Sub InsertP_0070_cls(instance As P_0070_cls)
    End Sub
  Partial Private Sub UpdateP_0070_cls(instance As P_0070_cls)
    End Sub
  Partial Private Sub DeleteP_0070_cls(instance As P_0070_cls)
    End Sub
  Partial Private Sub InsertP_0071_cls(instance As P_0071_cls)
    End Sub
  Partial Private Sub UpdateP_0071_cls(instance As P_0071_cls)
    End Sub
  Partial Private Sub DeleteP_0071_cls(instance As P_0071_cls)
    End Sub
  Partial Private Sub InsertP_0072_cls(instance As P_0072_cls)
    End Sub
  Partial Private Sub UpdateP_0072_cls(instance As P_0072_cls)
    End Sub
  Partial Private Sub DeleteP_0072_cls(instance As P_0072_cls)
    End Sub
  Partial Private Sub InsertP_0073_cls(instance As P_0073_cls)
    End Sub
  Partial Private Sub UpdateP_0073_cls(instance As P_0073_cls)
    End Sub
  Partial Private Sub DeleteP_0073_cls(instance As P_0073_cls)
    End Sub
  Partial Private Sub InsertP_0074_cls(instance As P_0074_cls)
    End Sub
  Partial Private Sub UpdateP_0074_cls(instance As P_0074_cls)
    End Sub
  Partial Private Sub DeleteP_0074_cls(instance As P_0074_cls)
    End Sub
  Partial Private Sub InsertP_0075_cls(instance As P_0075_cls)
    End Sub
  Partial Private Sub UpdateP_0075_cls(instance As P_0075_cls)
    End Sub
  Partial Private Sub DeleteP_0075_cls(instance As P_0075_cls)
    End Sub
  Partial Private Sub InsertP_0076_cls(instance As P_0076_cls)
    End Sub
  Partial Private Sub UpdateP_0076_cls(instance As P_0076_cls)
    End Sub
  Partial Private Sub DeleteP_0076_cls(instance As P_0076_cls)
    End Sub
  Partial Private Sub InsertP_0077_cls(instance As P_0077_cls)
    End Sub
  Partial Private Sub UpdateP_0077_cls(instance As P_0077_cls)
    End Sub
  Partial Private Sub DeleteP_0077_cls(instance As P_0077_cls)
    End Sub
  Partial Private Sub InsertP_0078_cls(instance As P_0078_cls)
    End Sub
  Partial Private Sub UpdateP_0078_cls(instance As P_0078_cls)
    End Sub
  Partial Private Sub DeleteP_0078_cls(instance As P_0078_cls)
    End Sub
  Partial Private Sub InsertP_0079_cls(instance As P_0079_cls)
    End Sub
  Partial Private Sub UpdateP_0079_cls(instance As P_0079_cls)
    End Sub
  Partial Private Sub DeleteP_0079_cls(instance As P_0079_cls)
    End Sub
  Partial Private Sub InsertP_008_cls(instance As P_008_cls)
    End Sub
  Partial Private Sub UpdateP_008_cls(instance As P_008_cls)
    End Sub
  Partial Private Sub DeleteP_008_cls(instance As P_008_cls)
    End Sub
  Partial Private Sub InsertP_0080_cls(instance As P_0080_cls)
    End Sub
  Partial Private Sub UpdateP_0080_cls(instance As P_0080_cls)
    End Sub
  Partial Private Sub DeleteP_0080_cls(instance As P_0080_cls)
    End Sub
  Partial Private Sub InsertP_0081_cls(instance As P_0081_cls)
    End Sub
  Partial Private Sub UpdateP_0081_cls(instance As P_0081_cls)
    End Sub
  Partial Private Sub DeleteP_0081_cls(instance As P_0081_cls)
    End Sub
  Partial Private Sub InsertP_0082_cls(instance As P_0082_cls)
    End Sub
  Partial Private Sub UpdateP_0082_cls(instance As P_0082_cls)
    End Sub
  Partial Private Sub DeleteP_0082_cls(instance As P_0082_cls)
    End Sub
  Partial Private Sub InsertP_0083_cls(instance As P_0083_cls)
    End Sub
  Partial Private Sub UpdateP_0083_cls(instance As P_0083_cls)
    End Sub
  Partial Private Sub DeleteP_0083_cls(instance As P_0083_cls)
    End Sub
  Partial Private Sub InsertP_0084_cls(instance As P_0084_cls)
    End Sub
  Partial Private Sub UpdateP_0084_cls(instance As P_0084_cls)
    End Sub
  Partial Private Sub DeleteP_0084_cls(instance As P_0084_cls)
    End Sub
  Partial Private Sub InsertP_0085_cls(instance As P_0085_cls)
    End Sub
  Partial Private Sub UpdateP_0085_cls(instance As P_0085_cls)
    End Sub
  Partial Private Sub DeleteP_0085_cls(instance As P_0085_cls)
    End Sub
  Partial Private Sub InsertP_0086_cls(instance As P_0086_cls)
    End Sub
  Partial Private Sub UpdateP_0086_cls(instance As P_0086_cls)
    End Sub
  Partial Private Sub DeleteP_0086_cls(instance As P_0086_cls)
    End Sub
  Partial Private Sub InsertP_0087_cls(instance As P_0087_cls)
    End Sub
  Partial Private Sub UpdateP_0087_cls(instance As P_0087_cls)
    End Sub
  Partial Private Sub DeleteP_0087_cls(instance As P_0087_cls)
    End Sub
  Partial Private Sub InsertP_0088_cls(instance As P_0088_cls)
    End Sub
  Partial Private Sub UpdateP_0088_cls(instance As P_0088_cls)
    End Sub
  Partial Private Sub DeleteP_0088_cls(instance As P_0088_cls)
    End Sub
  Partial Private Sub InsertP_0089_cls(instance As P_0089_cls)
    End Sub
  Partial Private Sub UpdateP_0089_cls(instance As P_0089_cls)
    End Sub
  Partial Private Sub DeleteP_0089_cls(instance As P_0089_cls)
    End Sub
  Partial Private Sub InsertP_0090_cls(instance As P_0090_cls)
    End Sub
  Partial Private Sub UpdateP_0090_cls(instance As P_0090_cls)
    End Sub
  Partial Private Sub DeleteP_0090_cls(instance As P_0090_cls)
    End Sub
  Partial Private Sub InsertP_0091_cls(instance As P_0091_cls)
    End Sub
  Partial Private Sub UpdateP_0091_cls(instance As P_0091_cls)
    End Sub
  Partial Private Sub DeleteP_0091_cls(instance As P_0091_cls)
    End Sub
  Partial Private Sub InsertP_0099_cls(instance As P_0099_cls)
    End Sub
  Partial Private Sub UpdateP_0099_cls(instance As P_0099_cls)
    End Sub
  Partial Private Sub DeleteP_0099_cls(instance As P_0099_cls)
    End Sub
  Partial Private Sub InsertP_0100_cls(instance As P_0100_cls)
    End Sub
  Partial Private Sub UpdateP_0100_cls(instance As P_0100_cls)
    End Sub
  Partial Private Sub DeleteP_0100_cls(instance As P_0100_cls)
    End Sub
  Partial Private Sub InsertP_0101_cls(instance As P_0101_cls)
    End Sub
  Partial Private Sub UpdateP_0101_cls(instance As P_0101_cls)
    End Sub
  Partial Private Sub DeleteP_0101_cls(instance As P_0101_cls)
    End Sub
  Partial Private Sub InsertP_0102_cls(instance As P_0102_cls)
    End Sub
  Partial Private Sub UpdateP_0102_cls(instance As P_0102_cls)
    End Sub
  Partial Private Sub DeleteP_0102_cls(instance As P_0102_cls)
    End Sub
  Partial Private Sub InsertP_0103_cls(instance As P_0103_cls)
    End Sub
  Partial Private Sub UpdateP_0103_cls(instance As P_0103_cls)
    End Sub
  Partial Private Sub DeleteP_0103_cls(instance As P_0103_cls)
    End Sub
  Partial Private Sub InsertP_0104_cls(instance As P_0104_cls)
    End Sub
  Partial Private Sub UpdateP_0104_cls(instance As P_0104_cls)
    End Sub
  Partial Private Sub DeleteP_0104_cls(instance As P_0104_cls)
    End Sub
  Partial Private Sub InsertP_0105_cls(instance As P_0105_cls)
    End Sub
  Partial Private Sub UpdateP_0105_cls(instance As P_0105_cls)
    End Sub
  Partial Private Sub DeleteP_0105_cls(instance As P_0105_cls)
    End Sub
  Partial Private Sub InsertP_0106_cls(instance As P_0106_cls)
    End Sub
  Partial Private Sub UpdateP_0106_cls(instance As P_0106_cls)
    End Sub
  Partial Private Sub DeleteP_0106_cls(instance As P_0106_cls)
    End Sub
  Partial Private Sub InsertP_0107_cls(instance As P_0107_cls)
    End Sub
  Partial Private Sub UpdateP_0107_cls(instance As P_0107_cls)
    End Sub
  Partial Private Sub DeleteP_0107_cls(instance As P_0107_cls)
    End Sub
  Partial Private Sub InsertP_0108_cls(instance As P_0108_cls)
    End Sub
  Partial Private Sub UpdateP_0108_cls(instance As P_0108_cls)
    End Sub
  Partial Private Sub DeleteP_0108_cls(instance As P_0108_cls)
    End Sub
  Partial Private Sub InsertP_0109_cls(instance As P_0109_cls)
    End Sub
  Partial Private Sub UpdateP_0109_cls(instance As P_0109_cls)
    End Sub
  Partial Private Sub DeleteP_0109_cls(instance As P_0109_cls)
    End Sub
  Partial Private Sub InsertP_0110_cls(instance As P_0110_cls)
    End Sub
  Partial Private Sub UpdateP_0110_cls(instance As P_0110_cls)
    End Sub
  Partial Private Sub DeleteP_0110_cls(instance As P_0110_cls)
    End Sub
  Partial Private Sub Insertp_0111_cls(instance As p_0111_cls)
    End Sub
  Partial Private Sub Updatep_0111_cls(instance As p_0111_cls)
    End Sub
  Partial Private Sub Deletep_0111_cls(instance As p_0111_cls)
    End Sub
  Partial Private Sub InsertP_0112_cls(instance As P_0112_cls)
    End Sub
  Partial Private Sub UpdateP_0112_cls(instance As P_0112_cls)
    End Sub
  Partial Private Sub DeleteP_0112_cls(instance As P_0112_cls)
    End Sub
  Partial Private Sub Insertp_0113_cls(instance As p_0113_cls)
    End Sub
  Partial Private Sub Updatep_0113_cls(instance As p_0113_cls)
    End Sub
  Partial Private Sub Deletep_0113_cls(instance As p_0113_cls)
    End Sub
  Partial Private Sub InsertP_0115_cls(instance As P_0115_cls)
    End Sub
  Partial Private Sub UpdateP_0115_cls(instance As P_0115_cls)
    End Sub
  Partial Private Sub DeleteP_0115_cls(instance As P_0115_cls)
    End Sub
  Partial Private Sub InsertP_0116_cls(instance As P_0116_cls)
    End Sub
  Partial Private Sub UpdateP_0116_cls(instance As P_0116_cls)
    End Sub
  Partial Private Sub DeleteP_0116_cls(instance As P_0116_cls)
    End Sub
  Partial Private Sub InsertP_0117_cls(instance As P_0117_cls)
    End Sub
  Partial Private Sub UpdateP_0117_cls(instance As P_0117_cls)
    End Sub
  Partial Private Sub DeleteP_0117_cls(instance As P_0117_cls)
    End Sub
  Partial Private Sub InsertP_0118_cls(instance As P_0118_cls)
    End Sub
  Partial Private Sub UpdateP_0118_cls(instance As P_0118_cls)
    End Sub
  Partial Private Sub DeleteP_0118_cls(instance As P_0118_cls)
    End Sub
  Partial Private Sub InsertP_0119_cls(instance As P_0119_cls)
    End Sub
  Partial Private Sub UpdateP_0119_cls(instance As P_0119_cls)
    End Sub
  Partial Private Sub DeleteP_0119_cls(instance As P_0119_cls)
    End Sub
  Partial Private Sub Insertp_0120_cls(instance As p_0120_cls)
    End Sub
  Partial Private Sub Updatep_0120_cls(instance As p_0120_cls)
    End Sub
  Partial Private Sub Deletep_0120_cls(instance As p_0120_cls)
    End Sub
  Partial Private Sub InsertP_0300_cls(instance As P_0300_cls)
    End Sub
  Partial Private Sub UpdateP_0300_cls(instance As P_0300_cls)
    End Sub
  Partial Private Sub DeleteP_0300_cls(instance As P_0300_cls)
    End Sub
  Partial Private Sub InsertP_0301_cls(instance As P_0301_cls)
    End Sub
  Partial Private Sub UpdateP_0301_cls(instance As P_0301_cls)
    End Sub
  Partial Private Sub DeleteP_0301_cls(instance As P_0301_cls)
    End Sub
  Partial Private Sub InsertP_0302_cls(instance As P_0302_cls)
    End Sub
  Partial Private Sub UpdateP_0302_cls(instance As P_0302_cls)
    End Sub
  Partial Private Sub DeleteP_0302_cls(instance As P_0302_cls)
    End Sub
  Partial Private Sub InsertP_0303_cls(instance As P_0303_cls)
    End Sub
  Partial Private Sub UpdateP_0303_cls(instance As P_0303_cls)
    End Sub
  Partial Private Sub DeleteP_0303_cls(instance As P_0303_cls)
    End Sub
  Partial Private Sub InsertP_0304_cls(instance As P_0304_cls)
    End Sub
  Partial Private Sub UpdateP_0304_cls(instance As P_0304_cls)
    End Sub
  Partial Private Sub DeleteP_0304_cls(instance As P_0304_cls)
    End Sub
  Partial Private Sub InsertP_0305_cls(instance As P_0305_cls)
    End Sub
  Partial Private Sub UpdateP_0305_cls(instance As P_0305_cls)
    End Sub
  Partial Private Sub DeleteP_0305_cls(instance As P_0305_cls)
    End Sub
  Partial Private Sub InsertP_0306_cls(instance As P_0306_cls)
    End Sub
  Partial Private Sub UpdateP_0306_cls(instance As P_0306_cls)
    End Sub
  Partial Private Sub DeleteP_0306_cls(instance As P_0306_cls)
    End Sub
  Partial Private Sub InsertP_0307_cls(instance As P_0307_cls)
    End Sub
  Partial Private Sub UpdateP_0307_cls(instance As P_0307_cls)
    End Sub
  Partial Private Sub DeleteP_0307_cls(instance As P_0307_cls)
    End Sub
  Partial Private Sub InsertP_0308_cls(instance As P_0308_cls)
    End Sub
  Partial Private Sub UpdateP_0308_cls(instance As P_0308_cls)
    End Sub
  Partial Private Sub DeleteP_0308_cls(instance As P_0308_cls)
    End Sub
  Partial Private Sub InsertP_0309_cls(instance As P_0309_cls)
    End Sub
  Partial Private Sub UpdateP_0309_cls(instance As P_0309_cls)
    End Sub
  Partial Private Sub DeleteP_0309_cls(instance As P_0309_cls)
    End Sub
  Partial Private Sub InsertP_0310_cls(instance As P_0310_cls)
    End Sub
  Partial Private Sub UpdateP_0310_cls(instance As P_0310_cls)
    End Sub
  Partial Private Sub DeleteP_0310_cls(instance As P_0310_cls)
    End Sub
  Partial Private Sub InsertP_0312_cls(instance As P_0312_cls)
    End Sub
  Partial Private Sub UpdateP_0312_cls(instance As P_0312_cls)
    End Sub
  Partial Private Sub DeleteP_0312_cls(instance As P_0312_cls)
    End Sub
  Partial Private Sub InsertP_0313_cls(instance As P_0313_cls)
    End Sub
  Partial Private Sub UpdateP_0313_cls(instance As P_0313_cls)
    End Sub
  Partial Private Sub DeleteP_0313_cls(instance As P_0313_cls)
    End Sub
  Partial Private Sub InsertP_0314_cls(instance As P_0314_cls)
    End Sub
  Partial Private Sub UpdateP_0314_cls(instance As P_0314_cls)
    End Sub
  Partial Private Sub DeleteP_0314_cls(instance As P_0314_cls)
    End Sub
  Partial Private Sub InsertP_0315_cls(instance As P_0315_cls)
    End Sub
  Partial Private Sub UpdateP_0315_cls(instance As P_0315_cls)
    End Sub
  Partial Private Sub DeleteP_0315_cls(instance As P_0315_cls)
    End Sub
  Partial Private Sub InsertP_0316_cls(instance As P_0316_cls)
    End Sub
  Partial Private Sub UpdateP_0316_cls(instance As P_0316_cls)
    End Sub
  Partial Private Sub DeleteP_0316_cls(instance As P_0316_cls)
    End Sub
  Partial Private Sub Insertp_0317_cls(instance As p_0317_cls)
    End Sub
  Partial Private Sub Updatep_0317_cls(instance As p_0317_cls)
    End Sub
  Partial Private Sub Deletep_0317_cls(instance As p_0317_cls)
    End Sub
  Partial Private Sub Insertpar_cls(instance As par_cls)
    End Sub
  Partial Private Sub Updatepar_cls(instance As par_cls)
    End Sub
  Partial Private Sub Deletepar_cls(instance As par_cls)
    End Sub
  Partial Private Sub Insertpca_cls(instance As pca_cls)
    End Sub
  Partial Private Sub Updatepca_cls(instance As pca_cls)
    End Sub
  Partial Private Sub Deletepca_cls(instance As pca_cls)
    End Sub
  Partial Private Sub Insertpds_cls(instance As pds_cls)
    End Sub
  Partial Private Sub Updatepds_cls(instance As pds_cls)
    End Sub
  Partial Private Sub Deletepds_cls(instance As pds_cls)
    End Sub
  Partial Private Sub Insertpgr_cls(instance As pgr_cls)
    End Sub
  Partial Private Sub Updatepgr_cls(instance As pgr_cls)
    End Sub
  Partial Private Sub Deletepgr_cls(instance As pgr_cls)
    End Sub
  Partial Private Sub InsertPL_000006_cls(instance As PL_000006_cls)
    End Sub
  Partial Private Sub UpdatePL_000006_cls(instance As PL_000006_cls)
    End Sub
  Partial Private Sub DeletePL_000006_cls(instance As PL_000006_cls)
    End Sub
  Partial Private Sub InsertPL_000047_cls(instance As PL_000047_cls)
    End Sub
  Partial Private Sub UpdatePL_000047_cls(instance As PL_000047_cls)
    End Sub
  Partial Private Sub DeletePL_000047_cls(instance As PL_000047_cls)
    End Sub
  Partial Private Sub InsertPL_000066_cls(instance As PL_000066_cls)
    End Sub
  Partial Private Sub UpdatePL_000066_cls(instance As PL_000066_cls)
    End Sub
  Partial Private Sub DeletePL_000066_cls(instance As PL_000066_cls)
    End Sub
  Partial Private Sub InsertPL_000069_cls(instance As PL_000069_cls)
    End Sub
  Partial Private Sub UpdatePL_000069_cls(instance As PL_000069_cls)
    End Sub
  Partial Private Sub DeletePL_000069_cls(instance As PL_000069_cls)
    End Sub
  Partial Private Sub Insertpld_cls(instance As pld_cls)
    End Sub
  Partial Private Sub Updatepld_cls(instance As pld_cls)
    End Sub
  Partial Private Sub Deletepld_cls(instance As pld_cls)
    End Sub
  Partial Private Sub InsertPRO_ESP_IMA_cls(instance As PRO_ESP_IMA_cls)
    End Sub
  Partial Private Sub UpdatePRO_ESP_IMA_cls(instance As PRO_ESP_IMA_cls)
    End Sub
  Partial Private Sub DeletePRO_ESP_IMA_cls(instance As PRO_ESP_IMA_cls)
    End Sub
  Partial Private Sub Insertpta_cls(instance As pta_cls)
    End Sub
  Partial Private Sub Updatepta_cls(instance As pta_cls)
    End Sub
  Partial Private Sub Deletepta_cls(instance As pta_cls)
    End Sub
  Partial Private Sub Insertreq_cls(instance As req_cls)
    End Sub
  Partial Private Sub Updatereq_cls(instance As req_cls)
    End Sub
  Partial Private Sub Deletereq_cls(instance As req_cls)
    End Sub
  Partial Private Sub Insertrsc_cls(instance As rsc_cls)
    End Sub
  Partial Private Sub Updatersc_cls(instance As rsc_cls)
    End Sub
  Partial Private Sub Deletersc_cls(instance As rsc_cls)
    End Sub
  Partial Private Sub Insertrsd_cls(instance As rsd_cls)
    End Sub
  Partial Private Sub Updatersd_cls(instance As rsd_cls)
    End Sub
  Partial Private Sub Deletersd_cls(instance As rsd_cls)
    End Sub
  Partial Private Sub Insertrxd_cls(instance As rxd_cls)
    End Sub
  Partial Private Sub Updaterxd_cls(instance As rxd_cls)
    End Sub
  Partial Private Sub Deleterxd_cls(instance As rxd_cls)
    End Sub
  Partial Private Sub Insertrxo_cls(instance As rxo_cls)
    End Sub
  Partial Private Sub Updaterxo_cls(instance As rxo_cls)
    End Sub
  Partial Private Sub Deleterxo_cls(instance As rxo_cls)
    End Sub
  Partial Private Sub Insertsbc_cls(instance As sbc_cls)
    End Sub
  Partial Private Sub Updatesbc_cls(instance As sbc_cls)
    End Sub
  Partial Private Sub Deletesbc_cls(instance As sbc_cls)
    End Sub
  Partial Private Sub Insertsbl_cls(instance As sbl_cls)
    End Sub
  Partial Private Sub Updatesbl_cls(instance As sbl_cls)
    End Sub
  Partial Private Sub Deletesbl_cls(instance As sbl_cls)
    End Sub
  Partial Private Sub Insertsim_cxc_cls(instance As sim_cxc_cls)
    End Sub
  Partial Private Sub Updatesim_cxc_cls(instance As sim_cxc_cls)
    End Sub
  Partial Private Sub Deletesim_cxc_cls(instance As sim_cxc_cls)
    End Sub
  Partial Private Sub Insertsim_cxp_cls(instance As sim_cxp_cls)
    End Sub
  Partial Private Sub Updatesim_cxp_cls(instance As sim_cxp_cls)
    End Sub
  Partial Private Sub Deletesim_cxp_cls(instance As sim_cxp_cls)
    End Sub
  Partial Private Sub Insertsim_egr_cls(instance As sim_egr_cls)
    End Sub
  Partial Private Sub Updatesim_egr_cls(instance As sim_egr_cls)
    End Sub
  Partial Private Sub Deletesim_egr_cls(instance As sim_egr_cls)
    End Sub
  Partial Private Sub Insertsis_cls(instance As sis_cls)
    End Sub
  Partial Private Sub Updatesis_cls(instance As sis_cls)
    End Sub
  Partial Private Sub Deletesis_cls(instance As sis_cls)
    End Sub
  Partial Private Sub Insertspb_cls(instance As spb_cls)
    End Sub
  Partial Private Sub Updatespb_cls(instance As spb_cls)
    End Sub
  Partial Private Sub Deletespb_cls(instance As spb_cls)
    End Sub
  Partial Private Sub Insertspg_cls(instance As spg_cls)
    End Sub
  Partial Private Sub Updatespg_cls(instance As spg_cls)
    End Sub
  Partial Private Sub Deletespg_cls(instance As spg_cls)
    End Sub
  Partial Private Sub Insertsuc_cls(instance As suc_cls)
    End Sub
  Partial Private Sub Updatesuc_cls(instance As suc_cls)
    End Sub
  Partial Private Sub Deletesuc_cls(instance As suc_cls)
    End Sub
  Partial Private Sub InsertSvc_Inf_cls(instance As Svc_Inf_cls)
    End Sub
  Partial Private Sub UpdateSvc_Inf_cls(instance As Svc_Inf_cls)
    End Sub
  Partial Private Sub DeleteSvc_Inf_cls(instance As Svc_Inf_cls)
    End Sub
  Partial Private Sub Insertsxa_cls(instance As sxa_cls)
    End Sub
  Partial Private Sub Updatesxa_cls(instance As sxa_cls)
    End Sub
  Partial Private Sub Deletesxa_cls(instance As sxa_cls)
    End Sub
  Partial Private Sub Inserttim_cls(instance As tim_cls)
    End Sub
  Partial Private Sub Updatetim_cls(instance As tim_cls)
    End Sub
  Partial Private Sub Deletetim_cls(instance As tim_cls)
    End Sub
  Partial Private Sub Inserttyp_cls(instance As typ_cls)
    End Sub
  Partial Private Sub Updatetyp_cls(instance As typ_cls)
    End Sub
  Partial Private Sub Deletetyp_cls(instance As typ_cls)
    End Sub
  Partial Private Sub Insertvst_cls(instance As vst_cls)
    End Sub
  Partial Private Sub Updatevst_cls(instance As vst_cls)
    End Sub
  Partial Private Sub Deletevst_cls(instance As vst_cls)
    End Sub
  Partial Private Sub Insertzon_cls(instance As zon_cls)
    End Sub
  Partial Private Sub Updatezon_cls(instance As zon_cls)
    End Sub
  Partial Private Sub Deletezon_cls(instance As zon_cls)
    End Sub
  Partial Private Sub Insertfrm_cls(instance As frm_cls)
    End Sub
  Partial Private Sub Updatefrm_cls(instance As frm_cls)
    End Sub
  Partial Private Sub Deletefrm_cls(instance As frm_cls)
    End Sub
  Partial Private Sub Insertdim_cls(instance As dim_cls)
    End Sub
  Partial Private Sub Updatedim_cls(instance As dim_cls)
    End Sub
  Partial Private Sub Deletedim_cls(instance As dim_cls)
    End Sub
  Partial Private Sub Inserteje_cls(instance As eje_cls)
    End Sub
  Partial Private Sub Updateeje_cls(instance As eje_cls)
    End Sub
  Partial Private Sub Deleteeje_cls(instance As eje_cls)
    End Sub
  Partial Private Sub Inserttmc_cls(instance As tmc_cls)
    End Sub
  Partial Private Sub Updatetmc_cls(instance As tmc_cls)
    End Sub
  Partial Private Sub Deletetmc_cls(instance As tmc_cls)
    End Sub
  #End Region
	
	Public Sub New()
		MyBase.New(Global.CapaDatos.My.MySettings.Default.BF_FACTORConnectionString, mappingSource)
		OnCreated
	End Sub
	
	Public Sub New(ByVal connection As String)
		MyBase.New(connection, mappingSource)
		OnCreated
	End Sub
	
	Public Sub New(ByVal connection As System.Data.IDbConnection)
		MyBase.New(connection, mappingSource)
		OnCreated
	End Sub
	
	Public Sub New(ByVal connection As String, ByVal mappingSource As System.Data.Linq.Mapping.MappingSource)
		MyBase.New(connection, mappingSource)
		OnCreated
	End Sub
	
	Public Sub New(ByVal connection As System.Data.IDbConnection, ByVal mappingSource As System.Data.Linq.Mapping.MappingSource)
		MyBase.New(connection, mappingSource)
		OnCreated
	End Sub
	
	Public ReadOnly Property ACC_cls() As System.Data.Linq.Table(Of ACC_cls)
		Get
			Return Me.GetTable(Of ACC_cls)
		End Get
	End Property
	
	Public ReadOnly Property act_cls() As System.Data.Linq.Table(Of act_cls)
		Get
			Return Me.GetTable(Of act_cls)
		End Get
	End Property
	
	Public ReadOnly Property ACT_IMG_cls() As System.Data.Linq.Table(Of ACT_IMG_cls)
		Get
			Return Me.GetTable(Of ACT_IMG_cls)
		End Get
	End Property
	
	Public ReadOnly Property agd_cls() As System.Data.Linq.Table(Of agd_cls)
		Get
			Return Me.GetTable(Of agd_cls)
		End Get
	End Property
	
	Public ReadOnly Property apb_cls() As System.Data.Linq.Table(Of apb_cls)
		Get
			Return Me.GetTable(Of apb_cls)
		End Get
	End Property
	
	Public ReadOnly Property apc_cls() As System.Data.Linq.Table(Of apc_cls)
		Get
			Return Me.GetTable(Of apc_cls)
		End Get
	End Property
	
	Public ReadOnly Property apl_cls() As System.Data.Linq.Table(Of apl_cls)
		Get
			Return Me.GetTable(Of apl_cls)
		End Get
	End Property
	
	Public ReadOnly Property aplica_comision__cls() As System.Data.Linq.Table(Of aplica_comision__cls)
		Get
			Return Me.GetTable(Of aplica_comision__cls)
		End Get
	End Property
	
	Public ReadOnly Property avl_cls() As System.Data.Linq.Table(Of avl_cls)
		Get
			Return Me.GetTable(Of avl_cls)
		End Get
	End Property
	
	Public ReadOnly Property bco_cls() As System.Data.Linq.Table(Of bco_cls)
		Get
			Return Me.GetTable(Of bco_cls)
		End Get
	End Property
	
	Public ReadOnly Property ccf_cls() As System.Data.Linq.Table(Of ccf_cls)
		Get
			Return Me.GetTable(Of ccf_cls)
		End Get
	End Property
	
	Public ReadOnly Property cco_cls() As System.Data.Linq.Table(Of cco_cls)
		Get
			Return Me.GetTable(Of cco_cls)
		End Get
	End Property
	
	Public ReadOnly Property CDC_cls() As System.Data.Linq.Table(Of CDC_cls)
		Get
			Return Me.GetTable(Of CDC_cls)
		End Get
	End Property
	
	Public ReadOnly Property cdn_cls() As System.Data.Linq.Table(Of cdn_cls)
		Get
			Return Me.GetTable(Of cdn_cls)
		End Get
	End Property
	
	Public ReadOnly Property cdp_cls() As System.Data.Linq.Table(Of cdp_cls)
		Get
			Return Me.GetTable(Of cdp_cls)
		End Get
	End Property
	
	Public ReadOnly Property cfc_cls() As System.Data.Linq.Table(Of cfc_cls)
		Get
			Return Me.GetTable(Of cfc_cls)
		End Get
	End Property
	
	Public ReadOnly Property cfc_opo_cls() As System.Data.Linq.Table(Of cfc_opo_cls)
		Get
			Return Me.GetTable(Of cfc_opo_cls)
		End Get
	End Property
	
	Public ReadOnly Property cft_cls() As System.Data.Linq.Table(Of cft_cls)
		Get
			Return Me.GetTable(Of cft_cls)
		End Get
	End Property
	
	Public ReadOnly Property chr_cls() As System.Data.Linq.Table(Of chr_cls)
		Get
			Return Me.GetTable(Of chr_cls)
		End Get
	End Property
	
	Public ReadOnly Property ciu_cls() As System.Data.Linq.Table(Of ciu_cls)
		Get
			Return Me.GetTable(Of ciu_cls)
		End Get
	End Property
	
	Public ReadOnly Property Ciu_Suc_cls() As System.Data.Linq.Table(Of Ciu_Suc_cls)
		Get
			Return Me.GetTable(Of Ciu_Suc_cls)
		End Get
	End Property
	
	Public ReadOnly Property clf_cls() As System.Data.Linq.Table(Of clf_cls)
		Get
			Return Me.GetTable(Of clf_cls)
		End Get
	End Property
	
	Public ReadOnly Property cli_cls() As System.Data.Linq.Table(Of cli_cls)
		Get
			Return Me.GetTable(Of cli_cls)
		End Get
	End Property
	
	Public ReadOnly Property cmn_cls() As System.Data.Linq.Table(Of cmn_cls)
		Get
			Return Me.GetTable(Of cmn_cls)
		End Get
	End Property
	
	Public ReadOnly Property cnc_cls() As System.Data.Linq.Table(Of cnc_cls)
		Get
			Return Me.GetTable(Of cnc_cls)
		End Get
	End Property
	
	Public ReadOnly Property con_cls() As System.Data.Linq.Table(Of con_cls)
		Get
			Return Me.GetTable(Of con_cls)
		End Get
	End Property
	
	Public ReadOnly Property con_com_cls() As System.Data.Linq.Table(Of con_com_cls)
		Get
			Return Me.GetTable(Of con_com_cls)
		End Get
	End Property
	
	Public ReadOnly Property cpg_cls() As System.Data.Linq.Table(Of cpg_cls)
		Get
			Return Me.GetTable(Of cpg_cls)
		End Get
	End Property
	
	Public ReadOnly Property crt_cls() As System.Data.Linq.Table(Of crt_cls)
		Get
			Return Me.GetTable(Of crt_cls)
		End Get
	End Property
	
	Public ReadOnly Property ctn_cls() As System.Data.Linq.Table(Of ctn_cls)
		Get
			Return Me.GetTable(Of ctn_cls)
		End Get
	End Property
	
	Public ReadOnly Property ctr_cls() As System.Data.Linq.Table(Of ctr_cls)
		Get
			Return Me.GetTable(Of ctr_cls)
		End Get
	End Property
	
	Public ReadOnly Property cxc_cls() As System.Data.Linq.Table(Of cxc_cls)
		Get
			Return Me.GetTable(Of cxc_cls)
		End Get
	End Property
	
	Public ReadOnly Property cxd_cls() As System.Data.Linq.Table(Of cxd_cls)
		Get
			Return Me.GetTable(Of cxd_cls)
		End Get
	End Property
	
	Public ReadOnly Property cxn_cls() As System.Data.Linq.Table(Of cxn_cls)
		Get
			Return Me.GetTable(Of cxn_cls)
		End Get
	End Property
	
	Public ReadOnly Property cxp_cls() As System.Data.Linq.Table(Of cxp_cls)
		Get
			Return Me.GetTable(Of cxp_cls)
		End Get
	End Property
	
	Public ReadOnly Property cxs_cls() As System.Data.Linq.Table(Of cxs_cls)
		Get
			Return Me.GetTable(Of cxs_cls)
		End Get
	End Property
	
	Public ReadOnly Property dcc_cls() As System.Data.Linq.Table(Of dcc_cls)
		Get
			Return Me.GetTable(Of dcc_cls)
		End Get
	End Property
	
	Public ReadOnly Property dci_cls() As System.Data.Linq.Table(Of dci_cls)
		Get
			Return Me.GetTable(Of dci_cls)
		End Get
	End Property
	
	Public ReadOnly Property dco_cls() As System.Data.Linq.Table(Of dco_cls)
		Get
			Return Me.GetTable(Of dco_cls)
		End Get
	End Property
	
	Public ReadOnly Property dct() As System.Data.Linq.Table(Of dct)
		Get
			Return Me.GetTable(Of dct)
		End Get
	End Property
	
	Public ReadOnly Property ddi_cls() As System.Data.Linq.Table(Of ddi_cls)
		Get
			Return Me.GetTable(Of ddi_cls)
		End Get
	End Property
	
	Public ReadOnly Property ddr_cls() As System.Data.Linq.Table(Of ddr_cls)
		Get
			Return Me.GetTable(Of ddr_cls)
		End Get
	End Property
	
	Public ReadOnly Property deu_cls() As System.Data.Linq.Table(Of deu_cls)
		Get
			Return Me.GetTable(Of deu_cls)
		End Get
	End Property
	
	Public ReadOnly Property deu_mon_cls() As System.Data.Linq.Table(Of deu_mon_cls)
		Get
			Return Me.GetTable(Of deu_mon_cls)
		End Get
	End Property
	
	Public ReadOnly Property dgh_cls() As System.Data.Linq.Table(Of dgh_cls)
		Get
			Return Me.GetTable(Of dgh_cls)
		End Get
	End Property
	
	Public ReadOnly Property doc_cls() As System.Data.Linq.Table(Of doc_cls)
		Get
			Return Me.GetTable(Of doc_cls)
		End Get
	End Property
	
	Public ReadOnly Property doc_com_cls() As System.Data.Linq.Table(Of doc_com_cls)
		Get
			Return Me.GetTable(Of doc_com_cls)
		End Get
	End Property
	
	Public ReadOnly Property doc_con_cls() As System.Data.Linq.Table(Of doc_con_cls)
		Get
			Return Me.GetTable(Of doc_con_cls)
		End Get
	End Property
	
	Public ReadOnly Property doc_ctb_cls() As System.Data.Linq.Table(Of doc_ctb_cls)
		Get
			Return Me.GetTable(Of doc_ctb_cls)
		End Get
	End Property
	
	Public ReadOnly Property doc_dig_ope_cls() As System.Data.Linq.Table(Of doc_dig_ope_cls)
		Get
			Return Me.GetTable(Of doc_dig_ope_cls)
		End Get
	End Property
	
	Public ReadOnly Property doc_est_cls() As System.Data.Linq.Table(Of doc_est_cls)
		Get
			Return Me.GetTable(Of doc_est_cls)
		End Get
	End Property
	
	Public ReadOnly Property doc_rea() As System.Data.Linq.Table(Of doc_rea)
		Get
			Return Me.GetTable(Of doc_rea)
		End Get
	End Property
	
	Public ReadOnly Property DocMasivo_cls() As System.Data.Linq.Table(Of DocMasivo_cls)
		Get
			Return Me.GetTable(Of DocMasivo_cls)
		End Get
	End Property
	
	Public ReadOnly Property dom_cls() As System.Data.Linq.Table(Of dom_cls)
		Get
			Return Me.GetTable(Of dom_cls)
		End Get
	End Property
	
	Public ReadOnly Property dor_cls() As System.Data.Linq.Table(Of dor_cls)
		Get
			Return Me.GetTable(Of dor_cls)
		End Get
	End Property
	
	Public ReadOnly Property dpa_cls() As System.Data.Linq.Table(Of dpa_cls)
		Get
			Return Me.GetTable(Of dpa_cls)
		End Get
	End Property
	
	Public ReadOnly Property dpd_cls() As System.Data.Linq.Table(Of dpd_cls)
		Get
			Return Me.GetTable(Of dpd_cls)
		End Get
	End Property
	
	Public ReadOnly Property dpg_cls() As System.Data.Linq.Table(Of dpg_cls)
		Get
			Return Me.GetTable(Of dpg_cls)
		End Get
	End Property
	
	Public ReadOnly Property dpo_cls() As System.Data.Linq.Table(Of dpo_cls)
		Get
			Return Me.GetTable(Of dpo_cls)
		End Get
	End Property
	
	Public ReadOnly Property drc_cls() As System.Data.Linq.Table(Of drc_cls)
		Get
			Return Me.GetTable(Of drc_cls)
		End Get
	End Property
	
	Public ReadOnly Property dsb_cls() As System.Data.Linq.Table(Of dsb_cls)
		Get
			Return Me.GetTable(Of dsb_cls)
		End Get
	End Property
	
	Public ReadOnly Property dsi_cls() As System.Data.Linq.Table(Of dsi_cls)
		Get
			Return Me.GetTable(Of dsi_cls)
		End Get
	End Property
	
	Public ReadOnly Property dsn_cls() As System.Data.Linq.Table(Of dsn_cls)
		Get
			Return Me.GetTable(Of dsn_cls)
		End Get
	End Property
	
	Public ReadOnly Property dvf_cls() As System.Data.Linq.Table(Of dvf_cls)
		Get
			Return Me.GetTable(Of dvf_cls)
		End Get
	End Property
	
	Public ReadOnly Property dxd_cls() As System.Data.Linq.Table(Of dxd_cls)
		Get
			Return Me.GetTable(Of dxd_cls)
		End Get
	End Property
	
	Public ReadOnly Property dxn_cls() As System.Data.Linq.Table(Of dxn_cls)
		Get
			Return Me.GetTable(Of dxn_cls)
		End Get
	End Property
	
	Public ReadOnly Property egr_cls() As System.Data.Linq.Table(Of egr_cls)
		Get
			Return Me.GetTable(Of egr_cls)
		End Get
	End Property
	
	Public ReadOnly Property egr_sec_cls() As System.Data.Linq.Table(Of egr_sec_cls)
		Get
			Return Me.GetTable(Of egr_sec_cls)
		End Get
	End Property
	
	Public ReadOnly Property emp_cls() As System.Data.Linq.Table(Of emp_cls)
		Get
			Return Me.GetTable(Of emp_cls)
		End Get
	End Property
	
	Public ReadOnly Property Error_cls() As System.Data.Linq.Table(Of Error_cls)
		Get
			Return Me.GetTable(Of Error_cls)
		End Get
	End Property
	
	Public ReadOnly Property eva_cls() As System.Data.Linq.Table(Of eva_cls)
		Get
			Return Me.GetTable(Of eva_cls)
		End Get
	End Property
	
	Public ReadOnly Property evf_cls() As System.Data.Linq.Table(Of evf_cls)
		Get
			Return Me.GetTable(Of evf_cls)
		End Get
	End Property
	
	Public ReadOnly Property exd_cls() As System.Data.Linq.Table(Of exd_cls)
		Get
			Return Me.GetTable(Of exd_cls)
		End Get
	End Property
	
	Public ReadOnly Property exh_cls() As System.Data.Linq.Table(Of exh_cls)
		Get
			Return Me.GetTable(Of exh_cls)
		End Get
	End Property
	
	Public ReadOnly Property fct_cls() As System.Data.Linq.Table(Of fct_cls)
		Get
			Return Me.GetTable(Of fct_cls)
		End Get
	End Property
	
	Public ReadOnly Property fdd_cls() As System.Data.Linq.Table(Of fdd_cls)
		Get
			Return Me.GetTable(Of fdd_cls)
		End Get
	End Property
	
	Public ReadOnly Property fer_cls() As System.Data.Linq.Table(Of fer_cls)
		Get
			Return Me.GetTable(Of fer_cls)
		End Get
	End Property
	
	Public ReadOnly Property GDC_cls() As System.Data.Linq.Table(Of GDC_cls)
		Get
			Return Me.GetTable(Of GDC_cls)
		End Get
	End Property
	
	Public ReadOnly Property gdn_cls() As System.Data.Linq.Table(Of gdn_cls)
		Get
			Return Me.GetTable(Of gdn_cls)
		End Get
	End Property
	
	Public ReadOnly Property gfn_cls() As System.Data.Linq.Table(Of gfn_cls)
		Get
			Return Me.GetTable(Of gfn_cls)
		End Get
	End Property
	
	Public ReadOnly Property gga_cls() As System.Data.Linq.Table(Of gga_cls)
		Get
			Return Me.GetTable(Of gga_cls)
		End Get
	End Property
	
	Public ReadOnly Property gnr_cls() As System.Data.Linq.Table(Of gnr_cls)
		Get
			Return Me.GetTable(Of gnr_cls)
		End Get
	End Property
	
	Public ReadOnly Property gos_cls() As System.Data.Linq.Table(Of gos_cls)
		Get
			Return Me.GetTable(Of gos_cls)
		End Get
	End Property
	
	Public ReadOnly Property grc_cls() As System.Data.Linq.Table(Of grc_cls)
		Get
			Return Me.GetTable(Of grc_cls)
		End Get
	End Property
	
	Public ReadOnly Property gsn_cls() As System.Data.Linq.Table(Of gsn_cls)
		Get
			Return Me.GetTable(Of gsn_cls)
		End Get
	End Property
	
	Public ReadOnly Property gto_cls() As System.Data.Linq.Table(Of gto_cls)
		Get
			Return Me.GetTable(Of gto_cls)
		End Get
	End Property
	
	Public ReadOnly Property has_cls() As System.Data.Linq.Table(Of has_cls)
		Get
			Return Me.GetTable(Of has_cls)
		End Get
	End Property
	
	Public ReadOnly Property HIS_ERR_cls() As System.Data.Linq.Table(Of HIS_ERR_cls)
		Get
			Return Me.GetTable(Of HIS_ERR_cls)
		End Get
	End Property
	
	Public ReadOnly Property hre_cls() As System.Data.Linq.Table(Of hre_cls)
		Get
			Return Me.GetTable(Of hre_cls)
		End Get
	End Property
	
	Public ReadOnly Property icv_cls() As System.Data.Linq.Table(Of icv_cls)
		Get
			Return Me.GetTable(Of icv_cls)
		End Get
	End Property
	
	Public ReadOnly Property ing_cls() As System.Data.Linq.Table(Of ing_cls)
		Get
			Return Me.GetTable(Of ing_cls)
		End Get
	End Property
	
	Public ReadOnly Property ing_sec_cls() As System.Data.Linq.Table(Of ing_sec_cls)
		Get
			Return Me.GetTable(Of ing_sec_cls)
		End Get
	End Property
	
	Public ReadOnly Property ldc_cls() As System.Data.Linq.Table(Of ldc_cls)
		Get
			Return Me.GetTable(Of ldc_cls)
		End Get
	End Property
	
	Public ReadOnly Property mpar_cls() As System.Data.Linq.Table(Of mpar_cls)
		Get
			Return Me.GetTable(Of mpar_cls)
		End Get
	End Property
	
	Public ReadOnly Property nap_cls() As System.Data.Linq.Table(Of nap_cls)
		Get
			Return Me.GetTable(Of nap_cls)
		End Get
	End Property
	
	Public ReadOnly Property nbc_cls() As System.Data.Linq.Table(Of nbc_cls)
		Get
			Return Me.GetTable(Of nbc_cls)
		End Get
	End Property
	
	Public ReadOnly Property nce_cls() As System.Data.Linq.Table(Of nce_cls)
		Get
			Return Me.GetTable(Of nce_cls)
		End Get
	End Property
	
	Public ReadOnly Property Nchr_pld() As System.Data.Linq.Table(Of Nchr_pld)
		Get
			Return Me.GetTable(Of Nchr_pld)
		End Get
	End Property
	
	Public ReadOnly Property ncr_cls() As System.Data.Linq.Table(Of ncr_cls)
		Get
			Return Me.GetTable(Of ncr_cls)
		End Get
	End Property
	
	Public ReadOnly Property nef_cls() As System.Data.Linq.Table(Of nef_cls)
		Get
			Return Me.GetTable(Of nef_cls)
		End Get
	End Property
	
	Public ReadOnly Property nes_cls() As System.Data.Linq.Table(Of nes_cls)
		Get
			Return Me.GetTable(Of nes_cls)
		End Get
	End Property
	
	Public ReadOnly Property NEZ_cls() As System.Data.Linq.Table(Of NEZ_cls)
		Get
			Return Me.GetTable(Of NEZ_cls)
		End Get
	End Property
	
	Public ReadOnly Property nma_cls() As System.Data.Linq.Table(Of nma_cls)
		Get
			Return Me.GetTable(Of nma_cls)
		End Get
	End Property
	
	Public ReadOnly Property nmn_cls() As System.Data.Linq.Table(Of nmn_cls)
		Get
			Return Me.GetTable(Of nmn_cls)
		End Get
	End Property
	
	Public ReadOnly Property nnc_cls() As System.Data.Linq.Table(Of nnc_cls)
		Get
			Return Me.GetTable(Of nnc_cls)
		End Get
	End Property
	
	Public ReadOnly Property nrd_cls() As System.Data.Linq.Table(Of nrd_cls)
		Get
			Return Me.GetTable(Of nrd_cls)
		End Get
	End Property
	
	Public ReadOnly Property ntr_cls() As System.Data.Linq.Table(Of ntr_cls)
		Get
			Return Me.GetTable(Of ntr_cls)
		End Get
	End Property
	
	Public ReadOnly Property ope_cls() As System.Data.Linq.Table(Of ope_cls)
		Get
			Return Me.GetTable(Of ope_cls)
		End Get
	End Property
	
	Public ReadOnly Property opn_cls() As System.Data.Linq.Table(Of opn_cls)
		Get
			Return Me.GetTable(Of opn_cls)
		End Get
	End Property
	
	Public ReadOnly Property opo_cls() As System.Data.Linq.Table(Of opo_cls)
		Get
			Return Me.GetTable(Of opo_cls)
		End Get
	End Property
	
	Public ReadOnly Property org_cls() As System.Data.Linq.Table(Of org_cls)
		Get
			Return Me.GetTable(Of org_cls)
		End Get
	End Property
	
	Public ReadOnly Property P_001_cls() As System.Data.Linq.Table(Of P_001_cls)
		Get
			Return Me.GetTable(Of P_001_cls)
		End Get
	End Property
	
	Public ReadOnly Property P_0010_cls() As System.Data.Linq.Table(Of P_0010_cls)
		Get
			Return Me.GetTable(Of P_0010_cls)
		End Get
	End Property
	
	Public ReadOnly Property P_0011_cls() As System.Data.Linq.Table(Of P_0011_cls)
		Get
			Return Me.GetTable(Of P_0011_cls)
		End Get
	End Property
	
	Public ReadOnly Property P_0012_cls() As System.Data.Linq.Table(Of P_0012_cls)
		Get
			Return Me.GetTable(Of P_0012_cls)
		End Get
	End Property
	
	Public ReadOnly Property P_0015_cls() As System.Data.Linq.Table(Of P_0015_cls)
		Get
			Return Me.GetTable(Of P_0015_cls)
		End Get
	End Property
	
	Public ReadOnly Property P_0017_cls() As System.Data.Linq.Table(Of P_0017_cls)
		Get
			Return Me.GetTable(Of P_0017_cls)
		End Get
	End Property
	
	Public ReadOnly Property P_0018_cls() As System.Data.Linq.Table(Of P_0018_cls)
		Get
			Return Me.GetTable(Of P_0018_cls)
		End Get
	End Property
	
	Public ReadOnly Property P_002_cls() As System.Data.Linq.Table(Of P_002_cls)
		Get
			Return Me.GetTable(Of P_002_cls)
		End Get
	End Property
	
	Public ReadOnly Property P_0020_cls() As System.Data.Linq.Table(Of P_0020_cls)
		Get
			Return Me.GetTable(Of P_0020_cls)
		End Get
	End Property
	
	Public ReadOnly Property P_0021_cls() As System.Data.Linq.Table(Of P_0021_cls)
		Get
			Return Me.GetTable(Of P_0021_cls)
		End Get
	End Property
	
	Public ReadOnly Property P_0022_cls() As System.Data.Linq.Table(Of P_0022_cls)
		Get
			Return Me.GetTable(Of P_0022_cls)
		End Get
	End Property
	
	Public ReadOnly Property P_0023_cls() As System.Data.Linq.Table(Of P_0023_cls)
		Get
			Return Me.GetTable(Of P_0023_cls)
		End Get
	End Property
	
	Public ReadOnly Property P_0024_cls() As System.Data.Linq.Table(Of P_0024_cls)
		Get
			Return Me.GetTable(Of P_0024_cls)
		End Get
	End Property
	
	Public ReadOnly Property P_0025_cls() As System.Data.Linq.Table(Of P_0025_cls)
		Get
			Return Me.GetTable(Of P_0025_cls)
		End Get
	End Property
	
	Public ReadOnly Property P_0026_cls() As System.Data.Linq.Table(Of P_0026_cls)
		Get
			Return Me.GetTable(Of P_0026_cls)
		End Get
	End Property
	
	Public ReadOnly Property P_0027_cls() As System.Data.Linq.Table(Of P_0027_cls)
		Get
			Return Me.GetTable(Of P_0027_cls)
		End Get
	End Property
	
	Public ReadOnly Property P_0028_cls() As System.Data.Linq.Table(Of P_0028_cls)
		Get
			Return Me.GetTable(Of P_0028_cls)
		End Get
	End Property
	
	Public ReadOnly Property P_0029_cls() As System.Data.Linq.Table(Of P_0029_cls)
		Get
			Return Me.GetTable(Of P_0029_cls)
		End Get
	End Property
	
	Public ReadOnly Property P_003_cls() As System.Data.Linq.Table(Of P_003_cls)
		Get
			Return Me.GetTable(Of P_003_cls)
		End Get
	End Property
	
	Public ReadOnly Property P_0030_cls() As System.Data.Linq.Table(Of P_0030_cls)
		Get
			Return Me.GetTable(Of P_0030_cls)
		End Get
	End Property
	
	Public ReadOnly Property P_0031_cls() As System.Data.Linq.Table(Of P_0031_cls)
		Get
			Return Me.GetTable(Of P_0031_cls)
		End Get
	End Property
	
	Public ReadOnly Property P_0036_cls() As System.Data.Linq.Table(Of P_0036_cls)
		Get
			Return Me.GetTable(Of P_0036_cls)
		End Get
	End Property
	
	Public ReadOnly Property P_0040_cls() As System.Data.Linq.Table(Of P_0040_cls)
		Get
			Return Me.GetTable(Of P_0040_cls)
		End Get
	End Property
	
	Public ReadOnly Property p_0041_cls() As System.Data.Linq.Table(Of p_0041_cls)
		Get
			Return Me.GetTable(Of p_0041_cls)
		End Get
	End Property
	
	Public ReadOnly Property P_0044_cls() As System.Data.Linq.Table(Of P_0044_cls)
		Get
			Return Me.GetTable(Of P_0044_cls)
		End Get
	End Property
	
	Public ReadOnly Property P_0045_cls() As System.Data.Linq.Table(Of P_0045_cls)
		Get
			Return Me.GetTable(Of P_0045_cls)
		End Get
	End Property
	
	Public ReadOnly Property P_0048_cls() As System.Data.Linq.Table(Of P_0048_cls)
		Get
			Return Me.GetTable(Of P_0048_cls)
		End Get
	End Property
	
	Public ReadOnly Property P_0049_cls() As System.Data.Linq.Table(Of P_0049_cls)
		Get
			Return Me.GetTable(Of P_0049_cls)
		End Get
	End Property
	
	Public ReadOnly Property P_005_cls() As System.Data.Linq.Table(Of P_005_cls)
		Get
			Return Me.GetTable(Of P_005_cls)
		End Get
	End Property
	
	Public ReadOnly Property P_0051_cls() As System.Data.Linq.Table(Of P_0051_cls)
		Get
			Return Me.GetTable(Of P_0051_cls)
		End Get
	End Property
	
	Public ReadOnly Property P_0052_cls() As System.Data.Linq.Table(Of P_0052_cls)
		Get
			Return Me.GetTable(Of P_0052_cls)
		End Get
	End Property
	
	Public ReadOnly Property P_0053_cls() As System.Data.Linq.Table(Of P_0053_cls)
		Get
			Return Me.GetTable(Of P_0053_cls)
		End Get
	End Property
	
	Public ReadOnly Property p_0054_cls() As System.Data.Linq.Table(Of p_0054_cls)
		Get
			Return Me.GetTable(Of p_0054_cls)
		End Get
	End Property
	
	Public ReadOnly Property P_0055_cls() As System.Data.Linq.Table(Of P_0055_cls)
		Get
			Return Me.GetTable(Of P_0055_cls)
		End Get
	End Property
	
	Public ReadOnly Property P_0056_cls() As System.Data.Linq.Table(Of P_0056_cls)
		Get
			Return Me.GetTable(Of P_0056_cls)
		End Get
	End Property
	
	Public ReadOnly Property P_0057_cls() As System.Data.Linq.Table(Of P_0057_cls)
		Get
			Return Me.GetTable(Of P_0057_cls)
		End Get
	End Property
	
	Public ReadOnly Property P_0058_cls() As System.Data.Linq.Table(Of P_0058_cls)
		Get
			Return Me.GetTable(Of P_0058_cls)
		End Get
	End Property
	
	Public ReadOnly Property P_0060_cls() As System.Data.Linq.Table(Of P_0060_cls)
		Get
			Return Me.GetTable(Of P_0060_cls)
		End Get
	End Property
	
	Public ReadOnly Property P_0061_cls() As System.Data.Linq.Table(Of P_0061_cls)
		Get
			Return Me.GetTable(Of P_0061_cls)
		End Get
	End Property
	
	Public ReadOnly Property P_0062_cls() As System.Data.Linq.Table(Of P_0062_cls)
		Get
			Return Me.GetTable(Of P_0062_cls)
		End Get
	End Property
	
	Public ReadOnly Property P_0063_cls() As System.Data.Linq.Table(Of P_0063_cls)
		Get
			Return Me.GetTable(Of P_0063_cls)
		End Get
	End Property
	
	Public ReadOnly Property P_0064_cls() As System.Data.Linq.Table(Of P_0064_cls)
		Get
			Return Me.GetTable(Of P_0064_cls)
		End Get
	End Property
	
	Public ReadOnly Property P_0065_cls() As System.Data.Linq.Table(Of P_0065_cls)
		Get
			Return Me.GetTable(Of P_0065_cls)
		End Get
	End Property
	
	Public ReadOnly Property P_0067_cls() As System.Data.Linq.Table(Of P_0067_cls)
		Get
			Return Me.GetTable(Of P_0067_cls)
		End Get
	End Property
	
	Public ReadOnly Property P_0068_cls() As System.Data.Linq.Table(Of P_0068_cls)
		Get
			Return Me.GetTable(Of P_0068_cls)
		End Get
	End Property
	
	Public ReadOnly Property P_0069_cls() As System.Data.Linq.Table(Of P_0069_cls)
		Get
			Return Me.GetTable(Of P_0069_cls)
		End Get
	End Property
	
	Public ReadOnly Property P_007_cls() As System.Data.Linq.Table(Of P_007_cls)
		Get
			Return Me.GetTable(Of P_007_cls)
		End Get
	End Property
	
	Public ReadOnly Property P_0070_cls() As System.Data.Linq.Table(Of P_0070_cls)
		Get
			Return Me.GetTable(Of P_0070_cls)
		End Get
	End Property
	
	Public ReadOnly Property P_0071_cls() As System.Data.Linq.Table(Of P_0071_cls)
		Get
			Return Me.GetTable(Of P_0071_cls)
		End Get
	End Property
	
	Public ReadOnly Property P_0072_cls() As System.Data.Linq.Table(Of P_0072_cls)
		Get
			Return Me.GetTable(Of P_0072_cls)
		End Get
	End Property
	
	Public ReadOnly Property P_0073_cls() As System.Data.Linq.Table(Of P_0073_cls)
		Get
			Return Me.GetTable(Of P_0073_cls)
		End Get
	End Property
	
	Public ReadOnly Property P_0074_cls() As System.Data.Linq.Table(Of P_0074_cls)
		Get
			Return Me.GetTable(Of P_0074_cls)
		End Get
	End Property
	
	Public ReadOnly Property P_0075_cls() As System.Data.Linq.Table(Of P_0075_cls)
		Get
			Return Me.GetTable(Of P_0075_cls)
		End Get
	End Property
	
	Public ReadOnly Property P_0076_cls() As System.Data.Linq.Table(Of P_0076_cls)
		Get
			Return Me.GetTable(Of P_0076_cls)
		End Get
	End Property
	
	Public ReadOnly Property P_0077_cls() As System.Data.Linq.Table(Of P_0077_cls)
		Get
			Return Me.GetTable(Of P_0077_cls)
		End Get
	End Property
	
	Public ReadOnly Property P_0078_cls() As System.Data.Linq.Table(Of P_0078_cls)
		Get
			Return Me.GetTable(Of P_0078_cls)
		End Get
	End Property
	
	Public ReadOnly Property P_0079_cls() As System.Data.Linq.Table(Of P_0079_cls)
		Get
			Return Me.GetTable(Of P_0079_cls)
		End Get
	End Property
	
	Public ReadOnly Property P_008_cls() As System.Data.Linq.Table(Of P_008_cls)
		Get
			Return Me.GetTable(Of P_008_cls)
		End Get
	End Property
	
	Public ReadOnly Property P_0080_cls() As System.Data.Linq.Table(Of P_0080_cls)
		Get
			Return Me.GetTable(Of P_0080_cls)
		End Get
	End Property
	
	Public ReadOnly Property P_0081_cls() As System.Data.Linq.Table(Of P_0081_cls)
		Get
			Return Me.GetTable(Of P_0081_cls)
		End Get
	End Property
	
	Public ReadOnly Property P_0082_cls() As System.Data.Linq.Table(Of P_0082_cls)
		Get
			Return Me.GetTable(Of P_0082_cls)
		End Get
	End Property
	
	Public ReadOnly Property P_0083_cls() As System.Data.Linq.Table(Of P_0083_cls)
		Get
			Return Me.GetTable(Of P_0083_cls)
		End Get
	End Property
	
	Public ReadOnly Property P_0084_cls() As System.Data.Linq.Table(Of P_0084_cls)
		Get
			Return Me.GetTable(Of P_0084_cls)
		End Get
	End Property
	
	Public ReadOnly Property P_0085_cls() As System.Data.Linq.Table(Of P_0085_cls)
		Get
			Return Me.GetTable(Of P_0085_cls)
		End Get
	End Property
	
	Public ReadOnly Property P_0086_cls() As System.Data.Linq.Table(Of P_0086_cls)
		Get
			Return Me.GetTable(Of P_0086_cls)
		End Get
	End Property
	
	Public ReadOnly Property P_0087_cls() As System.Data.Linq.Table(Of P_0087_cls)
		Get
			Return Me.GetTable(Of P_0087_cls)
		End Get
	End Property
	
	Public ReadOnly Property P_0088_cls() As System.Data.Linq.Table(Of P_0088_cls)
		Get
			Return Me.GetTable(Of P_0088_cls)
		End Get
	End Property
	
	Public ReadOnly Property P_0089_cls() As System.Data.Linq.Table(Of P_0089_cls)
		Get
			Return Me.GetTable(Of P_0089_cls)
		End Get
	End Property
	
	Public ReadOnly Property P_0090_cls() As System.Data.Linq.Table(Of P_0090_cls)
		Get
			Return Me.GetTable(Of P_0090_cls)
		End Get
	End Property
	
	Public ReadOnly Property P_0091_cls() As System.Data.Linq.Table(Of P_0091_cls)
		Get
			Return Me.GetTable(Of P_0091_cls)
		End Get
	End Property
	
	Public ReadOnly Property P_0099_cls() As System.Data.Linq.Table(Of P_0099_cls)
		Get
			Return Me.GetTable(Of P_0099_cls)
		End Get
	End Property
	
	Public ReadOnly Property P_0100_cls() As System.Data.Linq.Table(Of P_0100_cls)
		Get
			Return Me.GetTable(Of P_0100_cls)
		End Get
	End Property
	
	Public ReadOnly Property P_0101_cls() As System.Data.Linq.Table(Of P_0101_cls)
		Get
			Return Me.GetTable(Of P_0101_cls)
		End Get
	End Property
	
	Public ReadOnly Property P_0102_cls() As System.Data.Linq.Table(Of P_0102_cls)
		Get
			Return Me.GetTable(Of P_0102_cls)
		End Get
	End Property
	
	Public ReadOnly Property P_0103_cls() As System.Data.Linq.Table(Of P_0103_cls)
		Get
			Return Me.GetTable(Of P_0103_cls)
		End Get
	End Property
	
	Public ReadOnly Property P_0104_cls() As System.Data.Linq.Table(Of P_0104_cls)
		Get
			Return Me.GetTable(Of P_0104_cls)
		End Get
	End Property
	
	Public ReadOnly Property P_0105_cls() As System.Data.Linq.Table(Of P_0105_cls)
		Get
			Return Me.GetTable(Of P_0105_cls)
		End Get
	End Property
	
	Public ReadOnly Property P_0106_cls() As System.Data.Linq.Table(Of P_0106_cls)
		Get
			Return Me.GetTable(Of P_0106_cls)
		End Get
	End Property
	
	Public ReadOnly Property P_0107_cls() As System.Data.Linq.Table(Of P_0107_cls)
		Get
			Return Me.GetTable(Of P_0107_cls)
		End Get
	End Property
	
	Public ReadOnly Property P_0108_cls() As System.Data.Linq.Table(Of P_0108_cls)
		Get
			Return Me.GetTable(Of P_0108_cls)
		End Get
	End Property
	
	Public ReadOnly Property P_0109_cls() As System.Data.Linq.Table(Of P_0109_cls)
		Get
			Return Me.GetTable(Of P_0109_cls)
		End Get
	End Property
	
	Public ReadOnly Property P_0110_cls() As System.Data.Linq.Table(Of P_0110_cls)
		Get
			Return Me.GetTable(Of P_0110_cls)
		End Get
	End Property
	
	Public ReadOnly Property p_0111_cls() As System.Data.Linq.Table(Of p_0111_cls)
		Get
			Return Me.GetTable(Of p_0111_cls)
		End Get
	End Property
	
	Public ReadOnly Property P_0112_cls() As System.Data.Linq.Table(Of P_0112_cls)
		Get
			Return Me.GetTable(Of P_0112_cls)
		End Get
	End Property
	
	Public ReadOnly Property p_0113_cls() As System.Data.Linq.Table(Of p_0113_cls)
		Get
			Return Me.GetTable(Of p_0113_cls)
		End Get
	End Property
	
	Public ReadOnly Property P_0115_cls() As System.Data.Linq.Table(Of P_0115_cls)
		Get
			Return Me.GetTable(Of P_0115_cls)
		End Get
	End Property
	
	Public ReadOnly Property P_0116_cls() As System.Data.Linq.Table(Of P_0116_cls)
		Get
			Return Me.GetTable(Of P_0116_cls)
		End Get
	End Property
	
	Public ReadOnly Property P_0117_cls() As System.Data.Linq.Table(Of P_0117_cls)
		Get
			Return Me.GetTable(Of P_0117_cls)
		End Get
	End Property
	
	Public ReadOnly Property P_0118_cls() As System.Data.Linq.Table(Of P_0118_cls)
		Get
			Return Me.GetTable(Of P_0118_cls)
		End Get
	End Property
	
	Public ReadOnly Property P_0119_cls() As System.Data.Linq.Table(Of P_0119_cls)
		Get
			Return Me.GetTable(Of P_0119_cls)
		End Get
	End Property
	
	Public ReadOnly Property p_0120_cls() As System.Data.Linq.Table(Of p_0120_cls)
		Get
			Return Me.GetTable(Of p_0120_cls)
		End Get
	End Property
	
	Public ReadOnly Property p_0121_cls() As System.Data.Linq.Table(Of p_0121_cls)
		Get
			Return Me.GetTable(Of p_0121_cls)
		End Get
	End Property
	
	Public ReadOnly Property p_0122_cls() As System.Data.Linq.Table(Of p_0122_cls)
		Get
			Return Me.GetTable(Of p_0122_cls)
		End Get
	End Property
	
	Public ReadOnly Property P_0300_cls() As System.Data.Linq.Table(Of P_0300_cls)
		Get
			Return Me.GetTable(Of P_0300_cls)
		End Get
	End Property
	
	Public ReadOnly Property P_0301_cls() As System.Data.Linq.Table(Of P_0301_cls)
		Get
			Return Me.GetTable(Of P_0301_cls)
		End Get
	End Property
	
	Public ReadOnly Property P_0302_cls() As System.Data.Linq.Table(Of P_0302_cls)
		Get
			Return Me.GetTable(Of P_0302_cls)
		End Get
	End Property
	
	Public ReadOnly Property P_0303_cls() As System.Data.Linq.Table(Of P_0303_cls)
		Get
			Return Me.GetTable(Of P_0303_cls)
		End Get
	End Property
	
	Public ReadOnly Property P_0304_cls() As System.Data.Linq.Table(Of P_0304_cls)
		Get
			Return Me.GetTable(Of P_0304_cls)
		End Get
	End Property
	
	Public ReadOnly Property P_0305_cls() As System.Data.Linq.Table(Of P_0305_cls)
		Get
			Return Me.GetTable(Of P_0305_cls)
		End Get
	End Property
	
	Public ReadOnly Property P_0306_cls() As System.Data.Linq.Table(Of P_0306_cls)
		Get
			Return Me.GetTable(Of P_0306_cls)
		End Get
	End Property
	
	Public ReadOnly Property P_0307_cls() As System.Data.Linq.Table(Of P_0307_cls)
		Get
			Return Me.GetTable(Of P_0307_cls)
		End Get
	End Property
	
	Public ReadOnly Property P_0308_cls() As System.Data.Linq.Table(Of P_0308_cls)
		Get
			Return Me.GetTable(Of P_0308_cls)
		End Get
	End Property
	
	Public ReadOnly Property P_0309_cls() As System.Data.Linq.Table(Of P_0309_cls)
		Get
			Return Me.GetTable(Of P_0309_cls)
		End Get
	End Property
	
	Public ReadOnly Property P_0310_cls() As System.Data.Linq.Table(Of P_0310_cls)
		Get
			Return Me.GetTable(Of P_0310_cls)
		End Get
	End Property
	
	Public ReadOnly Property P_0311_cls() As System.Data.Linq.Table(Of P_0311_cls)
		Get
			Return Me.GetTable(Of P_0311_cls)
		End Get
	End Property
	
	Public ReadOnly Property P_0312_cls() As System.Data.Linq.Table(Of P_0312_cls)
		Get
			Return Me.GetTable(Of P_0312_cls)
		End Get
	End Property
	
	Public ReadOnly Property P_0313_cls() As System.Data.Linq.Table(Of P_0313_cls)
		Get
			Return Me.GetTable(Of P_0313_cls)
		End Get
	End Property
	
	Public ReadOnly Property P_0314_cls() As System.Data.Linq.Table(Of P_0314_cls)
		Get
			Return Me.GetTable(Of P_0314_cls)
		End Get
	End Property
	
	Public ReadOnly Property P_0315_cls() As System.Data.Linq.Table(Of P_0315_cls)
		Get
			Return Me.GetTable(Of P_0315_cls)
		End Get
	End Property
	
	Public ReadOnly Property P_0316_cls() As System.Data.Linq.Table(Of P_0316_cls)
		Get
			Return Me.GetTable(Of P_0316_cls)
		End Get
	End Property
	
	Public ReadOnly Property p_0317_cls() As System.Data.Linq.Table(Of p_0317_cls)
		Get
			Return Me.GetTable(Of p_0317_cls)
		End Get
	End Property
	
	Public ReadOnly Property P_0318_cls() As System.Data.Linq.Table(Of P_0318_cls)
		Get
			Return Me.GetTable(Of P_0318_cls)
		End Get
	End Property
	
	Public ReadOnly Property par_cls() As System.Data.Linq.Table(Of par_cls)
		Get
			Return Me.GetTable(Of par_cls)
		End Get
	End Property
	
	Public ReadOnly Property par_mda_cls() As System.Data.Linq.Table(Of par_mda_cls)
		Get
			Return Me.GetTable(Of par_mda_cls)
		End Get
	End Property
	
	Public ReadOnly Property PASO_MONTO_DOCTOS_NO_CEDIDOS_cls() As System.Data.Linq.Table(Of PASO_MONTO_DOCTOS_NO_CEDIDOS_cls)
		Get
			Return Me.GetTable(Of PASO_MONTO_DOCTOS_NO_CEDIDOS_cls)
		End Get
	End Property
	
	Public ReadOnly Property PASO_TOTALES_REPORTE_LISTA_ANTICIPO_DOC_cls() As System.Data.Linq.Table(Of PASO_TOTALES_REPORTE_LISTA_ANTICIPO_DOC_cls)
		Get
			Return Me.GetTable(Of PASO_TOTALES_REPORTE_LISTA_ANTICIPO_DOC_cls)
		End Get
	End Property
	
	Public ReadOnly Property PASO_TRAMOS_cls() As System.Data.Linq.Table(Of PASO_TRAMOS_cls)
		Get
			Return Me.GetTable(Of PASO_TRAMOS_cls)
		End Get
	End Property
	
	Public ReadOnly Property Paso_Tramos_Deu_cls() As System.Data.Linq.Table(Of Paso_Tramos_Deu_cls)
		Get
			Return Me.GetTable(Of Paso_Tramos_Deu_cls)
		End Get
	End Property
	
	Public ReadOnly Property pca_cls() As System.Data.Linq.Table(Of pca_cls)
		Get
			Return Me.GetTable(Of pca_cls)
		End Get
	End Property
	
	Public ReadOnly Property pci_cls() As System.Data.Linq.Table(Of pci_cls)
		Get
			Return Me.GetTable(Of pci_cls)
		End Get
	End Property
	
	Public ReadOnly Property PCI_OLD_cls() As System.Data.Linq.Table(Of PCI_OLD_cls)
		Get
			Return Me.GetTable(Of PCI_OLD_cls)
		End Get
	End Property
	
	Public ReadOnly Property pds_cls() As System.Data.Linq.Table(Of pds_cls)
		Get
			Return Me.GetTable(Of pds_cls)
		End Get
	End Property
	
	Public ReadOnly Property pgr_cls() As System.Data.Linq.Table(Of pgr_cls)
		Get
			Return Me.GetTable(Of pgr_cls)
		End Get
	End Property
	
	Public ReadOnly Property pgr_temp_cls() As System.Data.Linq.Table(Of pgr_temp_cls)
		Get
			Return Me.GetTable(Of pgr_temp_cls)
		End Get
	End Property
	
	Public ReadOnly Property PL_000006_cls() As System.Data.Linq.Table(Of PL_000006_cls)
		Get
			Return Me.GetTable(Of PL_000006_cls)
		End Get
	End Property
	
	Public ReadOnly Property PL_000047_cls() As System.Data.Linq.Table(Of PL_000047_cls)
		Get
			Return Me.GetTable(Of PL_000047_cls)
		End Get
	End Property
	
	Public ReadOnly Property PL_000066_cls() As System.Data.Linq.Table(Of PL_000066_cls)
		Get
			Return Me.GetTable(Of PL_000066_cls)
		End Get
	End Property
	
	Public ReadOnly Property PL_000069_cls() As System.Data.Linq.Table(Of PL_000069_cls)
		Get
			Return Me.GetTable(Of PL_000069_cls)
		End Get
	End Property
	
	Public ReadOnly Property pld_cls() As System.Data.Linq.Table(Of pld_cls)
		Get
			Return Me.GetTable(Of pld_cls)
		End Get
	End Property
	
	Public ReadOnly Property prc_cls() As System.Data.Linq.Table(Of prc_cls)
		Get
			Return Me.GetTable(Of prc_cls)
		End Get
	End Property
	
	Public ReadOnly Property PRO_cls() As System.Data.Linq.Table(Of PRO_cls)
		Get
			Return Me.GetTable(Of PRO_cls)
		End Get
	End Property
	
	Public ReadOnly Property PRO_ESP_cls() As System.Data.Linq.Table(Of PRO_ESP_cls)
		Get
			Return Me.GetTable(Of PRO_ESP_cls)
		End Get
	End Property
	
	Public ReadOnly Property PRO_ESP_IMA_cls() As System.Data.Linq.Table(Of PRO_ESP_IMA_cls)
		Get
			Return Me.GetTable(Of PRO_ESP_IMA_cls)
		End Get
	End Property
	
	Public ReadOnly Property pta_cls() As System.Data.Linq.Table(Of pta_cls)
		Get
			Return Me.GetTable(Of pta_cls)
		End Get
	End Property
	
	Public ReadOnly Property Relacion_GC_cls() As System.Data.Linq.Table(Of Relacion_GC_cls)
		Get
			Return Me.GetTable(Of Relacion_GC_cls)
		End Get
	End Property
	
	Public ReadOnly Property REP_LIS_OPE_cls() As System.Data.Linq.Table(Of REP_LIS_OPE_cls)
		Get
			Return Me.GetTable(Of REP_LIS_OPE_cls)
		End Get
	End Property
	
	Public ReadOnly Property REP_LIS_PAG_cls() As System.Data.Linq.Table(Of REP_LIS_PAG_cls)
		Get
			Return Me.GetTable(Of REP_LIS_PAG_cls)
		End Get
	End Property
	
	Public ReadOnly Property REP_LIS_PVR_cls() As System.Data.Linq.Table(Of REP_LIS_PVR_cls)
		Get
			Return Me.GetTable(Of REP_LIS_PVR_cls)
		End Get
	End Property
	
	Public ReadOnly Property req_cls() As System.Data.Linq.Table(Of req_cls)
		Get
			Return Me.GetTable(Of req_cls)
		End Get
	End Property
	
	Public ReadOnly Property rgh_cls() As System.Data.Linq.Table(Of rgh_cls)
		Get
			Return Me.GetTable(Of rgh_cls)
		End Get
	End Property
	
	Public ReadOnly Property rgo_cls() As System.Data.Linq.Table(Of rgo_cls)
		Get
			Return Me.GetTable(Of rgo_cls)
		End Get
	End Property
	
	Public ReadOnly Property rsc_cls() As System.Data.Linq.Table(Of rsc_cls)
		Get
			Return Me.GetTable(Of rsc_cls)
		End Get
	End Property
	
	Public ReadOnly Property rsd_cls() As System.Data.Linq.Table(Of rsd_cls)
		Get
			Return Me.GetTable(Of rsd_cls)
		End Get
	End Property
	
	Public ReadOnly Property rxd_cls() As System.Data.Linq.Table(Of rxd_cls)
		Get
			Return Me.GetTable(Of rxd_cls)
		End Get
	End Property
	
	Public ReadOnly Property rxo_cls() As System.Data.Linq.Table(Of rxo_cls)
		Get
			Return Me.GetTable(Of rxo_cls)
		End Get
	End Property
	
	Public ReadOnly Property sbc_cls() As System.Data.Linq.Table(Of sbc_cls)
		Get
			Return Me.GetTable(Of sbc_cls)
		End Get
	End Property
	
	Public ReadOnly Property sbl_cls() As System.Data.Linq.Table(Of sbl_cls)
		Get
			Return Me.GetTable(Of sbl_cls)
		End Get
	End Property
	
	Public ReadOnly Property sim_cxc_cls() As System.Data.Linq.Table(Of sim_cxc_cls)
		Get
			Return Me.GetTable(Of sim_cxc_cls)
		End Get
	End Property
	
	Public ReadOnly Property sim_cxp_cls() As System.Data.Linq.Table(Of sim_cxp_cls)
		Get
			Return Me.GetTable(Of sim_cxp_cls)
		End Get
	End Property
	
	Public ReadOnly Property sim_egr_cls() As System.Data.Linq.Table(Of sim_egr_cls)
		Get
			Return Me.GetTable(Of sim_egr_cls)
		End Get
	End Property
	
	Public ReadOnly Property sis_cls() As System.Data.Linq.Table(Of sis_cls)
		Get
			Return Me.GetTable(Of sis_cls)
		End Get
	End Property
	
	Public ReadOnly Property Sis_Bases_cls() As System.Data.Linq.Table(Of Sis_Bases_cls)
		Get
			Return Me.GetTable(Of Sis_Bases_cls)
		End Get
	End Property
	
	Public ReadOnly Property sld_med() As System.Data.Linq.Table(Of sld_med)
		Get
			Return Me.GetTable(Of sld_med)
		End Get
	End Property
	
	Public ReadOnly Property spb_cls() As System.Data.Linq.Table(Of spb_cls)
		Get
			Return Me.GetTable(Of spb_cls)
		End Get
	End Property
	
	Public ReadOnly Property spg_cls() As System.Data.Linq.Table(Of spg_cls)
		Get
			Return Me.GetTable(Of spg_cls)
		End Get
	End Property
	
	Public ReadOnly Property suc_cls() As System.Data.Linq.Table(Of suc_cls)
		Get
			Return Me.GetTable(Of suc_cls)
		End Get
	End Property
	
	Public ReadOnly Property suc_aux_cls() As System.Data.Linq.Table(Of suc_aux_cls)
		Get
			Return Me.GetTable(Of suc_aux_cls)
		End Get
	End Property
	
	Public ReadOnly Property Svc_Inf_cls() As System.Data.Linq.Table(Of Svc_Inf_cls)
		Get
			Return Me.GetTable(Of Svc_Inf_cls)
		End Get
	End Property
	
	Public ReadOnly Property sxa_cls() As System.Data.Linq.Table(Of sxa_cls)
		Get
			Return Me.GetTable(Of sxa_cls)
		End Get
	End Property
	
	Public ReadOnly Property tcf_temp_cls() As System.Data.Linq.Table(Of tcf_temp_cls)
		Get
			Return Me.GetTable(Of tcf_temp_cls)
		End Get
	End Property
	
	Public ReadOnly Property temp01_cls() As System.Data.Linq.Table(Of temp01_cls)
		Get
			Return Me.GetTable(Of temp01_cls)
		End Get
	End Property
	
	Public ReadOnly Property tim_cls() As System.Data.Linq.Table(Of tim_cls)
		Get
			Return Me.GetTable(Of tim_cls)
		End Get
	End Property
	
	Public ReadOnly Property typ_cls() As System.Data.Linq.Table(Of typ_cls)
		Get
			Return Me.GetTable(Of typ_cls)
		End Get
	End Property
	
	Public ReadOnly Property vst_cls() As System.Data.Linq.Table(Of vst_cls)
		Get
			Return Me.GetTable(Of vst_cls)
		End Get
	End Property
	
	Public ReadOnly Property zon_cls() As System.Data.Linq.Table(Of zon_cls)
		Get
			Return Me.GetTable(Of zon_cls)
		End Get
	End Property
	
	Public ReadOnly Property frm_cls() As System.Data.Linq.Table(Of frm_cls)
		Get
			Return Me.GetTable(Of frm_cls)
		End Get
	End Property
	
	Public ReadOnly Property dim_cls() As System.Data.Linq.Table(Of dim_cls)
		Get
			Return Me.GetTable(Of dim_cls)
		End Get
	End Property
	
	Public ReadOnly Property eje_cls() As System.Data.Linq.Table(Of eje_cls)
		Get
			Return Me.GetTable(Of eje_cls)
		End Get
	End Property
	
	Public ReadOnly Property tmc_cls() As System.Data.Linq.Table(Of tmc_cls)
		Get
			Return Me.GetTable(Of tmc_cls)
		End Get
	End Property
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.sp_AsociacionClasificacion")>  _
	Public Function sp_AsociacionClasificacion(<Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="Id_Negociacion", DbType:="Decimal")> ByVal id_Negociacion As System.Nullable(Of Decimal)) As Integer
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), id_Negociacion)
		Return CType(result.ReturnValue,Integer)
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.sp_arc_dev_cliente_sinacofi")>  _
	Public Function sp_arc_dev_cliente_sinacofi() As Integer
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo))
		Return CType(result.ReturnValue,Integer)
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.sp_contab_InsertaMovimientoFactoring")>  _
	Public Function sp_contab_InsertaMovimientoFactoring(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Decimal")> ByVal pDblRutCli As System.Nullable(Of Decimal), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Decimal")> ByVal pDblMtoGir As System.Nullable(Of Decimal), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Int")> ByVal pintCodBco As System.Nullable(Of Integer), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(20)")> ByVal pVcharCtaCte As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Char(1)")> ByVal pcharFormaPago As System.Nullable(Of Char), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Decimal")> ByVal pstrNroOpe As System.Nullable(Of Decimal), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(5)")> ByVal pintTipoEgreso As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(250)")> ByVal pintFormaPago As String) As Integer
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), pDblRutCli, pDblMtoGir, pintCodBco, pVcharCtaCte, pcharFormaPago, pstrNroOpe, pintTipoEgreso, pintFormaPago)
		Return CType(result.ReturnValue,Integer)
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.sp_prc_asignacontrato")>  _
	Public Function sp_prc_asignacontrato() As Integer
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo))
		Return CType(result.ReturnValue,Integer)
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.sp_ope_prorrateo_montos_X_doctos")>  _
	Public Function sp_ope_prorrateo_montos_X_doctos(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Decimal")> ByVal id_ope As System.Nullable(Of Decimal)) As Integer
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), id_ope)
		Return CType(result.ReturnValue,Integer)
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.sp_op_cierre_cliente")>  _
	Public Function sp_op_cierre_cliente(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(12)")> ByVal rut_cli1 As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(12)")> ByVal rut_cli2 As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="DateTime")> ByVal fec_cierre As System.Nullable(Of Date)) As ISingleResult(Of sp_op_cierre_clienteResult)
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), rut_cli1, rut_cli2, fec_cierre)
		Return CType(result.ReturnValue,ISingleResult(Of sp_op_cierre_clienteResult))
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.sp_Reporte_Radicar_Facturas")>  _
	Public Function sp_Reporte_Radicar_Facturas(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="DateTime")> ByVal fec As System.Nullable(Of Date)) As ISingleResult(Of sp_Reporte_Radicar_FacturasResult)
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), fec)
		Return CType(result.ReturnValue,ISingleResult(Of sp_Reporte_Radicar_FacturasResult))
	End Function
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.ACC")>  _
Partial Public Class ACC_cls
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _id_acc As Decimal
	
	Private _cli_idc As String
	
	Private _rut_usr As String
	
	Private _fec_acc As System.Nullable(Of Date)
	
    #Region "Definiciones de métodos de extensibilidad"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub Onid_accChanging(value As Decimal)
    End Sub
    Partial Private Sub Onid_accChanged()
    End Sub
    Partial Private Sub Oncli_idcChanging(value As String)
    End Sub
    Partial Private Sub Oncli_idcChanged()
    End Sub
    Partial Private Sub Onrut_usrChanging(value As String)
    End Sub
    Partial Private Sub Onrut_usrChanged()
    End Sub
    Partial Private Sub Onfec_accChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub Onfec_accChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_id_acc", AutoSync:=AutoSync.OnInsert, DbType:="Decimal(18,0) NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property id_acc() As Decimal
		Get
			Return Me._id_acc
		End Get
		Set
			If ((Me._id_acc = value)  _
						= false) Then
				Me.Onid_accChanging(value)
				Me.SendPropertyChanging
				Me._id_acc = value
				Me.SendPropertyChanged("id_acc")
				Me.Onid_accChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_cli_idc", DbType:="Char(12)")>  _
	Public Property cli_idc() As String
		Get
			Return Me._cli_idc
		End Get
		Set
			If (String.Equals(Me._cli_idc, value) = false) Then
				Me.Oncli_idcChanging(value)
				Me.SendPropertyChanging
				Me._cli_idc = value
				Me.SendPropertyChanged("cli_idc")
				Me.Oncli_idcChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_rut_usr", DbType:="VarChar(50)")>  _
	Public Property rut_usr() As String
		Get
			Return Me._rut_usr
		End Get
		Set
			If (String.Equals(Me._rut_usr, value) = false) Then
				Me.Onrut_usrChanging(value)
				Me.SendPropertyChanging
				Me._rut_usr = value
				Me.SendPropertyChanged("rut_usr")
				Me.Onrut_usrChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_fec_acc", DbType:="DateTime")>  _
	Public Property fec_acc() As System.Nullable(Of Date)
		Get
			Return Me._fec_acc
		End Get
		Set
			If (Me._fec_acc.Equals(value) = false) Then
				Me.Onfec_accChanging(value)
				Me.SendPropertyChanging
				Me._fec_acc = value
				Me.SendPropertyChanged("fec_acc")
				Me.Onfec_accChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.act")>  _
Partial Public Class act_cls
	
	Private _cli_idc As String
	
	Private _act_fec_pro As Date
	
	Private _act_mor_001 As System.Nullable(Of Decimal)
	
	Private _act_mor_002 As System.Nullable(Of Decimal)
	
	Private _act_mor_003 As System.Nullable(Of Decimal)
	
	Private _act_mor_004 As System.Nullable(Of Decimal)
	
	Private _act_mor_005 As System.Nullable(Of Decimal)
	
	Public Sub New()
		MyBase.New
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_cli_idc", DbType:="VarChar(12) NOT NULL", CanBeNull:=false)>  _
	Public Property cli_idc() As String
		Get
			Return Me._cli_idc
		End Get
		Set
			If (String.Equals(Me._cli_idc, value) = false) Then
				Me._cli_idc = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_act_fec_pro", DbType:="DateTime NOT NULL")>  _
	Public Property act_fec_pro() As Date
		Get
			Return Me._act_fec_pro
		End Get
		Set
			If ((Me._act_fec_pro = value)  _
						= false) Then
				Me._act_fec_pro = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_act_mor_001", DbType:="Money")>  _
	Public Property act_mor_001() As System.Nullable(Of Decimal)
		Get
			Return Me._act_mor_001
		End Get
		Set
			If (Me._act_mor_001.Equals(value) = false) Then
				Me._act_mor_001 = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_act_mor_002", DbType:="Money")>  _
	Public Property act_mor_002() As System.Nullable(Of Decimal)
		Get
			Return Me._act_mor_002
		End Get
		Set
			If (Me._act_mor_002.Equals(value) = false) Then
				Me._act_mor_002 = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_act_mor_003", DbType:="Money")>  _
	Public Property act_mor_003() As System.Nullable(Of Decimal)
		Get
			Return Me._act_mor_003
		End Get
		Set
			If (Me._act_mor_003.Equals(value) = false) Then
				Me._act_mor_003 = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_act_mor_004", DbType:="Money")>  _
	Public Property act_mor_004() As System.Nullable(Of Decimal)
		Get
			Return Me._act_mor_004
		End Get
		Set
			If (Me._act_mor_004.Equals(value) = false) Then
				Me._act_mor_004 = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_act_mor_005", DbType:="Money")>  _
	Public Property act_mor_005() As System.Nullable(Of Decimal)
		Get
			Return Me._act_mor_005
		End Get
		Set
			If (Me._act_mor_005.Equals(value) = false) Then
				Me._act_mor_005 = value
			End If
		End Set
	End Property
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.ACT_IMG")>  _
Partial Public Class ACT_IMG_cls
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _act_img_id As Integer
	
	Private _id_ldc As System.Nullable(Of Decimal)
	
	Private _act_img_desc As String
	
	Private _act_img_file As System.Data.Linq.Binary
	
	Private _ldc_cls As EntityRef(Of ldc_cls)
	
    #Region "Definiciones de métodos de extensibilidad"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub Onact_img_idChanging(value As Integer)
    End Sub
    Partial Private Sub Onact_img_idChanged()
    End Sub
    Partial Private Sub Onid_ldcChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub Onid_ldcChanged()
    End Sub
    Partial Private Sub Onact_img_descChanging(value As String)
    End Sub
    Partial Private Sub Onact_img_descChanged()
    End Sub
    Partial Private Sub Onact_img_fileChanging(value As System.Data.Linq.Binary)
    End Sub
    Partial Private Sub Onact_img_fileChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		Me._ldc_cls = CType(Nothing, EntityRef(Of ldc_cls))
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_act_img_id", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property act_img_id() As Integer
		Get
			Return Me._act_img_id
		End Get
		Set
			If ((Me._act_img_id = value)  _
						= false) Then
				Me.Onact_img_idChanging(value)
				Me.SendPropertyChanging
				Me._act_img_id = value
				Me.SendPropertyChanged("act_img_id")
				Me.Onact_img_idChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_id_ldc", DbType:="Decimal(18,0)")>  _
	Public Property id_ldc() As System.Nullable(Of Decimal)
		Get
			Return Me._id_ldc
		End Get
		Set
			If (Me._id_ldc.Equals(value) = false) Then
				If Me._ldc_cls.HasLoadedOrAssignedValue Then
					Throw New System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException()
				End If
				Me.Onid_ldcChanging(value)
				Me.SendPropertyChanging
				Me._id_ldc = value
				Me.SendPropertyChanged("id_ldc")
				Me.Onid_ldcChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_act_img_desc", DbType:="VarChar(100)")>  _
	Public Property act_img_desc() As String
		Get
			Return Me._act_img_desc
		End Get
		Set
			If (String.Equals(Me._act_img_desc, value) = false) Then
				Me.Onact_img_descChanging(value)
				Me.SendPropertyChanging
				Me._act_img_desc = value
				Me.SendPropertyChanged("act_img_desc")
				Me.Onact_img_descChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_act_img_file", DbType:="Image", CanBeNull:=true, UpdateCheck:=UpdateCheck.Never)>  _
	Public Property act_img_file() As System.Data.Linq.Binary
		Get
			Return Me._act_img_file
		End Get
		Set
			If (Object.Equals(Me._act_img_file, value) = false) Then
				Me.Onact_img_fileChanging(value)
				Me.SendPropertyChanging
				Me._act_img_file = value
				Me.SendPropertyChanged("act_img_file")
				Me.Onact_img_fileChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="ldc_cls_ACT_IMG_cls", Storage:="_ldc_cls", ThisKey:="id_ldc", OtherKey:="id_ldc", IsForeignKey:=true)>  _
	Public Property ldc_cls() As ldc_cls
		Get
			Return Me._ldc_cls.Entity
		End Get
		Set
			Dim previousValue As ldc_cls = Me._ldc_cls.Entity
			If ((Object.Equals(previousValue, value) = false)  _
						OrElse (Me._ldc_cls.HasLoadedOrAssignedValue = false)) Then
				Me.SendPropertyChanging
				If ((previousValue Is Nothing)  _
							= false) Then
					Me._ldc_cls.Entity = Nothing
					previousValue.ACT_IMG_cls.Remove(Me)
				End If
				Me._ldc_cls.Entity = value
				If ((value Is Nothing)  _
							= false) Then
					value.ACT_IMG_cls.Add(Me)
					Me._id_ldc = value.id_ldc
				Else
					Me._id_ldc = CType(Nothing, Nullable(Of Decimal))
				End If
				Me.SendPropertyChanged("ldc_cls")
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.agd")>  _
Partial Public Class agd_cls
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _id_agd As Integer
	
	Private _id_eje As Integer
	
	Private _agd_des As String
	
	Private _agd_fec As System.Nullable(Of Date)
	
	Private _agd_hor_dde As System.Nullable(Of Date)
	
	Private _agd_hor_hta As System.Nullable(Of Date)
	
	Private _id_p_0115 As Integer
	
	Private _P_0115_cls As EntityRef(Of P_0115_cls)
	
	Private _eje_cls As EntityRef(Of eje_cls)
	
    #Region "Definiciones de métodos de extensibilidad"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub Onid_agdChanging(value As Integer)
    End Sub
    Partial Private Sub Onid_agdChanged()
    End Sub
    Partial Private Sub Onid_ejeChanging(value As Integer)
    End Sub
    Partial Private Sub Onid_ejeChanged()
    End Sub
    Partial Private Sub Onagd_desChanging(value As String)
    End Sub
    Partial Private Sub Onagd_desChanged()
    End Sub
    Partial Private Sub Onagd_fecChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub Onagd_fecChanged()
    End Sub
    Partial Private Sub Onagd_hor_ddeChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub Onagd_hor_ddeChanged()
    End Sub
    Partial Private Sub Onagd_hor_htaChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub Onagd_hor_htaChanged()
    End Sub
    Partial Private Sub Onid_p_0115Changing(value As Integer)
    End Sub
    Partial Private Sub Onid_p_0115Changed()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		Me._P_0115_cls = CType(Nothing, EntityRef(Of P_0115_cls))
		Me._eje_cls = CType(Nothing, EntityRef(Of eje_cls))
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_id_agd", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property id_agd() As Integer
		Get
			Return Me._id_agd
		End Get
		Set
			If ((Me._id_agd = value)  _
						= false) Then
				Me.Onid_agdChanging(value)
				Me.SendPropertyChanging
				Me._id_agd = value
				Me.SendPropertyChanged("id_agd")
				Me.Onid_agdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_id_eje", DbType:="Int NOT NULL")>  _
	Public Property id_eje() As Integer
		Get
			Return Me._id_eje
		End Get
		Set
			If ((Me._id_eje = value)  _
						= false) Then
				If Me._eje_cls.HasLoadedOrAssignedValue Then
					Throw New System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException()
				End If
				Me.Onid_ejeChanging(value)
				Me.SendPropertyChanging
				Me._id_eje = value
				Me.SendPropertyChanged("id_eje")
				Me.Onid_ejeChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_agd_des", DbType:="NVarChar(MAX)")>  _
	Public Property agd_des() As String
		Get
			Return Me._agd_des
		End Get
		Set
			If (String.Equals(Me._agd_des, value) = false) Then
				Me.Onagd_desChanging(value)
				Me.SendPropertyChanging
				Me._agd_des = value
				Me.SendPropertyChanged("agd_des")
				Me.Onagd_desChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_agd_fec", DbType:="DateTime")>  _
	Public Property agd_fec() As System.Nullable(Of Date)
		Get
			Return Me._agd_fec
		End Get
		Set
			If (Me._agd_fec.Equals(value) = false) Then
				Me.Onagd_fecChanging(value)
				Me.SendPropertyChanging
				Me._agd_fec = value
				Me.SendPropertyChanged("agd_fec")
				Me.Onagd_fecChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_agd_hor_dde", DbType:="DateTime")>  _
	Public Property agd_hor_dde() As System.Nullable(Of Date)
		Get
			Return Me._agd_hor_dde
		End Get
		Set
			If (Me._agd_hor_dde.Equals(value) = false) Then
				Me.Onagd_hor_ddeChanging(value)
				Me.SendPropertyChanging
				Me._agd_hor_dde = value
				Me.SendPropertyChanged("agd_hor_dde")
				Me.Onagd_hor_ddeChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_agd_hor_hta", DbType:="DateTime")>  _
	Public Property agd_hor_hta() As System.Nullable(Of Date)
		Get
			Return Me._agd_hor_hta
		End Get
		Set
			If (Me._agd_hor_hta.Equals(value) = false) Then
				Me.Onagd_hor_htaChanging(value)
				Me.SendPropertyChanging
				Me._agd_hor_hta = value
				Me.SendPropertyChanged("agd_hor_hta")
				Me.Onagd_hor_htaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_id_p_0115", DbType:="Int NOT NULL")>  _
	Public Property id_p_0115() As Integer
		Get
			Return Me._id_p_0115
		End Get
		Set
			If ((Me._id_p_0115 = value)  _
						= false) Then
				If Me._P_0115_cls.HasLoadedOrAssignedValue Then
					Throw New System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException()
				End If
				Me.Onid_p_0115Changing(value)
				Me.SendPropertyChanging
				Me._id_p_0115 = value
				Me.SendPropertyChanged("id_p_0115")
				Me.Onid_p_0115Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="P_0115_cls_agd_cls", Storage:="_P_0115_cls", ThisKey:="id_p_0115", OtherKey:="id_P_0115", IsForeignKey:=true)>  _
	Public Property P_0115_cls() As P_0115_cls
		Get
			Return Me._P_0115_cls.Entity
		End Get
		Set
			Dim previousValue As P_0115_cls = Me._P_0115_cls.Entity
			If ((Object.Equals(previousValue, value) = false)  _
						OrElse (Me._P_0115_cls.HasLoadedOrAssignedValue = false)) Then
				Me.SendPropertyChanging
				If ((previousValue Is Nothing)  _
							= false) Then
					Me._P_0115_cls.Entity = Nothing
					previousValue.agd_cls.Remove(Me)
				End If
				Me._P_0115_cls.Entity = value
				If ((value Is Nothing)  _
							= false) Then
					value.agd_cls.Add(Me)
					Me._id_p_0115 = value.id_P_0115
				Else
					Me._id_p_0115 = CType(Nothing, Integer)
				End If
				Me.SendPropertyChanged("P_0115_cls")
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="eje_cls_agd_cls", Storage:="_eje_cls", ThisKey:="id_eje", OtherKey:="id_eje", IsForeignKey:=true)>  _
	Public Property eje_cls() As eje_cls
		Get
			Return Me._eje_cls.Entity
		End Get
		Set
			Dim previousValue As eje_cls = Me._eje_cls.Entity
			If ((Object.Equals(previousValue, value) = false)  _
						OrElse (Me._eje_cls.HasLoadedOrAssignedValue = false)) Then
				Me.SendPropertyChanging
				If ((previousValue Is Nothing)  _
							= false) Then
					Me._eje_cls.Entity = Nothing
					previousValue.agd_cls.Remove(Me)
				End If
				Me._eje_cls.Entity = value
				If ((value Is Nothing)  _
							= false) Then
					value.agd_cls.Add(Me)
					Me._id_eje = value.id_eje
				Else
					Me._id_eje = CType(Nothing, Integer)
				End If
				Me.SendPropertyChanged("eje_cls")
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.apb")>  _
Partial Public Class apb_cls
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _id_apb As Decimal
	
	Private _id_nnc As Decimal
	
	Private _id_frm As Integer
	
	Private _id_eje As System.Nullable(Of Integer)
	
	Private _apb_est_ado As System.Nullable(Of Char)
	
	Private _apb_obs_apb As String
	
	Private _apb_fec_apb As System.Nullable(Of Date)
	
	Private _nnc_cls As EntityRef(Of nnc_cls)
	
	Private _frm_cls As EntityRef(Of frm_cls)
	
	Private _eje_cls As EntityRef(Of eje_cls)
	
    #Region "Definiciones de métodos de extensibilidad"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub Onid_apbChanging(value As Decimal)
    End Sub
    Partial Private Sub Onid_apbChanged()
    End Sub
    Partial Private Sub Onid_nncChanging(value As Decimal)
    End Sub
    Partial Private Sub Onid_nncChanged()
    End Sub
    Partial Private Sub Onid_frmChanging(value As Integer)
    End Sub
    Partial Private Sub Onid_frmChanged()
    End Sub
    Partial Private Sub Onid_ejeChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub Onid_ejeChanged()
    End Sub
    Partial Private Sub Onapb_est_adoChanging(value As System.Nullable(Of Char))
    End Sub
    Partial Private Sub Onapb_est_adoChanged()
    End Sub
    Partial Private Sub Onapb_obs_apbChanging(value As String)
    End Sub
    Partial Private Sub Onapb_obs_apbChanged()
    End Sub
    Partial Private Sub Onapb_fec_apbChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub Onapb_fec_apbChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		Me._nnc_cls = CType(Nothing, EntityRef(Of nnc_cls))
		Me._frm_cls = CType(Nothing, EntityRef(Of frm_cls))
		Me._eje_cls = CType(Nothing, EntityRef(Of eje_cls))
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_id_apb", AutoSync:=AutoSync.OnInsert, DbType:="Decimal(18,0) NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property id_apb() As Decimal
		Get
			Return Me._id_apb
		End Get
		Set
			If ((Me._id_apb = value)  _
						= false) Then
				Me.Onid_apbChanging(value)
				Me.SendPropertyChanging
				Me._id_apb = value
				Me.SendPropertyChanged("id_apb")
				Me.Onid_apbChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_id_nnc", DbType:="Decimal(18,0) NOT NULL")>  _
	Public Property id_nnc() As Decimal
		Get
			Return Me._id_nnc
		End Get
		Set
			If ((Me._id_nnc = value)  _
						= false) Then
				If Me._nnc_cls.HasLoadedOrAssignedValue Then
					Throw New System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException()
				End If
				Me.Onid_nncChanging(value)
				Me.SendPropertyChanging
				Me._id_nnc = value
				Me.SendPropertyChanged("id_nnc")
				Me.Onid_nncChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_id_frm", DbType:="Int NOT NULL")>  _
	Public Property id_frm() As Integer
		Get
			Return Me._id_frm
		End Get
		Set
			If ((Me._id_frm = value)  _
						= false) Then
				If Me._frm_cls.HasLoadedOrAssignedValue Then
					Throw New System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException()
				End If
				Me.Onid_frmChanging(value)
				Me.SendPropertyChanging
				Me._id_frm = value
				Me.SendPropertyChanged("id_frm")
				Me.Onid_frmChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_id_eje", DbType:="Int")>  _
	Public Property id_eje() As System.Nullable(Of Integer)
		Get
			Return Me._id_eje
		End Get
		Set
			If (Me._id_eje.Equals(value) = false) Then
				If Me._eje_cls.HasLoadedOrAssignedValue Then
					Throw New System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException()
				End If
				Me.Onid_ejeChanging(value)
				Me.SendPropertyChanging
				Me._id_eje = value
				Me.SendPropertyChanged("id_eje")
				Me.Onid_ejeChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_apb_est_ado", DbType:="Char(1)")>  _
	Public Property apb_est_ado() As System.Nullable(Of Char)
		Get
			Return Me._apb_est_ado
		End Get
		Set
			If (Me._apb_est_ado.Equals(value) = false) Then
				Me.Onapb_est_adoChanging(value)
				Me.SendPropertyChanging
				Me._apb_est_ado = value
				Me.SendPropertyChanged("apb_est_ado")
				Me.Onapb_est_adoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_apb_obs_apb", DbType:="VarChar(250)")>  _
	Public Property apb_obs_apb() As String
		Get
			Return Me._apb_obs_apb
		End Get
		Set
			If (String.Equals(Me._apb_obs_apb, value) = false) Then
				Me.Onapb_obs_apbChanging(value)
				Me.SendPropertyChanging
				Me._apb_obs_apb = value
				Me.SendPropertyChanged("apb_obs_apb")
				Me.Onapb_obs_apbChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_apb_fec_apb", DbType:="DateTime")>  _
	Public Property apb_fec_apb() As System.Nullable(Of Date)
		Get
			Return Me._apb_fec_apb
		End Get
		Set
			If (Me._apb_fec_apb.Equals(value) = false) Then
				Me.Onapb_fec_apbChanging(value)
				Me.SendPropertyChanging
				Me._apb_fec_apb = value
				Me.SendPropertyChanged("apb_fec_apb")
				Me.Onapb_fec_apbChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="nnc_cls_apb_cls", Storage:="_nnc_cls", ThisKey:="id_nnc", OtherKey:="id_nnc", IsForeignKey:=true)>  _
	Public Property nnc_cls() As nnc_cls
		Get
			Return Me._nnc_cls.Entity
		End Get
		Set
			Dim previousValue As nnc_cls = Me._nnc_cls.Entity
			If ((Object.Equals(previousValue, value) = false)  _
						OrElse (Me._nnc_cls.HasLoadedOrAssignedValue = false)) Then
				Me.SendPropertyChanging
				If ((previousValue Is Nothing)  _
							= false) Then
					Me._nnc_cls.Entity = Nothing
					previousValue.apb_cls.Remove(Me)
				End If
				Me._nnc_cls.Entity = value
				If ((value Is Nothing)  _
							= false) Then
					value.apb_cls.Add(Me)
					Me._id_nnc = value.id_nnc
				Else
					Me._id_nnc = CType(Nothing, Decimal)
				End If
				Me.SendPropertyChanged("nnc_cls")
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="frm_cls_apb_cls", Storage:="_frm_cls", ThisKey:="id_frm", OtherKey:="id_frm", IsForeignKey:=true)>  _
	Public Property frm_cls() As frm_cls
		Get
			Return Me._frm_cls.Entity
		End Get
		Set
			Dim previousValue As frm_cls = Me._frm_cls.Entity
			If ((Object.Equals(previousValue, value) = false)  _
						OrElse (Me._frm_cls.HasLoadedOrAssignedValue = false)) Then
				Me.SendPropertyChanging
				If ((previousValue Is Nothing)  _
							= false) Then
					Me._frm_cls.Entity = Nothing
					previousValue.apb_cls.Remove(Me)
				End If
				Me._frm_cls.Entity = value
				If ((value Is Nothing)  _
							= false) Then
					value.apb_cls.Add(Me)
					Me._id_frm = value.id_frm
				Else
					Me._id_frm = CType(Nothing, Integer)
				End If
				Me.SendPropertyChanged("frm_cls")
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="eje_cls_apb_cls", Storage:="_eje_cls", ThisKey:="id_eje", OtherKey:="id_eje", IsForeignKey:=true)>  _
	Public Property eje_cls() As eje_cls
		Get
			Return Me._eje_cls.Entity
		End Get
		Set
			Dim previousValue As eje_cls = Me._eje_cls.Entity
			If ((Object.Equals(previousValue, value) = false)  _
						OrElse (Me._eje_cls.HasLoadedOrAssignedValue = false)) Then
				Me.SendPropertyChanging
				If ((previousValue Is Nothing)  _
							= false) Then
					Me._eje_cls.Entity = Nothing
					previousValue.apb_cls.Remove(Me)
				End If
				Me._eje_cls.Entity = value
				If ((value Is Nothing)  _
							= false) Then
					value.apb_cls.Add(Me)
					Me._id_eje = value.id_eje
				Else
					Me._id_eje = CType(Nothing, Nullable(Of Integer))
				End If
				Me.SendPropertyChanged("eje_cls")
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.apc")>  _
Partial Public Class apc_cls
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _id_apc As Decimal
	
	Private _id_ldc As Decimal
	
	Private _id_P_0031 As Integer
	
	Private _apc_pct As System.Nullable(Of Decimal)
	
	Private _apc_pzo_pro As System.Nullable(Of Decimal)
	
	Private _apc_pzo_max As System.Nullable(Of Decimal)
	
	Private _apc_ver_son As System.Nullable(Of Char)
	
	Private _apc_not_son As System.Nullable(Of Char)
	
	Private _apc_cob_son As System.Nullable(Of Char)
	
	Private _ldc_cls As EntityRef(Of ldc_cls)
	
	Private _P_0031_cls As EntityRef(Of P_0031_cls)
	
    #Region "Definiciones de métodos de extensibilidad"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub Onid_apcChanging(value As Decimal)
    End Sub
    Partial Private Sub Onid_apcChanged()
    End Sub
    Partial Private Sub Onid_ldcChanging(value As Decimal)
    End Sub
    Partial Private Sub Onid_ldcChanged()
    End Sub
    Partial Private Sub Onid_P_0031Changing(value As Integer)
    End Sub
    Partial Private Sub Onid_P_0031Changed()
    End Sub
    Partial Private Sub Onapc_pctChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub Onapc_pctChanged()
    End Sub
    Partial Private Sub Onapc_pzo_proChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub Onapc_pzo_proChanged()
    End Sub
    Partial Private Sub Onapc_pzo_maxChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub Onapc_pzo_maxChanged()
    End Sub
    Partial Private Sub Onapc_ver_sonChanging(value As System.Nullable(Of Char))
    End Sub
    Partial Private Sub Onapc_ver_sonChanged()
    End Sub
    Partial Private Sub Onapc_not_sonChanging(value As System.Nullable(Of Char))
    End Sub
    Partial Private Sub Onapc_not_sonChanged()
    End Sub
    Partial Private Sub Onapc_cob_sonChanging(value As System.Nullable(Of Char))
    End Sub
    Partial Private Sub Onapc_cob_sonChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		Me._ldc_cls = CType(Nothing, EntityRef(Of ldc_cls))
		Me._P_0031_cls = CType(Nothing, EntityRef(Of P_0031_cls))
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_id_apc", AutoSync:=AutoSync.OnInsert, DbType:="Decimal(18,0) NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property id_apc() As Decimal
		Get
			Return Me._id_apc
		End Get
		Set
			If ((Me._id_apc = value)  _
						= false) Then
				Me.Onid_apcChanging(value)
				Me.SendPropertyChanging
				Me._id_apc = value
				Me.SendPropertyChanged("id_apc")
				Me.Onid_apcChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_id_ldc", DbType:="Decimal(18,0) NOT NULL")>  _
	Public Property id_ldc() As Decimal
		Get
			Return Me._id_ldc
		End Get
		Set
			If ((Me._id_ldc = value)  _
						= false) Then
				If Me._ldc_cls.HasLoadedOrAssignedValue Then
					Throw New System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException()
				End If
				Me.Onid_ldcChanging(value)
				Me.SendPropertyChanging
				Me._id_ldc = value
				Me.SendPropertyChanged("id_ldc")
				Me.Onid_ldcChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_id_P_0031", DbType:="Int NOT NULL")>  _
	Public Property id_P_0031() As Integer
		Get
			Return Me._id_P_0031
		End Get
		Set
			If ((Me._id_P_0031 = value)  _
						= false) Then
				If Me._P_0031_cls.HasLoadedOrAssignedValue Then
					Throw New System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException()
				End If
				Me.Onid_P_0031Changing(value)
				Me.SendPropertyChanging
				Me._id_P_0031 = value
				Me.SendPropertyChanged("id_P_0031")
				Me.Onid_P_0031Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_apc_pct", DbType:="Decimal(5,2)")>  _
	Public Property apc_pct() As System.Nullable(Of Decimal)
		Get
			Return Me._apc_pct
		End Get
		Set
			If (Me._apc_pct.Equals(value) = false) Then
				Me.Onapc_pctChanging(value)
				Me.SendPropertyChanging
				Me._apc_pct = value
				Me.SendPropertyChanged("apc_pct")
				Me.Onapc_pctChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_apc_pzo_pro", DbType:="Decimal(5,0)")>  _
	Public Property apc_pzo_pro() As System.Nullable(Of Decimal)
		Get
			Return Me._apc_pzo_pro
		End Get
		Set
			If (Me._apc_pzo_pro.Equals(value) = false) Then
				Me.Onapc_pzo_proChanging(value)
				Me.SendPropertyChanging
				Me._apc_pzo_pro = value
				Me.SendPropertyChanged("apc_pzo_pro")
				Me.Onapc_pzo_proChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_apc_pzo_max", DbType:="Decimal(5,0)")>  _
	Public Property apc_pzo_max() As System.Nullable(Of Decimal)
		Get
			Return Me._apc_pzo_max
		End Get
		Set
			If (Me._apc_pzo_max.Equals(value) = false) Then
				Me.Onapc_pzo_maxChanging(value)
				Me.SendPropertyChanging
				Me._apc_pzo_max = value
				Me.SendPropertyChanged("apc_pzo_max")
				Me.Onapc_pzo_maxChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_apc_ver_son", DbType:="Char(1)")>  _
	Public Property apc_ver_son() As System.Nullable(Of Char)
		Get
			Return Me._apc_ver_son
		End Get
		Set
			If (Me._apc_ver_son.Equals(value) = false) Then
				Me.Onapc_ver_sonChanging(value)
				Me.SendPropertyChanging
				Me._apc_ver_son = value
				Me.SendPropertyChanged("apc_ver_son")
				Me.Onapc_ver_sonChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_apc_not_son", DbType:="Char(1)")>  _
	Public Property apc_not_son() As System.Nullable(Of Char)
		Get
			Return Me._apc_not_son
		End Get
		Set
			If (Me._apc_not_son.Equals(value) = false) Then
				Me.Onapc_not_sonChanging(value)
				Me.SendPropertyChanging
				Me._apc_not_son = value
				Me.SendPropertyChanged("apc_not_son")
				Me.Onapc_not_sonChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_apc_cob_son", DbType:="Char(1)")>  _
	Public Property apc_cob_son() As System.Nullable(Of Char)
		Get
			Return Me._apc_cob_son
		End Get
		Set
			If (Me._apc_cob_son.Equals(value) = false) Then
				Me.Onapc_cob_sonChanging(value)
				Me.SendPropertyChanging
				Me._apc_cob_son = value
				Me.SendPropertyChanged("apc_cob_son")
				Me.Onapc_cob_sonChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="ldc_cls_apc_cls", Storage:="_ldc_cls", ThisKey:="id_ldc", OtherKey:="id_ldc", IsForeignKey:=true)>  _
	Public Property ldc_cls() As ldc_cls
		Get
			Return Me._ldc_cls.Entity
		End Get
		Set
			Dim previousValue As ldc_cls = Me._ldc_cls.Entity
			If ((Object.Equals(previousValue, value) = false)  _
						OrElse (Me._ldc_cls.HasLoadedOrAssignedValue = false)) Then
				Me.SendPropertyChanging
				If ((previousValue Is Nothing)  _
							= false) Then
					Me._ldc_cls.Entity = Nothing
					previousValue.apc_cls.Remove(Me)
				End If
				Me._ldc_cls.Entity = value
				If ((value Is Nothing)  _
							= false) Then
					value.apc_cls.Add(Me)
					Me._id_ldc = value.id_ldc
				Else
					Me._id_ldc = CType(Nothing, Decimal)
				End If
				Me.SendPropertyChanged("ldc_cls")
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="P_0031_cls_apc_cls", Storage:="_P_0031_cls", ThisKey:="id_P_0031", OtherKey:="id_P_0031", IsForeignKey:=true)>  _
	Public Property P_0031_cls() As P_0031_cls
		Get
			Return Me._P_0031_cls.Entity
		End Get
		Set
			Dim previousValue As P_0031_cls = Me._P_0031_cls.Entity
			If ((Object.Equals(previousValue, value) = false)  _
						OrElse (Me._P_0031_cls.HasLoadedOrAssignedValue = false)) Then
				Me.SendPropertyChanging
				If ((previousValue Is Nothing)  _
							= false) Then
					Me._P_0031_cls.Entity = Nothing
					previousValue.apc_cls.Remove(Me)
				End If
				Me._P_0031_cls.Entity = value
				If ((value Is Nothing)  _
							= false) Then
					value.apc_cls.Add(Me)
					Me._id_P_0031 = value.id_P_0031
				Else
					Me._id_P_0031 = CType(Nothing, Integer)
				End If
				Me.SendPropertyChanged("P_0031_cls")
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.apl")>  _
Partial Public Class apl_cls
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _id_apl As Decimal
	
	Private _cli_idc As String
	
	Private _id_eje As Integer
	
	Private _id_eje_com As System.Nullable(Of Integer)
	
	Private _id_eje_ope As System.Nullable(Of Integer)
	
	Private _apl_fec As Date
	
	Private _apl_num_mod As Integer
	
	Private _apl_exc_mto As System.Nullable(Of Decimal)
	
	Private _apl_dnc_mto As System.Nullable(Of Decimal)
	
	Private _apl_cxp_mto As System.Nullable(Of Decimal)
	
	Private _apl_cxc_mto As System.Nullable(Of Decimal)
	
	Private _apl_dvg_mto As System.Nullable(Of Decimal)
	
	Private _apl_dmr_mto As System.Nullable(Of Decimal)
	
	Private _apl_con_dev As System.Nullable(Of Char)
	
	Private _apl_dia_int_dev As System.Nullable(Of Integer)
	
	Private _apl_tas_cli As System.Nullable(Of Decimal)
	
	Private _apl_tas_apl As System.Nullable(Of Decimal)
	
	Private _apl_sdo As System.Nullable(Of Decimal)
	
	Private _apl_apb_com As System.Nullable(Of Char)
	
	Private _apl_obs_com As String
	
	Private _apl_fec_apb_com As System.Nullable(Of Date)
	
	Private _apl_fec_cre As System.Nullable(Of Date)
	
	Private _apl_fec_anl As System.Nullable(Of Date)
	
	Private _apl_obs As String
	
	Private _cxp_cls As EntitySet(Of cxp_cls)
	
	Private _egr_cls As EntitySet(Of egr_cls)
	
	Private _cli_cls As EntityRef(Of cli_cls)
	
	Private _eje As EntityRef(Of eje_cls)
	
	Private _eje1 As EntityRef(Of eje_cls)
	
	Private _eje_cls As EntityRef(Of eje_cls)
	
    #Region "Definiciones de métodos de extensibilidad"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub Onid_aplChanging(value As Decimal)
    End Sub
    Partial Private Sub Onid_aplChanged()
    End Sub
    Partial Private Sub Oncli_idcChanging(value As String)
    End Sub
    Partial Private Sub Oncli_idcChanged()
    End Sub
    Partial Private Sub Onid_ejeChanging(value As Integer)
    End Sub
    Partial Private Sub Onid_ejeChanged()
    End Sub
    Partial Private Sub Onid_eje_comChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub Onid_eje_comChanged()
    End Sub
    Partial Private Sub Onid_eje_opeChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub Onid_eje_opeChanged()
    End Sub
    Partial Private Sub Onapl_fecChanging(value As Date)
    End Sub
    Partial Private Sub Onapl_fecChanged()
    End Sub
    Partial Private Sub Onapl_num_modChanging(value As Integer)
    End Sub
    Partial Private Sub Onapl_num_modChanged()
    End Sub
    Partial Private Sub Onapl_exc_mtoChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub Onapl_exc_mtoChanged()
    End Sub
    Partial Private Sub Onapl_dnc_mtoChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub Onapl_dnc_mtoChanged()
    End Sub
    Partial Private Sub Onapl_cxp_mtoChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub Onapl_cxp_mtoChanged()
    End Sub
    Partial Private Sub Onapl_cxc_mtoChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub Onapl_cxc_mtoChanged()
    End Sub
    Partial Private Sub Onapl_dvg_mtoChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub Onapl_dvg_mtoChanged()
    End Sub
    Partial Private Sub Onapl_dmr_mtoChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub Onapl_dmr_mtoChanged()
    End Sub
    Partial Private Sub Onapl_con_devChanging(value As System.Nullable(Of Char))
    End Sub
    Partial Private Sub Onapl_con_devChanged()
    End Sub
    Partial Private Sub Onapl_dia_int_devChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub Onapl_dia_int_devChanged()
    End Sub
    Partial Private Sub Onapl_tas_cliChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub Onapl_tas_cliChanged()
    End Sub
    Partial Private Sub Onapl_tas_aplChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub Onapl_tas_aplChanged()
    End Sub
    Partial Private Sub Onapl_sdoChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub Onapl_sdoChanged()
    End Sub
    Partial Private Sub Onapl_apb_comChanging(value As System.Nullable(Of Char))
    End Sub
    Partial Private Sub Onapl_apb_comChanged()
    End Sub
    Partial Private Sub Onapl_obs_comChanging(value As String)
    End Sub
    Partial Private Sub Onapl_obs_comChanged()
    End Sub
    Partial Private Sub Onapl_fec_apb_comChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub Onapl_fec_apb_comChanged()
    End Sub
    Partial Private Sub Onapl_fec_creChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub Onapl_fec_creChanged()
    End Sub
    Partial Private Sub Onapl_fec_anlChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub Onapl_fec_anlChanged()
    End Sub
    Partial Private Sub Onapl_obsChanging(value As String)
    End Sub
    Partial Private Sub Onapl_obsChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		Me._cxp_cls = New EntitySet(Of cxp_cls)(AddressOf Me.attach_cxp_cls, AddressOf Me.detach_cxp_cls)
		Me._egr_cls = New EntitySet(Of egr_cls)(AddressOf Me.attach_egr_cls, AddressOf Me.detach_egr_cls)
		Me._cli_cls = CType(Nothing, EntityRef(Of cli_cls))
		Me._eje = CType(Nothing, EntityRef(Of eje_cls))
		Me._eje1 = CType(Nothing, EntityRef(Of eje_cls))
		Me._eje_cls = CType(Nothing, EntityRef(Of eje_cls))
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_id_apl", AutoSync:=AutoSync.OnInsert, DbType:="Decimal(10,0) NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property id_apl() As Decimal
		Get
			Return Me._id_apl
		End Get
		Set
			If ((Me._id_apl = value)  _
						= false) Then
				Me.Onid_aplChanging(value)
				Me.SendPropertyChanging
				Me._id_apl = value
				Me.SendPropertyChanged("id_apl")
				Me.Onid_aplChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_cli_idc", DbType:="Char(12) NOT NULL", CanBeNull:=false)>  _
	Public Property cli_idc() As String
		Get
			Return Me._cli_idc
		End Get
		Set
			If (String.Equals(Me._cli_idc, value) = false) Then
				If Me._cli_cls.HasLoadedOrAssignedValue Then
					Throw New System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException()
				End If
				Me.Oncli_idcChanging(value)
				Me.SendPropertyChanging
				Me._cli_idc = value
				Me.SendPropertyChanged("cli_idc")
				Me.Oncli_idcChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_id_eje", DbType:="Int NOT NULL")>  _
	Public Property id_eje() As Integer
		Get
			Return Me._id_eje
		End Get
		Set
			If ((Me._id_eje = value)  _
						= false) Then
				If Me._eje.HasLoadedOrAssignedValue Then
					Throw New System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException()
				End If
				Me.Onid_ejeChanging(value)
				Me.SendPropertyChanging
				Me._id_eje = value
				Me.SendPropertyChanged("id_eje")
				Me.Onid_ejeChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_id_eje_com", DbType:="Int")>  _
	Public Property id_eje_com() As System.Nullable(Of Integer)
		Get
			Return Me._id_eje_com
		End Get
		Set
			If (Me._id_eje_com.Equals(value) = false) Then
				If Me._eje1.HasLoadedOrAssignedValue Then
					Throw New System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException()
				End If
				Me.Onid_eje_comChanging(value)
				Me.SendPropertyChanging
				Me._id_eje_com = value
				Me.SendPropertyChanged("id_eje_com")
				Me.Onid_eje_comChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_id_eje_ope", DbType:="Int")>  _
	Public Property id_eje_ope() As System.Nullable(Of Integer)
		Get
			Return Me._id_eje_ope
		End Get
		Set
			If (Me._id_eje_ope.Equals(value) = false) Then
				If Me._eje_cls.HasLoadedOrAssignedValue Then
					Throw New System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException()
				End If
				Me.Onid_eje_opeChanging(value)
				Me.SendPropertyChanging
				Me._id_eje_ope = value
				Me.SendPropertyChanged("id_eje_ope")
				Me.Onid_eje_opeChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_apl_fec", DbType:="DateTime NOT NULL")>  _
	Public Property apl_fec() As Date
		Get
			Return Me._apl_fec
		End Get
		Set
			If ((Me._apl_fec = value)  _
						= false) Then
				Me.Onapl_fecChanging(value)
				Me.SendPropertyChanging
				Me._apl_fec = value
				Me.SendPropertyChanged("apl_fec")
				Me.Onapl_fecChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_apl_num_mod", DbType:="Int NOT NULL")>  _
	Public Property apl_num_mod() As Integer
		Get
			Return Me._apl_num_mod
		End Get
		Set
			If ((Me._apl_num_mod = value)  _
						= false) Then
				Me.Onapl_num_modChanging(value)
				Me.SendPropertyChanging
				Me._apl_num_mod = value
				Me.SendPropertyChanged("apl_num_mod")
				Me.Onapl_num_modChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_apl_exc_mto", DbType:="Money")>  _
	Public Property apl_exc_mto() As System.Nullable(Of Decimal)
		Get
			Return Me._apl_exc_mto
		End Get
		Set
			If (Me._apl_exc_mto.Equals(value) = false) Then
				Me.Onapl_exc_mtoChanging(value)
				Me.SendPropertyChanging
				Me._apl_exc_mto = value
				Me.SendPropertyChanged("apl_exc_mto")
				Me.Onapl_exc_mtoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_apl_dnc_mto", DbType:="Money")>  _
	Public Property apl_dnc_mto() As System.Nullable(Of Decimal)
		Get
			Return Me._apl_dnc_mto
		End Get
		Set
			If (Me._apl_dnc_mto.Equals(value) = false) Then
				Me.Onapl_dnc_mtoChanging(value)
				Me.SendPropertyChanging
				Me._apl_dnc_mto = value
				Me.SendPropertyChanged("apl_dnc_mto")
				Me.Onapl_dnc_mtoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_apl_cxp_mto", DbType:="Money")>  _
	Public Property apl_cxp_mto() As System.Nullable(Of Decimal)
		Get
			Return Me._apl_cxp_mto
		End Get
		Set
			If (Me._apl_cxp_mto.Equals(value) = false) Then
				Me.Onapl_cxp_mtoChanging(value)
				Me.SendPropertyChanging
				Me._apl_cxp_mto = value
				Me.SendPropertyChanged("apl_cxp_mto")
				Me.Onapl_cxp_mtoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_apl_cxc_mto", DbType:="Money")>  _
	Public Property apl_cxc_mto() As System.Nullable(Of Decimal)
		Get
			Return Me._apl_cxc_mto
		End Get
		Set
			If (Me._apl_cxc_mto.Equals(value) = false) Then
				Me.Onapl_cxc_mtoChanging(value)
				Me.SendPropertyChanging
				Me._apl_cxc_mto = value
				Me.SendPropertyChanged("apl_cxc_mto")
				Me.Onapl_cxc_mtoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_apl_dvg_mto", DbType:="Money")>  _
	Public Property apl_dvg_mto() As System.Nullable(Of Decimal)
		Get
			Return Me._apl_dvg_mto
		End Get
		Set
			If (Me._apl_dvg_mto.Equals(value) = false) Then
				Me.Onapl_dvg_mtoChanging(value)
				Me.SendPropertyChanging
				Me._apl_dvg_mto = value
				Me.SendPropertyChanged("apl_dvg_mto")
				Me.Onapl_dvg_mtoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_apl_dmr_mto", DbType:="Money")>  _
	Public Property apl_dmr_mto() As System.Nullable(Of Decimal)
		Get
			Return Me._apl_dmr_mto
		End Get
		Set
			If (Me._apl_dmr_mto.Equals(value) = false) Then
				Me.Onapl_dmr_mtoChanging(value)
				Me.SendPropertyChanging
				Me._apl_dmr_mto = value
				Me.SendPropertyChanged("apl_dmr_mto")
				Me.Onapl_dmr_mtoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_apl_con_dev", DbType:="Char(1)")>  _
	Public Property apl_con_dev() As System.Nullable(Of Char)
		Get
			Return Me._apl_con_dev
		End Get
		Set
			If (Me._apl_con_dev.Equals(value) = false) Then
				Me.Onapl_con_devChanging(value)
				Me.SendPropertyChanging
				Me._apl_con_dev = value
				Me.SendPropertyChanged("apl_con_dev")
				Me.Onapl_con_devChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_apl_dia_int_dev", DbType:="Int")>  _
	Public Property apl_dia_int_dev() As System.Nullable(Of Integer)
		Get
			Return Me._apl_dia_int_dev
		End Get
		Set
			If (Me._apl_dia_int_dev.Equals(value) = false) Then
				Me.Onapl_dia_int_devChanging(value)
				Me.SendPropertyChanging
				Me._apl_dia_int_dev = value
				Me.SendPropertyChanged("apl_dia_int_dev")
				Me.Onapl_dia_int_devChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_apl_tas_cli", DbType:="Decimal(5,2)")>  _
	Public Property apl_tas_cli() As System.Nullable(Of Decimal)
		Get
			Return Me._apl_tas_cli
		End Get
		Set
			If (Me._apl_tas_cli.Equals(value) = false) Then
				Me.Onapl_tas_cliChanging(value)
				Me.SendPropertyChanging
				Me._apl_tas_cli = value
				Me.SendPropertyChanged("apl_tas_cli")
				Me.Onapl_tas_cliChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_apl_tas_apl", DbType:="Decimal(5,2)")>  _
	Public Property apl_tas_apl() As System.Nullable(Of Decimal)
		Get
			Return Me._apl_tas_apl
		End Get
		Set
			If (Me._apl_tas_apl.Equals(value) = false) Then
				Me.Onapl_tas_aplChanging(value)
				Me.SendPropertyChanging
				Me._apl_tas_apl = value
				Me.SendPropertyChanged("apl_tas_apl")
				Me.Onapl_tas_aplChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_apl_sdo", DbType:="Money")>  _
	Public Property apl_sdo() As System.Nullable(Of Decimal)
		Get
			Return Me._apl_sdo
		End Get
		Set
			If (Me._apl_sdo.Equals(value) = false) Then
				Me.Onapl_sdoChanging(value)
				Me.SendPropertyChanging
				Me._apl_sdo = value
				Me.SendPropertyChanged("apl_sdo")
				Me.Onapl_sdoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_apl_apb_com", DbType:="Char(1)")>  _
	Public Property apl_apb_com() As System.Nullable(Of Char)
		Get
			Return Me._apl_apb_com
		End Get
		Set
			If (Me._apl_apb_com.Equals(value) = false) Then
				Me.Onapl_apb_comChanging(value)
				Me.SendPropertyChanging
				Me._apl_apb_com = value
				Me.SendPropertyChanged("apl_apb_com")
				Me.Onapl_apb_comChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_apl_obs_com", DbType:="VarChar(255)")>  _
	Public Property apl_obs_com() As String
		Get
			Return Me._apl_obs_com
		End Get
		Set
			If (String.Equals(Me._apl_obs_com, value) = false) Then
				Me.Onapl_obs_comChanging(value)
				Me.SendPropertyChanging
				Me._apl_obs_com = value
				Me.SendPropertyChanged("apl_obs_com")
				Me.Onapl_obs_comChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_apl_fec_apb_com", DbType:="DateTime")>  _
	Public Property apl_fec_apb_com() As System.Nullable(Of Date)
		Get
			Return Me._apl_fec_apb_com
		End Get
		Set
			If (Me._apl_fec_apb_com.Equals(value) = false) Then
				Me.Onapl_fec_apb_comChanging(value)
				Me.SendPropertyChanging
				Me._apl_fec_apb_com = value
				Me.SendPropertyChanged("apl_fec_apb_com")
				Me.Onapl_fec_apb_comChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_apl_fec_cre", DbType:="DateTime")>  _
	Public Property apl_fec_cre() As System.Nullable(Of Date)
		Get
			Return Me._apl_fec_cre
		End Get
		Set
			If (Me._apl_fec_cre.Equals(value) = false) Then
				Me.Onapl_fec_creChanging(value)
				Me.SendPropertyChanging
				Me._apl_fec_cre = value
				Me.SendPropertyChanged("apl_fec_cre")
				Me.Onapl_fec_creChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_apl_fec_anl", DbType:="DateTime")>  _
	Public Property apl_fec_anl() As System.Nullable(Of Date)
		Get
			Return Me._apl_fec_anl
		End Get
		Set
			If (Me._apl_fec_anl.Equals(value) = false) Then
				Me.Onapl_fec_anlChanging(value)
				Me.SendPropertyChanging
				Me._apl_fec_anl = value
				Me.SendPropertyChanged("apl_fec_anl")
				Me.Onapl_fec_anlChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_apl_obs", DbType:="VarChar(500)")>  _
	Public Property apl_obs() As String
		Get
			Return Me._apl_obs
		End Get
		Set
			If (String.Equals(Me._apl_obs, value) = false) Then
				Me.Onapl_obsChanging(value)
				Me.SendPropertyChanging
				Me._apl_obs = value
				Me.SendPropertyChanged("apl_obs")
				Me.Onapl_obsChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="apl_cls_cxp_cls", Storage:="_cxp_cls", ThisKey:="id_apl", OtherKey:="id_apl")>  _
	Public Property cxp_cls() As EntitySet(Of cxp_cls)
		Get
			Return Me._cxp_cls
		End Get
		Set
			Me._cxp_cls.Assign(value)
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="apl_cls_egr_cls", Storage:="_egr_cls", ThisKey:="id_apl", OtherKey:="id_apl")>  _
	Public Property egr_cls() As EntitySet(Of egr_cls)
		Get
			Return Me._egr_cls
		End Get
		Set
			Me._egr_cls.Assign(value)
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="cli_cls_apl_cls", Storage:="_cli_cls", ThisKey:="cli_idc", OtherKey:="cli_idc", IsForeignKey:=true)>  _
	Public Property cli_cls() As cli_cls
		Get
			Return Me._cli_cls.Entity
		End Get
		Set
			Dim previousValue As cli_cls = Me._cli_cls.Entity
			If ((Object.Equals(previousValue, value) = false)  _
						OrElse (Me._cli_cls.HasLoadedOrAssignedValue = false)) Then
				Me.SendPropertyChanging
				If ((previousValue Is Nothing)  _
							= false) Then
					Me._cli_cls.Entity = Nothing
					previousValue.apl_cls.Remove(Me)
				End If
				Me._cli_cls.Entity = value
				If ((value Is Nothing)  _
							= false) Then
					value.apl_cls.Add(Me)
					Me._cli_idc = value.cli_idc
				Else
					Me._cli_idc = CType(Nothing, String)
				End If
				Me.SendPropertyChanged("cli_cls")
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="eje_cls_apl_cls", Storage:="_eje", ThisKey:="id_eje", OtherKey:="id_eje", IsForeignKey:=true)>  _
	Public Property eje() As eje_cls
		Get
			Return Me._eje.Entity
		End Get
		Set
			Dim previousValue As eje_cls = Me._eje.Entity
			If ((Object.Equals(previousValue, value) = false)  _
						OrElse (Me._eje.HasLoadedOrAssignedValue = false)) Then
				Me.SendPropertyChanging
				If ((previousValue Is Nothing)  _
							= false) Then
					Me._eje.Entity = Nothing
					previousValue.apl_cls.Remove(Me)
				End If
				Me._eje.Entity = value
				If ((value Is Nothing)  _
							= false) Then
					value.apl_cls.Add(Me)
					Me._id_eje = value.id_eje
				Else
					Me._id_eje = CType(Nothing, Integer)
				End If
				Me.SendPropertyChanged("eje")
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="eje_cls_apl_cls1", Storage:="_eje1", ThisKey:="id_eje_com", OtherKey:="id_eje", IsForeignKey:=true)>  _
	Public Property eje1() As eje_cls
		Get
			Return Me._eje1.Entity
		End Get
		Set
			Dim previousValue As eje_cls = Me._eje1.Entity
			If ((Object.Equals(previousValue, value) = false)  _
						OrElse (Me._eje1.HasLoadedOrAssignedValue = false)) Then
				Me.SendPropertyChanging
				If ((previousValue Is Nothing)  _
							= false) Then
					Me._eje1.Entity = Nothing
					previousValue.apl_cls1.Remove(Me)
				End If
				Me._eje1.Entity = value
				If ((value Is Nothing)  _
							= false) Then
					value.apl_cls1.Add(Me)
					Me._id_eje_com = value.id_eje
				Else
					Me._id_eje_com = CType(Nothing, Nullable(Of Integer))
				End If
				Me.SendPropertyChanged("eje1")
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="eje_cls_apl_cls2", Storage:="_eje_cls", ThisKey:="id_eje_ope", OtherKey:="id_eje", IsForeignKey:=true)>  _
	Public Property eje_cls() As eje_cls
		Get
			Return Me._eje_cls.Entity
		End Get
		Set
			Dim previousValue As eje_cls = Me._eje_cls.Entity
			If ((Object.Equals(previousValue, value) = false)  _
						OrElse (Me._eje_cls.HasLoadedOrAssignedValue = false)) Then
				Me.SendPropertyChanging
				If ((previousValue Is Nothing)  _
							= false) Then
					Me._eje_cls.Entity = Nothing
					previousValue.apl_cls2.Remove(Me)
				End If
				Me._eje_cls.Entity = value
				If ((value Is Nothing)  _
							= false) Then
					value.apl_cls2.Add(Me)
					Me._id_eje_ope = value.id_eje
				Else
					Me._id_eje_ope = CType(Nothing, Nullable(Of Integer))
				End If
				Me.SendPropertyChanged("eje_cls")
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
	
	Private Sub attach_cxp_cls(ByVal entity As cxp_cls)
		Me.SendPropertyChanging
		entity.apl_cls = Me
	End Sub
	
	Private Sub detach_cxp_cls(ByVal entity As cxp_cls)
		Me.SendPropertyChanging
		entity.apl_cls = Nothing
	End Sub
	
	Private Sub attach_egr_cls(ByVal entity As egr_cls)
		Me.SendPropertyChanging
		entity.apl_cls = Me
	End Sub
	
	Private Sub detach_egr_cls(ByVal entity As egr_cls)
		Me.SendPropertyChanging
		entity.apl_cls = Nothing
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.aplica_comision")>  _
Partial Public Class aplica_comision__cls
	
	Private _id As Integer
	
	Private _id_tip_aplicacion As System.Nullable(Of Integer)
	
	Private _porcentaje As System.Nullable(Of Boolean)
	
	Private _usa_monto As System.Nullable(Of Boolean)
	
	Private _usa_rango As System.Nullable(Of Boolean)
	
	Private _aplica_web_teller As System.Nullable(Of Boolean)
	
	Private _aplica_back_office As System.Nullable(Of Boolean)
	
	Private _cobrador_automatico As System.Nullable(Of Boolean)
	
	Private _estado As System.Nullable(Of Boolean)
	
	Public Sub New()
		MyBase.New
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_id", AutoSync:=AutoSync.Always, DbType:="Int NOT NULL IDENTITY", IsDbGenerated:=true)>  _
	Public Property id() As Integer
		Get
			Return Me._id
		End Get
		Set
			If ((Me._id = value)  _
						= false) Then
				Me._id = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_id_tip_aplicacion", DbType:="Int")>  _
	Public Property id_tip_aplicacion() As System.Nullable(Of Integer)
		Get
			Return Me._id_tip_aplicacion
		End Get
		Set
			If (Me._id_tip_aplicacion.Equals(value) = false) Then
				Me._id_tip_aplicacion = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_porcentaje", DbType:="Bit")>  _
	Public Property porcentaje() As System.Nullable(Of Boolean)
		Get
			Return Me._porcentaje
		End Get
		Set
			If (Me._porcentaje.Equals(value) = false) Then
				Me._porcentaje = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_usa_monto", DbType:="Bit")>  _
	Public Property usa_monto() As System.Nullable(Of Boolean)
		Get
			Return Me._usa_monto
		End Get
		Set
			If (Me._usa_monto.Equals(value) = false) Then
				Me._usa_monto = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_usa_rango", DbType:="Bit")>  _
	Public Property usa_rango() As System.Nullable(Of Boolean)
		Get
			Return Me._usa_rango
		End Get
		Set
			If (Me._usa_rango.Equals(value) = false) Then
				Me._usa_rango = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_aplica_web_teller", DbType:="Bit")>  _
	Public Property aplica_web_teller() As System.Nullable(Of Boolean)
		Get
			Return Me._aplica_web_teller
		End Get
		Set
			If (Me._aplica_web_teller.Equals(value) = false) Then
				Me._aplica_web_teller = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_aplica_back_office", DbType:="Bit")>  _
	Public Property aplica_back_office() As System.Nullable(Of Boolean)
		Get
			Return Me._aplica_back_office
		End Get
		Set
			If (Me._aplica_back_office.Equals(value) = false) Then
				Me._aplica_back_office = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_cobrador_automatico", DbType:="Bit")>  _
	Public Property cobrador_automatico() As System.Nullable(Of Boolean)
		Get
			Return Me._cobrador_automatico
		End Get
		Set
			If (Me._cobrador_automatico.Equals(value) = false) Then
				Me._cobrador_automatico = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_estado", DbType:="Bit")>  _
	Public Property estado() As System.Nullable(Of Boolean)
		Get
			Return Me._estado
		End Get
		Set
			If (Me._estado.Equals(value) = false) Then
				Me._estado = value
			End If
		End Set
	End Property
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.avl")>  _
Partial Public Class avl_cls
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _id_avl As Integer
	
	Private _cli_idc As String
	
	Private _avl_ida As String
	
	Private _avl_dig_ito As Char
	
	Private _avl_nom As String
	
	Private _avl_dml As String
	
	Private _avl_id_cmn As System.Nullable(Of Integer)
	
	Private _avl_ptm As String
	
	Private _avl_fec_est_sit As System.Nullable(Of Date)
	
	Private _id_p_0025 As System.Nullable(Of Integer)
	
	Private _id_p_0026 As System.Nullable(Of Integer)
	
	Private _id_p_0027 As System.Nullable(Of Integer)
	
	Private _avl_dml_com As String
	
	Private _pnu_avl_cmn_com As String
	
	Private _avl_id_cmn_com As System.Nullable(Of Integer)
	
	Private _avl_fec_jun_acc As System.Nullable(Of Date)
	
	Private _avl_not As String
	
	Private _avl_mto As System.Nullable(Of Decimal)
	
	Private _avl_plz As System.Nullable(Of Decimal)
	
	Private _cli_cls As EntityRef(Of cli_cls)
	
	Private _cmn As EntityRef(Of cmn_cls)
	
	Private _cmn_cls As EntityRef(Of cmn_cls)
	
	Private _P_0025_cls As EntityRef(Of P_0025_cls)
	
	Private _P_0026_cls As EntityRef(Of P_0026_cls)
	
	Private _P_0027_cls As EntityRef(Of P_0027_cls)
	
    #Region "Definiciones de métodos de extensibilidad"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub Onid_avlChanging(value As Integer)
    End Sub
    Partial Private Sub Onid_avlChanged()
    End Sub
    Partial Private Sub Oncli_idcChanging(value As String)
    End Sub
    Partial Private Sub Oncli_idcChanged()
    End Sub
    Partial Private Sub Onavl_idaChanging(value As String)
    End Sub
    Partial Private Sub Onavl_idaChanged()
    End Sub
    Partial Private Sub Onavl_dig_itoChanging(value As Char)
    End Sub
    Partial Private Sub Onavl_dig_itoChanged()
    End Sub
    Partial Private Sub Onavl_nomChanging(value As String)
    End Sub
    Partial Private Sub Onavl_nomChanged()
    End Sub
    Partial Private Sub Onavl_dmlChanging(value As String)
    End Sub
    Partial Private Sub Onavl_dmlChanged()
    End Sub
    Partial Private Sub Onavl_id_cmnChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub Onavl_id_cmnChanged()
    End Sub
    Partial Private Sub Onavl_ptmChanging(value As String)
    End Sub
    Partial Private Sub Onavl_ptmChanged()
    End Sub
    Partial Private Sub Onavl_fec_est_sitChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub Onavl_fec_est_sitChanged()
    End Sub
    Partial Private Sub Onid_p_0025Changing(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub Onid_p_0025Changed()
    End Sub
    Partial Private Sub Onid_p_0026Changing(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub Onid_p_0026Changed()
    End Sub
    Partial Private Sub Onid_p_0027Changing(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub Onid_p_0027Changed()
    End Sub
    Partial Private Sub Onavl_dml_comChanging(value As String)
    End Sub
    Partial Private Sub Onavl_dml_comChanged()
    End Sub
    Partial Private Sub Onpnu_avl_cmn_comChanging(value As String)
    End Sub
    Partial Private Sub Onpnu_avl_cmn_comChanged()
    End Sub
    Partial Private Sub Onavl_id_cmn_comChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub Onavl_id_cmn_comChanged()
    End Sub
    Partial Private Sub Onavl_fec_jun_accChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub Onavl_fec_jun_accChanged()
    End Sub
    Partial Private Sub Onavl_notChanging(value As String)
    End Sub
    Partial Private Sub Onavl_notChanged()
    End Sub
    Partial Private Sub Onavl_mtoChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub Onavl_mtoChanged()
    End Sub
    Partial Private Sub Onavl_plzChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub Onavl_plzChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		Me._cli_cls = CType(Nothing, EntityRef(Of cli_cls))
		Me._cmn = CType(Nothing, EntityRef(Of cmn_cls))
		Me._cmn_cls = CType(Nothing, EntityRef(Of cmn_cls))
		Me._P_0025_cls = CType(Nothing, EntityRef(Of P_0025_cls))
		Me._P_0026_cls = CType(Nothing, EntityRef(Of P_0026_cls))
		Me._P_0027_cls = CType(Nothing, EntityRef(Of P_0027_cls))
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_id_avl", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property id_avl() As Integer
		Get
			Return Me._id_avl
		End Get
		Set
			If ((Me._id_avl = value)  _
						= false) Then
				Me.Onid_avlChanging(value)
				Me.SendPropertyChanging
				Me._id_avl = value
				Me.SendPropertyChanged("id_avl")
				Me.Onid_avlChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_cli_idc", DbType:="Char(12) NOT NULL", CanBeNull:=false)>  _
	Public Property cli_idc() As String
		Get
			Return Me._cli_idc
		End Get
		Set
			If (String.Equals(Me._cli_idc, value) = false) Then
				If Me._cli_cls.HasLoadedOrAssignedValue Then
					Throw New System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException()
				End If
				Me.Oncli_idcChanging(value)
				Me.SendPropertyChanging
				Me._cli_idc = value
				Me.SendPropertyChanged("cli_idc")
				Me.Oncli_idcChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_avl_ida", DbType:="Char(12) NOT NULL", CanBeNull:=false)>  _
	Public Property avl_ida() As String
		Get
			Return Me._avl_ida
		End Get
		Set
			If (String.Equals(Me._avl_ida, value) = false) Then
				Me.Onavl_idaChanging(value)
				Me.SendPropertyChanging
				Me._avl_ida = value
				Me.SendPropertyChanged("avl_ida")
				Me.Onavl_idaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_avl_dig_ito", DbType:="Char(1) NOT NULL")>  _
	Public Property avl_dig_ito() As Char
		Get
			Return Me._avl_dig_ito
		End Get
		Set
			If ((Me._avl_dig_ito = value)  _
						= false) Then
				Me.Onavl_dig_itoChanging(value)
				Me.SendPropertyChanging
				Me._avl_dig_ito = value
				Me.SendPropertyChanged("avl_dig_ito")
				Me.Onavl_dig_itoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_avl_nom", DbType:="VarChar(50)")>  _
	Public Property avl_nom() As String
		Get
			Return Me._avl_nom
		End Get
		Set
			If (String.Equals(Me._avl_nom, value) = false) Then
				Me.Onavl_nomChanging(value)
				Me.SendPropertyChanging
				Me._avl_nom = value
				Me.SendPropertyChanged("avl_nom")
				Me.Onavl_nomChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_avl_dml", DbType:="VarChar(50)")>  _
	Public Property avl_dml() As String
		Get
			Return Me._avl_dml
		End Get
		Set
			If (String.Equals(Me._avl_dml, value) = false) Then
				Me.Onavl_dmlChanging(value)
				Me.SendPropertyChanging
				Me._avl_dml = value
				Me.SendPropertyChanged("avl_dml")
				Me.Onavl_dmlChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_avl_id_cmn", DbType:="Int")>  _
	Public Property avl_id_cmn() As System.Nullable(Of Integer)
		Get
			Return Me._avl_id_cmn
		End Get
		Set
			If (Me._avl_id_cmn.Equals(value) = false) Then
				If Me._cmn.HasLoadedOrAssignedValue Then
					Throw New System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException()
				End If
				Me.Onavl_id_cmnChanging(value)
				Me.SendPropertyChanging
				Me._avl_id_cmn = value
				Me.SendPropertyChanged("avl_id_cmn")
				Me.Onavl_id_cmnChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_avl_ptm", DbType:="VarChar(50)")>  _
	Public Property avl_ptm() As String
		Get
			Return Me._avl_ptm
		End Get
		Set
			If (String.Equals(Me._avl_ptm, value) = false) Then
				Me.Onavl_ptmChanging(value)
				Me.SendPropertyChanging
				Me._avl_ptm = value
				Me.SendPropertyChanged("avl_ptm")
				Me.Onavl_ptmChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_avl_fec_est_sit", DbType:="DateTime")>  _
	Public Property avl_fec_est_sit() As System.Nullable(Of Date)
		Get
			Return Me._avl_fec_est_sit
		End Get
		Set
			If (Me._avl_fec_est_sit.Equals(value) = false) Then
				Me.Onavl_fec_est_sitChanging(value)
				Me.SendPropertyChanging
				Me._avl_fec_est_sit = value
				Me.SendPropertyChanged("avl_fec_est_sit")
				Me.Onavl_fec_est_sitChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_id_p_0025", DbType:="Int")>  _
	Public Property id_p_0025() As System.Nullable(Of Integer)
		Get
			Return Me._id_p_0025
		End Get
		Set
			If (Me._id_p_0025.Equals(value) = false) Then
				If Me._P_0025_cls.HasLoadedOrAssignedValue Then
					Throw New System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException()
				End If
				Me.Onid_p_0025Changing(value)
				Me.SendPropertyChanging
				Me._id_p_0025 = value
				Me.SendPropertyChanged("id_p_0025")
				Me.Onid_p_0025Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_id_p_0026", DbType:="Int")>  _
	Public Property id_p_0026() As System.Nullable(Of Integer)
		Get
			Return Me._id_p_0026
		End Get
		Set
			If (Me._id_p_0026.Equals(value) = false) Then
				If Me._P_0026_cls.HasLoadedOrAssignedValue Then
					Throw New System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException()
				End If
				Me.Onid_p_0026Changing(value)
				Me.SendPropertyChanging
				Me._id_p_0026 = value
				Me.SendPropertyChanged("id_p_0026")
				Me.Onid_p_0026Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_id_p_0027", DbType:="Int")>  _
	Public Property id_p_0027() As System.Nullable(Of Integer)
		Get
			Return Me._id_p_0027
		End Get
		Set
			If (Me._id_p_0027.Equals(value) = false) Then
				If Me._P_0027_cls.HasLoadedOrAssignedValue Then
					Throw New System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException()
				End If
				Me.Onid_p_0027Changing(value)
				Me.SendPropertyChanging
				Me._id_p_0027 = value
				Me.SendPropertyChanged("id_p_0027")
				Me.Onid_p_0027Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_avl_dml_com", DbType:="VarChar(50)")>  _
	Public Property avl_dml_com() As String
		Get
			Return Me._avl_dml_com
		End Get
		Set
			If (String.Equals(Me._avl_dml_com, value) = false) Then
				Me.Onavl_dml_comChanging(value)
				Me.SendPropertyChanging
				Me._avl_dml_com = value
				Me.SendPropertyChanged("avl_dml_com")
				Me.Onavl_dml_comChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pnu_avl_cmn_com", DbType:="VarChar(50)")>  _
	Public Property pnu_avl_cmn_com() As String
		Get
			Return Me._pnu_avl_cmn_com
		End Get
		Set
			If (String.Equals(Me._pnu_avl_cmn_com, value) = false) Then
				Me.Onpnu_avl_cmn_comChanging(value)
				Me.SendPropertyChanging
				Me._pnu_avl_cmn_com = value
				Me.SendPropertyChanged("pnu_avl_cmn_com")
				Me.Onpnu_avl_cmn_comChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_avl_id_cmn_com", DbType:="Int")>  _
	Public Property avl_id_cmn_com() As System.Nullable(Of Integer)
		Get
			Return Me._avl_id_cmn_com
		End Get
		Set
			If (Me._avl_id_cmn_com.Equals(value) = false) Then
				If Me._cmn_cls.HasLoadedOrAssignedValue Then
					Throw New System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException()
				End If
				Me.Onavl_id_cmn_comChanging(value)
				Me.SendPropertyChanging
				Me._avl_id_cmn_com = value
				Me.SendPropertyChanged("avl_id_cmn_com")
				Me.Onavl_id_cmn_comChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_avl_fec_jun_acc", DbType:="DateTime")>  _
	Public Property avl_fec_jun_acc() As System.Nullable(Of Date)
		Get
			Return Me._avl_fec_jun_acc
		End Get
		Set
			If (Me._avl_fec_jun_acc.Equals(value) = false) Then
				Me.Onavl_fec_jun_accChanging(value)
				Me.SendPropertyChanging
				Me._avl_fec_jun_acc = value
				Me.SendPropertyChanged("avl_fec_jun_acc")
				Me.Onavl_fec_jun_accChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_avl_not", DbType:="VarChar(20)")>  _
	Public Property avl_not() As String
		Get
			Return Me._avl_not
		End Get
		Set
			If (String.Equals(Me._avl_not, value) = false) Then
				Me.Onavl_notChanging(value)
				Me.SendPropertyChanging
				Me._avl_not = value
				Me.SendPropertyChanged("avl_not")
				Me.Onavl_notChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_avl_mto", DbType:="Decimal(12,0)")>  _
	Public Property avl_mto() As System.Nullable(Of Decimal)
		Get
			Return Me._avl_mto
		End Get
		Set
			If (Me._avl_mto.Equals(value) = false) Then
				Me.Onavl_mtoChanging(value)
				Me.SendPropertyChanging
				Me._avl_mto = value
				Me.SendPropertyChanged("avl_mto")
				Me.Onavl_mtoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_avl_plz", DbType:="Decimal(4,0)")>  _
	Public Property avl_plz() As System.Nullable(Of Decimal)
		Get
			Return Me._avl_plz
		End Get
		Set
			If (Me._avl_plz.Equals(value) = false) Then
				Me.Onavl_plzChanging(value)
				Me.SendPropertyChanging
				Me._avl_plz = value
				Me.SendPropertyChanged("avl_plz")
				Me.Onavl_plzChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="cli_cls_avl_cls", Storage:="_cli_cls", ThisKey:="cli_idc", OtherKey:="cli_idc", IsForeignKey:=true)>  _
	Public Property cli_cls() As cli_cls
		Get
			Return Me._cli_cls.Entity
		End Get
		Set
			Dim previousValue As cli_cls = Me._cli_cls.Entity
			If ((Object.Equals(previousValue, value) = false)  _
						OrElse (Me._cli_cls.HasLoadedOrAssignedValue = false)) Then
				Me.SendPropertyChanging
				If ((previousValue Is Nothing)  _
							= false) Then
					Me._cli_cls.Entity = Nothing
					previousValue.avl_cls.Remove(Me)
				End If
				Me._cli_cls.Entity = value
				If ((value Is Nothing)  _
							= false) Then
					value.avl_cls.Add(Me)
					Me._cli_idc = value.cli_idc
				Else
					Me._cli_idc = CType(Nothing, String)
				End If
				Me.SendPropertyChanged("cli_cls")
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="cmn_cls_avl_cls", Storage:="_cmn", ThisKey:="avl_id_cmn", OtherKey:="id_cmn", IsForeignKey:=true)>  _
	Public Property cmn() As cmn_cls
		Get
			Return Me._cmn.Entity
		End Get
		Set
			Dim previousValue As cmn_cls = Me._cmn.Entity
			If ((Object.Equals(previousValue, value) = false)  _
						OrElse (Me._cmn.HasLoadedOrAssignedValue = false)) Then
				Me.SendPropertyChanging
				If ((previousValue Is Nothing)  _
							= false) Then
					Me._cmn.Entity = Nothing
					previousValue.avl.Remove(Me)
				End If
				Me._cmn.Entity = value
				If ((value Is Nothing)  _
							= false) Then
					value.avl.Add(Me)
					Me._avl_id_cmn = value.id_cmn
				Else
					Me._avl_id_cmn = CType(Nothing, Nullable(Of Integer))
				End If
				Me.SendPropertyChanged("cmn")
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="cmn_cls_avl_cls1", Storage:="_cmn_cls", ThisKey:="avl_id_cmn_com", OtherKey:="id_cmn", IsForeignKey:=true)>  _
	Public Property cmn_cls() As cmn_cls
		Get
			Return Me._cmn_cls.Entity
		End Get
		Set
			Dim previousValue As cmn_cls = Me._cmn_cls.Entity
			If ((Object.Equals(previousValue, value) = false)  _
						OrElse (Me._cmn_cls.HasLoadedOrAssignedValue = false)) Then
				Me.SendPropertyChanging
				If ((previousValue Is Nothing)  _
							= false) Then
					Me._cmn_cls.Entity = Nothing
					previousValue.avl_cls.Remove(Me)
				End If
				Me._cmn_cls.Entity = value
				If ((value Is Nothing)  _
							= false) Then
					value.avl_cls.Add(Me)
					Me._avl_id_cmn_com = value.id_cmn
				Else
					Me._avl_id_cmn_com = CType(Nothing, Nullable(Of Integer))
				End If
				Me.SendPropertyChanged("cmn_cls")
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="P_0025_cls_avl_cls", Storage:="_P_0025_cls", ThisKey:="id_p_0025", OtherKey:="id_P_0025", IsForeignKey:=true)>  _
	Public Property P_0025_cls() As P_0025_cls
		Get
			Return Me._P_0025_cls.Entity
		End Get
		Set
			Dim previousValue As P_0025_cls = Me._P_0025_cls.Entity
			If ((Object.Equals(previousValue, value) = false)  _
						OrElse (Me._P_0025_cls.HasLoadedOrAssignedValue = false)) Then
				Me.SendPropertyChanging
				If ((previousValue Is Nothing)  _
							= false) Then
					Me._P_0025_cls.Entity = Nothing
					previousValue.avl_cls.Remove(Me)
				End If
				Me._P_0025_cls.Entity = value
				If ((value Is Nothing)  _
							= false) Then
					value.avl_cls.Add(Me)
					Me._id_p_0025 = value.id_P_0025
				Else
					Me._id_p_0025 = CType(Nothing, Nullable(Of Integer))
				End If
				Me.SendPropertyChanged("P_0025_cls")
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="P_0026_cls_avl_cls", Storage:="_P_0026_cls", ThisKey:="id_p_0026", OtherKey:="id_P_0026", IsForeignKey:=true)>  _
	Public Property P_0026_cls() As P_0026_cls
		Get
			Return Me._P_0026_cls.Entity
		End Get
		Set
			Dim previousValue As P_0026_cls = Me._P_0026_cls.Entity
			If ((Object.Equals(previousValue, value) = false)  _
						OrElse (Me._P_0026_cls.HasLoadedOrAssignedValue = false)) Then
				Me.SendPropertyChanging
				If ((previousValue Is Nothing)  _
							= false) Then
					Me._P_0026_cls.Entity = Nothing
					previousValue.avl_cls.Remove(Me)
				End If
				Me._P_0026_cls.Entity = value
				If ((value Is Nothing)  _
							= false) Then
					value.avl_cls.Add(Me)
					Me._id_p_0026 = value.id_P_0026
				Else
					Me._id_p_0026 = CType(Nothing, Nullable(Of Integer))
				End If
				Me.SendPropertyChanged("P_0026_cls")
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="P_0027_cls_avl_cls", Storage:="_P_0027_cls", ThisKey:="id_p_0027", OtherKey:="id_P_0027", IsForeignKey:=true)>  _
	Public Property P_0027_cls() As P_0027_cls
		Get
			Return Me._P_0027_cls.Entity
		End Get
		Set
			Dim previousValue As P_0027_cls = Me._P_0027_cls.Entity
			If ((Object.Equals(previousValue, value) = false)  _
						OrElse (Me._P_0027_cls.HasLoadedOrAssignedValue = false)) Then
				Me.SendPropertyChanging
				If ((previousValue Is Nothing)  _
							= false) Then
					Me._P_0027_cls.Entity = Nothing
					previousValue.avl_cls.Remove(Me)
				End If
				Me._P_0027_cls.Entity = value
				If ((value Is Nothing)  _
							= false) Then
					value.avl_cls.Add(Me)
					Me._id_p_0027 = value.id_P_0027
				Else
					Me._id_p_0027 = CType(Nothing, Nullable(Of Integer))
				End If
				Me.SendPropertyChanged("P_0027_cls")
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.bco")>  _
Partial Public Class bco_cls
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _id_bco As Integer
	
	Private _bco_des As String
	
	Private _chr_cls As EntitySet(Of chr_cls)
	
	Private _cli_cls As EntitySet(Of cli_cls)
	
	Private _dpo_cls As EntitySet(Of dpo_cls)
	
	Private _dsi_cls As EntitySet(Of dsi_cls)
	
	Private _nma_cls As EntitySet(Of nma_cls)
	
	Private _sbc_cls As EntitySet(Of sbc_cls)
	
    #Region "Definiciones de métodos de extensibilidad"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub Onid_bcoChanging(value As Integer)
    End Sub
    Partial Private Sub Onid_bcoChanged()
    End Sub
    Partial Private Sub Onbco_desChanging(value As String)
    End Sub
    Partial Private Sub Onbco_desChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		Me._chr_cls = New EntitySet(Of chr_cls)(AddressOf Me.attach_chr_cls, AddressOf Me.detach_chr_cls)
		Me._cli_cls = New EntitySet(Of cli_cls)(AddressOf Me.attach_cli_cls, AddressOf Me.detach_cli_cls)
		Me._dpo_cls = New EntitySet(Of dpo_cls)(AddressOf Me.attach_dpo_cls, AddressOf Me.detach_dpo_cls)
		Me._dsi_cls = New EntitySet(Of dsi_cls)(AddressOf Me.attach_dsi_cls, AddressOf Me.detach_dsi_cls)
		Me._nma_cls = New EntitySet(Of nma_cls)(AddressOf Me.attach_nma_cls, AddressOf Me.detach_nma_cls)
		Me._sbc_cls = New EntitySet(Of sbc_cls)(AddressOf Me.attach_sbc_cls, AddressOf Me.detach_sbc_cls)
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_id_bco", DbType:="Int NOT NULL", IsPrimaryKey:=true)>  _
	Public Property id_bco() As Integer
		Get
			Return Me._id_bco
		End Get
		Set
			If ((Me._id_bco = value)  _
						= false) Then
				Me.Onid_bcoChanging(value)
				Me.SendPropertyChanging
				Me._id_bco = value
				Me.SendPropertyChanged("id_bco")
				Me.Onid_bcoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_bco_des", DbType:="Char(50)")>  _
	Public Property bco_des() As String
		Get
			Return Me._bco_des
		End Get
		Set
			If (String.Equals(Me._bco_des, value) = false) Then
				Me.Onbco_desChanging(value)
				Me.SendPropertyChanging
				Me._bco_des = value
				Me.SendPropertyChanged("bco_des")
				Me.Onbco_desChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="bco_cls_chr_cls", Storage:="_chr_cls", ThisKey:="id_bco", OtherKey:="id_bco")>  _
	Public Property chr_cls() As EntitySet(Of chr_cls)
		Get
			Return Me._chr_cls
		End Get
		Set
			Me._chr_cls.Assign(value)
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="bco_cls_cli_cls", Storage:="_cli_cls", ThisKey:="id_bco", OtherKey:="id_bco")>  _
	Public Property cli_cls() As EntitySet(Of cli_cls)
		Get
			Return Me._cli_cls
		End Get
		Set
			Me._cli_cls.Assign(value)
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="bco_cls_dpo_cls", Storage:="_dpo_cls", ThisKey:="id_bco", OtherKey:="id_bco")>  _
	Public Property dpo_cls() As EntitySet(Of dpo_cls)
		Get
			Return Me._dpo_cls
		End Get
		Set
			Me._dpo_cls.Assign(value)
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="bco_cls_dsi_cls", Storage:="_dsi_cls", ThisKey:="id_bco", OtherKey:="id_bco")>  _
	Public Property dsi_cls() As EntitySet(Of dsi_cls)
		Get
			Return Me._dsi_cls
		End Get
		Set
			Me._dsi_cls.Assign(value)
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="bco_cls_nma_cls", Storage:="_nma_cls", ThisKey:="id_bco", OtherKey:="id_bco")>  _
	Public Property nma_cls() As EntitySet(Of nma_cls)
		Get
			Return Me._nma_cls
		End Get
		Set
			Me._nma_cls.Assign(value)
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="bco_cls_sbc_cls", Storage:="_sbc_cls", ThisKey:="id_bco", OtherKey:="id_bco")>  _
	Public Property sbc_cls() As EntitySet(Of sbc_cls)
		Get
			Return Me._sbc_cls
		End Get
		Set
			Me._sbc_cls.Assign(value)
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
	
	Private Sub attach_chr_cls(ByVal entity As chr_cls)
		Me.SendPropertyChanging
		entity.bco_cls = Me
	End Sub
	
	Private Sub detach_chr_cls(ByVal entity As chr_cls)
		Me.SendPropertyChanging
		entity.bco_cls = Nothing
	End Sub
	
	Private Sub attach_cli_cls(ByVal entity As cli_cls)
		Me.SendPropertyChanging
		entity.bco_cls = Me
	End Sub
	
	Private Sub detach_cli_cls(ByVal entity As cli_cls)
		Me.SendPropertyChanging
		entity.bco_cls = Nothing
	End Sub
	
	Private Sub attach_dpo_cls(ByVal entity As dpo_cls)
		Me.SendPropertyChanging
		entity.bco_cls = Me
	End Sub
	
	Private Sub detach_dpo_cls(ByVal entity As dpo_cls)
		Me.SendPropertyChanging
		entity.bco_cls = Nothing
	End Sub
	
	Private Sub attach_dsi_cls(ByVal entity As dsi_cls)
		Me.SendPropertyChanging
		entity.bco_cls = Me
	End Sub
	
	Private Sub detach_dsi_cls(ByVal entity As dsi_cls)
		Me.SendPropertyChanging
		entity.bco_cls = Nothing
	End Sub
	
	Private Sub attach_nma_cls(ByVal entity As nma_cls)
		Me.SendPropertyChanging
		entity.bco_cls = Me
	End Sub
	
	Private Sub detach_nma_cls(ByVal entity As nma_cls)
		Me.SendPropertyChanging
		entity.bco_cls = Nothing
	End Sub
	
	Private Sub attach_sbc_cls(ByVal entity As sbc_cls)
		Me.SendPropertyChanging
		entity.bco_cls = Me
	End Sub
	
	Private Sub detach_sbc_cls(ByVal entity As sbc_cls)
		Me.SendPropertyChanging
		entity.bco_cls = Nothing
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.ccf")>  _
Partial Public Class ccf_cls
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _id_ccf As Integer
	
	Private _ccf_des As String
	
	Private _ccf_est As Char
	
	Private _ccf_tip_apb As System.Nullable(Of Integer)
	
	Private _cfc_cls As EntitySet(Of cfc_cls)
	
	Private _cxs_cls As EntitySet(Of cxs_cls)
	
	Private _nnc_cls As EntitySet(Of nnc_cls)
	
	Private _frm_cls As EntitySet(Of frm_cls)
	
    #Region "Definiciones de métodos de extensibilidad"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub Onid_ccfChanging(value As Integer)
    End Sub
    Partial Private Sub Onid_ccfChanged()
    End Sub
    Partial Private Sub Onccf_desChanging(value As String)
    End Sub
    Partial Private Sub Onccf_desChanged()
    End Sub
    Partial Private Sub Onccf_estChanging(value As Char)
    End Sub
    Partial Private Sub Onccf_estChanged()
    End Sub
    Partial Private Sub Onccf_tip_apbChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub Onccf_tip_apbChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		Me._cfc_cls = New EntitySet(Of cfc_cls)(AddressOf Me.attach_cfc_cls, AddressOf Me.detach_cfc_cls)
		Me._cxs_cls = New EntitySet(Of cxs_cls)(AddressOf Me.attach_cxs_cls, AddressOf Me.detach_cxs_cls)
		Me._nnc_cls = New EntitySet(Of nnc_cls)(AddressOf Me.attach_nnc_cls, AddressOf Me.detach_nnc_cls)
		Me._frm_cls = New EntitySet(Of frm_cls)(AddressOf Me.attach_frm_cls, AddressOf Me.detach_frm_cls)
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_id_ccf", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property id_ccf() As Integer
		Get
			Return Me._id_ccf
		End Get
		Set
			If ((Me._id_ccf = value)  _
						= false) Then
				Me.Onid_ccfChanging(value)
				Me.SendPropertyChanging
				Me._id_ccf = value
				Me.SendPropertyChanged("id_ccf")
				Me.Onid_ccfChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ccf_des", DbType:="VarChar(50) NOT NULL", CanBeNull:=false)>  _
	Public Property ccf_des() As String
		Get
			Return Me._ccf_des
		End Get
		Set
			If (String.Equals(Me._ccf_des, value) = false) Then
				Me.Onccf_desChanging(value)
				Me.SendPropertyChanging
				Me._ccf_des = value
				Me.SendPropertyChanged("ccf_des")
				Me.Onccf_desChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ccf_est", DbType:="Char(1) NOT NULL")>  _
	Public Property ccf_est() As Char
		Get
			Return Me._ccf_est
		End Get
		Set
			If ((Me._ccf_est = value)  _
						= false) Then
				Me.Onccf_estChanging(value)
				Me.SendPropertyChanging
				Me._ccf_est = value
				Me.SendPropertyChanged("ccf_est")
				Me.Onccf_estChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ccf_tip_apb", DbType:="Int")>  _
	Public Property ccf_tip_apb() As System.Nullable(Of Integer)
		Get
			Return Me._ccf_tip_apb
		End Get
		Set
			If (Me._ccf_tip_apb.Equals(value) = false) Then
				Me.Onccf_tip_apbChanging(value)
				Me.SendPropertyChanging
				Me._ccf_tip_apb = value
				Me.SendPropertyChanged("ccf_tip_apb")
				Me.Onccf_tip_apbChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="ccf_cls_cfc_cls", Storage:="_cfc_cls", ThisKey:="id_ccf", OtherKey:="id_ccf")>  _
	Public Property cfc_cls() As EntitySet(Of cfc_cls)
		Get
			Return Me._cfc_cls
		End Get
		Set
			Me._cfc_cls.Assign(value)
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="ccf_cls_cxs_cls", Storage:="_cxs_cls", ThisKey:="id_ccf", OtherKey:="id_ccf")>  _
	Public Property cxs_cls() As EntitySet(Of cxs_cls)
		Get
			Return Me._cxs_cls
		End Get
		Set
			Me._cxs_cls.Assign(value)
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="ccf_cls_nnc_cls", Storage:="_nnc_cls", ThisKey:="id_ccf", OtherKey:="id_ccf")>  _
	Public Property nnc_cls() As EntitySet(Of nnc_cls)
		Get
			Return Me._nnc_cls
		End Get
		Set
			Me._nnc_cls.Assign(value)
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="ccf_cls_frm_cls", Storage:="_frm_cls", ThisKey:="id_ccf", OtherKey:="id_ccf")>  _
	Public Property frm_cls() As EntitySet(Of frm_cls)
		Get
			Return Me._frm_cls
		End Get
		Set
			Me._frm_cls.Assign(value)
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
	
	Private Sub attach_cfc_cls(ByVal entity As cfc_cls)
		Me.SendPropertyChanging
		entity.ccf_cls = Me
	End Sub
	
	Private Sub detach_cfc_cls(ByVal entity As cfc_cls)
		Me.SendPropertyChanging
		entity.ccf_cls = Nothing
	End Sub
	
	Private Sub attach_cxs_cls(ByVal entity As cxs_cls)
		Me.SendPropertyChanging
		entity.ccf_cls = Me
	End Sub
	
	Private Sub detach_cxs_cls(ByVal entity As cxs_cls)
		Me.SendPropertyChanging
		entity.ccf_cls = Nothing
	End Sub
	
	Private Sub attach_nnc_cls(ByVal entity As nnc_cls)
		Me.SendPropertyChanging
		entity.ccf_cls = Me
	End Sub
	
	Private Sub detach_nnc_cls(ByVal entity As nnc_cls)
		Me.SendPropertyChanging
		entity.ccf_cls = Nothing
	End Sub
	
	Private Sub attach_frm_cls(ByVal entity As frm_cls)
		Me.SendPropertyChanging
		entity.ccf_cls = Me
	End Sub
	
	Private Sub detach_frm_cls(ByVal entity As frm_cls)
		Me.SendPropertyChanging
		entity.ccf_cls = Nothing
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.cco")>  _
Partial Public Class cco_cls
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _id_cco As Integer
	
	Private _cco_num As String
	
	Private _cco_des As String
	
	Private _cco_pzo As System.Nullable(Of Integer)
	
	Private _cco_nvo_acc As String
	
	Private _cco_acc As String
	
	Private _cco_pri As System.Nullable(Of Integer)
	
	Private _cco_not_ges As String
	
	Private _cco_ges_son As System.Nullable(Of Char)
	
	Private _cco_pla_vto_ges As String
	
	Private _doc_cls As EntitySet(Of doc_cls)
	
	Private _gsn_cls As EntitySet(Of gsn_cls)
	
    #Region "Definiciones de métodos de extensibilidad"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub Onid_ccoChanging(value As Integer)
    End Sub
    Partial Private Sub Onid_ccoChanged()
    End Sub
    Partial Private Sub Oncco_numChanging(value As String)
    End Sub
    Partial Private Sub Oncco_numChanged()
    End Sub
    Partial Private Sub Oncco_desChanging(value As String)
    End Sub
    Partial Private Sub Oncco_desChanged()
    End Sub
    Partial Private Sub Oncco_pzoChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub Oncco_pzoChanged()
    End Sub
    Partial Private Sub Oncco_nvo_accChanging(value As String)
    End Sub
    Partial Private Sub Oncco_nvo_accChanged()
    End Sub
    Partial Private Sub Oncco_accChanging(value As String)
    End Sub
    Partial Private Sub Oncco_accChanged()
    End Sub
    Partial Private Sub Oncco_priChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub Oncco_priChanged()
    End Sub
    Partial Private Sub Oncco_not_gesChanging(value As String)
    End Sub
    Partial Private Sub Oncco_not_gesChanged()
    End Sub
    Partial Private Sub Oncco_ges_sonChanging(value As System.Nullable(Of Char))
    End Sub
    Partial Private Sub Oncco_ges_sonChanged()
    End Sub
    Partial Private Sub Oncco_pla_vto_gesChanging(value As String)
    End Sub
    Partial Private Sub Oncco_pla_vto_gesChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		Me._doc_cls = New EntitySet(Of doc_cls)(AddressOf Me.attach_doc_cls, AddressOf Me.detach_doc_cls)
		Me._gsn_cls = New EntitySet(Of gsn_cls)(AddressOf Me.attach_gsn_cls, AddressOf Me.detach_gsn_cls)
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_id_cco", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property id_cco() As Integer
		Get
			Return Me._id_cco
		End Get
		Set
			If ((Me._id_cco = value)  _
						= false) Then
				Me.Onid_ccoChanging(value)
				Me.SendPropertyChanging
				Me._id_cco = value
				Me.SendPropertyChanged("id_cco")
				Me.Onid_ccoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_cco_num", DbType:="VarChar(4) NOT NULL", CanBeNull:=false)>  _
	Public Property cco_num() As String
		Get
			Return Me._cco_num
		End Get
		Set
			If (String.Equals(Me._cco_num, value) = false) Then
				Me.Oncco_numChanging(value)
				Me.SendPropertyChanging
				Me._cco_num = value
				Me.SendPropertyChanged("cco_num")
				Me.Oncco_numChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_cco_des", DbType:="Char(50)")>  _
	Public Property cco_des() As String
		Get
			Return Me._cco_des
		End Get
		Set
			If (String.Equals(Me._cco_des, value) = false) Then
				Me.Oncco_desChanging(value)
				Me.SendPropertyChanging
				Me._cco_des = value
				Me.SendPropertyChanged("cco_des")
				Me.Oncco_desChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_cco_pzo", DbType:="Int")>  _
	Public Property cco_pzo() As System.Nullable(Of Integer)
		Get
			Return Me._cco_pzo
		End Get
		Set
			If (Me._cco_pzo.Equals(value) = false) Then
				Me.Oncco_pzoChanging(value)
				Me.SendPropertyChanging
				Me._cco_pzo = value
				Me.SendPropertyChanged("cco_pzo")
				Me.Oncco_pzoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_cco_nvo_acc", DbType:="Char(4)")>  _
	Public Property cco_nvo_acc() As String
		Get
			Return Me._cco_nvo_acc
		End Get
		Set
			If (String.Equals(Me._cco_nvo_acc, value) = false) Then
				Me.Oncco_nvo_accChanging(value)
				Me.SendPropertyChanging
				Me._cco_nvo_acc = value
				Me.SendPropertyChanged("cco_nvo_acc")
				Me.Oncco_nvo_accChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_cco_acc", DbType:="Char(50)")>  _
	Public Property cco_acc() As String
		Get
			Return Me._cco_acc
		End Get
		Set
			If (String.Equals(Me._cco_acc, value) = false) Then
				Me.Oncco_accChanging(value)
				Me.SendPropertyChanging
				Me._cco_acc = value
				Me.SendPropertyChanged("cco_acc")
				Me.Oncco_accChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_cco_pri", DbType:="Int")>  _
	Public Property cco_pri() As System.Nullable(Of Integer)
		Get
			Return Me._cco_pri
		End Get
		Set
			If (Me._cco_pri.Equals(value) = false) Then
				Me.Oncco_priChanging(value)
				Me.SendPropertyChanging
				Me._cco_pri = value
				Me.SendPropertyChanged("cco_pri")
				Me.Oncco_priChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_cco_not_ges", DbType:="VarChar(1)")>  _
	Public Property cco_not_ges() As String
		Get
			Return Me._cco_not_ges
		End Get
		Set
			If (String.Equals(Me._cco_not_ges, value) = false) Then
				Me.Oncco_not_gesChanging(value)
				Me.SendPropertyChanging
				Me._cco_not_ges = value
				Me.SendPropertyChanged("cco_not_ges")
				Me.Oncco_not_gesChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_cco_ges_son", DbType:="Char(1)")>  _
	Public Property cco_ges_son() As System.Nullable(Of Char)
		Get
			Return Me._cco_ges_son
		End Get
		Set
			If (Me._cco_ges_son.Equals(value) = false) Then
				Me.Oncco_ges_sonChanging(value)
				Me.SendPropertyChanging
				Me._cco_ges_son = value
				Me.SendPropertyChanged("cco_ges_son")
				Me.Oncco_ges_sonChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_cco_pla_vto_ges", DbType:="VarChar(1)")>  _
	Public Property cco_pla_vto_ges() As String
		Get
			Return Me._cco_pla_vto_ges
		End Get
		Set
			If (String.Equals(Me._cco_pla_vto_ges, value) = false) Then
				Me.Oncco_pla_vto_gesChanging(value)
				Me.SendPropertyChanging
				Me._cco_pla_vto_ges = value
				Me.SendPropertyChanged("cco_pla_vto_ges")
				Me.Oncco_pla_vto_gesChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="cco_cls_doc_cls", Storage:="_doc_cls", ThisKey:="id_cco", OtherKey:="id_cco")>  _
	Public Property doc_cls() As EntitySet(Of doc_cls)
		Get
			Return Me._doc_cls
		End Get
		Set
			Me._doc_cls.Assign(value)
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="cco_cls_gsn_cls", Storage:="_gsn_cls", ThisKey:="id_cco", OtherKey:="id_cco")>  _
	Public Property gsn_cls() As EntitySet(Of gsn_cls)
		Get
			Return Me._gsn_cls
		End Get
		Set
			Me._gsn_cls.Assign(value)
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
	
	Private Sub attach_doc_cls(ByVal entity As doc_cls)
		Me.SendPropertyChanging
		entity.cco_cls = Me
	End Sub
	
	Private Sub detach_doc_cls(ByVal entity As doc_cls)
		Me.SendPropertyChanging
		entity.cco_cls = Nothing
	End Sub
	
	Private Sub attach_gsn_cls(ByVal entity As gsn_cls)
		Me.SendPropertyChanging
		entity.cco_cls = Me
	End Sub
	
	Private Sub detach_gsn_cls(ByVal entity As gsn_cls)
		Me.SendPropertyChanging
		entity.cco_cls = Nothing
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.CDC")>  _
Partial Public Class CDC_cls
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _cli_idc As String
	
	Private _id_P_0023_fla As System.Nullable(Of Integer)
	
	Private _id_P_0023_com As System.Nullable(Of Integer)
	
	Private _cli_com_fla As System.Nullable(Of Decimal)
	
	Private _cli_com_min As System.Nullable(Of Decimal)
	
	Private _cli_com_max As System.Nullable(Of Decimal)
	
	Private _cli_por_com As System.Nullable(Of Decimal)
	
	Private _cli_cls As EntityRef(Of cli_cls)
	
    #Region "Definiciones de métodos de extensibilidad"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub Oncli_idcChanging(value As String)
    End Sub
    Partial Private Sub Oncli_idcChanged()
    End Sub
    Partial Private Sub Onid_P_0023_flaChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub Onid_P_0023_flaChanged()
    End Sub
    Partial Private Sub Onid_P_0023_comChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub Onid_P_0023_comChanged()
    End Sub
    Partial Private Sub Oncli_com_flaChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub Oncli_com_flaChanged()
    End Sub
    Partial Private Sub Oncli_com_minChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub Oncli_com_minChanged()
    End Sub
    Partial Private Sub Oncli_com_maxChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub Oncli_com_maxChanged()
    End Sub
    Partial Private Sub Oncli_por_comChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub Oncli_por_comChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		Me._cli_cls = CType(Nothing, EntityRef(Of cli_cls))
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_cli_idc", DbType:="Char(12) NOT NULL", CanBeNull:=false, IsPrimaryKey:=true)>  _
	Public Property cli_idc() As String
		Get
			Return Me._cli_idc
		End Get
		Set
			If (String.Equals(Me._cli_idc, value) = false) Then
				If Me._cli_cls.HasLoadedOrAssignedValue Then
					Throw New System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException()
				End If
				Me.Oncli_idcChanging(value)
				Me.SendPropertyChanging
				Me._cli_idc = value
				Me.SendPropertyChanged("cli_idc")
				Me.Oncli_idcChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_id_P_0023_fla", DbType:="Int")>  _
	Public Property id_P_0023_fla() As System.Nullable(Of Integer)
		Get
			Return Me._id_P_0023_fla
		End Get
		Set
			If (Me._id_P_0023_fla.Equals(value) = false) Then
				Me.Onid_P_0023_flaChanging(value)
				Me.SendPropertyChanging
				Me._id_P_0023_fla = value
				Me.SendPropertyChanged("id_P_0023_fla")
				Me.Onid_P_0023_flaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_id_P_0023_com", DbType:="Int")>  _
	Public Property id_P_0023_com() As System.Nullable(Of Integer)
		Get
			Return Me._id_P_0023_com
		End Get
		Set
			If (Me._id_P_0023_com.Equals(value) = false) Then
				Me.Onid_P_0023_comChanging(value)
				Me.SendPropertyChanging
				Me._id_P_0023_com = value
				Me.SendPropertyChanged("id_P_0023_com")
				Me.Onid_P_0023_comChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_cli_com_fla", DbType:="Money")>  _
	Public Property cli_com_fla() As System.Nullable(Of Decimal)
		Get
			Return Me._cli_com_fla
		End Get
		Set
			If (Me._cli_com_fla.Equals(value) = false) Then
				Me.Oncli_com_flaChanging(value)
				Me.SendPropertyChanging
				Me._cli_com_fla = value
				Me.SendPropertyChanged("cli_com_fla")
				Me.Oncli_com_flaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_cli_com_min", DbType:="Money")>  _
	Public Property cli_com_min() As System.Nullable(Of Decimal)
		Get
			Return Me._cli_com_min
		End Get
		Set
			If (Me._cli_com_min.Equals(value) = false) Then
				Me.Oncli_com_minChanging(value)
				Me.SendPropertyChanging
				Me._cli_com_min = value
				Me.SendPropertyChanged("cli_com_min")
				Me.Oncli_com_minChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_cli_com_max", DbType:="Money")>  _
	Public Property cli_com_max() As System.Nullable(Of Decimal)
		Get
			Return Me._cli_com_max
		End Get
		Set
			If (Me._cli_com_max.Equals(value) = false) Then
				Me.Oncli_com_maxChanging(value)
				Me.SendPropertyChanging
				Me._cli_com_max = value
				Me.SendPropertyChanged("cli_com_max")
				Me.Oncli_com_maxChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_cli_por_com", DbType:="Decimal(5,2)")>  _
	Public Property cli_por_com() As System.Nullable(Of Decimal)
		Get
			Return Me._cli_por_com
		End Get
		Set
			If (Me._cli_por_com.Equals(value) = false) Then
				Me.Oncli_por_comChanging(value)
				Me.SendPropertyChanging
				Me._cli_por_com = value
				Me.SendPropertyChanged("cli_por_com")
				Me.Oncli_por_comChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="cli_cls_CDC_cls", Storage:="_cli_cls", ThisKey:="cli_idc", OtherKey:="cli_idc", IsForeignKey:=true)>  _
	Public Property cli_cls() As cli_cls
		Get
			Return Me._cli_cls.Entity
		End Get
		Set
			Dim previousValue As cli_cls = Me._cli_cls.Entity
			If ((Object.Equals(previousValue, value) = false)  _
						OrElse (Me._cli_cls.HasLoadedOrAssignedValue = false)) Then
				Me.SendPropertyChanging
				If ((previousValue Is Nothing)  _
							= false) Then
					Me._cli_cls.Entity = Nothing
					previousValue.CDC_cls = Nothing
				End If
				Me._cli_cls.Entity = value
				If ((value Is Nothing)  _
							= false) Then
					value.CDC_cls = Me
					Me._cli_idc = value.cli_idc
				Else
					Me._cli_idc = CType(Nothing, String)
				End If
				Me.SendPropertyChanged("cli_cls")
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.cdn")>  _
Partial Public Class cdn_cls
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _id_cdn As Decimal
	
	Private _id_ope As Decimal
	
	Private _id_eje_ing As Integer
	
	Private _id_eje_apb As System.Nullable(Of Integer)
	
	Private _id_p_0111 As Integer
	
	Private _cdn_des As String
	
	Private _cdn_fec_ing As Date
	
	Private _cdn_fec_apb As System.Nullable(Of Date)
	
	Private _cdn_fec_com As System.Nullable(Of Date)
	
	Private _ope_cls As EntityRef(Of ope_cls)
	
	Private _p_0111_cls As EntityRef(Of p_0111_cls)
	
	Private _eje As EntityRef(Of eje_cls)
	
	Private _eje_cls As EntityRef(Of eje_cls)
	
    #Region "Definiciones de métodos de extensibilidad"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub Onid_cdnChanging(value As Decimal)
    End Sub
    Partial Private Sub Onid_cdnChanged()
    End Sub
    Partial Private Sub Onid_opeChanging(value As Decimal)
    End Sub
    Partial Private Sub Onid_opeChanged()
    End Sub
    Partial Private Sub Onid_eje_ingChanging(value As Integer)
    End Sub
    Partial Private Sub Onid_eje_ingChanged()
    End Sub
    Partial Private Sub Onid_eje_apbChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub Onid_eje_apbChanged()
    End Sub
    Partial Private Sub Onid_p_0111Changing(value As Integer)
    End Sub
    Partial Private Sub Onid_p_0111Changed()
    End Sub
    Partial Private Sub Oncdn_desChanging(value As String)
    End Sub
    Partial Private Sub Oncdn_desChanged()
    End Sub
    Partial Private Sub Oncdn_fec_ingChanging(value As Date)
    End Sub
    Partial Private Sub Oncdn_fec_ingChanged()
    End Sub
    Partial Private Sub Oncdn_fec_apbChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub Oncdn_fec_apbChanged()
    End Sub
    Partial Private Sub Oncdn_fec_comChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub Oncdn_fec_comChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		Me._ope_cls = CType(Nothing, EntityRef(Of ope_cls))
		Me._p_0111_cls = CType(Nothing, EntityRef(Of p_0111_cls))
		Me._eje = CType(Nothing, EntityRef(Of eje_cls))
		Me._eje_cls = CType(Nothing, EntityRef(Of eje_cls))
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_id_cdn", AutoSync:=AutoSync.OnInsert, DbType:="Decimal(10,0) NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property id_cdn() As Decimal
		Get
			Return Me._id_cdn
		End Get
		Set
			If ((Me._id_cdn = value)  _
						= false) Then
				Me.Onid_cdnChanging(value)
				Me.SendPropertyChanging
				Me._id_cdn = value
				Me.SendPropertyChanged("id_cdn")
				Me.Onid_cdnChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_id_ope", DbType:="Decimal(10,0) NOT NULL")>  _
	Public Property id_ope() As Decimal
		Get
			Return Me._id_ope
		End Get
		Set
			If ((Me._id_ope = value)  _
						= false) Then
				If Me._ope_cls.HasLoadedOrAssignedValue Then
					Throw New System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException()
				End If
				Me.Onid_opeChanging(value)
				Me.SendPropertyChanging
				Me._id_ope = value
				Me.SendPropertyChanged("id_ope")
				Me.Onid_opeChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_id_eje_ing", DbType:="Int NOT NULL")>  _
	Public Property id_eje_ing() As Integer
		Get
			Return Me._id_eje_ing
		End Get
		Set
			If ((Me._id_eje_ing = value)  _
						= false) Then
				If Me._eje_cls.HasLoadedOrAssignedValue Then
					Throw New System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException()
				End If
				Me.Onid_eje_ingChanging(value)
				Me.SendPropertyChanging
				Me._id_eje_ing = value
				Me.SendPropertyChanged("id_eje_ing")
				Me.Onid_eje_ingChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_id_eje_apb", DbType:="Int")>  _
	Public Property id_eje_apb() As System.Nullable(Of Integer)
		Get
			Return Me._id_eje_apb
		End Get
		Set
			If (Me._id_eje_apb.Equals(value) = false) Then
				If Me._eje.HasLoadedOrAssignedValue Then
					Throw New System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException()
				End If
				Me.Onid_eje_apbChanging(value)
				Me.SendPropertyChanging
				Me._id_eje_apb = value
				Me.SendPropertyChanged("id_eje_apb")
				Me.Onid_eje_apbChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_id_p_0111", DbType:="Int NOT NULL")>  _
	Public Property id_p_0111() As Integer
		Get
			Return Me._id_p_0111
		End Get
		Set
			If ((Me._id_p_0111 = value)  _
						= false) Then
				If Me._p_0111_cls.HasLoadedOrAssignedValue Then
					Throw New System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException()
				End If
				Me.Onid_p_0111Changing(value)
				Me.SendPropertyChanging
				Me._id_p_0111 = value
				Me.SendPropertyChanged("id_p_0111")
				Me.Onid_p_0111Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_cdn_des", DbType:="VarChar(100) NOT NULL", CanBeNull:=false)>  _
	Public Property cdn_des() As String
		Get
			Return Me._cdn_des
		End Get
		Set
			If (String.Equals(Me._cdn_des, value) = false) Then
				Me.Oncdn_desChanging(value)
				Me.SendPropertyChanging
				Me._cdn_des = value
				Me.SendPropertyChanged("cdn_des")
				Me.Oncdn_desChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_cdn_fec_ing", DbType:="DateTime NOT NULL")>  _
	Public Property cdn_fec_ing() As Date
		Get
			Return Me._cdn_fec_ing
		End Get
		Set
			If ((Me._cdn_fec_ing = value)  _
						= false) Then
				Me.Oncdn_fec_ingChanging(value)
				Me.SendPropertyChanging
				Me._cdn_fec_ing = value
				Me.SendPropertyChanged("cdn_fec_ing")
				Me.Oncdn_fec_ingChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_cdn_fec_apb", DbType:="DateTime")>  _
	Public Property cdn_fec_apb() As System.Nullable(Of Date)
		Get
			Return Me._cdn_fec_apb
		End Get
		Set
			If (Me._cdn_fec_apb.Equals(value) = false) Then
				Me.Oncdn_fec_apbChanging(value)
				Me.SendPropertyChanging
				Me._cdn_fec_apb = value
				Me.SendPropertyChanged("cdn_fec_apb")
				Me.Oncdn_fec_apbChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_cdn_fec_com", DbType:="DateTime")>  _
	Public Property cdn_fec_com() As System.Nullable(Of Date)
		Get
			Return Me._cdn_fec_com
		End Get
		Set
			If (Me._cdn_fec_com.Equals(value) = false) Then
				Me.Oncdn_fec_comChanging(value)
				Me.SendPropertyChanging
				Me._cdn_fec_com = value
				Me.SendPropertyChanged("cdn_fec_com")
				Me.Oncdn_fec_comChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="ope_cls_cdn_cls", Storage:="_ope_cls", ThisKey:="id_ope", OtherKey:="id_ope", IsForeignKey:=true)>  _
	Public Property ope_cls() As ope_cls
		Get
			Return Me._ope_cls.Entity
		End Get
		Set
			Dim previousValue As ope_cls = Me._ope_cls.Entity
			If ((Object.Equals(previousValue, value) = false)  _
						OrElse (Me._ope_cls.HasLoadedOrAssignedValue = false)) Then
				Me.SendPropertyChanging
				If ((previousValue Is Nothing)  _
							= false) Then
					Me._ope_cls.Entity = Nothing
					previousValue.cdn_cls.Remove(Me)
				End If
				Me._ope_cls.Entity = value
				If ((value Is Nothing)  _
							= false) Then
					value.cdn_cls.Add(Me)
					Me._id_ope = value.id_ope
				Else
					Me._id_ope = CType(Nothing, Decimal)
				End If
				Me.SendPropertyChanged("ope_cls")
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="p_0111_cls_cdn_cls", Storage:="_p_0111_cls", ThisKey:="id_p_0111", OtherKey:="id_p_0111", IsForeignKey:=true)>  _
	Public Property p_0111_cls() As p_0111_cls
		Get
			Return Me._p_0111_cls.Entity
		End Get
		Set
			Dim previousValue As p_0111_cls = Me._p_0111_cls.Entity
			If ((Object.Equals(previousValue, value) = false)  _
						OrElse (Me._p_0111_cls.HasLoadedOrAssignedValue = false)) Then
				Me.SendPropertyChanging
				If ((previousValue Is Nothing)  _
							= false) Then
					Me._p_0111_cls.Entity = Nothing
					previousValue.cdn_cls.Remove(Me)
				End If
				Me._p_0111_cls.Entity = value
				If ((value Is Nothing)  _
							= false) Then
					value.cdn_cls.Add(Me)
					Me._id_p_0111 = value.id_p_0111
				Else
					Me._id_p_0111 = CType(Nothing, Integer)
				End If
				Me.SendPropertyChanged("p_0111_cls")
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="eje_cls_cdn_cls", Storage:="_eje", ThisKey:="id_eje_apb", OtherKey:="id_eje", IsForeignKey:=true)>  _
	Public Property eje() As eje_cls
		Get
			Return Me._eje.Entity
		End Get
		Set
			Dim previousValue As eje_cls = Me._eje.Entity
			If ((Object.Equals(previousValue, value) = false)  _
						OrElse (Me._eje.HasLoadedOrAssignedValue = false)) Then
				Me.SendPropertyChanging
				If ((previousValue Is Nothing)  _
							= false) Then
					Me._eje.Entity = Nothing
					previousValue.cdn_cls.Remove(Me)
				End If
				Me._eje.Entity = value
				If ((value Is Nothing)  _
							= false) Then
					value.cdn_cls.Add(Me)
					Me._id_eje_apb = value.id_eje
				Else
					Me._id_eje_apb = CType(Nothing, Nullable(Of Integer))
				End If
				Me.SendPropertyChanged("eje")
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="eje_cls_cdn_cls1", Storage:="_eje_cls", ThisKey:="id_eje_ing", OtherKey:="id_eje", IsForeignKey:=true)>  _
	Public Property eje_cls() As eje_cls
		Get
			Return Me._eje_cls.Entity
		End Get
		Set
			Dim previousValue As eje_cls = Me._eje_cls.Entity
			If ((Object.Equals(previousValue, value) = false)  _
						OrElse (Me._eje_cls.HasLoadedOrAssignedValue = false)) Then
				Me.SendPropertyChanging
				If ((previousValue Is Nothing)  _
							= false) Then
					Me._eje_cls.Entity = Nothing
					previousValue.cdn_cls1.Remove(Me)
				End If
				Me._eje_cls.Entity = value
				If ((value Is Nothing)  _
							= false) Then
					value.cdn_cls1.Add(Me)
					Me._id_eje_ing = value.id_eje
				Else
					Me._id_eje_ing = CType(Nothing, Integer)
				End If
				Me.SendPropertyChanged("eje_cls")
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.cdp")>  _
Partial Public Class cdp_cls
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _id_cdp As Decimal
	
	Private _cdp_fec As Date
	
	Private _cdp_mto As Decimal
	
	Private _chr_cls As EntitySet(Of chr_cls)
	
	Private _ing_cls As EntitySet(Of ing_cls)
	
    #Region "Definiciones de métodos de extensibilidad"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub Onid_cdpChanging(value As Decimal)
    End Sub
    Partial Private Sub Onid_cdpChanged()
    End Sub
    Partial Private Sub Oncdp_fecChanging(value As Date)
    End Sub
    Partial Private Sub Oncdp_fecChanged()
    End Sub
    Partial Private Sub Oncdp_mtoChanging(value As Decimal)
    End Sub
    Partial Private Sub Oncdp_mtoChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		Me._chr_cls = New EntitySet(Of chr_cls)(AddressOf Me.attach_chr_cls, AddressOf Me.detach_chr_cls)
		Me._ing_cls = New EntitySet(Of ing_cls)(AddressOf Me.attach_ing_cls, AddressOf Me.detach_ing_cls)
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_id_cdp", AutoSync:=AutoSync.OnInsert, DbType:="Decimal(10,0) NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property id_cdp() As Decimal
		Get
			Return Me._id_cdp
		End Get
		Set
			If ((Me._id_cdp = value)  _
						= false) Then
				Me.Onid_cdpChanging(value)
				Me.SendPropertyChanging
				Me._id_cdp = value
				Me.SendPropertyChanged("id_cdp")
				Me.Onid_cdpChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_cdp_fec", DbType:="DateTime NOT NULL")>  _
	Public Property cdp_fec() As Date
		Get
			Return Me._cdp_fec
		End Get
		Set
			If ((Me._cdp_fec = value)  _
						= false) Then
				Me.Oncdp_fecChanging(value)
				Me.SendPropertyChanging
				Me._cdp_fec = value
				Me.SendPropertyChanged("cdp_fec")
				Me.Oncdp_fecChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_cdp_mto", DbType:="Money NOT NULL")>  _
	Public Property cdp_mto() As Decimal
		Get
			Return Me._cdp_mto
		End Get
		Set
			If ((Me._cdp_mto = value)  _
						= false) Then
				Me.Oncdp_mtoChanging(value)
				Me.SendPropertyChanging
				Me._cdp_mto = value
				Me.SendPropertyChanged("cdp_mto")
				Me.Oncdp_mtoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="cdp_cls_chr_cls", Storage:="_chr_cls", ThisKey:="id_cdp", OtherKey:="id_cdp")>  _
	Public Property chr_cls() As EntitySet(Of chr_cls)
		Get
			Return Me._chr_cls
		End Get
		Set
			Me._chr_cls.Assign(value)
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="cdp_cls_ing_cls", Storage:="_ing_cls", ThisKey:="id_cdp", OtherKey:="id_cdp")>  _
	Public Property ing_cls() As EntitySet(Of ing_cls)
		Get
			Return Me._ing_cls
		End Get
		Set
			Me._ing_cls.Assign(value)
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
	
	Private Sub attach_chr_cls(ByVal entity As chr_cls)
		Me.SendPropertyChanging
		entity.cdp_cls = Me
	End Sub
	
	Private Sub detach_chr_cls(ByVal entity As chr_cls)
		Me.SendPropertyChanging
		entity.cdp_cls = Nothing
	End Sub
	
	Private Sub attach_ing_cls(ByVal entity As ing_cls)
		Me.SendPropertyChanging
		entity.cdp_cls = Me
	End Sub
	
	Private Sub detach_ing_cls(ByVal entity As ing_cls)
		Me.SendPropertyChanging
		entity.cdp_cls = Nothing
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.cfc")>  _
Partial Public Class cfc_cls
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _id_ccf As Integer
	
	Private _id_cfc As Integer
	
	Private _id_P_0069 As Integer
	
	Private _cfc_des As String
	
	Private _cfc_dde As System.Nullable(Of Double)
	
	Private _cfc_hta As System.Nullable(Of Double)
	
	Private _cfc_obs As String
	
	Private _ccf_cls As EntityRef(Of ccf_cls)
	
	Private _P_0069_cls As EntityRef(Of P_0069_cls)
	
    #Region "Definiciones de métodos de extensibilidad"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub Onid_ccfChanging(value As Integer)
    End Sub
    Partial Private Sub Onid_ccfChanged()
    End Sub
    Partial Private Sub Onid_cfcChanging(value As Integer)
    End Sub
    Partial Private Sub Onid_cfcChanged()
    End Sub
    Partial Private Sub Onid_P_0069Changing(value As Integer)
    End Sub
    Partial Private Sub Onid_P_0069Changed()
    End Sub
    Partial Private Sub Oncfc_desChanging(value As String)
    End Sub
    Partial Private Sub Oncfc_desChanged()
    End Sub
    Partial Private Sub Oncfc_ddeChanging(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub Oncfc_ddeChanged()
    End Sub
    Partial Private Sub Oncfc_htaChanging(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub Oncfc_htaChanged()
    End Sub
    Partial Private Sub Oncfc_obsChanging(value As String)
    End Sub
    Partial Private Sub Oncfc_obsChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		Me._ccf_cls = CType(Nothing, EntityRef(Of ccf_cls))
		Me._P_0069_cls = CType(Nothing, EntityRef(Of P_0069_cls))
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_id_ccf", DbType:="Int NOT NULL")>  _
	Public Property id_ccf() As Integer
		Get
			Return Me._id_ccf
		End Get
		Set
			If ((Me._id_ccf = value)  _
						= false) Then
				If Me._ccf_cls.HasLoadedOrAssignedValue Then
					Throw New System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException()
				End If
				Me.Onid_ccfChanging(value)
				Me.SendPropertyChanging
				Me._id_ccf = value
				Me.SendPropertyChanged("id_ccf")
				Me.Onid_ccfChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_id_cfc", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property id_cfc() As Integer
		Get
			Return Me._id_cfc
		End Get
		Set
			If ((Me._id_cfc = value)  _
						= false) Then
				Me.Onid_cfcChanging(value)
				Me.SendPropertyChanging
				Me._id_cfc = value
				Me.SendPropertyChanged("id_cfc")
				Me.Onid_cfcChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_id_P_0069", DbType:="Int NOT NULL")>  _
	Public Property id_P_0069() As Integer
		Get
			Return Me._id_P_0069
		End Get
		Set
			If ((Me._id_P_0069 = value)  _
						= false) Then
				If Me._P_0069_cls.HasLoadedOrAssignedValue Then
					Throw New System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException()
				End If
				Me.Onid_P_0069Changing(value)
				Me.SendPropertyChanging
				Me._id_P_0069 = value
				Me.SendPropertyChanged("id_P_0069")
				Me.Onid_P_0069Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_cfc_des", DbType:="VarChar(50)")>  _
	Public Property cfc_des() As String
		Get
			Return Me._cfc_des
		End Get
		Set
			If (String.Equals(Me._cfc_des, value) = false) Then
				Me.Oncfc_desChanging(value)
				Me.SendPropertyChanging
				Me._cfc_des = value
				Me.SendPropertyChanged("cfc_des")
				Me.Oncfc_desChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_cfc_dde", DbType:="Float")>  _
	Public Property cfc_dde() As System.Nullable(Of Double)
		Get
			Return Me._cfc_dde
		End Get
		Set
			If (Me._cfc_dde.Equals(value) = false) Then
				Me.Oncfc_ddeChanging(value)
				Me.SendPropertyChanging
				Me._cfc_dde = value
				Me.SendPropertyChanged("cfc_dde")
				Me.Oncfc_ddeChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_cfc_hta", DbType:="Float")>  _
	Public Property cfc_hta() As System.Nullable(Of Double)
		Get
			Return Me._cfc_hta
		End Get
		Set
			If (Me._cfc_hta.Equals(value) = false) Then
				Me.Oncfc_htaChanging(value)
				Me.SendPropertyChanging
				Me._cfc_hta = value
				Me.SendPropertyChanged("cfc_hta")
				Me.Oncfc_htaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_cfc_obs", DbType:="VarChar(50)")>  _
	Public Property cfc_obs() As String
		Get
			Return Me._cfc_obs
		End Get
		Set
			If (String.Equals(Me._cfc_obs, value) = false) Then
				Me.Oncfc_obsChanging(value)
				Me.SendPropertyChanging
				Me._cfc_obs = value
				Me.SendPropertyChanged("cfc_obs")
				Me.Oncfc_obsChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="ccf_cls_cfc_cls", Storage:="_ccf_cls", ThisKey:="id_ccf", OtherKey:="id_ccf", IsForeignKey:=true)>  _
	Public Property ccf_cls() As ccf_cls
		Get
			Return Me._ccf_cls.Entity
		End Get
		Set
			Dim previousValue As ccf_cls = Me._ccf_cls.Entity
			If ((Object.Equals(previousValue, value) = false)  _
						OrElse (Me._ccf_cls.HasLoadedOrAssignedValue = false)) Then
				Me.SendPropertyChanging
				If ((previousValue Is Nothing)  _
							= false) Then
					Me._ccf_cls.Entity = Nothing
					previousValue.cfc_cls.Remove(Me)
				End If
				Me._ccf_cls.Entity = value
				If ((value Is Nothing)  _
							= false) Then
					value.cfc_cls.Add(Me)
					Me._id_ccf = value.id_ccf
				Else
					Me._id_ccf = CType(Nothing, Integer)
				End If
				Me.SendPropertyChanged("ccf_cls")
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="P_0069_cls_cfc_cls", Storage:="_P_0069_cls", ThisKey:="id_P_0069", OtherKey:="id_P_0069", IsForeignKey:=true)>  _
	Public Property P_0069_cls() As P_0069_cls
		Get
			Return Me._P_0069_cls.Entity
		End Get
		Set
			Dim previousValue As P_0069_cls = Me._P_0069_cls.Entity
			If ((Object.Equals(previousValue, value) = false)  _
						OrElse (Me._P_0069_cls.HasLoadedOrAssignedValue = false)) Then
				Me.SendPropertyChanging
				If ((previousValue Is Nothing)  _
							= false) Then
					Me._P_0069_cls.Entity = Nothing
					previousValue.cfc_cls.Remove(Me)
				End If
				Me._P_0069_cls.Entity = value
				If ((value Is Nothing)  _
							= false) Then
					value.cfc_cls.Add(Me)
					Me._id_P_0069 = value.id_P_0069
				Else
					Me._id_P_0069 = CType(Nothing, Integer)
				End If
				Me.SendPropertyChanged("P_0069_cls")
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.cfc_opo")>  _
Partial Public Class cfc_opo_cls
	
	Private _id_opo As Decimal
	
	Private _id_ccf As Integer
	
	Public Sub New()
		MyBase.New
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_id_opo", DbType:="Decimal(10,0) NOT NULL")>  _
	Public Property id_opo() As Decimal
		Get
			Return Me._id_opo
		End Get
		Set
			If ((Me._id_opo = value)  _
						= false) Then
				Me._id_opo = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_id_ccf", DbType:="Int NOT NULL")>  _
	Public Property id_ccf() As Integer
		Get
			Return Me._id_ccf
		End Get
		Set
			If ((Me._id_ccf = value)  _
						= false) Then
				Me._id_ccf = value
			End If
		End Set
	End Property
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.cft")>  _
Partial Public Class cft_cls
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _id_cft As Decimal
	
	Private _cli_idc As String
	
	Private _id_P_0060 As System.Nullable(Of Integer)
	
	Private _cft_fec_gen As Date
	
	Private _cft_num_fol As System.Nullable(Of Decimal)
	
	Private _cft_fec_emi As System.Nullable(Of Date)
	
	Private _cft_mto_nto As System.Nullable(Of Decimal)
	
	Private _cft_iva As System.Nullable(Of Decimal)
	
	Private _cft_mto_bto As System.Nullable(Of Decimal)
	
	Private _cft_nro_nma As System.Nullable(Of Decimal)
	
	Private _cft_fec_nma As System.Nullable(Of Date)
	
	Private _cft_pag_lmy As System.Nullable(Of Decimal)
	
	Private _fct_cls As EntitySet(Of fct_cls)
	
	Private _cli_cls As EntityRef(Of cli_cls)
	
	Private _P_0060_cls As EntityRef(Of P_0060_cls)
	
    #Region "Definiciones de métodos de extensibilidad"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub Onid_cftChanging(value As Decimal)
    End Sub
    Partial Private Sub Onid_cftChanged()
    End Sub
    Partial Private Sub Oncli_idcChanging(value As String)
    End Sub
    Partial Private Sub Oncli_idcChanged()
    End Sub
    Partial Private Sub Onid_P_0060Changing(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub Onid_P_0060Changed()
    End Sub
    Partial Private Sub Oncft_fec_genChanging(value As Date)
    End Sub
    Partial Private Sub Oncft_fec_genChanged()
    End Sub
    Partial Private Sub Oncft_num_folChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub Oncft_num_folChanged()
    End Sub
    Partial Private Sub Oncft_fec_emiChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub Oncft_fec_emiChanged()
    End Sub
    Partial Private Sub Oncft_mto_ntoChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub Oncft_mto_ntoChanged()
    End Sub
    Partial Private Sub Oncft_ivaChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub Oncft_ivaChanged()
    End Sub
    Partial Private Sub Oncft_mto_btoChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub Oncft_mto_btoChanged()
    End Sub
    Partial Private Sub Oncft_nro_nmaChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub Oncft_nro_nmaChanged()
    End Sub
    Partial Private Sub Oncft_fec_nmaChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub Oncft_fec_nmaChanged()
    End Sub
    Partial Private Sub Oncft_pag_lmyChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub Oncft_pag_lmyChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		Me._fct_cls = New EntitySet(Of fct_cls)(AddressOf Me.attach_fct_cls, AddressOf Me.detach_fct_cls)
		Me._cli_cls = CType(Nothing, EntityRef(Of cli_cls))
		Me._P_0060_cls = CType(Nothing, EntityRef(Of P_0060_cls))
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_id_cft", AutoSync:=AutoSync.OnInsert, DbType:="Decimal(10,0) NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property id_cft() As Decimal
		Get
			Return Me._id_cft
		End Get
		Set
			If ((Me._id_cft = value)  _
						= false) Then
				Me.Onid_cftChanging(value)
				Me.SendPropertyChanging
				Me._id_cft = value
				Me.SendPropertyChanged("id_cft")
				Me.Onid_cftChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_cli_idc", DbType:="Char(12) NOT NULL", CanBeNull:=false)>  _
	Public Property cli_idc() As String
		Get
			Return Me._cli_idc
		End Get
		Set
			If (String.Equals(Me._cli_idc, value) = false) Then
				If Me._cli_cls.HasLoadedOrAssignedValue Then
					Throw New System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException()
				End If
				Me.Oncli_idcChanging(value)
				Me.SendPropertyChanging
				Me._cli_idc = value
				Me.SendPropertyChanged("cli_idc")
				Me.Oncli_idcChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_id_P_0060", DbType:="Int")>  _
	Public Property id_P_0060() As System.Nullable(Of Integer)
		Get
			Return Me._id_P_0060
		End Get
		Set
			If (Me._id_P_0060.Equals(value) = false) Then
				If Me._P_0060_cls.HasLoadedOrAssignedValue Then
					Throw New System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException()
				End If
				Me.Onid_P_0060Changing(value)
				Me.SendPropertyChanging
				Me._id_P_0060 = value
				Me.SendPropertyChanged("id_P_0060")
				Me.Onid_P_0060Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_cft_fec_gen", DbType:="DateTime NOT NULL")>  _
	Public Property cft_fec_gen() As Date
		Get
			Return Me._cft_fec_gen
		End Get
		Set
			If ((Me._cft_fec_gen = value)  _
						= false) Then
				Me.Oncft_fec_genChanging(value)
				Me.SendPropertyChanging
				Me._cft_fec_gen = value
				Me.SendPropertyChanged("cft_fec_gen")
				Me.Oncft_fec_genChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_cft_num_fol", DbType:="Decimal(10,0)")>  _
	Public Property cft_num_fol() As System.Nullable(Of Decimal)
		Get
			Return Me._cft_num_fol
		End Get
		Set
			If (Me._cft_num_fol.Equals(value) = false) Then
				Me.Oncft_num_folChanging(value)
				Me.SendPropertyChanging
				Me._cft_num_fol = value
				Me.SendPropertyChanged("cft_num_fol")
				Me.Oncft_num_folChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_cft_fec_emi", DbType:="DateTime")>  _
	Public Property cft_fec_emi() As System.Nullable(Of Date)
		Get
			Return Me._cft_fec_emi
		End Get
		Set
			If (Me._cft_fec_emi.Equals(value) = false) Then
				Me.Oncft_fec_emiChanging(value)
				Me.SendPropertyChanging
				Me._cft_fec_emi = value
				Me.SendPropertyChanged("cft_fec_emi")
				Me.Oncft_fec_emiChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_cft_mto_nto", DbType:="Money")>  _
	Public Property cft_mto_nto() As System.Nullable(Of Decimal)
		Get
			Return Me._cft_mto_nto
		End Get
		Set
			If (Me._cft_mto_nto.Equals(value) = false) Then
				Me.Oncft_mto_ntoChanging(value)
				Me.SendPropertyChanging
				Me._cft_mto_nto = value
				Me.SendPropertyChanged("cft_mto_nto")
				Me.Oncft_mto_ntoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_cft_iva", DbType:="Money")>  _
	Public Property cft_iva() As System.Nullable(Of Decimal)
		Get
			Return Me._cft_iva
		End Get
		Set
			If (Me._cft_iva.Equals(value) = false) Then
				Me.Oncft_ivaChanging(value)
				Me.SendPropertyChanging
				Me._cft_iva = value
				Me.SendPropertyChanged("cft_iva")
				Me.Oncft_ivaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_cft_mto_bto", DbType:="Money")>  _
	Public Property cft_mto_bto() As System.Nullable(Of Decimal)
		Get
			Return Me._cft_mto_bto
		End Get
		Set
			If (Me._cft_mto_bto.Equals(value) = false) Then
				Me.Oncft_mto_btoChanging(value)
				Me.SendPropertyChanging
				Me._cft_mto_bto = value
				Me.SendPropertyChanged("cft_mto_bto")
				Me.Oncft_mto_btoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_cft_nro_nma", DbType:="Decimal(10,0)")>  _
	Public Property cft_nro_nma() As System.Nullable(Of Decimal)
		Get
			Return Me._cft_nro_nma
		End Get
		Set
			If (Me._cft_nro_nma.Equals(value) = false) Then
				Me.Oncft_nro_nmaChanging(value)
				Me.SendPropertyChanging
				Me._cft_nro_nma = value
				Me.SendPropertyChanged("cft_nro_nma")
				Me.Oncft_nro_nmaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_cft_fec_nma", DbType:="DateTime")>  _
	Public Property cft_fec_nma() As System.Nullable(Of Date)
		Get
			Return Me._cft_fec_nma
		End Get
		Set
			If (Me._cft_fec_nma.Equals(value) = false) Then
				Me.Oncft_fec_nmaChanging(value)
				Me.SendPropertyChanging
				Me._cft_fec_nma = value
				Me.SendPropertyChanged("cft_fec_nma")
				Me.Oncft_fec_nmaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_cft_pag_lmy", DbType:="Decimal(10,0)")>  _
	Public Property cft_pag_lmy() As System.Nullable(Of Decimal)
		Get
			Return Me._cft_pag_lmy
		End Get
		Set
			If (Me._cft_pag_lmy.Equals(value) = false) Then
				Me.Oncft_pag_lmyChanging(value)
				Me.SendPropertyChanging
				Me._cft_pag_lmy = value
				Me.SendPropertyChanged("cft_pag_lmy")
				Me.Oncft_pag_lmyChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="cft_cls_fct_cls", Storage:="_fct_cls", ThisKey:="id_cft", OtherKey:="id_cft")>  _
	Public Property fct_cls() As EntitySet(Of fct_cls)
		Get
			Return Me._fct_cls
		End Get
		Set
			Me._fct_cls.Assign(value)
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="cli_cls_cft_cls", Storage:="_cli_cls", ThisKey:="cli_idc", OtherKey:="cli_idc", IsForeignKey:=true)>  _
	Public Property cli_cls() As cli_cls
		Get
			Return Me._cli_cls.Entity
		End Get
		Set
			Dim previousValue As cli_cls = Me._cli_cls.Entity
			If ((Object.Equals(previousValue, value) = false)  _
						OrElse (Me._cli_cls.HasLoadedOrAssignedValue = false)) Then
				Me.SendPropertyChanging
				If ((previousValue Is Nothing)  _
							= false) Then
					Me._cli_cls.Entity = Nothing
					previousValue.cft_cls.Remove(Me)
				End If
				Me._cli_cls.Entity = value
				If ((value Is Nothing)  _
							= false) Then
					value.cft_cls.Add(Me)
					Me._cli_idc = value.cli_idc
				Else
					Me._cli_idc = CType(Nothing, String)
				End If
				Me.SendPropertyChanged("cli_cls")
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="P_0060_cls_cft_cls", Storage:="_P_0060_cls", ThisKey:="id_P_0060", OtherKey:="id_P_0060", IsForeignKey:=true)>  _
	Public Property P_0060_cls() As P_0060_cls
		Get
			Return Me._P_0060_cls.Entity
		End Get
		Set
			Dim previousValue As P_0060_cls = Me._P_0060_cls.Entity
			If ((Object.Equals(previousValue, value) = false)  _
						OrElse (Me._P_0060_cls.HasLoadedOrAssignedValue = false)) Then
				Me.SendPropertyChanging
				If ((previousValue Is Nothing)  _
							= false) Then
					Me._P_0060_cls.Entity = Nothing
					previousValue.cft_cls.Remove(Me)
				End If
				Me._P_0060_cls.Entity = value
				If ((value Is Nothing)  _
							= false) Then
					value.cft_cls.Add(Me)
					Me._id_P_0060 = value.id_P_0060
				Else
					Me._id_P_0060 = CType(Nothing, Nullable(Of Integer))
				End If
				Me.SendPropertyChanged("P_0060_cls")
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
	
	Private Sub attach_fct_cls(ByVal entity As fct_cls)
		Me.SendPropertyChanging
		entity.cft_cls = Me
	End Sub
	
	Private Sub detach_fct_cls(ByVal entity As fct_cls)
		Me.SendPropertyChanging
		entity.cft_cls = Nothing
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.chr")>  _
Partial Public Class chr_cls
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _id_chr As Decimal
	
	Private _id_PL_000047 As String
	
	Private _chr_num As Decimal
	
	Private _chr_mto As System.Nullable(Of Decimal)
	
	Private _chr_fev As System.Nullable(Of Date)
	
	Private _chr_fev_rea As System.Nullable(Of Date)
	
	Private _id_P_0112 As System.Nullable(Of Integer)
	
	Private _id_bco As System.Nullable(Of Integer)
	
	Private _cta_cte As String
	
	Private _id_P_0113 As System.Nullable(Of Integer)
	
	Private _id_ope As Integer
	
	Private _chr_cli_deu As String
	
	Private _chr_tip_cli As String
	
	Private _chr_tip As String
	
	Private _id_cdp As System.Nullable(Of Decimal)
	
	Private _Nchr_pld As EntitySet(Of Nchr_pld)
	
	Private _nrd_cls As EntitySet(Of nrd_cls)
	
	Private _bco_cls As EntityRef(Of bco_cls)
	
	Private _cdp_cls As EntityRef(Of cdp_cls)
	
	Private _P_0112_cls As EntityRef(Of P_0112_cls)
	
	Private _p_0113 As EntityRef(Of p_0113_cls)
	
	Private _PL_000047_cls As EntityRef(Of PL_000047_cls)
	
    #Region "Definiciones de métodos de extensibilidad"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub Onid_chrChanging(value As Decimal)
    End Sub
    Partial Private Sub Onid_chrChanged()
    End Sub
    Partial Private Sub Onid_PL_000047Changing(value As String)
    End Sub
    Partial Private Sub Onid_PL_000047Changed()
    End Sub
    Partial Private Sub Onchr_numChanging(value As Decimal)
    End Sub
    Partial Private Sub Onchr_numChanged()
    End Sub
    Partial Private Sub Onchr_mtoChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub Onchr_mtoChanged()
    End Sub
    Partial Private Sub Onchr_fevChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub Onchr_fevChanged()
    End Sub
    Partial Private Sub Onchr_fev_reaChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub Onchr_fev_reaChanged()
    End Sub
    Partial Private Sub Onid_P_0112Changing(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub Onid_P_0112Changed()
    End Sub
    Partial Private Sub Onid_bcoChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub Onid_bcoChanged()
    End Sub
    Partial Private Sub Oncta_cteChanging(value As String)
    End Sub
    Partial Private Sub Oncta_cteChanged()
    End Sub
    Partial Private Sub Onid_P_0113Changing(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub Onid_P_0113Changed()
    End Sub
    Partial Private Sub Onid_opeChanging(value As Integer)
    End Sub
    Partial Private Sub Onid_opeChanged()
    End Sub
    Partial Private Sub Onchr_cli_deuChanging(value As String)
    End Sub
    Partial Private Sub Onchr_cli_deuChanged()
    End Sub
    Partial Private Sub Onchr_tip_cliChanging(value As String)
    End Sub
    Partial Private Sub Onchr_tip_cliChanged()
    End Sub
    Partial Private Sub Onchr_tipChanging(value As String)
    End Sub
    Partial Private Sub Onchr_tipChanged()
    End Sub
    Partial Private Sub Onid_cdpChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub Onid_cdpChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		Me._Nchr_pld = New EntitySet(Of Nchr_pld)(AddressOf Me.attach_Nchr_pld, AddressOf Me.detach_Nchr_pld)
		Me._nrd_cls = New EntitySet(Of nrd_cls)(AddressOf Me.attach_nrd_cls, AddressOf Me.detach_nrd_cls)
		Me._bco_cls = CType(Nothing, EntityRef(Of bco_cls))
		Me._cdp_cls = CType(Nothing, EntityRef(Of cdp_cls))
		Me._P_0112_cls = CType(Nothing, EntityRef(Of P_0112_cls))
		Me._p_0113 = CType(Nothing, EntityRef(Of p_0113_cls))
		Me._PL_000047_cls = CType(Nothing, EntityRef(Of PL_000047_cls))
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_id_chr", AutoSync:=AutoSync.OnInsert, DbType:="Decimal(18,0) NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property id_chr() As Decimal
		Get
			Return Me._id_chr
		End Get
		Set
			If ((Me._id_chr = value)  _
						= false) Then
				Me.Onid_chrChanging(value)
				Me.SendPropertyChanging
				Me._id_chr = value
				Me.SendPropertyChanged("id_chr")
				Me.Onid_chrChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_id_PL_000047", DbType:="Char(6)")>  _
	Public Property id_PL_000047() As String
		Get
			Return Me._id_PL_000047
		End Get
		Set
			If (String.Equals(Me._id_PL_000047, value) = false) Then
				If Me._PL_000047_cls.HasLoadedOrAssignedValue Then
					Throw New System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException()
				End If
				Me.Onid_PL_000047Changing(value)
				Me.SendPropertyChanging
				Me._id_PL_000047 = value
				Me.SendPropertyChanged("id_PL_000047")
				Me.Onid_PL_000047Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_chr_num", DbType:="Decimal(10,0) NOT NULL")>  _
	Public Property chr_num() As Decimal
		Get
			Return Me._chr_num
		End Get
		Set
			If ((Me._chr_num = value)  _
						= false) Then
				Me.Onchr_numChanging(value)
				Me.SendPropertyChanging
				Me._chr_num = value
				Me.SendPropertyChanged("chr_num")
				Me.Onchr_numChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_chr_mto", DbType:="Money")>  _
	Public Property chr_mto() As System.Nullable(Of Decimal)
		Get
			Return Me._chr_mto
		End Get
		Set
			If (Me._chr_mto.Equals(value) = false) Then
				Me.Onchr_mtoChanging(value)
				Me.SendPropertyChanging
				Me._chr_mto = value
				Me.SendPropertyChanged("chr_mto")
				Me.Onchr_mtoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_chr_fev", DbType:="DateTime")>  _
	Public Property chr_fev() As System.Nullable(Of Date)
		Get
			Return Me._chr_fev
		End Get
		Set
			If (Me._chr_fev.Equals(value) = false) Then
				Me.Onchr_fevChanging(value)
				Me.SendPropertyChanging
				Me._chr_fev = value
				Me.SendPropertyChanged("chr_fev")
				Me.Onchr_fevChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_chr_fev_rea", DbType:="DateTime")>  _
	Public Property chr_fev_rea() As System.Nullable(Of Date)
		Get
			Return Me._chr_fev_rea
		End Get
		Set
			If (Me._chr_fev_rea.Equals(value) = false) Then
				Me.Onchr_fev_reaChanging(value)
				Me.SendPropertyChanging
				Me._chr_fev_rea = value
				Me.SendPropertyChanged("chr_fev_rea")
				Me.Onchr_fev_reaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_id_P_0112", DbType:="Int")>  _
	Public Property id_P_0112() As System.Nullable(Of Integer)
		Get
			Return Me._id_P_0112
		End Get
		Set
			If (Me._id_P_0112.Equals(value) = false) Then
				If Me._P_0112_cls.HasLoadedOrAssignedValue Then
					Throw New System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException()
				End If
				Me.Onid_P_0112Changing(value)
				Me.SendPropertyChanging
				Me._id_P_0112 = value
				Me.SendPropertyChanged("id_P_0112")
				Me.Onid_P_0112Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_id_bco", DbType:="Int")>  _
	Public Property id_bco() As System.Nullable(Of Integer)
		Get
			Return Me._id_bco
		End Get
		Set
			If (Me._id_bco.Equals(value) = false) Then
				If Me._bco_cls.HasLoadedOrAssignedValue Then
					Throw New System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException()
				End If
				Me.Onid_bcoChanging(value)
				Me.SendPropertyChanging
				Me._id_bco = value
				Me.SendPropertyChanged("id_bco")
				Me.Onid_bcoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_cta_cte", DbType:="VarChar(50)")>  _
	Public Property cta_cte() As String
		Get
			Return Me._cta_cte
		End Get
		Set
			If (String.Equals(Me._cta_cte, value) = false) Then
				Me.Oncta_cteChanging(value)
				Me.SendPropertyChanging
				Me._cta_cte = value
				Me.SendPropertyChanged("cta_cte")
				Me.Oncta_cteChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_id_P_0113", DbType:="Int")>  _
	Public Property id_P_0113() As System.Nullable(Of Integer)
		Get
			Return Me._id_P_0113
		End Get
		Set
			If (Me._id_P_0113.Equals(value) = false) Then
				If Me._p_0113.HasLoadedOrAssignedValue Then
					Throw New System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException()
				End If
				Me.Onid_P_0113Changing(value)
				Me.SendPropertyChanging
				Me._id_P_0113 = value
				Me.SendPropertyChanged("id_P_0113")
				Me.Onid_P_0113Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_id_ope", DbType:="Int NOT NULL")>  _
	Public Property id_ope() As Integer
		Get
			Return Me._id_ope
		End Get
		Set
			If ((Me._id_ope = value)  _
						= false) Then
				Me.Onid_opeChanging(value)
				Me.SendPropertyChanging
				Me._id_ope = value
				Me.SendPropertyChanged("id_ope")
				Me.Onid_opeChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_chr_cli_deu", DbType:="VarChar(12) NOT NULL", CanBeNull:=false)>  _
	Public Property chr_cli_deu() As String
		Get
			Return Me._chr_cli_deu
		End Get
		Set
			If (String.Equals(Me._chr_cli_deu, value) = false) Then
				Me.Onchr_cli_deuChanging(value)
				Me.SendPropertyChanging
				Me._chr_cli_deu = value
				Me.SendPropertyChanged("chr_cli_deu")
				Me.Onchr_cli_deuChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_chr_tip_cli", DbType:="VarChar(1) NOT NULL", CanBeNull:=false)>  _
	Public Property chr_tip_cli() As String
		Get
			Return Me._chr_tip_cli
		End Get
		Set
			If (String.Equals(Me._chr_tip_cli, value) = false) Then
				Me.Onchr_tip_cliChanging(value)
				Me.SendPropertyChanging
				Me._chr_tip_cli = value
				Me.SendPropertyChanged("chr_tip_cli")
				Me.Onchr_tip_cliChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_chr_tip", DbType:="VarChar(1)")>  _
	Public Property chr_tip() As String
		Get
			Return Me._chr_tip
		End Get
		Set
			If (String.Equals(Me._chr_tip, value) = false) Then
				Me.Onchr_tipChanging(value)
				Me.SendPropertyChanging
				Me._chr_tip = value
				Me.SendPropertyChanged("chr_tip")
				Me.Onchr_tipChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_id_cdp", DbType:="Decimal(10,0)")>  _
	Public Property id_cdp() As System.Nullable(Of Decimal)
		Get
			Return Me._id_cdp
		End Get
		Set
			If (Me._id_cdp.Equals(value) = false) Then
				If Me._cdp_cls.HasLoadedOrAssignedValue Then
					Throw New System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException()
				End If
				Me.Onid_cdpChanging(value)
				Me.SendPropertyChanging
				Me._id_cdp = value
				Me.SendPropertyChanged("id_cdp")
				Me.Onid_cdpChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="chr_cls_Nchr_pld", Storage:="_Nchr_pld", ThisKey:="id_chr", OtherKey:="id_chr")>  _
	Public Property Nchr_pld() As EntitySet(Of Nchr_pld)
		Get
			Return Me._Nchr_pld
		End Get
		Set
			Me._Nchr_pld.Assign(value)
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="chr_cls_nrd_cls", Storage:="_nrd_cls", ThisKey:="id_chr", OtherKey:="id_chr")>  _
	Public Property nrd_cls() As EntitySet(Of nrd_cls)
		Get
			Return Me._nrd_cls
		End Get
		Set
			Me._nrd_cls.Assign(value)
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="bco_cls_chr_cls", Storage:="_bco_cls", ThisKey:="id_bco", OtherKey:="id_bco", IsForeignKey:=true)>  _
	Public Property bco_cls() As bco_cls
		Get
			Return Me._bco_cls.Entity
		End Get
		Set
			Dim previousValue As bco_cls = Me._bco_cls.Entity
			If ((Object.Equals(previousValue, value) = false)  _
						OrElse (Me._bco_cls.HasLoadedOrAssignedValue = false)) Then
				Me.SendPropertyChanging
				If ((previousValue Is Nothing)  _
							= false) Then
					Me._bco_cls.Entity = Nothing
					previousValue.chr_cls.Remove(Me)
				End If
				Me._bco_cls.Entity = value
				If ((value Is Nothing)  _
							= false) Then
					value.chr_cls.Add(Me)
					Me._id_bco = value.id_bco
				Else
					Me._id_bco = CType(Nothing, Nullable(Of Integer))
				End If
				Me.SendPropertyChanged("bco_cls")
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="cdp_cls_chr_cls", Storage:="_cdp_cls", ThisKey:="id_cdp", OtherKey:="id_cdp", IsForeignKey:=true)>  _
	Public Property cdp_cls() As cdp_cls
		Get
			Return Me._cdp_cls.Entity
		End Get
		Set
			Dim previousValue As cdp_cls = Me._cdp_cls.Entity
			If ((Object.Equals(previousValue, value) = false)  _
						OrElse (Me._cdp_cls.HasLoadedOrAssignedValue = false)) Then
				Me.SendPropertyChanging
				If ((previousValue Is Nothing)  _
							= false) Then
					Me._cdp_cls.Entity = Nothing
					previousValue.chr_cls.Remove(Me)
				End If
				Me._cdp_cls.Entity = value
				If ((value Is Nothing)  _
							= false) Then
					value.chr_cls.Add(Me)
					Me._id_cdp = value.id_cdp
				Else
					Me._id_cdp = CType(Nothing, Nullable(Of Decimal))
				End If
				Me.SendPropertyChanged("cdp_cls")
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="P_0112_cls_chr_cls", Storage:="_P_0112_cls", ThisKey:="id_P_0112", OtherKey:="id_P_0112", IsForeignKey:=true)>  _
	Public Property P_0112_cls() As P_0112_cls
		Get
			Return Me._P_0112_cls.Entity
		End Get
		Set
			Dim previousValue As P_0112_cls = Me._P_0112_cls.Entity
			If ((Object.Equals(previousValue, value) = false)  _
						OrElse (Me._P_0112_cls.HasLoadedOrAssignedValue = false)) Then
				Me.SendPropertyChanging
				If ((previousValue Is Nothing)  _
							= false) Then
					Me._P_0112_cls.Entity = Nothing
					previousValue.chr_cls.Remove(Me)
				End If
				Me._P_0112_cls.Entity = value
				If ((value Is Nothing)  _
							= false) Then
					value.chr_cls.Add(Me)
					Me._id_P_0112 = value.id_P_0112
				Else
					Me._id_P_0112 = CType(Nothing, Nullable(Of Integer))
				End If
				Me.SendPropertyChanged("P_0112_cls")
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="p_0113_cls_chr_cls", Storage:="_p_0113", ThisKey:="id_P_0113", OtherKey:="id_p_0113", IsForeignKey:=true)>  _
	Public Property p_0113_cls() As p_0113_cls
		Get
			Return Me._p_0113.Entity
		End Get
		Set
			Dim previousValue As p_0113_cls = Me._p_0113.Entity
			If ((Object.Equals(previousValue, value) = false)  _
						OrElse (Me._p_0113.HasLoadedOrAssignedValue = false)) Then
				Me.SendPropertyChanging
				If ((previousValue Is Nothing)  _
							= false) Then
					Me._p_0113.Entity = Nothing
					previousValue.chr_cls.Remove(Me)
				End If
				Me._p_0113.Entity = value
				If ((value Is Nothing)  _
							= false) Then
					value.chr_cls.Add(Me)
					Me._id_P_0113 = value.id_p_0113
				Else
					Me._id_P_0113 = CType(Nothing, Nullable(Of Integer))
				End If
				Me.SendPropertyChanged("p_0113_cls")
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="PL_000047_cls_chr_cls", Storage:="_PL_000047_cls", ThisKey:="id_PL_000047", OtherKey:="id_PL_000047", IsForeignKey:=true)>  _
	Public Property PL_000047_cls() As PL_000047_cls
		Get
			Return Me._PL_000047_cls.Entity
		End Get
		Set
			Dim previousValue As PL_000047_cls = Me._PL_000047_cls.Entity
			If ((Object.Equals(previousValue, value) = false)  _
						OrElse (Me._PL_000047_cls.HasLoadedOrAssignedValue = false)) Then
				Me.SendPropertyChanging
				If ((previousValue Is Nothing)  _
							= false) Then
					Me._PL_000047_cls.Entity = Nothing
					previousValue.chr_cls.Remove(Me)
				End If
				Me._PL_000047_cls.Entity = value
				If ((value Is Nothing)  _
							= false) Then
					value.chr_cls.Add(Me)
					Me._id_PL_000047 = value.id_PL_000047
				Else
					Me._id_PL_000047 = CType(Nothing, String)
				End If
				Me.SendPropertyChanged("PL_000047_cls")
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
	
	Private Sub attach_Nchr_pld(ByVal entity As Nchr_pld)
		Me.SendPropertyChanging
		entity.chr_cls = Me
	End Sub
	
	Private Sub detach_Nchr_pld(ByVal entity As Nchr_pld)
		Me.SendPropertyChanging
		entity.chr_cls = Nothing
	End Sub
	
	Private Sub attach_nrd_cls(ByVal entity As nrd_cls)
		Me.SendPropertyChanging
		entity.chr_cls = Me
	End Sub
	
	Private Sub detach_nrd_cls(ByVal entity As nrd_cls)
		Me.SendPropertyChanging
		entity.chr_cls = Nothing
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.ciu")>  _
Partial Public Class ciu_cls
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _id_ciu As Integer
	
	Private _ciu_des As String
	
	Private _ciu_num_temporal As System.Nullable(Of Integer)
	
	Private _id_p_001 As System.Nullable(Of Integer)
	
	Private _pnu_cod_bco As String
	
	Private _CIU_EST As System.Nullable(Of Char)
	
	Private _cmn_cls As EntitySet(Of cmn_cls)
	
	Private _P_001_cls As EntityRef(Of P_001_cls)
	
    #Region "Definiciones de métodos de extensibilidad"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub Onid_ciuChanging(value As Integer)
    End Sub
    Partial Private Sub Onid_ciuChanged()
    End Sub
    Partial Private Sub Onciu_desChanging(value As String)
    End Sub
    Partial Private Sub Onciu_desChanged()
    End Sub
    Partial Private Sub Onciu_num_temporalChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub Onciu_num_temporalChanged()
    End Sub
    Partial Private Sub Onid_p_001Changing(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub Onid_p_001Changed()
    End Sub
    Partial Private Sub Onpnu_cod_bcoChanging(value As String)
    End Sub
    Partial Private Sub Onpnu_cod_bcoChanged()
    End Sub
    Partial Private Sub OnCIU_ESTChanging(value As System.Nullable(Of Char))
    End Sub
    Partial Private Sub OnCIU_ESTChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		Me._cmn_cls = New EntitySet(Of cmn_cls)(AddressOf Me.attach_cmn_cls, AddressOf Me.detach_cmn_cls)
		Me._P_001_cls = CType(Nothing, EntityRef(Of P_001_cls))
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_id_ciu", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property id_ciu() As Integer
		Get
			Return Me._id_ciu
		End Get
		Set
			If ((Me._id_ciu = value)  _
						= false) Then
				Me.Onid_ciuChanging(value)
				Me.SendPropertyChanging
				Me._id_ciu = value
				Me.SendPropertyChanged("id_ciu")
				Me.Onid_ciuChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ciu_des", DbType:="VarChar(50)")>  _
	Public Property ciu_des() As String
		Get
			Return Me._ciu_des
		End Get
		Set
			If (String.Equals(Me._ciu_des, value) = false) Then
				Me.Onciu_desChanging(value)
				Me.SendPropertyChanging
				Me._ciu_des = value
				Me.SendPropertyChanged("ciu_des")
				Me.Onciu_desChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ciu_num_temporal", DbType:="Int")>  _
	Public Property ciu_num_temporal() As System.Nullable(Of Integer)
		Get
			Return Me._ciu_num_temporal
		End Get
		Set
			If (Me._ciu_num_temporal.Equals(value) = false) Then
				Me.Onciu_num_temporalChanging(value)
				Me.SendPropertyChanging
				Me._ciu_num_temporal = value
				Me.SendPropertyChanged("ciu_num_temporal")
				Me.Onciu_num_temporalChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_id_p_001", DbType:="Int")>  _
	Public Property id_p_001() As System.Nullable(Of Integer)
		Get
			Return Me._id_p_001
		End Get
		Set
			If (Me._id_p_001.Equals(value) = false) Then
				If Me._P_001_cls.HasLoadedOrAssignedValue Then
					Throw New System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException()
				End If
				Me.Onid_p_001Changing(value)
				Me.SendPropertyChanging
				Me._id_p_001 = value
				Me.SendPropertyChanged("id_p_001")
				Me.Onid_p_001Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pnu_cod_bco", DbType:="VarChar(5)")>  _
	Public Property pnu_cod_bco() As String
		Get
			Return Me._pnu_cod_bco
		End Get
		Set
			If (String.Equals(Me._pnu_cod_bco, value) = false) Then
				Me.Onpnu_cod_bcoChanging(value)
				Me.SendPropertyChanging
				Me._pnu_cod_bco = value
				Me.SendPropertyChanged("pnu_cod_bco")
				Me.Onpnu_cod_bcoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CIU_EST", DbType:="Char(1)")>  _
	Public Property CIU_EST() As System.Nullable(Of Char)
		Get
			Return Me._CIU_EST
		End Get
		Set
			If (Me._CIU_EST.Equals(value) = false) Then
				Me.OnCIU_ESTChanging(value)
				Me.SendPropertyChanging
				Me._CIU_EST = value
				Me.SendPropertyChanged("CIU_EST")
				Me.OnCIU_ESTChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="ciu_cls_cmn_cls", Storage:="_cmn_cls", ThisKey:="id_ciu", OtherKey:="id_ciu")>  _
	Public Property cmn_cls() As EntitySet(Of cmn_cls)
		Get
			Return Me._cmn_cls
		End Get
		Set
			Me._cmn_cls.Assign(value)
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="P_001_cls_ciu_cls", Storage:="_P_001_cls", ThisKey:="id_p_001", OtherKey:="id_P_001", IsForeignKey:=true)>  _
	Public Property P_001_cls() As P_001_cls
		Get
			Return Me._P_001_cls.Entity
		End Get
		Set
			Dim previousValue As P_001_cls = Me._P_001_cls.Entity
			If ((Object.Equals(previousValue, value) = false)  _
						OrElse (Me._P_001_cls.HasLoadedOrAssignedValue = false)) Then
				Me.SendPropertyChanging
				If ((previousValue Is Nothing)  _
							= false) Then
					Me._P_001_cls.Entity = Nothing
					previousValue.ciu_cls.Remove(Me)
				End If
				Me._P_001_cls.Entity = value
				If ((value Is Nothing)  _
							= false) Then
					value.ciu_cls.Add(Me)
					Me._id_p_001 = value.id_P_001
				Else
					Me._id_p_001 = CType(Nothing, Nullable(Of Integer))
				End If
				Me.SendPropertyChanged("P_001_cls")
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
	
	Private Sub attach_cmn_cls(ByVal entity As cmn_cls)
		Me.SendPropertyChanging
		entity.ciu_cls = Me
	End Sub
	
	Private Sub detach_cmn_cls(ByVal entity As cmn_cls)
		Me.SendPropertyChanging
		entity.ciu_cls = Nothing
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.Ciu_Suc")>  _
Partial Public Class Ciu_Suc_cls
	
	Private _Id_Ciu As Integer
	
	Private _id_suc As Integer
	
	Public Sub New()
		MyBase.New
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Id_Ciu", DbType:="Int NOT NULL")>  _
	Public Property Id_Ciu() As Integer
		Get
			Return Me._Id_Ciu
		End Get
		Set
			If ((Me._Id_Ciu = value)  _
						= false) Then
				Me._Id_Ciu = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_id_suc", DbType:="Int NOT NULL")>  _
	Public Property id_suc() As Integer
		Get
			Return Me._id_suc
		End Get
		Set
			If ((Me._id_suc = value)  _
						= false) Then
				Me._id_suc = value
			End If
		End Set
	End Property
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.clf")>  _
Partial Public Class clf_cls
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _id_dsi As Decimal
	
	Private _cal_oto_gam As String
	
	Private _cal_obj_eti As String
	
	Private _cal_sub_jet As String
	
	Private _cal_arr_ast As String
	
	Private _cal_def_ini As String
	
	Private _cal_def_ini_old As String
	
	Private _cal_def_ini_old_mto As System.Nullable(Of Decimal)
	
	Private _cal_def_ini_fir As String
	
    #Region "Definiciones de métodos de extensibilidad"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub Onid_dsiChanging(value As Decimal)
    End Sub
    Partial Private Sub Onid_dsiChanged()
    End Sub
    Partial Private Sub Oncal_oto_gamChanging(value As String)
    End Sub
    Partial Private Sub Oncal_oto_gamChanged()
    End Sub
    Partial Private Sub Oncal_obj_etiChanging(value As String)
    End Sub
    Partial Private Sub Oncal_obj_etiChanged()
    End Sub
    Partial Private Sub Oncal_sub_jetChanging(value As String)
    End Sub
    Partial Private Sub Oncal_sub_jetChanged()
    End Sub
    Partial Private Sub Oncal_arr_astChanging(value As String)
    End Sub
    Partial Private Sub Oncal_arr_astChanged()
    End Sub
    Partial Private Sub Oncal_def_iniChanging(value As String)
    End Sub
    Partial Private Sub Oncal_def_iniChanged()
    End Sub
    Partial Private Sub Oncal_def_ini_oldChanging(value As String)
    End Sub
    Partial Private Sub Oncal_def_ini_oldChanged()
    End Sub
    Partial Private Sub Oncal_def_ini_old_mtoChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub Oncal_def_ini_old_mtoChanged()
    End Sub
    Partial Private Sub Oncal_def_ini_firChanging(value As String)
    End Sub
    Partial Private Sub Oncal_def_ini_firChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_id_dsi", DbType:="Decimal(18,0) NOT NULL", IsPrimaryKey:=true)>  _
	Public Property id_dsi() As Decimal
		Get
			Return Me._id_dsi
		End Get
		Set
			If ((Me._id_dsi = value)  _
						= false) Then
				Me.Onid_dsiChanging(value)
				Me.SendPropertyChanging
				Me._id_dsi = value
				Me.SendPropertyChanged("id_dsi")
				Me.Onid_dsiChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_cal_oto_gam", DbType:="Char(2)")>  _
	Public Property cal_oto_gam() As String
		Get
			Return Me._cal_oto_gam
		End Get
		Set
			If (String.Equals(Me._cal_oto_gam, value) = false) Then
				Me.Oncal_oto_gamChanging(value)
				Me.SendPropertyChanging
				Me._cal_oto_gam = value
				Me.SendPropertyChanged("cal_oto_gam")
				Me.Oncal_oto_gamChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_cal_obj_eti", DbType:="Char(2)")>  _
	Public Property cal_obj_eti() As String
		Get
			Return Me._cal_obj_eti
		End Get
		Set
			If (String.Equals(Me._cal_obj_eti, value) = false) Then
				Me.Oncal_obj_etiChanging(value)
				Me.SendPropertyChanging
				Me._cal_obj_eti = value
				Me.SendPropertyChanged("cal_obj_eti")
				Me.Oncal_obj_etiChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_cal_sub_jet", DbType:="Char(2)")>  _
	Public Property cal_sub_jet() As String
		Get
			Return Me._cal_sub_jet
		End Get
		Set
			If (String.Equals(Me._cal_sub_jet, value) = false) Then
				Me.Oncal_sub_jetChanging(value)
				Me.SendPropertyChanging
				Me._cal_sub_jet = value
				Me.SendPropertyChanged("cal_sub_jet")
				Me.Oncal_sub_jetChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_cal_arr_ast", DbType:="Char(2)")>  _
	Public Property cal_arr_ast() As String
		Get
			Return Me._cal_arr_ast
		End Get
		Set
			If (String.Equals(Me._cal_arr_ast, value) = false) Then
				Me.Oncal_arr_astChanging(value)
				Me.SendPropertyChanging
				Me._cal_arr_ast = value
				Me.SendPropertyChanged("cal_arr_ast")
				Me.Oncal_arr_astChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_cal_def_ini", DbType:="Char(2)")>  _
	Public Property cal_def_ini() As String
		Get
			Return Me._cal_def_ini
		End Get
		Set
			If (String.Equals(Me._cal_def_ini, value) = false) Then
				Me.Oncal_def_iniChanging(value)
				Me.SendPropertyChanging
				Me._cal_def_ini = value
				Me.SendPropertyChanged("cal_def_ini")
				Me.Oncal_def_iniChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_cal_def_ini_old", DbType:="VarChar(2)")>  _
	Public Property cal_def_ini_old() As String
		Get
			Return Me._cal_def_ini_old
		End Get
		Set
			If (String.Equals(Me._cal_def_ini_old, value) = false) Then
				Me.Oncal_def_ini_oldChanging(value)
				Me.SendPropertyChanging
				Me._cal_def_ini_old = value
				Me.SendPropertyChanged("cal_def_ini_old")
				Me.Oncal_def_ini_oldChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_cal_def_ini_old_mto", DbType:="Money")>  _
	Public Property cal_def_ini_old_mto() As System.Nullable(Of Decimal)
		Get
			Return Me._cal_def_ini_old_mto
		End Get
		Set
			If (Me._cal_def_ini_old_mto.Equals(value) = false) Then
				Me.Oncal_def_ini_old_mtoChanging(value)
				Me.SendPropertyChanging
				Me._cal_def_ini_old_mto = value
				Me.SendPropertyChanged("cal_def_ini_old_mto")
				Me.Oncal_def_ini_old_mtoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_cal_def_ini_fir", DbType:="VarChar(2)")>  _
	Public Property cal_def_ini_fir() As String
		Get
			Return Me._cal_def_ini_fir
		End Get
		Set
			If (String.Equals(Me._cal_def_ini_fir, value) = false) Then
				Me.Oncal_def_ini_firChanging(value)
				Me.SendPropertyChanging
				Me._cal_def_ini_fir = value
				Me.SendPropertyChanged("cal_def_ini_fir")
				Me.Oncal_def_ini_firChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.cli")>  _
Partial Public Class cli_cls
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _cli_idc As String
	
	Private _id_P_0044 As System.Nullable(Of Integer)
	
	Private _id_P_007 As System.Nullable(Of Integer)
	
	Private _id_P_008 As System.Nullable(Of Integer)
	
	Private _id_P_0058 As System.Nullable(Of Integer)
	
	Private _id_P_0064 As System.Nullable(Of Integer)
	
	Private _id_P_0067 As System.Nullable(Of Integer)
	
	Private _id_P_0068 As System.Nullable(Of Integer)
	
	Private _id_P_0076 As System.Nullable(Of Integer)
	
	Private _id_PL_000006 As String
	
	Private _id_PL_000066 As String
	
	Private _id_eje_cod_eje As System.Nullable(Of Integer)
	
	Private _id_eje_cod_cob As System.Nullable(Of Integer)
	
	Private _id_suc As System.Nullable(Of Integer)
	
	Private _id_cmn As System.Nullable(Of Integer)
	
	Private _id_bco As System.Nullable(Of Integer)
	
	Private _id_crt As System.Nullable(Of Integer)
	
	Private _cli_dig_ito As System.Nullable(Of Char)
	
	Private _cli_bci_flg As System.Nullable(Of Char)
	
	Private _cli_rso As String
	
	Private _cli_ape_ptn As String
	
	Private _cli_ape_mtn As String
	
	Private _cli_fec_nac As System.Nullable(Of Date)
	
	Private _cli_sex As System.Nullable(Of Char)
	
	Private _cli_dml As String
	
	Private _cli_cod_pot As String
	
	Private _cli_ema As String
	
	Private _cli_fec_ini_ope As System.Nullable(Of Date)
	
	Private _cli_fec_ult_ope As System.Nullable(Of Date)
	
	Private _cli_fec_est As System.Nullable(Of Date)
	
	Private _cli_cbz As System.Nullable(Of Char)
	
	Private _cli_tas_mor As System.Nullable(Of Decimal)
	
	Private _cli_con_cbz As System.Nullable(Of Char)
	
	Private _cli_eje_bci As String
	
	Private _cli_eje_anx As System.Nullable(Of Decimal)
	
	Private _cli_eje_ofc As String
	
	Private _cli_fec_act_eje As System.Nullable(Of Date)
	
	Private _cli_fec_cre As System.Nullable(Of Date)
	
	Private _cli_snf As String
	
	Private _cli_tas_mor_aux As System.Nullable(Of Decimal)
	
	Private _cli_cob_ant As System.Nullable(Of Char)
	
	Private _cli_spr_ead_col As System.Nullable(Of Decimal)
	
	Private _cli_bys_des As String
	
	Private _cli_ope_ptl As System.Nullable(Of Integer)
	
	Private _id_p_0118 As System.Nullable(Of Integer)
	
	Private _cli_cod_tmp As String
	
	Private _cli_nro_cli As String
	
	Private _id_P_0313 As System.Nullable(Of Integer)
	
	Private _cli_dia_bas As System.Nullable(Of Char)
	
	Private _cli_cod_ges As String
	
	Private _id_P_0119 As System.Nullable(Of Integer)
	
	Private _CLI_TIP_TAS As System.Nullable(Of Char)
	
	Private _apl_cls As EntitySet(Of apl_cls)
	
	Private _avl_cls As EntitySet(Of avl_cls)
	
	Private _CDC_cls As EntityRef(Of CDC_cls)
	
	Private _cft_cls As EntitySet(Of cft_cls)
	
	Private _cnc_cls As EntitySet(Of cnc_cls)
	
	Private _con_cls As EntitySet(Of con_cls)
	
	Private _cxc_cls As EntitySet(Of cxc_cls)
	
	Private _cxp_cls As EntitySet(Of cxp_cls)
	
	Private _ddr_cls As EntitySet(Of ddr_cls)
	
	Private _dpa_cls As EntitySet(Of dpa_cls)
	
	Private _dsb_cls As EntitySet(Of dsb_cls)
	
	Private _dvf_cls As EntitySet(Of dvf_cls)
	
	Private _egr_cls As EntitySet(Of egr_cls)
	
	Private _emp_cls As EntitySet(Of emp_cls)
	
	Private _eva_cls As EntitySet(Of eva_cls)
	
	Private _fdd_cls As EntitySet(Of fdd_cls)
	
	Private _GDC_cls As EntitySet(Of GDC_cls)
	
	Private _ing_sec_cls As EntitySet(Of ing_sec_cls)
	
	Private _ldc_cls As EntitySet(Of ldc_cls)
	
	Private _nbc_cls As EntitySet(Of nbc_cls)
	
	Private _nce_cls As EntitySet(Of nce_cls)
	
	Private _org_cls As EntitySet(Of org_cls)
	
	Private _pgr_cls As EntitySet(Of pgr_cls)
	
	Private _rsc_cls As EntitySet(Of rsc_cls)
	
	Private _spg_cls As EntitySet(Of spg_cls)
	
	Private _vst_cls As EntitySet(Of vst_cls)
	
	Private _bco_cls As EntityRef(Of bco_cls)
	
	Private _cmn_cls As EntityRef(Of cmn_cls)
	
	Private _crt_cls As EntityRef(Of crt_cls)
	
	Private _P_0044_cls As EntityRef(Of P_0044_cls)
	
	Private _P_0058_cls As EntityRef(Of P_0058_cls)
	
	Private _P_0064_cls As EntityRef(Of P_0064_cls)
	
	Private _P_0067_cls As EntityRef(Of P_0067_cls)
	
	Private _P_0068_cls As EntityRef(Of P_0068_cls)
	
	Private _P_007_cls As EntityRef(Of P_007_cls)
	
	Private _P_0076_cls As EntityRef(Of P_0076_cls)
	
	Private _P_008_cls As EntityRef(Of P_008_cls)
	
	Private _P_0118_cls As EntityRef(Of P_0118_cls)
	
	Private _P_0119_cls As EntityRef(Of P_0119_cls)
	
	Private _P_0313_cls As EntityRef(Of P_0313_cls)
	
	Private _PL_000006_cls As EntityRef(Of PL_000006_cls)
	
	Private _PL_000066_cls As EntityRef(Of PL_000066_cls)
	
	Private _suc_cls As EntityRef(Of suc_cls)
	
	Private _eje As EntityRef(Of eje_cls)
	
	Private _eje_cls As EntityRef(Of eje_cls)
	
    #Region "Definiciones de métodos de extensibilidad"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub Oncli_idcChanging(value As String)
    End Sub
    Partial Private Sub Oncli_idcChanged()
    End Sub
    Partial Private Sub Onid_P_0044Changing(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub Onid_P_0044Changed()
    End Sub
    Partial Private Sub Onid_P_007Changing(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub Onid_P_007Changed()
    End Sub
    Partial Private Sub Onid_P_008Changing(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub Onid_P_008Changed()
    End Sub
    Partial Private Sub Onid_P_0058Changing(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub Onid_P_0058Changed()
    End Sub
    Partial Private Sub Onid_P_0064Changing(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub Onid_P_0064Changed()
    End Sub
    Partial Private Sub Onid_P_0067Changing(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub Onid_P_0067Changed()
    End Sub
    Partial Private Sub Onid_P_0068Changing(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub Onid_P_0068Changed()
    End Sub
    Partial Private Sub Onid_P_0076Changing(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub Onid_P_0076Changed()
    End Sub
    Partial Private Sub Onid_PL_000006Changing(value As String)
    End Sub
    Partial Private Sub Onid_PL_000006Changed()
    End Sub
    Partial Private Sub Onid_PL_000066Changing(value As String)
    End Sub
    Partial Private Sub Onid_PL_000066Changed()
    End Sub
    Partial Private Sub Onid_eje_cod_ejeChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub Onid_eje_cod_ejeChanged()
    End Sub
    Partial Private Sub Onid_eje_cod_cobChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub Onid_eje_cod_cobChanged()
    End Sub
    Partial Private Sub Onid_sucChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub Onid_sucChanged()
    End Sub
    Partial Private Sub Onid_cmnChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub Onid_cmnChanged()
    End Sub
    Partial Private Sub Onid_bcoChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub Onid_bcoChanged()
    End Sub
    Partial Private Sub Onid_crtChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub Onid_crtChanged()
    End Sub
    Partial Private Sub Oncli_dig_itoChanging(value As System.Nullable(Of Char))
    End Sub
    Partial Private Sub Oncli_dig_itoChanged()
    End Sub
    Partial Private Sub Oncli_bci_flgChanging(value As System.Nullable(Of Char))
    End Sub
    Partial Private Sub Oncli_bci_flgChanged()
    End Sub
    Partial Private Sub Oncli_rsoChanging(value As String)
    End Sub
    Partial Private Sub Oncli_rsoChanged()
    End Sub
    Partial Private Sub Oncli_ape_ptnChanging(value As String)
    End Sub
    Partial Private Sub Oncli_ape_ptnChanged()
    End Sub
    Partial Private Sub Oncli_ape_mtnChanging(value As String)
    End Sub
    Partial Private Sub Oncli_ape_mtnChanged()
    End Sub
    Partial Private Sub Oncli_fec_nacChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub Oncli_fec_nacChanged()
    End Sub
    Partial Private Sub Oncli_sexChanging(value As System.Nullable(Of Char))
    End Sub
    Partial Private Sub Oncli_sexChanged()
    End Sub
    Partial Private Sub Oncli_dmlChanging(value As String)
    End Sub
    Partial Private Sub Oncli_dmlChanged()
    End Sub
    Partial Private Sub Oncli_cod_potChanging(value As String)
    End Sub
    Partial Private Sub Oncli_cod_potChanged()
    End Sub
    Partial Private Sub Oncli_emaChanging(value As String)
    End Sub
    Partial Private Sub Oncli_emaChanged()
    End Sub
    Partial Private Sub Oncli_fec_ini_opeChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub Oncli_fec_ini_opeChanged()
    End Sub
    Partial Private Sub Oncli_fec_ult_opeChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub Oncli_fec_ult_opeChanged()
    End Sub
    Partial Private Sub Oncli_fec_estChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub Oncli_fec_estChanged()
    End Sub
    Partial Private Sub Oncli_cbzChanging(value As System.Nullable(Of Char))
    End Sub
    Partial Private Sub Oncli_cbzChanged()
    End Sub
    Partial Private Sub Oncli_tas_morChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub Oncli_tas_morChanged()
    End Sub
    Partial Private Sub Oncli_con_cbzChanging(value As System.Nullable(Of Char))
    End Sub
    Partial Private Sub Oncli_con_cbzChanged()
    End Sub
    Partial Private Sub Oncli_eje_bciChanging(value As String)
    End Sub
    Partial Private Sub Oncli_eje_bciChanged()
    End Sub
    Partial Private Sub Oncli_eje_anxChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub Oncli_eje_anxChanged()
    End Sub
    Partial Private Sub Oncli_eje_ofcChanging(value As String)
    End Sub
    Partial Private Sub Oncli_eje_ofcChanged()
    End Sub
    Partial Private Sub Oncli_fec_act_ejeChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub Oncli_fec_act_ejeChanged()
    End Sub
    Partial Private Sub Oncli_fec_creChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub Oncli_fec_creChanged()
    End Sub
    Partial Private Sub Oncli_snfChanging(value As String)
    End Sub
    Partial Private Sub Oncli_snfChanged()
    End Sub
    Partial Private Sub Oncli_tas_mor_auxChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub Oncli_tas_mor_auxChanged()
    End Sub
    Partial Private Sub Oncli_cob_antChanging(value As System.Nullable(Of Char))
    End Sub
    Partial Private Sub Oncli_cob_antChanged()
    End Sub
    Partial Private Sub Oncli_spr_ead_colChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub Oncli_spr_ead_colChanged()
    End Sub
    Partial Private Sub Oncli_bys_desChanging(value As String)
    End Sub
    Partial Private Sub Oncli_bys_desChanged()
    End Sub
    Partial Private Sub Oncli_ope_ptlChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub Oncli_ope_ptlChanged()
    End Sub
    Partial Private Sub Onid_p_0118Changing(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub Onid_p_0118Changed()
    End Sub
    Partial Private Sub Oncli_cod_tmpChanging(value As String)
    End Sub
    Partial Private Sub Oncli_cod_tmpChanged()
    End Sub
    Partial Private Sub Oncli_nro_cliChanging(value As String)
    End Sub
    Partial Private Sub Oncli_nro_cliChanged()
    End Sub
    Partial Private Sub Onid_P_0313Changing(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub Onid_P_0313Changed()
    End Sub
    Partial Private Sub Oncli_dia_basChanging(value As System.Nullable(Of Char))
    End Sub
    Partial Private Sub Oncli_dia_basChanged()
    End Sub
    Partial Private Sub Oncli_cod_gesChanging(value As String)
    End Sub
    Partial Private Sub Oncli_cod_gesChanged()
    End Sub
    Partial Private Sub Onid_P_0119Changing(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub Onid_P_0119Changed()
    End Sub
    Partial Private Sub OnCLI_TIP_TASChanging(value As System.Nullable(Of Char))
    End Sub
    Partial Private Sub OnCLI_TIP_TASChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		Me._apl_cls = New EntitySet(Of apl_cls)(AddressOf Me.attach_apl_cls, AddressOf Me.detach_apl_cls)
		Me._avl_cls = New EntitySet(Of avl_cls)(AddressOf Me.attach_avl_cls, AddressOf Me.detach_avl_cls)
		Me._CDC_cls = CType(Nothing, EntityRef(Of CDC_cls))
		Me._cft_cls = New EntitySet(Of cft_cls)(AddressOf Me.attach_cft_cls, AddressOf Me.detach_cft_cls)
		Me._cnc_cls = New EntitySet(Of cnc_cls)(AddressOf Me.attach_cnc_cls, AddressOf Me.detach_cnc_cls)
		Me._con_cls = New EntitySet(Of con_cls)(AddressOf Me.attach_con_cls, AddressOf Me.detach_con_cls)
		Me._cxc_cls = New EntitySet(Of cxc_cls)(AddressOf Me.attach_cxc_cls, AddressOf Me.detach_cxc_cls)
		Me._cxp_cls = New EntitySet(Of cxp_cls)(AddressOf Me.attach_cxp_cls, AddressOf Me.detach_cxp_cls)
		Me._ddr_cls = New EntitySet(Of ddr_cls)(AddressOf Me.attach_ddr_cls, AddressOf Me.detach_ddr_cls)
		Me._dpa_cls = New EntitySet(Of dpa_cls)(AddressOf Me.attach_dpa_cls, AddressOf Me.detach_dpa_cls)
		Me._dsb_cls = New EntitySet(Of dsb_cls)(AddressOf Me.attach_dsb_cls, AddressOf Me.detach_dsb_cls)
		Me._dvf_cls = New EntitySet(Of dvf_cls)(AddressOf Me.attach_dvf_cls, AddressOf Me.detach_dvf_cls)
		Me._egr_cls = New EntitySet(Of egr_cls)(AddressOf Me.attach_egr_cls, AddressOf Me.detach_egr_cls)
		Me._emp_cls = New EntitySet(Of emp_cls)(AddressOf Me.attach_emp_cls, AddressOf Me.detach_emp_cls)
		Me._eva_cls = New EntitySet(Of eva_cls)(AddressOf Me.attach_eva_cls, AddressOf Me.detach_eva_cls)
		Me._fdd_cls = New EntitySet(Of fdd_cls)(AddressOf Me.attach_fdd_cls, AddressOf Me.detach_fdd_cls)
		Me._GDC_cls = New EntitySet(Of GDC_cls)(AddressOf Me.attach_GDC_cls, AddressOf Me.detach_GDC_cls)
		Me._ing_sec_cls = New EntitySet(Of ing_sec_cls)(AddressOf Me.attach_ing_sec_cls, AddressOf Me.detach_ing_sec_cls)
		Me._ldc_cls = New EntitySet(Of ldc_cls)(AddressOf Me.attach_ldc_cls, AddressOf Me.detach_ldc_cls)
		Me._nbc_cls = New EntitySet(Of nbc_cls)(AddressOf Me.attach_nbc_cls, AddressOf Me.detach_nbc_cls)
		Me._nce_cls = New EntitySet(Of nce_cls)(AddressOf Me.attach_nce_cls, AddressOf Me.detach_nce_cls)
		Me._org_cls = New EntitySet(Of org_cls)(AddressOf Me.attach_org_cls, AddressOf Me.detach_org_cls)
		Me._pgr_cls = New EntitySet(Of pgr_cls)(AddressOf Me.attach_pgr_cls, AddressOf Me.detach_pgr_cls)
		Me._rsc_cls = New EntitySet(Of rsc_cls)(AddressOf Me.attach_rsc_cls, AddressOf Me.detach_rsc_cls)
		Me._spg_cls = New EntitySet(Of spg_cls)(AddressOf Me.attach_spg_cls, AddressOf Me.detach_spg_cls)
		Me._vst_cls = New EntitySet(Of vst_cls)(AddressOf Me.attach_vst_cls, AddressOf Me.detach_vst_cls)
		Me._bco_cls = CType(Nothing, EntityRef(Of bco_cls))
		Me._cmn_cls = CType(Nothing, EntityRef(Of cmn_cls))
		Me._crt_cls = CType(Nothing, EntityRef(Of crt_cls))
		Me._P_0044_cls = CType(Nothing, EntityRef(Of P_0044_cls))
		Me._P_0058_cls = CType(Nothing, EntityRef(Of P_0058_cls))
		Me._P_0064_cls = CType(Nothing, EntityRef(Of P_0064_cls))
		Me._P_0067_cls = CType(Nothing, EntityRef(Of P_0067_cls))
		Me._P_0068_cls = CType(Nothing, EntityRef(Of P_0068_cls))
		Me._P_007_cls = CType(Nothing, EntityRef(Of P_007_cls))
		Me._P_0076_cls = CType(Nothing, EntityRef(Of P_0076_cls))
		Me._P_008_cls = CType(Nothing, EntityRef(Of P_008_cls))
		Me._P_0118_cls = CType(Nothing, EntityRef(Of P_0118_cls))
		Me._P_0119_cls = CType(Nothing, EntityRef(Of P_0119_cls))
		Me._P_0313_cls = CType(Nothing, EntityRef(Of P_0313_cls))
		Me._PL_000006_cls = CType(Nothing, EntityRef(Of PL_000006_cls))
		Me._PL_000066_cls = CType(Nothing, EntityRef(Of PL_000066_cls))
		Me._suc_cls = CType(Nothing, EntityRef(Of suc_cls))
		Me._eje = CType(Nothing, EntityRef(Of eje_cls))
		Me._eje_cls = CType(Nothing, EntityRef(Of eje_cls))
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_cli_idc", DbType:="Char(12) NOT NULL", CanBeNull:=false, IsPrimaryKey:=true)>  _
	Public Property cli_idc() As String
		Get
			Return Me._cli_idc
		End Get
		Set
			If (String.Equals(Me._cli_idc, value) = false) Then
				Me.Oncli_idcChanging(value)
				Me.SendPropertyChanging
				Me._cli_idc = value
				Me.SendPropertyChanged("cli_idc")
				Me.Oncli_idcChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_id_P_0044", DbType:="Int")>  _
	Public Property id_P_0044() As System.Nullable(Of Integer)
		Get
			Return Me._id_P_0044
		End Get
		Set
			If (Me._id_P_0044.Equals(value) = false) Then
				If Me._P_0044_cls.HasLoadedOrAssignedValue Then
					Throw New System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException()
				End If
				Me.Onid_P_0044Changing(value)
				Me.SendPropertyChanging
				Me._id_P_0044 = value
				Me.SendPropertyChanged("id_P_0044")
				Me.Onid_P_0044Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_id_P_007", DbType:="Int")>  _
	Public Property id_P_007() As System.Nullable(Of Integer)
		Get
			Return Me._id_P_007
		End Get
		Set
			If (Me._id_P_007.Equals(value) = false) Then
				If Me._P_007_cls.HasLoadedOrAssignedValue Then
					Throw New System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException()
				End If
				Me.Onid_P_007Changing(value)
				Me.SendPropertyChanging
				Me._id_P_007 = value
				Me.SendPropertyChanged("id_P_007")
				Me.Onid_P_007Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_id_P_008", DbType:="Int")>  _
	Public Property id_P_008() As System.Nullable(Of Integer)
		Get
			Return Me._id_P_008
		End Get
		Set
			If (Me._id_P_008.Equals(value) = false) Then
				If Me._P_008_cls.HasLoadedOrAssignedValue Then
					Throw New System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException()
				End If
				Me.Onid_P_008Changing(value)
				Me.SendPropertyChanging
				Me._id_P_008 = value
				Me.SendPropertyChanged("id_P_008")
				Me.Onid_P_008Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_id_P_0058", DbType:="Int")>  _
	Public Property id_P_0058() As System.Nullable(Of Integer)
		Get
			Return Me._id_P_0058
		End Get
		Set
			If (Me._id_P_0058.Equals(value) = false) Then
				If Me._P_0058_cls.HasLoadedOrAssignedValue Then
					Throw New System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException()
				End If
				Me.Onid_P_0058Changing(value)
				Me.SendPropertyChanging
				Me._id_P_0058 = value
				Me.SendPropertyChanged("id_P_0058")
				Me.Onid_P_0058Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_id_P_0064", DbType:="Int")>  _
	Public Property id_P_0064() As System.Nullable(Of Integer)
		Get
			Return Me._id_P_0064
		End Get
		Set
			If (Me._id_P_0064.Equals(value) = false) Then
				If Me._P_0064_cls.HasLoadedOrAssignedValue Then
					Throw New System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException()
				End If
				Me.Onid_P_0064Changing(value)
				Me.SendPropertyChanging
				Me._id_P_0064 = value
				Me.SendPropertyChanged("id_P_0064")
				Me.Onid_P_0064Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_id_P_0067", DbType:="Int")>  _
	Public Property id_P_0067() As System.Nullable(Of Integer)
		Get
			Return Me._id_P_0067
		End Get
		Set
			If (Me._id_P_0067.Equals(value) = false) Then
				If Me._P_0067_cls.HasLoadedOrAssignedValue Then
					Throw New System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException()
				End If
				Me.Onid_P_0067Changing(value)
				Me.SendPropertyChanging
				Me._id_P_0067 = value
				Me.SendPropertyChanged("id_P_0067")
				Me.Onid_P_0067Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_id_P_0068", DbType:="Int")>  _
	Public Property id_P_0068() As System.Nullable(Of Integer)
		Get
			Return Me._id_P_0068
		End Get
		Set
			If (Me._id_P_0068.Equals(value) = false) Then
				If Me._P_0068_cls.HasLoadedOrAssignedValue Then
					Throw New System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException()
				End If
				Me.Onid_P_0068Changing(value)
				Me.SendPropertyChanging
				Me._id_P_0068 = value
				Me.SendPropertyChanged("id_P_0068")
				Me.Onid_P_0068Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_id_P_0076", DbType:="Int")>  _
	Public Property id_P_0076() As System.Nullable(Of Integer)
		Get
			Return Me._id_P_0076
		End Get
		Set
			If (Me._id_P_0076.Equals(value) = false) Then
				If Me._P_0076_cls.HasLoadedOrAssignedValue Then
					Throw New System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException()
				End If
				Me.Onid_P_0076Changing(value)
				Me.SendPropertyChanging
				Me._id_P_0076 = value
				Me.SendPropertyChanged("id_P_0076")
				Me.Onid_P_0076Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_id_PL_000006", DbType:="Char(11)")>  _
	Public Property id_PL_000006() As String
		Get
			Return Me._id_PL_000006
		End Get
		Set
			If (String.Equals(Me._id_PL_000006, value) = false) Then
				If Me._PL_000006_cls.HasLoadedOrAssignedValue Then
					Throw New System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException()
				End If
				Me.Onid_PL_000006Changing(value)
				Me.SendPropertyChanging
				Me._id_PL_000006 = value
				Me.SendPropertyChanged("id_PL_000006")
				Me.Onid_PL_000006Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_id_PL_000066", DbType:="Char(6)")>  _
	Public Property id_PL_000066() As String
		Get
			Return Me._id_PL_000066
		End Get
		Set
			If (String.Equals(Me._id_PL_000066, value) = false) Then
				If Me._PL_000066_cls.HasLoadedOrAssignedValue Then
					Throw New System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException()
				End If
				Me.Onid_PL_000066Changing(value)
				Me.SendPropertyChanging
				Me._id_PL_000066 = value
				Me.SendPropertyChanged("id_PL_000066")
				Me.Onid_PL_000066Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_id_eje_cod_eje", DbType:="Int")>  _
	Public Property id_eje_cod_eje() As System.Nullable(Of Integer)
		Get
			Return Me._id_eje_cod_eje
		End Get
		Set
			If (Me._id_eje_cod_eje.Equals(value) = false) Then
				If Me._eje_cls.HasLoadedOrAssignedValue Then
					Throw New System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException()
				End If
				Me.Onid_eje_cod_ejeChanging(value)
				Me.SendPropertyChanging
				Me._id_eje_cod_eje = value
				Me.SendPropertyChanged("id_eje_cod_eje")
				Me.Onid_eje_cod_ejeChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_id_eje_cod_cob", DbType:="Int")>  _
	Public Property id_eje_cod_cob() As System.Nullable(Of Integer)
		Get
			Return Me._id_eje_cod_cob
		End Get
		Set
			If (Me._id_eje_cod_cob.Equals(value) = false) Then
				If Me._eje.HasLoadedOrAssignedValue Then
					Throw New System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException()
				End If
				Me.Onid_eje_cod_cobChanging(value)
				Me.SendPropertyChanging
				Me._id_eje_cod_cob = value
				Me.SendPropertyChanged("id_eje_cod_cob")
				Me.Onid_eje_cod_cobChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_id_suc", DbType:="Int")>  _
	Public Property id_suc() As System.Nullable(Of Integer)
		Get
			Return Me._id_suc
		End Get
		Set
			If (Me._id_suc.Equals(value) = false) Then
				If Me._suc_cls.HasLoadedOrAssignedValue Then
					Throw New System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException()
				End If
				Me.Onid_sucChanging(value)
				Me.SendPropertyChanging
				Me._id_suc = value
				Me.SendPropertyChanged("id_suc")
				Me.Onid_sucChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_id_cmn", DbType:="Int")>  _
	Public Property id_cmn() As System.Nullable(Of Integer)
		Get
			Return Me._id_cmn
		End Get
		Set
			If (Me._id_cmn.Equals(value) = false) Then
				If Me._cmn_cls.HasLoadedOrAssignedValue Then
					Throw New System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException()
				End If
				Me.Onid_cmnChanging(value)
				Me.SendPropertyChanging
				Me._id_cmn = value
				Me.SendPropertyChanged("id_cmn")
				Me.Onid_cmnChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_id_bco", DbType:="Int")>  _
	Public Property id_bco() As System.Nullable(Of Integer)
		Get
			Return Me._id_bco
		End Get
		Set
			If (Me._id_bco.Equals(value) = false) Then
				If Me._bco_cls.HasLoadedOrAssignedValue Then
					Throw New System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException()
				End If
				Me.Onid_bcoChanging(value)
				Me.SendPropertyChanging
				Me._id_bco = value
				Me.SendPropertyChanged("id_bco")
				Me.Onid_bcoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_id_crt", DbType:="Int")>  _
	Public Property id_crt() As System.Nullable(Of Integer)
		Get
			Return Me._id_crt
		End Get
		Set
			If (Me._id_crt.Equals(value) = false) Then
				If Me._crt_cls.HasLoadedOrAssignedValue Then
					Throw New System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException()
				End If
				Me.Onid_crtChanging(value)
				Me.SendPropertyChanging
				Me._id_crt = value
				Me.SendPropertyChanged("id_crt")
				Me.Onid_crtChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_cli_dig_ito", DbType:="Char(1)")>  _
	Public Property cli_dig_ito() As System.Nullable(Of Char)
		Get
			Return Me._cli_dig_ito
		End Get
		Set
			If (Me._cli_dig_ito.Equals(value) = false) Then
				Me.Oncli_dig_itoChanging(value)
				Me.SendPropertyChanging
				Me._cli_dig_ito = value
				Me.SendPropertyChanged("cli_dig_ito")
				Me.Oncli_dig_itoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_cli_bci_flg", DbType:="Char(1)")>  _
	Public Property cli_bci_flg() As System.Nullable(Of Char)
		Get
			Return Me._cli_bci_flg
		End Get
		Set
			If (Me._cli_bci_flg.Equals(value) = false) Then
				Me.Oncli_bci_flgChanging(value)
				Me.SendPropertyChanging
				Me._cli_bci_flg = value
				Me.SendPropertyChanged("cli_bci_flg")
				Me.Oncli_bci_flgChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_cli_rso", DbType:="VarChar(150)")>  _
	Public Property cli_rso() As String
		Get
			Return Me._cli_rso
		End Get
		Set
			If (String.Equals(Me._cli_rso, value) = false) Then
				Me.Oncli_rsoChanging(value)
				Me.SendPropertyChanging
				Me._cli_rso = value
				Me.SendPropertyChanged("cli_rso")
				Me.Oncli_rsoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_cli_ape_ptn", DbType:="VarChar(50)")>  _
	Public Property cli_ape_ptn() As String
		Get
			Return Me._cli_ape_ptn
		End Get
		Set
			If (String.Equals(Me._cli_ape_ptn, value) = false) Then
				Me.Oncli_ape_ptnChanging(value)
				Me.SendPropertyChanging
				Me._cli_ape_ptn = value
				Me.SendPropertyChanged("cli_ape_ptn")
				Me.Oncli_ape_ptnChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_cli_ape_mtn", DbType:="VarChar(50)")>  _
	Public Property cli_ape_mtn() As String
		Get
			Return Me._cli_ape_mtn
		End Get
		Set
			If (String.Equals(Me._cli_ape_mtn, value) = false) Then
				Me.Oncli_ape_mtnChanging(value)
				Me.SendPropertyChanging
				Me._cli_ape_mtn = value
				Me.SendPropertyChanged("cli_ape_mtn")
				Me.Oncli_ape_mtnChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_cli_fec_nac", DbType:="DateTime")>  _
	Public Property cli_fec_nac() As System.Nullable(Of Date)
		Get
			Return Me._cli_fec_nac
		End Get
		Set
			If (Me._cli_fec_nac.Equals(value) = false) Then
				Me.Oncli_fec_nacChanging(value)
				Me.SendPropertyChanging
				Me._cli_fec_nac = value
				Me.SendPropertyChanged("cli_fec_nac")
				Me.Oncli_fec_nacChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_cli_sex", DbType:="Char(1)")>  _
	Public Property cli_sex() As System.Nullable(Of Char)
		Get
			Return Me._cli_sex
		End Get
		Set
			If (Me._cli_sex.Equals(value) = false) Then
				Me.Oncli_sexChanging(value)
				Me.SendPropertyChanging
				Me._cli_sex = value
				Me.SendPropertyChanged("cli_sex")
				Me.Oncli_sexChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_cli_dml", DbType:="Char(50)")>  _
	Public Property cli_dml() As String
		Get
			Return Me._cli_dml
		End Get
		Set
			If (String.Equals(Me._cli_dml, value) = false) Then
				Me.Oncli_dmlChanging(value)
				Me.SendPropertyChanging
				Me._cli_dml = value
				Me.SendPropertyChanged("cli_dml")
				Me.Oncli_dmlChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_cli_cod_pot", DbType:="Char(10)")>  _
	Public Property cli_cod_pot() As String
		Get
			Return Me._cli_cod_pot
		End Get
		Set
			If (String.Equals(Me._cli_cod_pot, value) = false) Then
				Me.Oncli_cod_potChanging(value)
				Me.SendPropertyChanging
				Me._cli_cod_pot = value
				Me.SendPropertyChanged("cli_cod_pot")
				Me.Oncli_cod_potChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_cli_ema", DbType:="VarChar(50)")>  _
	Public Property cli_ema() As String
		Get
			Return Me._cli_ema
		End Get
		Set
			If (String.Equals(Me._cli_ema, value) = false) Then
				Me.Oncli_emaChanging(value)
				Me.SendPropertyChanging
				Me._cli_ema = value
				Me.SendPropertyChanged("cli_ema")
				Me.Oncli_emaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_cli_fec_ini_ope", DbType:="DateTime")>  _
	Public Property cli_fec_ini_ope() As System.Nullable(Of Date)
		Get
			Return Me._cli_fec_ini_ope
		End Get
		Set
			If (Me._cli_fec_ini_ope.Equals(value) = false) Then
				Me.Oncli_fec_ini_opeChanging(value)
				Me.SendPropertyChanging
				Me._cli_fec_ini_ope = value
				Me.SendPropertyChanged("cli_fec_ini_ope")
				Me.Oncli_fec_ini_opeChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_cli_fec_ult_ope", DbType:="DateTime")>  _
	Public Property cli_fec_ult_ope() As System.Nullable(Of Date)
		Get
			Return Me._cli_fec_ult_ope
		End Get
		Set
			If (Me._cli_fec_ult_ope.Equals(value) = false) Then
				Me.Oncli_fec_ult_opeChanging(value)
				Me.SendPropertyChanging
				Me._cli_fec_ult_ope = value
				Me.SendPropertyChanged("cli_fec_ult_ope")
				Me.Oncli_fec_ult_opeChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_cli_fec_est", DbType:="DateTime")>  _
	Public Property cli_fec_est() As System.Nullable(Of Date)
		Get
			Return Me._cli_fec_est
		End Get
		Set
			If (Me._cli_fec_est.Equals(value) = false) Then
				Me.Oncli_fec_estChanging(value)
				Me.SendPropertyChanging
				Me._cli_fec_est = value
				Me.SendPropertyChanged("cli_fec_est")
				Me.Oncli_fec_estChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_cli_cbz", DbType:="Char(1)")>  _
	Public Property cli_cbz() As System.Nullable(Of Char)
		Get
			Return Me._cli_cbz
		End Get
		Set
			If (Me._cli_cbz.Equals(value) = false) Then
				Me.Oncli_cbzChanging(value)
				Me.SendPropertyChanging
				Me._cli_cbz = value
				Me.SendPropertyChanged("cli_cbz")
				Me.Oncli_cbzChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_cli_tas_mor", DbType:="Decimal(5,2)")>  _
	Public Property cli_tas_mor() As System.Nullable(Of Decimal)
		Get
			Return Me._cli_tas_mor
		End Get
		Set
			If (Me._cli_tas_mor.Equals(value) = false) Then
				Me.Oncli_tas_morChanging(value)
				Me.SendPropertyChanging
				Me._cli_tas_mor = value
				Me.SendPropertyChanged("cli_tas_mor")
				Me.Oncli_tas_morChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_cli_con_cbz", DbType:="Char(1)")>  _
	Public Property cli_con_cbz() As System.Nullable(Of Char)
		Get
			Return Me._cli_con_cbz
		End Get
		Set
			If (Me._cli_con_cbz.Equals(value) = false) Then
				Me.Oncli_con_cbzChanging(value)
				Me.SendPropertyChanging
				Me._cli_con_cbz = value
				Me.SendPropertyChanged("cli_con_cbz")
				Me.Oncli_con_cbzChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_cli_eje_bci", DbType:="VarChar(50)")>  _
	Public Property cli_eje_bci() As String
		Get
			Return Me._cli_eje_bci
		End Get
		Set
			If (String.Equals(Me._cli_eje_bci, value) = false) Then
				Me.Oncli_eje_bciChanging(value)
				Me.SendPropertyChanging
				Me._cli_eje_bci = value
				Me.SendPropertyChanged("cli_eje_bci")
				Me.Oncli_eje_bciChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_cli_eje_anx", DbType:="Decimal(5,0)")>  _
	Public Property cli_eje_anx() As System.Nullable(Of Decimal)
		Get
			Return Me._cli_eje_anx
		End Get
		Set
			If (Me._cli_eje_anx.Equals(value) = false) Then
				Me.Oncli_eje_anxChanging(value)
				Me.SendPropertyChanging
				Me._cli_eje_anx = value
				Me.SendPropertyChanged("cli_eje_anx")
				Me.Oncli_eje_anxChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_cli_eje_ofc", DbType:="VarChar(100)")>  _
	Public Property cli_eje_ofc() As String
		Get
			Return Me._cli_eje_ofc
		End Get
		Set
			If (String.Equals(Me._cli_eje_ofc, value) = false) Then
				Me.Oncli_eje_ofcChanging(value)
				Me.SendPropertyChanging
				Me._cli_eje_ofc = value
				Me.SendPropertyChanged("cli_eje_ofc")
				Me.Oncli_eje_ofcChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_cli_fec_act_eje", DbType:="DateTime")>  _
	Public Property cli_fec_act_eje() As System.Nullable(Of Date)
		Get
			Return Me._cli_fec_act_eje
		End Get
		Set
			If (Me._cli_fec_act_eje.Equals(value) = false) Then
				Me.Oncli_fec_act_ejeChanging(value)
				Me.SendPropertyChanging
				Me._cli_fec_act_eje = value
				Me.SendPropertyChanged("cli_fec_act_eje")
				Me.Oncli_fec_act_ejeChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_cli_fec_cre", DbType:="DateTime")>  _
	Public Property cli_fec_cre() As System.Nullable(Of Date)
		Get
			Return Me._cli_fec_cre
		End Get
		Set
			If (Me._cli_fec_cre.Equals(value) = false) Then
				Me.Oncli_fec_creChanging(value)
				Me.SendPropertyChanging
				Me._cli_fec_cre = value
				Me.SendPropertyChanged("cli_fec_cre")
				Me.Oncli_fec_creChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_cli_snf", DbType:="VarChar(1)")>  _
	Public Property cli_snf() As String
		Get
			Return Me._cli_snf
		End Get
		Set
			If (String.Equals(Me._cli_snf, value) = false) Then
				Me.Oncli_snfChanging(value)
				Me.SendPropertyChanging
				Me._cli_snf = value
				Me.SendPropertyChanged("cli_snf")
				Me.Oncli_snfChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_cli_tas_mor_aux", DbType:="Decimal(5,2)")>  _
	Public Property cli_tas_mor_aux() As System.Nullable(Of Decimal)
		Get
			Return Me._cli_tas_mor_aux
		End Get
		Set
			If (Me._cli_tas_mor_aux.Equals(value) = false) Then
				Me.Oncli_tas_mor_auxChanging(value)
				Me.SendPropertyChanging
				Me._cli_tas_mor_aux = value
				Me.SendPropertyChanged("cli_tas_mor_aux")
				Me.Oncli_tas_mor_auxChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_cli_cob_ant", DbType:="Char(1)")>  _
	Public Property cli_cob_ant() As System.Nullable(Of Char)
		Get
			Return Me._cli_cob_ant
		End Get
		Set
			If (Me._cli_cob_ant.Equals(value) = false) Then
				Me.Oncli_cob_antChanging(value)
				Me.SendPropertyChanging
				Me._cli_cob_ant = value
				Me.SendPropertyChanged("cli_cob_ant")
				Me.Oncli_cob_antChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_cli_spr_ead_col", DbType:="Decimal(5,2)")>  _
	Public Property cli_spr_ead_col() As System.Nullable(Of Decimal)
		Get
			Return Me._cli_spr_ead_col
		End Get
		Set
			If (Me._cli_spr_ead_col.Equals(value) = false) Then
				Me.Oncli_spr_ead_colChanging(value)
				Me.SendPropertyChanging
				Me._cli_spr_ead_col = value
				Me.SendPropertyChanged("cli_spr_ead_col")
				Me.Oncli_spr_ead_colChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_cli_bys_des", DbType:="VarChar(250)")>  _
	Public Property cli_bys_des() As String
		Get
			Return Me._cli_bys_des
		End Get
		Set
			If (String.Equals(Me._cli_bys_des, value) = false) Then
				Me.Oncli_bys_desChanging(value)
				Me.SendPropertyChanging
				Me._cli_bys_des = value
				Me.SendPropertyChanged("cli_bys_des")
				Me.Oncli_bys_desChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_cli_ope_ptl", DbType:="Int")>  _
	Public Property cli_ope_ptl() As System.Nullable(Of Integer)
		Get
			Return Me._cli_ope_ptl
		End Get
		Set
			If (Me._cli_ope_ptl.Equals(value) = false) Then
				Me.Oncli_ope_ptlChanging(value)
				Me.SendPropertyChanging
				Me._cli_ope_ptl = value
				Me.SendPropertyChanged("cli_ope_ptl")
				Me.Oncli_ope_ptlChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_id_p_0118", DbType:="Int")>  _
	Public Property id_p_0118() As System.Nullable(Of Integer)
		Get
			Return Me._id_p_0118
		End Get
		Set
			If (Me._id_p_0118.Equals(value) = false) Then
				If Me._P_0118_cls.HasLoadedOrAssignedValue Then
					Throw New System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException()
				End If
				Me.Onid_p_0118Changing(value)
				Me.SendPropertyChanging
				Me._id_p_0118 = value
				Me.SendPropertyChanged("id_p_0118")
				Me.Onid_p_0118Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_cli_cod_tmp", DbType:="VarChar(3)")>  _
	Public Property cli_cod_tmp() As String
		Get
			Return Me._cli_cod_tmp
		End Get
		Set
			If (String.Equals(Me._cli_cod_tmp, value) = false) Then
				Me.Oncli_cod_tmpChanging(value)
				Me.SendPropertyChanging
				Me._cli_cod_tmp = value
				Me.SendPropertyChanged("cli_cod_tmp")
				Me.Oncli_cod_tmpChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_cli_nro_cli", DbType:="Char(15)")>  _
	Public Property cli_nro_cli() As String
		Get
			Return Me._cli_nro_cli
		End Get
		Set
			If (String.Equals(Me._cli_nro_cli, value) = false) Then
				Me.Oncli_nro_cliChanging(value)
				Me.SendPropertyChanging
				Me._cli_nro_cli = value
				Me.SendPropertyChanged("cli_nro_cli")
				Me.Oncli_nro_cliChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_id_P_0313", DbType:="Int")>  _
	Public Property id_P_0313() As System.Nullable(Of Integer)
		Get
			Return Me._id_P_0313
		End Get
		Set
			If (Me._id_P_0313.Equals(value) = false) Then
				If Me._P_0313_cls.HasLoadedOrAssignedValue Then
					Throw New System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException()
				End If
				Me.Onid_P_0313Changing(value)
				Me.SendPropertyChanging
				Me._id_P_0313 = value
				Me.SendPropertyChanged("id_P_0313")
				Me.Onid_P_0313Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_cli_dia_bas", DbType:="Char(1)")>  _
	Public Property cli_dia_bas() As System.Nullable(Of Char)
		Get
			Return Me._cli_dia_bas
		End Get
		Set
			If (Me._cli_dia_bas.Equals(value) = false) Then
				Me.Oncli_dia_basChanging(value)
				Me.SendPropertyChanging
				Me._cli_dia_bas = value
				Me.SendPropertyChanged("cli_dia_bas")
				Me.Oncli_dia_basChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_cli_cod_ges", DbType:="VarChar(10)")>  _
	Public Property cli_cod_ges() As String
		Get
			Return Me._cli_cod_ges
		End Get
		Set
			If (String.Equals(Me._cli_cod_ges, value) = false) Then
				Me.Oncli_cod_gesChanging(value)
				Me.SendPropertyChanging
				Me._cli_cod_ges = value
				Me.SendPropertyChanged("cli_cod_ges")
				Me.Oncli_cod_gesChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_id_P_0119", DbType:="Int")>  _
	Public Property id_P_0119() As System.Nullable(Of Integer)
		Get
			Return Me._id_P_0119
		End Get
		Set
			If (Me._id_P_0119.Equals(value) = false) Then
				If Me._P_0119_cls.HasLoadedOrAssignedValue Then
					Throw New System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException()
				End If
				Me.Onid_P_0119Changing(value)
				Me.SendPropertyChanging
				Me._id_P_0119 = value
				Me.SendPropertyChanged("id_P_0119")
				Me.Onid_P_0119Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CLI_TIP_TAS", DbType:="Char(1)")>  _
	Public Property CLI_TIP_TAS() As System.Nullable(Of Char)
		Get
			Return Me._CLI_TIP_TAS
		End Get
		Set
			If (Me._CLI_TIP_TAS.Equals(value) = false) Then
				Me.OnCLI_TIP_TASChanging(value)
				Me.SendPropertyChanging
				Me._CLI_TIP_TAS = value
				Me.SendPropertyChanged("CLI_TIP_TAS")
				Me.OnCLI_TIP_TASChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="cli_cls_apl_cls", Storage:="_apl_cls", ThisKey:="cli_idc", OtherKey:="cli_idc")>  _
	Public Property apl_cls() As EntitySet(Of apl_cls)
		Get
			Return Me._apl_cls
		End Get
		Set
			Me._apl_cls.Assign(value)
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="cli_cls_avl_cls", Storage:="_avl_cls", ThisKey:="cli_idc", OtherKey:="cli_idc")>  _
	Public Property avl_cls() As EntitySet(Of avl_cls)
		Get
			Return Me._avl_cls
		End Get
		Set
			Me._avl_cls.Assign(value)
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="cli_cls_CDC_cls", Storage:="_CDC_cls", ThisKey:="cli_idc", OtherKey:="cli_idc", IsUnique:=true, IsForeignKey:=false)>  _
	Public Property CDC_cls() As CDC_cls
		Get
			Return Me._CDC_cls.Entity
		End Get
		Set
			Dim previousValue As CDC_cls = Me._CDC_cls.Entity
			If ((Object.Equals(previousValue, value) = false)  _
						OrElse (Me._CDC_cls.HasLoadedOrAssignedValue = false)) Then
				Me.SendPropertyChanging
				If ((previousValue Is Nothing)  _
							= false) Then
					Me._CDC_cls.Entity = Nothing
					previousValue.cli_cls = Nothing
				End If
				Me._CDC_cls.Entity = value
				If (Object.Equals(value, Nothing) = false) Then
					value.cli_cls = Me
				End If
				Me.SendPropertyChanged("CDC_cls")
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="cli_cls_cft_cls", Storage:="_cft_cls", ThisKey:="cli_idc", OtherKey:="cli_idc")>  _
	Public Property cft_cls() As EntitySet(Of cft_cls)
		Get
			Return Me._cft_cls
		End Get
		Set
			Me._cft_cls.Assign(value)
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="cli_cls_cnc_cls", Storage:="_cnc_cls", ThisKey:="cli_idc", OtherKey:="cli_idc")>  _
	Public Property cnc_cls() As EntitySet(Of cnc_cls)
		Get
			Return Me._cnc_cls
		End Get
		Set
			Me._cnc_cls.Assign(value)
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="cli_cls_con_cls", Storage:="_con_cls", ThisKey:="cli_idc", OtherKey:="cli_idc")>  _
	Public Property con_cls() As EntitySet(Of con_cls)
		Get
			Return Me._con_cls
		End Get
		Set
			Me._con_cls.Assign(value)
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="cli_cls_cxc_cls", Storage:="_cxc_cls", ThisKey:="cli_idc", OtherKey:="cli_idc")>  _
	Public Property cxc_cls() As EntitySet(Of cxc_cls)
		Get
			Return Me._cxc_cls
		End Get
		Set
			Me._cxc_cls.Assign(value)
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="cli_cls_cxp_cls", Storage:="_cxp_cls", ThisKey:="cli_idc", OtherKey:="cli_idc")>  _
	Public Property cxp_cls() As EntitySet(Of cxp_cls)
		Get
			Return Me._cxp_cls
		End Get
		Set
			Me._cxp_cls.Assign(value)
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="cli_cls_ddr_cls", Storage:="_ddr_cls", ThisKey:="cli_idc", OtherKey:="cli_idc")>  _
	Public Property ddr_cls() As EntitySet(Of ddr_cls)
		Get
			Return Me._ddr_cls
		End Get
		Set
			Me._ddr_cls.Assign(value)
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="cli_cls_dpa_cls", Storage:="_dpa_cls", ThisKey:="cli_idc", OtherKey:="cli_idc")>  _
	Public Property dpa_cls() As EntitySet(Of dpa_cls)
		Get
			Return Me._dpa_cls
		End Get
		Set
			Me._dpa_cls.Assign(value)
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="cli_cls_dsb_cls", Storage:="_dsb_cls", ThisKey:="cli_idc", OtherKey:="cli_idc")>  _
	Public Property dsb_cls() As EntitySet(Of dsb_cls)
		Get
			Return Me._dsb_cls
		End Get
		Set
			Me._dsb_cls.Assign(value)
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="cli_cls_dvf_cls", Storage:="_dvf_cls", ThisKey:="cli_idc", OtherKey:="cli_idc")>  _
	Public Property dvf_cls() As EntitySet(Of dvf_cls)
		Get
			Return Me._dvf_cls
		End Get
		Set
			Me._dvf_cls.Assign(value)
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="cli_cls_egr_cls", Storage:="_egr_cls", ThisKey:="cli_idc", OtherKey:="cli_idc")>  _
	Public Property egr_cls() As EntitySet(Of egr_cls)
		Get
			Return Me._egr_cls
		End Get
		Set
			Me._egr_cls.Assign(value)
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="cli_cls_emp_cls", Storage:="_emp_cls", ThisKey:="cli_idc", OtherKey:="cli_idc")>  _
	Public Property emp_cls() As EntitySet(Of emp_cls)
		Get
			Return Me._emp_cls
		End Get
		Set
			Me._emp_cls.Assign(value)
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="cli_cls_eva_cls", Storage:="_eva_cls", ThisKey:="cli_idc", OtherKey:="cli_idc")>  _
	Public Property eva_cls() As EntitySet(Of eva_cls)
		Get
			Return Me._eva_cls
		End Get
		Set
			Me._eva_cls.Assign(value)
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="cli_cls_fdd_cls", Storage:="_fdd_cls", ThisKey:="cli_idc", OtherKey:="cli_idc")>  _
	Public Property fdd_cls() As EntitySet(Of fdd_cls)
		Get
			Return Me._fdd_cls
		End Get
		Set
			Me._fdd_cls.Assign(value)
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="cli_cls_GDC_cls", Storage:="_GDC_cls", ThisKey:="cli_idc", OtherKey:="cli_idc")>  _
	Public Property GDC_cls() As EntitySet(Of GDC_cls)
		Get
			Return Me._GDC_cls
		End Get
		Set
			Me._GDC_cls.Assign(value)
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="cli_cls_ing_sec_cls", Storage:="_ing_sec_cls", ThisKey:="cli_idc", OtherKey:="cli_idc")>  _
	Public Property ing_sec_cls() As EntitySet(Of ing_sec_cls)
		Get
			Return Me._ing_sec_cls
		End Get
		Set
			Me._ing_sec_cls.Assign(value)
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="cli_cls_ldc_cls", Storage:="_ldc_cls", ThisKey:="cli_idc", OtherKey:="cli_idc")>  _
	Public Property ldc_cls() As EntitySet(Of ldc_cls)
		Get
			Return Me._ldc_cls
		End Get
		Set
			Me._ldc_cls.Assign(value)
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="cli_cls_nbc_cls", Storage:="_nbc_cls", ThisKey:="cli_idc", OtherKey:="cli_idc")>  _
	Public Property nbc_cls() As EntitySet(Of nbc_cls)
		Get
			Return Me._nbc_cls
		End Get
		Set
			Me._nbc_cls.Assign(value)
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="cli_cls_nce_cls", Storage:="_nce_cls", ThisKey:="cli_idc", OtherKey:="cli_idc")>  _
	Public Property nce_cls() As EntitySet(Of nce_cls)
		Get
			Return Me._nce_cls
		End Get
		Set
			Me._nce_cls.Assign(value)
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="cli_cls_org_cls", Storage:="_org_cls", ThisKey:="cli_idc", OtherKey:="cli_idc")>  _
	Public Property org_cls() As EntitySet(Of org_cls)
		Get
			Return Me._org_cls
		End Get
		Set
			Me._org_cls.Assign(value)
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="cli_cls_pgr_cls", Storage:="_pgr_cls", ThisKey:="cli_idc", OtherKey:="cli_idc")>  _
	Public Property pgr_cls() As EntitySet(Of pgr_cls)
		Get
			Return Me._pgr_cls
		End Get
		Set
			Me._pgr_cls.Assign(value)
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="cli_cls_rsc_cls", Storage:="_rsc_cls", ThisKey:="cli_idc", OtherKey:="cli_idc")>  _
	Public Property rsc_cls() As EntitySet(Of rsc_cls)
		Get
			Return Me._rsc_cls
		End Get
		Set
			Me._rsc_cls.Assign(value)
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="cli_cls_spg_cls", Storage:="_spg_cls", ThisKey:="cli_idc", OtherKey:="cli_idc")>  _
	Public Property spg_cls() As EntitySet(Of spg_cls)
		Get
			Return Me._spg_cls
		End Get
		Set
			Me._spg_cls.Assign(value)
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="cli_cls_vst_cls", Storage:="_vst_cls", ThisKey:="cli_idc", OtherKey:="cli_idc")>  _
	Public Property vst_cls() As EntitySet(Of vst_cls)
		Get
			Return Me._vst_cls
		End Get
		Set
			Me._vst_cls.Assign(value)
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="bco_cls_cli_cls", Storage:="_bco_cls", ThisKey:="id_bco", OtherKey:="id_bco", IsForeignKey:=true)>  _
	Public Property bco_cls() As bco_cls
		Get
			Return Me._bco_cls.Entity
		End Get
		Set
			Dim previousValue As bco_cls = Me._bco_cls.Entity
			If ((Object.Equals(previousValue, value) = false)  _
						OrElse (Me._bco_cls.HasLoadedOrAssignedValue = false)) Then
				Me.SendPropertyChanging
				If ((previousValue Is Nothing)  _
							= false) Then
					Me._bco_cls.Entity = Nothing
					previousValue.cli_cls.Remove(Me)
				End If
				Me._bco_cls.Entity = value
				If ((value Is Nothing)  _
							= false) Then
					value.cli_cls.Add(Me)
					Me._id_bco = value.id_bco
				Else
					Me._id_bco = CType(Nothing, Nullable(Of Integer))
				End If
				Me.SendPropertyChanged("bco_cls")
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="cmn_cls_cli_cls", Storage:="_cmn_cls", ThisKey:="id_cmn", OtherKey:="id_cmn", IsForeignKey:=true)>  _
	Public Property cmn_cls() As cmn_cls
		Get
			Return Me._cmn_cls.Entity
		End Get
		Set
			Dim previousValue As cmn_cls = Me._cmn_cls.Entity
			If ((Object.Equals(previousValue, value) = false)  _
						OrElse (Me._cmn_cls.HasLoadedOrAssignedValue = false)) Then
				Me.SendPropertyChanging
				If ((previousValue Is Nothing)  _
							= false) Then
					Me._cmn_cls.Entity = Nothing
					previousValue.cli_cls.Remove(Me)
				End If
				Me._cmn_cls.Entity = value
				If ((value Is Nothing)  _
							= false) Then
					value.cli_cls.Add(Me)
					Me._id_cmn = value.id_cmn
				Else
					Me._id_cmn = CType(Nothing, Nullable(Of Integer))
				End If
				Me.SendPropertyChanged("cmn_cls")
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="crt_cls_cli_cls", Storage:="_crt_cls", ThisKey:="id_crt", OtherKey:="id_crt", IsForeignKey:=true)>  _
	Public Property crt_cls() As crt_cls
		Get
			Return Me._crt_cls.Entity
		End Get
		Set
			Dim previousValue As crt_cls = Me._crt_cls.Entity
			If ((Object.Equals(previousValue, value) = false)  _
						OrElse (Me._crt_cls.HasLoadedOrAssignedValue = false)) Then
				Me.SendPropertyChanging
				If ((previousValue Is Nothing)  _
							= false) Then
					Me._crt_cls.Entity = Nothing
					previousValue.cli_cls.Remove(Me)
				End If
				Me._crt_cls.Entity = value
				If ((value Is Nothing)  _
							= false) Then
					value.cli_cls.Add(Me)
					Me._id_crt = value.id_crt
				Else
					Me._id_crt = CType(Nothing, Nullable(Of Integer))
				End If
				Me.SendPropertyChanged("crt_cls")
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="P_0044_cls_cli_cls", Storage:="_P_0044_cls", ThisKey:="id_P_0044", OtherKey:="id_P_0044", IsForeignKey:=true)>  _
	Public Property P_0044_cls() As P_0044_cls
		Get
			Return Me._P_0044_cls.Entity
		End Get
		Set
			Dim previousValue As P_0044_cls = Me._P_0044_cls.Entity
			If ((Object.Equals(previousValue, value) = false)  _
						OrElse (Me._P_0044_cls.HasLoadedOrAssignedValue = false)) Then
				Me.SendPropertyChanging
				If ((previousValue Is Nothing)  _
							= false) Then
					Me._P_0044_cls.Entity = Nothing
					previousValue.cli_cls.Remove(Me)
				End If
				Me._P_0044_cls.Entity = value
				If ((value Is Nothing)  _
							= false) Then
					value.cli_cls.Add(Me)
					Me._id_P_0044 = value.id_P_0044
				Else
					Me._id_P_0044 = CType(Nothing, Nullable(Of Integer))
				End If
				Me.SendPropertyChanged("P_0044_cls")
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="P_0058_cls_cli_cls", Storage:="_P_0058_cls", ThisKey:="id_P_0058", OtherKey:="id_P_0058", IsForeignKey:=true)>  _
	Public Property P_0058_cls() As P_0058_cls
		Get
			Return Me._P_0058_cls.Entity
		End Get
		Set
			Dim previousValue As P_0058_cls = Me._P_0058_cls.Entity
			If ((Object.Equals(previousValue, value) = false)  _
						OrElse (Me._P_0058_cls.HasLoadedOrAssignedValue = false)) Then
				Me.SendPropertyChanging
				If ((previousValue Is Nothing)  _
							= false) Then
					Me._P_0058_cls.Entity = Nothing
					previousValue.cli_cls.Remove(Me)
				End If
				Me._P_0058_cls.Entity = value
				If ((value Is Nothing)  _
							= false) Then
					value.cli_cls.Add(Me)
					Me._id_P_0058 = value.id_P_0058
				Else
					Me._id_P_0058 = CType(Nothing, Nullable(Of Integer))
				End If
				Me.SendPropertyChanged("P_0058_cls")
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="P_0064_cls_cli_cls", Storage:="_P_0064_cls", ThisKey:="id_P_0064", OtherKey:="id_P_0064", IsForeignKey:=true)>  _
	Public Property P_0064_cls() As P_0064_cls
		Get
			Return Me._P_0064_cls.Entity
		End Get
		Set
			Dim previousValue As P_0064_cls = Me._P_0064_cls.Entity
			If ((Object.Equals(previousValue, value) = false)  _
						OrElse (Me._P_0064_cls.HasLoadedOrAssignedValue = false)) Then
				Me.SendPropertyChanging
				If ((previousValue Is Nothing)  _
							= false) Then
					Me._P_0064_cls.Entity = Nothing
					previousValue.cli_cls.Remove(Me)
				End If
				Me._P_0064_cls.Entity = value
				If ((value Is Nothing)  _
							= false) Then
					value.cli_cls.Add(Me)
					Me._id_P_0064 = value.id_P_0064
				Else
					Me._id_P_0064 = CType(Nothing, Nullable(Of Integer))
				End If
				Me.SendPropertyChanged("P_0064_cls")
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="P_0067_cls_cli_cls", Storage:="_P_0067_cls", ThisKey:="id_P_0067", OtherKey:="id_P_0067", IsForeignKey:=true)>  _
	Public Property P_0067_cls() As P_0067_cls
		Get
			Return Me._P_0067_cls.Entity
		End Get
		Set
			Dim previousValue As P_0067_cls = Me._P_0067_cls.Entity
			If ((Object.Equals(previousValue, value) = false)  _
						OrElse (Me._P_0067_cls.HasLoadedOrAssignedValue = false)) Then
				Me.SendPropertyChanging
				If ((previousValue Is Nothing)  _
							= false) Then
					Me._P_0067_cls.Entity = Nothing
					previousValue.cli_cls.Remove(Me)
				End If
				Me._P_0067_cls.Entity = value
				If ((value Is Nothing)  _
							= false) Then
					value.cli_cls.Add(Me)
					Me._id_P_0067 = value.id_P_0067
				Else
					Me._id_P_0067 = CType(Nothing, Nullable(Of Integer))
				End If
				Me.SendPropertyChanged("P_0067_cls")
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="P_0068_cls_cli_cls", Storage:="_P_0068_cls", ThisKey:="id_P_0068", OtherKey:="id_P_0068", IsForeignKey:=true)>  _
	Public Property P_0068_cls() As P_0068_cls
		Get
			Return Me._P_0068_cls.Entity
		End Get
		Set
			Dim previousValue As P_0068_cls = Me._P_0068_cls.Entity
			If ((Object.Equals(previousValue, value) = false)  _
						OrElse (Me._P_0068_cls.HasLoadedOrAssignedValue = false)) Then
				Me.SendPropertyChanging
				If ((previousValue Is Nothing)  _
							= false) Then
					Me._P_0068_cls.Entity = Nothing
					previousValue.cli_cls.Remove(Me)
				End If
				Me._P_0068_cls.Entity = value
				If ((value Is Nothing)  _
							= false) Then
					value.cli_cls.Add(Me)
					Me._id_P_0068 = value.id_P_0068
				Else
					Me._id_P_0068 = CType(Nothing, Nullable(Of Integer))
				End If
				Me.SendPropertyChanged("P_0068_cls")
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="P_007_cls_cli_cls", Storage:="_P_007_cls", ThisKey:="id_P_007", OtherKey:="id_P_007", IsForeignKey:=true)>  _
	Public Property P_007_cls() As P_007_cls
		Get
			Return Me._P_007_cls.Entity
		End Get
		Set
			Dim previousValue As P_007_cls = Me._P_007_cls.Entity
			If ((Object.Equals(previousValue, value) = false)  _
						OrElse (Me._P_007_cls.HasLoadedOrAssignedValue = false)) Then
				Me.SendPropertyChanging
				If ((previousValue Is Nothing)  _
							= false) Then
					Me._P_007_cls.Entity = Nothing
					previousValue.cli_cls.Remove(Me)
				End If
				Me._P_007_cls.Entity = value
				If ((value Is Nothing)  _
							= false) Then
					value.cli_cls.Add(Me)
					Me._id_P_007 = value.id_P_007
				Else
					Me._id_P_007 = CType(Nothing, Nullable(Of Integer))
				End If
				Me.SendPropertyChanged("P_007_cls")
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="P_0076_cls_cli_cls", Storage:="_P_0076_cls", ThisKey:="id_P_0076", OtherKey:="id_P_0076", IsForeignKey:=true)>  _
	Public Property P_0076_cls() As P_0076_cls
		Get
			Return Me._P_0076_cls.Entity
		End Get
		Set
			Dim previousValue As P_0076_cls = Me._P_0076_cls.Entity
			If ((Object.Equals(previousValue, value) = false)  _
						OrElse (Me._P_0076_cls.HasLoadedOrAssignedValue = false)) Then
				Me.SendPropertyChanging
				If ((previousValue Is Nothing)  _
							= false) Then
					Me._P_0076_cls.Entity = Nothing
					previousValue.cli_cls.Remove(Me)
				End If
				Me._P_0076_cls.Entity = value
				If ((value Is Nothing)  _
							= false) Then
					value.cli_cls.Add(Me)
					Me._id_P_0076 = value.id_P_0076
				Else
					Me._id_P_0076 = CType(Nothing, Nullable(Of Integer))
				End If
				Me.SendPropertyChanged("P_0076_cls")
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="P_008_cls_cli_cls", Storage:="_P_008_cls", ThisKey:="id_P_008", OtherKey:="id_P_008", IsForeignKey:=true)>  _
	Public Property P_008_cls() As P_008_cls
		Get
			Return Me._P_008_cls.Entity
		End Get
		Set
			Dim previousValue As P_008_cls = Me._P_008_cls.Entity
			If ((Object.Equals(previousValue, value) = false)  _
						OrElse (Me._P_008_cls.HasLoadedOrAssignedValue = false)) Then
				Me.SendPropertyChanging
				If ((previousValue Is Nothing)  _
							= false) Then
					Me._P_008_cls.Entity = Nothing
					previousValue.cli_cls.Remove(Me)
				End If
				Me._P_008_cls.Entity = value
				If ((value Is Nothing)  _
							= false) Then
					value.cli_cls.Add(Me)
					Me._id_P_008 = value.id_P_008
				Else
					Me._id_P_008 = CType(Nothing, Nullable(Of Integer))
				End If
				Me.SendPropertyChanged("P_008_cls")
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="P_0118_cls_cli_cls", Storage:="_P_0118_cls", ThisKey:="id_p_0118", OtherKey:="id_P_0118", IsForeignKey:=true)>  _
	Public Property P_0118_cls() As P_0118_cls
		Get
			Return Me._P_0118_cls.Entity
		End Get
		Set
			Dim previousValue As P_0118_cls = Me._P_0118_cls.Entity
			If ((Object.Equals(previousValue, value) = false)  _
						OrElse (Me._P_0118_cls.HasLoadedOrAssignedValue = false)) Then
				Me.SendPropertyChanging
				If ((previousValue Is Nothing)  _
							= false) Then
					Me._P_0118_cls.Entity = Nothing
					previousValue.cli_cls.Remove(Me)
				End If
				Me._P_0118_cls.Entity = value
				If ((value Is Nothing)  _
							= false) Then
					value.cli_cls.Add(Me)
					Me._id_p_0118 = value.id_P_0118
				Else
					Me._id_p_0118 = CType(Nothing, Nullable(Of Integer))
				End If
				Me.SendPropertyChanged("P_0118_cls")
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="P_0119_cls_cli_cls", Storage:="_P_0119_cls", ThisKey:="id_P_0119", OtherKey:="id_0119", IsForeignKey:=true)>  _
	Public Property P_0119_cls() As P_0119_cls
		Get
			Return Me._P_0119_cls.Entity
		End Get
		Set
			Dim previousValue As P_0119_cls = Me._P_0119_cls.Entity
			If ((Object.Equals(previousValue, value) = false)  _
						OrElse (Me._P_0119_cls.HasLoadedOrAssignedValue = false)) Then
				Me.SendPropertyChanging
				If ((previousValue Is Nothing)  _
							= false) Then
					Me._P_0119_cls.Entity = Nothing
					previousValue.cli_cls.Remove(Me)
				End If
				Me._P_0119_cls.Entity = value
				If ((value Is Nothing)  _
							= false) Then
					value.cli_cls.Add(Me)
					Me._id_P_0119 = value.id_0119
				Else
					Me._id_P_0119 = CType(Nothing, Nullable(Of Integer))
				End If
				Me.SendPropertyChanged("P_0119_cls")
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="P_0313_cls_cli_cls", Storage:="_P_0313_cls", ThisKey:="id_P_0313", OtherKey:="id_P_0313", IsForeignKey:=true)>  _
	Public Property P_0313_cls() As P_0313_cls
		Get
			Return Me._P_0313_cls.Entity
		End Get
		Set
			Dim previousValue As P_0313_cls = Me._P_0313_cls.Entity
			If ((Object.Equals(previousValue, value) = false)  _
						OrElse (Me._P_0313_cls.HasLoadedOrAssignedValue = false)) Then
				Me.SendPropertyChanging
				If ((previousValue Is Nothing)  _
							= false) Then
					Me._P_0313_cls.Entity = Nothing
					previousValue.cli_cls.Remove(Me)
				End If
				Me._P_0313_cls.Entity = value
				If ((value Is Nothing)  _
							= false) Then
					value.cli_cls.Add(Me)
					Me._id_P_0313 = value.id_P_0313
				Else
					Me._id_P_0313 = CType(Nothing, Nullable(Of Integer))
				End If
				Me.SendPropertyChanged("P_0313_cls")
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="PL_000006_cls_cli_cls", Storage:="_PL_000006_cls", ThisKey:="id_PL_000006", OtherKey:="id_PL_000006", IsForeignKey:=true)>  _
	Public Property PL_000006_cls() As PL_000006_cls
		Get
			Return Me._PL_000006_cls.Entity
		End Get
		Set
			Dim previousValue As PL_000006_cls = Me._PL_000006_cls.Entity
			If ((Object.Equals(previousValue, value) = false)  _
						OrElse (Me._PL_000006_cls.HasLoadedOrAssignedValue = false)) Then
				Me.SendPropertyChanging
				If ((previousValue Is Nothing)  _
							= false) Then
					Me._PL_000006_cls.Entity = Nothing
					previousValue.cli_cls.Remove(Me)
				End If
				Me._PL_000006_cls.Entity = value
				If ((value Is Nothing)  _
							= false) Then
					value.cli_cls.Add(Me)
					Me._id_PL_000006 = value.id_PL_000006
				Else
					Me._id_PL_000006 = CType(Nothing, String)
				End If
				Me.SendPropertyChanged("PL_000006_cls")
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="PL_000066_cls_cli_cls", Storage:="_PL_000066_cls", ThisKey:="id_PL_000066", OtherKey:="id_PL_000066", IsForeignKey:=true)>  _
	Public Property PL_000066_cls() As PL_000066_cls
		Get
			Return Me._PL_000066_cls.Entity
		End Get
		Set
			Dim previousValue As PL_000066_cls = Me._PL_000066_cls.Entity
			If ((Object.Equals(previousValue, value) = false)  _
						OrElse (Me._PL_000066_cls.HasLoadedOrAssignedValue = false)) Then
				Me.SendPropertyChanging
				If ((previousValue Is Nothing)  _
							= false) Then
					Me._PL_000066_cls.Entity = Nothing
					previousValue.cli_cls.Remove(Me)
				End If
				Me._PL_000066_cls.Entity = value
				If ((value Is Nothing)  _
							= false) Then
					value.cli_cls.Add(Me)
					Me._id_PL_000066 = value.id_PL_000066
				Else
					Me._id_PL_000066 = CType(Nothing, String)
				End If
				Me.SendPropertyChanged("PL_000066_cls")
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="suc_cls_cli_cls", Storage:="_suc_cls", ThisKey:="id_suc", OtherKey:="id_suc", IsForeignKey:=true)>  _
	Public Property suc_cls() As suc_cls
		Get
			Return Me._suc_cls.Entity
		End Get
		Set
			Dim previousValue As suc_cls = Me._suc_cls.Entity
			If ((Object.Equals(previousValue, value) = false)  _
						OrElse (Me._suc_cls.HasLoadedOrAssignedValue = false)) Then
				Me.SendPropertyChanging
				If ((previousValue Is Nothing)  _
							= false) Then
					Me._suc_cls.Entity = Nothing
					previousValue.cli_cls.Remove(Me)
				End If
				Me._suc_cls.Entity = value
				If ((value Is Nothing)  _
							= false) Then
					value.cli_cls.Add(Me)
					Me._id_suc = value.id_suc
				Else
					Me._id_suc = CType(Nothing, Nullable(Of Integer))
				End If
				Me.SendPropertyChanged("suc_cls")
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="eje_cls_cli_cls", Storage:="_eje", ThisKey:="id_eje_cod_cob", OtherKey:="id_eje", IsForeignKey:=true)>  _
	Public Property eje() As eje_cls
		Get
			Return Me._eje.Entity
		End Get
		Set
			Dim previousValue As eje_cls = Me._eje.Entity
			If ((Object.Equals(previousValue, value) = false)  _
						OrElse (Me._eje.HasLoadedOrAssignedValue = false)) Then
				Me.SendPropertyChanging
				If ((previousValue Is Nothing)  _
							= false) Then
					Me._eje.Entity = Nothing
					previousValue.cli_cls.Remove(Me)
				End If
				Me._eje.Entity = value
				If ((value Is Nothing)  _
							= false) Then
					value.cli_cls.Add(Me)
					Me._id_eje_cod_cob = value.id_eje
				Else
					Me._id_eje_cod_cob = CType(Nothing, Nullable(Of Integer))
				End If
				Me.SendPropertyChanged("eje")
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="eje_cls_cli_cls1", Storage:="_eje_cls", ThisKey:="id_eje_cod_eje", OtherKey:="id_eje", IsForeignKey:=true)>  _
	Public Property eje_cls() As eje_cls
		Get
			Return Me._eje_cls.Entity
		End Get
		Set
			Dim previousValue As eje_cls = Me._eje_cls.Entity
			If ((Object.Equals(previousValue, value) = false)  _
						OrElse (Me._eje_cls.HasLoadedOrAssignedValue = false)) Then
				Me.SendPropertyChanging
				If ((previousValue Is Nothing)  _
							= false) Then
					Me._eje_cls.Entity = Nothing
					previousValue.cli_cls1.Remove(Me)
				End If
				Me._eje_cls.Entity = value
				If ((value Is Nothing)  _
							= false) Then
					value.cli_cls1.Add(Me)
					Me._id_eje_cod_eje = value.id_eje
				Else
					Me._id_eje_cod_eje = CType(Nothing, Nullable(Of Integer))
				End If
				Me.SendPropertyChanged("eje_cls")
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
	
	Private Sub attach_apl_cls(ByVal entity As apl_cls)
		Me.SendPropertyChanging
		entity.cli_cls = Me
	End Sub
	
	Private Sub detach_apl_cls(ByVal entity As apl_cls)
		Me.SendPropertyChanging
		entity.cli_cls = Nothing
	End Sub
	
	Private Sub attach_avl_cls(ByVal entity As avl_cls)
		Me.SendPropertyChanging
		entity.cli_cls = Me
	End Sub
	
	Private Sub detach_avl_cls(ByVal entity As avl_cls)
		Me.SendPropertyChanging
		entity.cli_cls = Nothing
	End Sub
	
	Private Sub attach_cft_cls(ByVal entity As cft_cls)
		Me.SendPropertyChanging
		entity.cli_cls = Me
	End Sub
	
	Private Sub detach_cft_cls(ByVal entity As cft_cls)
		Me.SendPropertyChanging
		entity.cli_cls = Nothing
	End Sub
	
	Private Sub attach_cnc_cls(ByVal entity As cnc_cls)
		Me.SendPropertyChanging
		entity.cli_cls = Me
	End Sub
	
	Private Sub detach_cnc_cls(ByVal entity As cnc_cls)
		Me.SendPropertyChanging
		entity.cli_cls = Nothing
	End Sub
	
	Private Sub attach_con_cls(ByVal entity As con_cls)
		Me.SendPropertyChanging
		entity.cli_cls = Me
	End Sub
	
	Private Sub detach_con_cls(ByVal entity As con_cls)
		Me.SendPropertyChanging
		entity.cli_cls = Nothing
	End Sub
	
	Private Sub attach_cxc_cls(ByVal entity As cxc_cls)
		Me.SendPropertyChanging
		entity.cli_cls = Me
	End Sub
	
	Private Sub detach_cxc_cls(ByVal entity As cxc_cls)
		Me.SendPropertyChanging
		entity.cli_cls = Nothing
	End Sub
	
	Private Sub attach_cxp_cls(ByVal entity As cxp_cls)
		Me.SendPropertyChanging
		entity.cli_cls = Me
	End Sub
	
	Private Sub detach_cxp_cls(ByVal entity As cxp_cls)
		Me.SendPropertyChanging
		entity.cli_cls = Nothing
	End Sub
	
	Private Sub attach_ddr_cls(ByVal entity As ddr_cls)
		Me.SendPropertyChanging
		entity.cli_cls = Me
	End Sub
	
	Private Sub detach_ddr_cls(ByVal entity As ddr_cls)
		Me.SendPropertyChanging
		entity.cli_cls = Nothing
	End Sub
	
	Private Sub attach_dpa_cls(ByVal entity As dpa_cls)
		Me.SendPropertyChanging
		entity.cli_cls = Me
	End Sub
	
	Private Sub detach_dpa_cls(ByVal entity As dpa_cls)
		Me.SendPropertyChanging
		entity.cli_cls = Nothing
	End Sub
	
	Private Sub attach_dsb_cls(ByVal entity As dsb_cls)
		Me.SendPropertyChanging
		entity.cli_cls = Me
	End Sub
	
	Private Sub detach_dsb_cls(ByVal entity As dsb_cls)
		Me.SendPropertyChanging
		entity.cli_cls = Nothing
	End Sub
	
	Private Sub attach_dvf_cls(ByVal entity As dvf_cls)
		Me.SendPropertyChanging
		entity.cli_cls = Me
	End Sub
	
	Private Sub detach_dvf_cls(ByVal entity As dvf_cls)
		Me.SendPropertyChanging
		entity.cli_cls = Nothing
	End Sub
	
	Private Sub attach_egr_cls(ByVal entity As egr_cls)
		Me.SendPropertyChanging
		entity.cli_cls = Me
	End Sub
	
	Private Sub detach_egr_cls(ByVal entity As egr_cls)
		Me.SendPropertyChanging
		entity.cli_cls = Nothing
	End Sub
	
	Private Sub attach_emp_cls(ByVal entity As emp_cls)
		Me.SendPropertyChanging
		entity.cli_cls = Me
	End Sub
	
	Private Sub detach_emp_cls(ByVal entity As emp_cls)
		Me.SendPropertyChanging
		entity.cli_cls = Nothing
	End Sub
	
	Private Sub attach_eva_cls(ByVal entity As eva_cls)
		Me.SendPropertyChanging
		entity.cli_cls = Me
	End Sub
	
	Private Sub detach_eva_cls(ByVal entity As eva_cls)
		Me.SendPropertyChanging
		entity.cli_cls = Nothing
	End Sub
	
	Private Sub attach_fdd_cls(ByVal entity As fdd_cls)
		Me.SendPropertyChanging
		entity.cli_cls = Me
	End Sub
	
	Private Sub detach_fdd_cls(ByVal entity As fdd_cls)
		Me.SendPropertyChanging
		entity.cli_cls = Nothing
	End Sub
	
	Private Sub attach_GDC_cls(ByVal entity As GDC_cls)
		Me.SendPropertyChanging
		entity.cli_cls = Me
	End Sub
	
	Private Sub detach_GDC_cls(ByVal entity As GDC_cls)
		Me.SendPropertyChanging
		entity.cli_cls = Nothing
	End Sub
	
	Private Sub attach_ing_sec_cls(ByVal entity As ing_sec_cls)
		Me.SendPropertyChanging
		entity.cli_cls = Me
	End Sub
	
	Private Sub detach_ing_sec_cls(ByVal entity As ing_sec_cls)
		Me.SendPropertyChanging
		entity.cli_cls = Nothing
	End Sub
	
	Private Sub attach_ldc_cls(ByVal entity As ldc_cls)
		Me.SendPropertyChanging
		entity.cli_cls = Me
	End Sub
	
	Private Sub detach_ldc_cls(ByVal entity As ldc_cls)
		Me.SendPropertyChanging
		entity.cli_cls = Nothing
	End Sub
	
	Private Sub attach_nbc_cls(ByVal entity As nbc_cls)
		Me.SendPropertyChanging
		entity.cli_cls = Me
	End Sub
	
	Private Sub detach_nbc_cls(ByVal entity As nbc_cls)
		Me.SendPropertyChanging
		entity.cli_cls = Nothing
	End Sub
	
	Private Sub attach_nce_cls(ByVal entity As nce_cls)
		Me.SendPropertyChanging
		entity.cli_cls = Me
	End Sub
	
	Private Sub detach_nce_cls(ByVal entity As nce_cls)
		Me.SendPropertyChanging
		entity.cli_cls = Nothing
	End Sub
	
	Private Sub attach_org_cls(ByVal entity As org_cls)
		Me.SendPropertyChanging
		entity.cli_cls = Me
	End Sub
	
	Private Sub detach_org_cls(ByVal entity As org_cls)
		Me.SendPropertyChanging
		entity.cli_cls = Nothing
	End Sub
	
	Private Sub attach_pgr_cls(ByVal entity As pgr_cls)
		Me.SendPropertyChanging
		entity.cli_cls = Me
	End Sub
	
	Private Sub detach_pgr_cls(ByVal entity As pgr_cls)
		Me.SendPropertyChanging
		entity.cli_cls = Nothing
	End Sub
	
	Private Sub attach_rsc_cls(ByVal entity As rsc_cls)
		Me.SendPropertyChanging
		entity.cli_cls = Me
	End Sub
	
	Private Sub detach_rsc_cls(ByVal entity As rsc_cls)
		Me.SendPropertyChanging
		entity.cli_cls = Nothing
	End Sub
	
	Private Sub attach_spg_cls(ByVal entity As spg_cls)
		Me.SendPropertyChanging
		entity.cli_cls = Me
	End Sub
	
	Private Sub detach_spg_cls(ByVal entity As spg_cls)
		Me.SendPropertyChanging
		entity.cli_cls = Nothing
	End Sub
	
	Private Sub attach_vst_cls(ByVal entity As vst_cls)
		Me.SendPropertyChanging
		entity.cli_cls = Me
	End Sub
	
	Private Sub detach_vst_cls(ByVal entity As vst_cls)
		Me.SendPropertyChanging
		entity.cli_cls = Nothing
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.cmn")>  _
Partial Public Class cmn_cls
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _id_cmn As Integer
	
	Private _id_ciu As System.Nullable(Of Integer)
	
	Private _id_zon As System.Nullable(Of Integer)
	
	Private _cmn_des As String
	
	Private _cmn_num_temporal As System.Nullable(Of Integer)
	
	Private _CMN_EST As System.Nullable(Of Char)
	
	Private _avl As EntitySet(Of avl_cls)
	
	Private _avl_cls As EntitySet(Of avl_cls)
	
	Private _cli_cls As EntitySet(Of cli_cls)
	
	Private _ddi_cls As EntitySet(Of ddi_cls)
	
	Private _deu_cls As EntitySet(Of deu_cls)
	
	Private _ntr_cls As EntitySet(Of ntr_cls)
	
	Private _ciu_cls As EntityRef(Of ciu_cls)
	
	Private _zon_cls As EntityRef(Of zon_cls)
	
    #Region "Definiciones de métodos de extensibilidad"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub Onid_cmnChanging(value As Integer)
    End Sub
    Partial Private Sub Onid_cmnChanged()
    End Sub
    Partial Private Sub Onid_ciuChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub Onid_ciuChanged()
    End Sub
    Partial Private Sub Onid_zonChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub Onid_zonChanged()
    End Sub
    Partial Private Sub Oncmn_desChanging(value As String)
    End Sub
    Partial Private Sub Oncmn_desChanged()
    End Sub
    Partial Private Sub Oncmn_num_temporalChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub Oncmn_num_temporalChanged()
    End Sub
    Partial Private Sub OnCMN_ESTChanging(value As System.Nullable(Of Char))
    End Sub
    Partial Private Sub OnCMN_ESTChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		Me._avl = New EntitySet(Of avl_cls)(AddressOf Me.attach_avl, AddressOf Me.detach_avl)
		Me._avl_cls = New EntitySet(Of avl_cls)(AddressOf Me.attach_avl_cls, AddressOf Me.detach_avl_cls)
		Me._cli_cls = New EntitySet(Of cli_cls)(AddressOf Me.attach_cli_cls, AddressOf Me.detach_cli_cls)
		Me._ddi_cls = New EntitySet(Of ddi_cls)(AddressOf Me.attach_ddi_cls, AddressOf Me.detach_ddi_cls)
		Me._deu_cls = New EntitySet(Of deu_cls)(AddressOf Me.attach_deu_cls, AddressOf Me.detach_deu_cls)
		Me._ntr_cls = New EntitySet(Of ntr_cls)(AddressOf Me.attach_ntr_cls, AddressOf Me.detach_ntr_cls)
		Me._ciu_cls = CType(Nothing, EntityRef(Of ciu_cls))
		Me._zon_cls = CType(Nothing, EntityRef(Of zon_cls))
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_id_cmn", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property id_cmn() As Integer
		Get
			Return Me._id_cmn
		End Get
		Set
			If ((Me._id_cmn = value)  _
						= false) Then
				Me.Onid_cmnChanging(value)
				Me.SendPropertyChanging
				Me._id_cmn = value
				Me.SendPropertyChanged("id_cmn")
				Me.Onid_cmnChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_id_ciu", DbType:="Int")>  _
	Public Property id_ciu() As System.Nullable(Of Integer)
		Get
			Return Me._id_ciu
		End Get
		Set
			If (Me._id_ciu.Equals(value) = false) Then
				If Me._ciu_cls.HasLoadedOrAssignedValue Then
					Throw New System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException()
				End If
				Me.Onid_ciuChanging(value)
				Me.SendPropertyChanging
				Me._id_ciu = value
				Me.SendPropertyChanged("id_ciu")
				Me.Onid_ciuChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_id_zon", DbType:="Int")>  _
	Public Property id_zon() As System.Nullable(Of Integer)
		Get
			Return Me._id_zon
		End Get
		Set
			If (Me._id_zon.Equals(value) = false) Then
				If Me._zon_cls.HasLoadedOrAssignedValue Then
					Throw New System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException()
				End If
				Me.Onid_zonChanging(value)
				Me.SendPropertyChanging
				Me._id_zon = value
				Me.SendPropertyChanged("id_zon")
				Me.Onid_zonChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_cmn_des", DbType:="VarChar(50)")>  _
	Public Property cmn_des() As String
		Get
			Return Me._cmn_des
		End Get
		Set
			If (String.Equals(Me._cmn_des, value) = false) Then
				Me.Oncmn_desChanging(value)
				Me.SendPropertyChanging
				Me._cmn_des = value
				Me.SendPropertyChanged("cmn_des")
				Me.Oncmn_desChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_cmn_num_temporal", DbType:="Int")>  _
	Public Property cmn_num_temporal() As System.Nullable(Of Integer)
		Get
			Return Me._cmn_num_temporal
		End Get
		Set
			If (Me._cmn_num_temporal.Equals(value) = false) Then
				Me.Oncmn_num_temporalChanging(value)
				Me.SendPropertyChanging
				Me._cmn_num_temporal = value
				Me.SendPropertyChanged("cmn_num_temporal")
				Me.Oncmn_num_temporalChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CMN_EST", DbType:="Char(1)")>  _
	Public Property CMN_EST() As System.Nullable(Of Char)
		Get
			Return Me._CMN_EST
		End Get
		Set
			If (Me._CMN_EST.Equals(value) = false) Then
				Me.OnCMN_ESTChanging(value)
				Me.SendPropertyChanging
				Me._CMN_EST = value
				Me.SendPropertyChanged("CMN_EST")
				Me.OnCMN_ESTChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="cmn_cls_avl_cls", Storage:="_avl", ThisKey:="id_cmn", OtherKey:="avl_id_cmn")>  _
	Public Property avl() As EntitySet(Of avl_cls)
		Get
			Return Me._avl
		End Get
		Set
			Me._avl.Assign(value)
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="cmn_cls_avl_cls1", Storage:="_avl_cls", ThisKey:="id_cmn", OtherKey:="avl_id_cmn_com")>  _
	Public Property avl_cls() As EntitySet(Of avl_cls)
		Get
			Return Me._avl_cls
		End Get
		Set
			Me._avl_cls.Assign(value)
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="cmn_cls_cli_cls", Storage:="_cli_cls", ThisKey:="id_cmn", OtherKey:="id_cmn")>  _
	Public Property cli_cls() As EntitySet(Of cli_cls)
		Get
			Return Me._cli_cls
		End Get
		Set
			Me._cli_cls.Assign(value)
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="cmn_cls_ddi_cls", Storage:="_ddi_cls", ThisKey:="id_cmn", OtherKey:="id_cmn")>  _
	Public Property ddi_cls() As EntitySet(Of ddi_cls)
		Get
			Return Me._ddi_cls
		End Get
		Set
			Me._ddi_cls.Assign(value)
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="cmn_cls_deu_cls", Storage:="_deu_cls", ThisKey:="id_cmn", OtherKey:="id_cmn")>  _
	Public Property deu_cls() As EntitySet(Of deu_cls)
		Get
			Return Me._deu_cls
		End Get
		Set
			Me._deu_cls.Assign(value)
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="cmn_cls_ntr_cls", Storage:="_ntr_cls", ThisKey:="id_cmn", OtherKey:="id_cmn")>  _
	Public Property ntr_cls() As EntitySet(Of ntr_cls)
		Get
			Return Me._ntr_cls
		End Get
		Set
			Me._ntr_cls.Assign(value)
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="ciu_cls_cmn_cls", Storage:="_ciu_cls", ThisKey:="id_ciu", OtherKey:="id_ciu", IsForeignKey:=true)>  _
	Public Property ciu_cls() As ciu_cls
		Get
			Return Me._ciu_cls.Entity
		End Get
		Set
			Dim previousValue As ciu_cls = Me._ciu_cls.Entity
			If ((Object.Equals(previousValue, value) = false)  _
						OrElse (Me._ciu_cls.HasLoadedOrAssignedValue = false)) Then
				Me.SendPropertyChanging
				If ((previousValue Is Nothing)  _
							= false) Then
					Me._ciu_cls.Entity = Nothing
					previousValue.cmn_cls.Remove(Me)
				End If
				Me._ciu_cls.Entity = value
				If ((value Is Nothing)  _
							= false) Then
					value.cmn_cls.Add(Me)
					Me._id_ciu = value.id_ciu
				Else
					Me._id_ciu = CType(Nothing, Nullable(Of Integer))
				End If
				Me.SendPropertyChanged("ciu_cls")
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="zon_cls_cmn_cls", Storage:="_zon_cls", ThisKey:="id_zon", OtherKey:="id_zon", IsForeignKey:=true)>  _
	Public Property zon_cls() As zon_cls
		Get
			Return Me._zon_cls.Entity
		End Get
		Set
			Dim previousValue As zon_cls = Me._zon_cls.Entity
			If ((Object.Equals(previousValue, value) = false)  _
						OrElse (Me._zon_cls.HasLoadedOrAssignedValue = false)) Then
				Me.SendPropertyChanging
				If ((previousValue Is Nothing)  _
							= false) Then
					Me._zon_cls.Entity = Nothing
					previousValue.cmn_cls.Remove(Me)
				End If
				Me._zon_cls.Entity = value
				If ((value Is Nothing)  _
							= false) Then
					value.cmn_cls.Add(Me)
					Me._id_zon = value.id_zon
				Else
					Me._id_zon = CType(Nothing, Nullable(Of Integer))
				End If
				Me.SendPropertyChanged("zon_cls")
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
	
	Private Sub attach_avl(ByVal entity As avl_cls)
		Me.SendPropertyChanging
		entity.cmn = Me
	End Sub
	
	Private Sub detach_avl(ByVal entity As avl_cls)
		Me.SendPropertyChanging
		entity.cmn = Nothing
	End Sub
	
	Private Sub attach_avl_cls(ByVal entity As avl_cls)
		Me.SendPropertyChanging
		entity.cmn_cls = Me
	End Sub
	
	Private Sub detach_avl_cls(ByVal entity As avl_cls)
		Me.SendPropertyChanging
		entity.cmn_cls = Nothing
	End Sub
	
	Private Sub attach_cli_cls(ByVal entity As cli_cls)
		Me.SendPropertyChanging
		entity.cmn_cls = Me
	End Sub
	
	Private Sub detach_cli_cls(ByVal entity As cli_cls)
		Me.SendPropertyChanging
		entity.cmn_cls = Nothing
	End Sub
	
	Private Sub attach_ddi_cls(ByVal entity As ddi_cls)
		Me.SendPropertyChanging
		entity.cmn_cls = Me
	End Sub
	
	Private Sub detach_ddi_cls(ByVal entity As ddi_cls)
		Me.SendPropertyChanging
		entity.cmn_cls = Nothing
	End Sub
	
	Private Sub attach_deu_cls(ByVal entity As deu_cls)
		Me.SendPropertyChanging
		entity.cmn_cls = Me
	End Sub
	
	Private Sub detach_deu_cls(ByVal entity As deu_cls)
		Me.SendPropertyChanging
		entity.cmn_cls = Nothing
	End Sub
	
	Private Sub attach_ntr_cls(ByVal entity As ntr_cls)
		Me.SendPropertyChanging
		entity.cmn_cls = Me
	End Sub
	
	Private Sub detach_ntr_cls(ByVal entity As ntr_cls)
		Me.SendPropertyChanging
		entity.cmn_cls = Nothing
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.cnc")>  _
Partial Public Class cnc_cls
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _id_cnc As Decimal
	
	Private _cli_idc As String
	
	Private _deu_ide As String
	
	Private _cnc_cli_ddr As System.Nullable(Of Char)
	
	Private _cnc_nom As String
	
	Private _cnc_car As String
	
	Private _cnc_obs As String
	
	Private _cnc_def As System.Nullable(Of Char)
	
	Private _cnc_tel As String
	
	Private _cnc_fax As String
	
	Private _cnc_ema As String
	
	Private _cnc_not As System.Nullable(Of Char)
	
	Private _cnc_tel2 As String
	
	Private _cnc_tel3 As String
	
	Private _cnc_rep_leg As System.Nullable(Of Char)
	
	Private _cnc_num_temporal As System.Nullable(Of Integer)
	
	Private _cnc_dir As String
	
	Private _cnc_rut As String
	
	Private _cnc_dig As String
	
	Private _ctn_cls As EntitySet(Of ctn_cls)
	
	Private _dvf_cls As EntitySet(Of dvf_cls)
	
	Private _gsn_cls As EntitySet(Of gsn_cls)
	
	Private _cli_cls As EntityRef(Of cli_cls)
	
	Private _deu_cls As EntityRef(Of deu_cls)
	
    #Region "Definiciones de métodos de extensibilidad"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub Onid_cncChanging(value As Decimal)
    End Sub
    Partial Private Sub Onid_cncChanged()
    End Sub
    Partial Private Sub Oncli_idcChanging(value As String)
    End Sub
    Partial Private Sub Oncli_idcChanged()
    End Sub
    Partial Private Sub Ondeu_ideChanging(value As String)
    End Sub
    Partial Private Sub Ondeu_ideChanged()
    End Sub
    Partial Private Sub Oncnc_cli_ddrChanging(value As System.Nullable(Of Char))
    End Sub
    Partial Private Sub Oncnc_cli_ddrChanged()
    End Sub
    Partial Private Sub Oncnc_nomChanging(value As String)
    End Sub
    Partial Private Sub Oncnc_nomChanged()
    End Sub
    Partial Private Sub Oncnc_carChanging(value As String)
    End Sub
    Partial Private Sub Oncnc_carChanged()
    End Sub
    Partial Private Sub Oncnc_obsChanging(value As String)
    End Sub
    Partial Private Sub Oncnc_obsChanged()
    End Sub
    Partial Private Sub Oncnc_defChanging(value As System.Nullable(Of Char))
    End Sub
    Partial Private Sub Oncnc_defChanged()
    End Sub
    Partial Private Sub Oncnc_telChanging(value As String)
    End Sub
    Partial Private Sub Oncnc_telChanged()
    End Sub
    Partial Private Sub Oncnc_faxChanging(value As String)
    End Sub
    Partial Private Sub Oncnc_faxChanged()
    End Sub
    Partial Private Sub Oncnc_emaChanging(value As String)
    End Sub
    Partial Private Sub Oncnc_emaChanged()
    End Sub
    Partial Private Sub Oncnc_notChanging(value As System.Nullable(Of Char))
    End Sub
    Partial Private Sub Oncnc_notChanged()
    End Sub
    Partial Private Sub Oncnc_tel2Changing(value As String)
    End Sub
    Partial Private Sub Oncnc_tel2Changed()
    End Sub
    Partial Private Sub Oncnc_tel3Changing(value As String)
    End Sub
    Partial Private Sub Oncnc_tel3Changed()
    End Sub
    Partial Private Sub Oncnc_rep_legChanging(value As System.Nullable(Of Char))
    End Sub
    Partial Private Sub Oncnc_rep_legChanged()
    End Sub
    Partial Private Sub Oncnc_num_temporalChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub Oncnc_num_temporalChanged()
    End Sub
    Partial Private Sub Oncnc_dirChanging(value As String)
    End Sub
    Partial Private Sub Oncnc_dirChanged()
    End Sub
    Partial Private Sub Oncnc_rutChanging(value As String)
    End Sub
    Partial Private Sub Oncnc_rutChanged()
    End Sub
    Partial Private Sub Oncnc_digChanging(value As String)
    End Sub
    Partial Private Sub Oncnc_digChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		Me._ctn_cls = New EntitySet(Of ctn_cls)(AddressOf Me.attach_ctn_cls, AddressOf Me.detach_ctn_cls)
		Me._dvf_cls = New EntitySet(Of dvf_cls)(AddressOf Me.attach_dvf_cls, AddressOf Me.detach_dvf_cls)
		Me._gsn_cls = New EntitySet(Of gsn_cls)(AddressOf Me.attach_gsn_cls, AddressOf Me.detach_gsn_cls)
		Me._cli_cls = CType(Nothing, EntityRef(Of cli_cls))
		Me._deu_cls = CType(Nothing, EntityRef(Of deu_cls))
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_id_cnc", AutoSync:=AutoSync.OnInsert, DbType:="Decimal(10,0) NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property id_cnc() As Decimal
		Get
			Return Me._id_cnc
		End Get
		Set
			If ((Me._id_cnc = value)  _
						= false) Then
				Me.Onid_cncChanging(value)
				Me.SendPropertyChanging
				Me._id_cnc = value
				Me.SendPropertyChanged("id_cnc")
				Me.Onid_cncChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_cli_idc", DbType:="Char(12)")>  _
	Public Property cli_idc() As String
		Get
			Return Me._cli_idc
		End Get
		Set
			If (String.Equals(Me._cli_idc, value) = false) Then
				If Me._cli_cls.HasLoadedOrAssignedValue Then
					Throw New System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException()
				End If
				Me.Oncli_idcChanging(value)
				Me.SendPropertyChanging
				Me._cli_idc = value
				Me.SendPropertyChanged("cli_idc")
				Me.Oncli_idcChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_deu_ide", DbType:="Char(12)")>  _
	Public Property deu_ide() As String
		Get
			Return Me._deu_ide
		End Get
		Set
			If (String.Equals(Me._deu_ide, value) = false) Then
				If Me._deu_cls.HasLoadedOrAssignedValue Then
					Throw New System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException()
				End If
				Me.Ondeu_ideChanging(value)
				Me.SendPropertyChanging
				Me._deu_ide = value
				Me.SendPropertyChanged("deu_ide")
				Me.Ondeu_ideChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_cnc_cli_ddr", DbType:="Char(1)")>  _
	Public Property cnc_cli_ddr() As System.Nullable(Of Char)
		Get
			Return Me._cnc_cli_ddr
		End Get
		Set
			If (Me._cnc_cli_ddr.Equals(value) = false) Then
				Me.Oncnc_cli_ddrChanging(value)
				Me.SendPropertyChanging
				Me._cnc_cli_ddr = value
				Me.SendPropertyChanged("cnc_cli_ddr")
				Me.Oncnc_cli_ddrChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_cnc_nom", DbType:="Char(50)")>  _
	Public Property cnc_nom() As String
		Get
			Return Me._cnc_nom
		End Get
		Set
			If (String.Equals(Me._cnc_nom, value) = false) Then
				Me.Oncnc_nomChanging(value)
				Me.SendPropertyChanging
				Me._cnc_nom = value
				Me.SendPropertyChanged("cnc_nom")
				Me.Oncnc_nomChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_cnc_car", DbType:="VarChar(50)")>  _
	Public Property cnc_car() As String
		Get
			Return Me._cnc_car
		End Get
		Set
			If (String.Equals(Me._cnc_car, value) = false) Then
				Me.Oncnc_carChanging(value)
				Me.SendPropertyChanging
				Me._cnc_car = value
				Me.SendPropertyChanged("cnc_car")
				Me.Oncnc_carChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_cnc_obs", DbType:="Char(50)")>  _
	Public Property cnc_obs() As String
		Get
			Return Me._cnc_obs
		End Get
		Set
			If (String.Equals(Me._cnc_obs, value) = false) Then
				Me.Oncnc_obsChanging(value)
				Me.SendPropertyChanging
				Me._cnc_obs = value
				Me.SendPropertyChanged("cnc_obs")
				Me.Oncnc_obsChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_cnc_def", DbType:="Char(1)")>  _
	Public Property cnc_def() As System.Nullable(Of Char)
		Get
			Return Me._cnc_def
		End Get
		Set
			If (Me._cnc_def.Equals(value) = false) Then
				Me.Oncnc_defChanging(value)
				Me.SendPropertyChanging
				Me._cnc_def = value
				Me.SendPropertyChanged("cnc_def")
				Me.Oncnc_defChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_cnc_tel", DbType:="Char(10)")>  _
	Public Property cnc_tel() As String
		Get
			Return Me._cnc_tel
		End Get
		Set
			If (String.Equals(Me._cnc_tel, value) = false) Then
				Me.Oncnc_telChanging(value)
				Me.SendPropertyChanging
				Me._cnc_tel = value
				Me.SendPropertyChanged("cnc_tel")
				Me.Oncnc_telChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_cnc_fax", DbType:="Char(10)")>  _
	Public Property cnc_fax() As String
		Get
			Return Me._cnc_fax
		End Get
		Set
			If (String.Equals(Me._cnc_fax, value) = false) Then
				Me.Oncnc_faxChanging(value)
				Me.SendPropertyChanging
				Me._cnc_fax = value
				Me.SendPropertyChanged("cnc_fax")
				Me.Oncnc_faxChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_cnc_ema", DbType:="VarChar(50)")>  _
	Public Property cnc_ema() As String
		Get
			Return Me._cnc_ema
		End Get
		Set
			If (String.Equals(Me._cnc_ema, value) = false) Then
				Me.Oncnc_emaChanging(value)
				Me.SendPropertyChanging
				Me._cnc_ema = value
				Me.SendPropertyChanged("cnc_ema")
				Me.Oncnc_emaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_cnc_not", DbType:="Char(1)")>  _
	Public Property cnc_not() As System.Nullable(Of Char)
		Get
			Return Me._cnc_not
		End Get
		Set
			If (Me._cnc_not.Equals(value) = false) Then
				Me.Oncnc_notChanging(value)
				Me.SendPropertyChanging
				Me._cnc_not = value
				Me.SendPropertyChanged("cnc_not")
				Me.Oncnc_notChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_cnc_tel2", DbType:="Char(10)")>  _
	Public Property cnc_tel2() As String
		Get
			Return Me._cnc_tel2
		End Get
		Set
			If (String.Equals(Me._cnc_tel2, value) = false) Then
				Me.Oncnc_tel2Changing(value)
				Me.SendPropertyChanging
				Me._cnc_tel2 = value
				Me.SendPropertyChanged("cnc_tel2")
				Me.Oncnc_tel2Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_cnc_tel3", DbType:="Char(10)")>  _
	Public Property cnc_tel3() As String
		Get
			Return Me._cnc_tel3
		End Get
		Set
			If (String.Equals(Me._cnc_tel3, value) = false) Then
				Me.Oncnc_tel3Changing(value)
				Me.SendPropertyChanging
				Me._cnc_tel3 = value
				Me.SendPropertyChanged("cnc_tel3")
				Me.Oncnc_tel3Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_cnc_rep_leg", DbType:="Char(1)")>  _
	Public Property cnc_rep_leg() As System.Nullable(Of Char)
		Get
			Return Me._cnc_rep_leg
		End Get
		Set
			If (Me._cnc_rep_leg.Equals(value) = false) Then
				Me.Oncnc_rep_legChanging(value)
				Me.SendPropertyChanging
				Me._cnc_rep_leg = value
				Me.SendPropertyChanged("cnc_rep_leg")
				Me.Oncnc_rep_legChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_cnc_num_temporal", DbType:="Int")>  _
	Public Property cnc_num_temporal() As System.Nullable(Of Integer)
		Get
			Return Me._cnc_num_temporal
		End Get
		Set
			If (Me._cnc_num_temporal.Equals(value) = false) Then
				Me.Oncnc_num_temporalChanging(value)
				Me.SendPropertyChanging
				Me._cnc_num_temporal = value
				Me.SendPropertyChanged("cnc_num_temporal")
				Me.Oncnc_num_temporalChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_cnc_dir", DbType:="VarChar(100)")>  _
	Public Property cnc_dir() As String
		Get
			Return Me._cnc_dir
		End Get
		Set
			If (String.Equals(Me._cnc_dir, value) = false) Then
				Me.Oncnc_dirChanging(value)
				Me.SendPropertyChanging
				Me._cnc_dir = value
				Me.SendPropertyChanged("cnc_dir")
				Me.Oncnc_dirChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_cnc_rut", DbType:="VarChar(12)")>  _
	Public Property cnc_rut() As String
		Get
			Return Me._cnc_rut
		End Get
		Set
			If (String.Equals(Me._cnc_rut, value) = false) Then
				Me.Oncnc_rutChanging(value)
				Me.SendPropertyChanging
				Me._cnc_rut = value
				Me.SendPropertyChanged("cnc_rut")
				Me.Oncnc_rutChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_cnc_dig", DbType:="VarChar(1)")>  _
	Public Property cnc_dig() As String
		Get
			Return Me._cnc_dig
		End Get
		Set
			If (String.Equals(Me._cnc_dig, value) = false) Then
				Me.Oncnc_digChanging(value)
				Me.SendPropertyChanging
				Me._cnc_dig = value
				Me.SendPropertyChanged("cnc_dig")
				Me.Oncnc_digChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="cnc_cls_ctn_cls", Storage:="_ctn_cls", ThisKey:="id_cnc", OtherKey:="id_cnc")>  _
	Public Property ctn_cls() As EntitySet(Of ctn_cls)
		Get
			Return Me._ctn_cls
		End Get
		Set
			Me._ctn_cls.Assign(value)
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="cnc_cls_dvf_cls", Storage:="_dvf_cls", ThisKey:="id_cnc", OtherKey:="id_cnc")>  _
	Public Property dvf_cls() As EntitySet(Of dvf_cls)
		Get
			Return Me._dvf_cls
		End Get
		Set
			Me._dvf_cls.Assign(value)
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="cnc_cls_gsn_cls", Storage:="_gsn_cls", ThisKey:="id_cnc", OtherKey:="id_cnc")>  _
	Public Property gsn_cls() As EntitySet(Of gsn_cls)
		Get
			Return Me._gsn_cls
		End Get
		Set
			Me._gsn_cls.Assign(value)
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="cli_cls_cnc_cls", Storage:="_cli_cls", ThisKey:="cli_idc", OtherKey:="cli_idc", IsForeignKey:=true)>  _
	Public Property cli_cls() As cli_cls
		Get
			Return Me._cli_cls.Entity
		End Get
		Set
			Dim previousValue As cli_cls = Me._cli_cls.Entity
			If ((Object.Equals(previousValue, value) = false)  _
						OrElse (Me._cli_cls.HasLoadedOrAssignedValue = false)) Then
				Me.SendPropertyChanging
				If ((previousValue Is Nothing)  _
							= false) Then
					Me._cli_cls.Entity = Nothing
					previousValue.cnc_cls.Remove(Me)
				End If
				Me._cli_cls.Entity = value
				If ((value Is Nothing)  _
							= false) Then
					value.cnc_cls.Add(Me)
					Me._cli_idc = value.cli_idc
				Else
					Me._cli_idc = CType(Nothing, String)
				End If
				Me.SendPropertyChanged("cli_cls")
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="deu_cls_cnc_cls", Storage:="_deu_cls", ThisKey:="deu_ide", OtherKey:="deu_ide", IsForeignKey:=true)>  _
	Public Property deu_cls() As deu_cls
		Get
			Return Me._deu_cls.Entity
		End Get
		Set
			Dim previousValue As deu_cls = Me._deu_cls.Entity
			If ((Object.Equals(previousValue, value) = false)  _
						OrElse (Me._deu_cls.HasLoadedOrAssignedValue = false)) Then
				Me.SendPropertyChanging
				If ((previousValue Is Nothing)  _
							= false) Then
					Me._deu_cls.Entity = Nothing
					previousValue.cnc_cls.Remove(Me)
				End If
				Me._deu_cls.Entity = value
				If ((value Is Nothing)  _
							= false) Then
					value.cnc_cls.Add(Me)
					Me._deu_ide = value.deu_ide
				Else
					Me._deu_ide = CType(Nothing, String)
				End If
				Me.SendPropertyChanged("deu_cls")
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
	
	Private Sub attach_ctn_cls(ByVal entity As ctn_cls)
		Me.SendPropertyChanging
		entity.cnc_cls = Me
	End Sub
	
	Private Sub detach_ctn_cls(ByVal entity As ctn_cls)
		Me.SendPropertyChanging
		entity.cnc_cls = Nothing
	End Sub
	
	Private Sub attach_dvf_cls(ByVal entity As dvf_cls)
		Me.SendPropertyChanging
		entity.cnc_cls = Me
	End Sub
	
	Private Sub detach_dvf_cls(ByVal entity As dvf_cls)
		Me.SendPropertyChanging
		entity.cnc_cls = Nothing
	End Sub
	
	Private Sub attach_gsn_cls(ByVal entity As gsn_cls)
		Me.SendPropertyChanging
		entity.cnc_cls = Me
	End Sub
	
	Private Sub detach_gsn_cls(ByVal entity As gsn_cls)
		Me.SendPropertyChanging
		entity.cnc_cls = Nothing
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.con")>  _
Partial Public Class con_cls
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _id_con As Integer
	
	Private _cli_idc As String
	
	Private _id_p_0023 As System.Nullable(Of Integer)
	
	Private _folio As System.Nullable(Of Decimal)
	
	Private _año As System.Nullable(Of Integer)
	
	Private _id_p_0116 As System.Nullable(Of Integer)
	
	Private _con_fec_con As System.Nullable(Of Date)
	
	Private _id_p_0117 As System.Nullable(Of Integer)
	
	Private _con_ven As System.Nullable(Of Date)
	
	Private _con_fec_mod As System.Nullable(Of Date)
	
	Private _cli_cls As EntityRef(Of cli_cls)
	
	Private _P_0023_cls As EntityRef(Of P_0023_cls)
	
	Private _P_0116_cls As EntityRef(Of P_0116_cls)
	
	Private _P_0117_cls As EntityRef(Of P_0117_cls)
	
    #Region "Definiciones de métodos de extensibilidad"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub Onid_conChanging(value As Integer)
    End Sub
    Partial Private Sub Onid_conChanged()
    End Sub
    Partial Private Sub Oncli_idcChanging(value As String)
    End Sub
    Partial Private Sub Oncli_idcChanged()
    End Sub
    Partial Private Sub Onid_p_0023Changing(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub Onid_p_0023Changed()
    End Sub
    Partial Private Sub OnfolioChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnfolioChanged()
    End Sub
    Partial Private Sub OnañoChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnañoChanged()
    End Sub
    Partial Private Sub Onid_p_0116Changing(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub Onid_p_0116Changed()
    End Sub
    Partial Private Sub Oncon_fec_conChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub Oncon_fec_conChanged()
    End Sub
    Partial Private Sub Onid_p_0117Changing(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub Onid_p_0117Changed()
    End Sub
    Partial Private Sub Oncon_venChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub Oncon_venChanged()
    End Sub
    Partial Private Sub Oncon_fec_modChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub Oncon_fec_modChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		Me._cli_cls = CType(Nothing, EntityRef(Of cli_cls))
		Me._P_0023_cls = CType(Nothing, EntityRef(Of P_0023_cls))
		Me._P_0116_cls = CType(Nothing, EntityRef(Of P_0116_cls))
		Me._P_0117_cls = CType(Nothing, EntityRef(Of P_0117_cls))
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_id_con", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property id_con() As Integer
		Get
			Return Me._id_con
		End Get
		Set
			If ((Me._id_con = value)  _
						= false) Then
				Me.Onid_conChanging(value)
				Me.SendPropertyChanging
				Me._id_con = value
				Me.SendPropertyChanged("id_con")
				Me.Onid_conChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_cli_idc", DbType:="Char(12)")>  _
	Public Property cli_idc() As String
		Get
			Return Me._cli_idc
		End Get
		Set
			If (String.Equals(Me._cli_idc, value) = false) Then
				If Me._cli_cls.HasLoadedOrAssignedValue Then
					Throw New System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException()
				End If
				Me.Oncli_idcChanging(value)
				Me.SendPropertyChanging
				Me._cli_idc = value
				Me.SendPropertyChanged("cli_idc")
				Me.Oncli_idcChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_id_p_0023", DbType:="Int")>  _
	Public Property id_p_0023() As System.Nullable(Of Integer)
		Get
			Return Me._id_p_0023
		End Get
		Set
			If (Me._id_p_0023.Equals(value) = false) Then
				If Me._P_0023_cls.HasLoadedOrAssignedValue Then
					Throw New System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException()
				End If
				Me.Onid_p_0023Changing(value)
				Me.SendPropertyChanging
				Me._id_p_0023 = value
				Me.SendPropertyChanged("id_p_0023")
				Me.Onid_p_0023Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_folio", DbType:="Decimal(11,0)")>  _
	Public Property folio() As System.Nullable(Of Decimal)
		Get
			Return Me._folio
		End Get
		Set
			If (Me._folio.Equals(value) = false) Then
				Me.OnfolioChanging(value)
				Me.SendPropertyChanging
				Me._folio = value
				Me.SendPropertyChanged("folio")
				Me.OnfolioChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_año", DbType:="Int")>  _
	Public Property año() As System.Nullable(Of Integer)
		Get
			Return Me._año
		End Get
		Set
			If (Me._año.Equals(value) = false) Then
				Me.OnañoChanging(value)
				Me.SendPropertyChanging
				Me._año = value
				Me.SendPropertyChanged("año")
				Me.OnañoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_id_p_0116", DbType:="Int")>  _
	Public Property id_p_0116() As System.Nullable(Of Integer)
		Get
			Return Me._id_p_0116
		End Get
		Set
			If (Me._id_p_0116.Equals(value) = false) Then
				If Me._P_0116_cls.HasLoadedOrAssignedValue Then
					Throw New System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException()
				End If
				Me.Onid_p_0116Changing(value)
				Me.SendPropertyChanging
				Me._id_p_0116 = value
				Me.SendPropertyChanged("id_p_0116")
				Me.Onid_p_0116Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_con_fec_con", DbType:="DateTime")>  _
	Public Property con_fec_con() As System.Nullable(Of Date)
		Get
			Return Me._con_fec_con
		End Get
		Set
			If (Me._con_fec_con.Equals(value) = false) Then
				Me.Oncon_fec_conChanging(value)
				Me.SendPropertyChanging
				Me._con_fec_con = value
				Me.SendPropertyChanged("con_fec_con")
				Me.Oncon_fec_conChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_id_p_0117", DbType:="Int")>  _
	Public Property id_p_0117() As System.Nullable(Of Integer)
		Get
			Return Me._id_p_0117
		End Get
		Set
			If (Me._id_p_0117.Equals(value) = false) Then
				If Me._P_0117_cls.HasLoadedOrAssignedValue Then
					Throw New System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException()
				End If
				Me.Onid_p_0117Changing(value)
				Me.SendPropertyChanging
				Me._id_p_0117 = value
				Me.SendPropertyChanged("id_p_0117")
				Me.Onid_p_0117Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_con_ven", DbType:="DateTime")>  _
	Public Property con_ven() As System.Nullable(Of Date)
		Get
			Return Me._con_ven
		End Get
		Set
			If (Me._con_ven.Equals(value) = false) Then
				Me.Oncon_venChanging(value)
				Me.SendPropertyChanging
				Me._con_ven = value
				Me.SendPropertyChanged("con_ven")
				Me.Oncon_venChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_con_fec_mod", DbType:="DateTime")>  _
	Public Property con_fec_mod() As System.Nullable(Of Date)
		Get
			Return Me._con_fec_mod
		End Get
		Set
			If (Me._con_fec_mod.Equals(value) = false) Then
				Me.Oncon_fec_modChanging(value)
				Me.SendPropertyChanging
				Me._con_fec_mod = value
				Me.SendPropertyChanged("con_fec_mod")
				Me.Oncon_fec_modChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="cli_cls_con_cls", Storage:="_cli_cls", ThisKey:="cli_idc", OtherKey:="cli_idc", IsForeignKey:=true)>  _
	Public Property cli_cls() As cli_cls
		Get
			Return Me._cli_cls.Entity
		End Get
		Set
			Dim previousValue As cli_cls = Me._cli_cls.Entity
			If ((Object.Equals(previousValue, value) = false)  _
						OrElse (Me._cli_cls.HasLoadedOrAssignedValue = false)) Then
				Me.SendPropertyChanging
				If ((previousValue Is Nothing)  _
							= false) Then
					Me._cli_cls.Entity = Nothing
					previousValue.con_cls.Remove(Me)
				End If
				Me._cli_cls.Entity = value
				If ((value Is Nothing)  _
							= false) Then
					value.con_cls.Add(Me)
					Me._cli_idc = value.cli_idc
				Else
					Me._cli_idc = CType(Nothing, String)
				End If
				Me.SendPropertyChanged("cli_cls")
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="P_0023_cls_con_cls", Storage:="_P_0023_cls", ThisKey:="id_p_0023", OtherKey:="id_P_0023", IsForeignKey:=true)>  _
	Public Property P_0023_cls() As P_0023_cls
		Get
			Return Me._P_0023_cls.Entity
		End Get
		Set
			Dim previousValue As P_0023_cls = Me._P_0023_cls.Entity
			If ((Object.Equals(previousValue, value) = false)  _
						OrElse (Me._P_0023_cls.HasLoadedOrAssignedValue = false)) Then
				Me.SendPropertyChanging
				If ((previousValue Is Nothing)  _
							= false) Then
					Me._P_0023_cls.Entity = Nothing
					previousValue.con_cls.Remove(Me)
				End If
				Me._P_0023_cls.Entity = value
				If ((value Is Nothing)  _
							= false) Then
					value.con_cls.Add(Me)
					Me._id_p_0023 = value.id_P_0023
				Else
					Me._id_p_0023 = CType(Nothing, Nullable(Of Integer))
				End If
				Me.SendPropertyChanged("P_0023_cls")
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="P_0116_cls_con_cls", Storage:="_P_0116_cls", ThisKey:="id_p_0116", OtherKey:="id_P_0116", IsForeignKey:=true)>  _
	Public Property P_0116_cls() As P_0116_cls
		Get
			Return Me._P_0116_cls.Entity
		End Get
		Set
			Dim previousValue As P_0116_cls = Me._P_0116_cls.Entity
			If ((Object.Equals(previousValue, value) = false)  _
						OrElse (Me._P_0116_cls.HasLoadedOrAssignedValue = false)) Then
				Me.SendPropertyChanging
				If ((previousValue Is Nothing)  _
							= false) Then
					Me._P_0116_cls.Entity = Nothing
					previousValue.con_cls.Remove(Me)
				End If
				Me._P_0116_cls.Entity = value
				If ((value Is Nothing)  _
							= false) Then
					value.con_cls.Add(Me)
					Me._id_p_0116 = value.id_P_0116
				Else
					Me._id_p_0116 = CType(Nothing, Nullable(Of Integer))
				End If
				Me.SendPropertyChanged("P_0116_cls")
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="P_0117_cls_con_cls", Storage:="_P_0117_cls", ThisKey:="id_p_0117", OtherKey:="id_P_0117", IsForeignKey:=true)>  _
	Public Property P_0117_cls() As P_0117_cls
		Get
			Return Me._P_0117_cls.Entity
		End Get
		Set
			Dim previousValue As P_0117_cls = Me._P_0117_cls.Entity
			If ((Object.Equals(previousValue, value) = false)  _
						OrElse (Me._P_0117_cls.HasLoadedOrAssignedValue = false)) Then
				Me.SendPropertyChanging
				If ((previousValue Is Nothing)  _
							= false) Then
					Me._P_0117_cls.Entity = Nothing
					previousValue.con_cls.Remove(Me)
				End If
				Me._P_0117_cls.Entity = value
				If ((value Is Nothing)  _
							= false) Then
					value.con_cls.Add(Me)
					Me._id_p_0117 = value.id_P_0117
				Else
					Me._id_p_0117 = CType(Nothing, Nullable(Of Integer))
				End If
				Me.SendPropertyChanged("P_0117_cls")
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.con_com")>  _
Partial Public Class con_com_cls
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _id_con_com As Integer
	
	Private _des_con_com As String
	
	Private _est_con_com As System.Nullable(Of Integer)
	
	Private _cxd_cls As EntitySet(Of cxd_cls)
	
    #Region "Definiciones de métodos de extensibilidad"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub Onid_con_comChanging(value As Integer)
    End Sub
    Partial Private Sub Onid_con_comChanged()
    End Sub
    Partial Private Sub Ondes_con_comChanging(value As String)
    End Sub
    Partial Private Sub Ondes_con_comChanged()
    End Sub
    Partial Private Sub Onest_con_comChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub Onest_con_comChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		Me._cxd_cls = New EntitySet(Of cxd_cls)(AddressOf Me.attach_cxd_cls, AddressOf Me.detach_cxd_cls)
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_id_con_com", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property id_con_com() As Integer
		Get
			Return Me._id_con_com
		End Get
		Set
			If ((Me._id_con_com = value)  _
						= false) Then
				Me.Onid_con_comChanging(value)
				Me.SendPropertyChanging
				Me._id_con_com = value
				Me.SendPropertyChanged("id_con_com")
				Me.Onid_con_comChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_des_con_com", DbType:="VarChar(50)")>  _
	Public Property des_con_com() As String
		Get
			Return Me._des_con_com
		End Get
		Set
			If (String.Equals(Me._des_con_com, value) = false) Then
				Me.Ondes_con_comChanging(value)
				Me.SendPropertyChanging
				Me._des_con_com = value
				Me.SendPropertyChanged("des_con_com")
				Me.Ondes_con_comChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_est_con_com", DbType:="Int")>  _
	Public Property est_con_com() As System.Nullable(Of Integer)
		Get
			Return Me._est_con_com
		End Get
		Set
			If (Me._est_con_com.Equals(value) = false) Then
				Me.Onest_con_comChanging(value)
				Me.SendPropertyChanging
				Me._est_con_com = value
				Me.SendPropertyChanged("est_con_com")
				Me.Onest_con_comChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="con_com_cls_cxd_cls", Storage:="_cxd_cls", ThisKey:="id_con_com", OtherKey:="id_con_com")>  _
	Public Property cxd_cls() As EntitySet(Of cxd_cls)
		Get
			Return Me._cxd_cls
		End Get
		Set
			Me._cxd_cls.Assign(value)
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
	
	Private Sub attach_cxd_cls(ByVal entity As cxd_cls)
		Me.SendPropertyChanging
		entity.con_com_cls = Me
	End Sub
	
	Private Sub detach_cxd_cls(ByVal entity As cxd_cls)
		Me.SendPropertyChanging
		entity.con_com_cls = Nothing
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.cpg")>  _
Partial Public Class cpg_cls
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _id_cpg As Integer
	
	Private _deu_ide As String
	
	Private _fec_cpg As System.Nullable(Of Date)
	
	Private _deu_cls As EntityRef(Of deu_cls)
	
    #Region "Definiciones de métodos de extensibilidad"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub Onid_cpgChanging(value As Integer)
    End Sub
    Partial Private Sub Onid_cpgChanged()
    End Sub
    Partial Private Sub Ondeu_ideChanging(value As String)
    End Sub
    Partial Private Sub Ondeu_ideChanged()
    End Sub
    Partial Private Sub Onfec_cpgChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub Onfec_cpgChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		Me._deu_cls = CType(Nothing, EntityRef(Of deu_cls))
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_id_cpg", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property id_cpg() As Integer
		Get
			Return Me._id_cpg
		End Get
		Set
			If ((Me._id_cpg = value)  _
						= false) Then
				Me.Onid_cpgChanging(value)
				Me.SendPropertyChanging
				Me._id_cpg = value
				Me.SendPropertyChanged("id_cpg")
				Me.Onid_cpgChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_deu_ide", DbType:="Char(12)")>  _
	Public Property deu_ide() As String
		Get
			Return Me._deu_ide
		End Get
		Set
			If (String.Equals(Me._deu_ide, value) = false) Then
				If Me._deu_cls.HasLoadedOrAssignedValue Then
					Throw New System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException()
				End If
				Me.Ondeu_ideChanging(value)
				Me.SendPropertyChanging
				Me._deu_ide = value
				Me.SendPropertyChanged("deu_ide")
				Me.Ondeu_ideChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_fec_cpg", DbType:="DateTime")>  _
	Public Property fec_cpg() As System.Nullable(Of Date)
		Get
			Return Me._fec_cpg
		End Get
		Set
			If (Me._fec_cpg.Equals(value) = false) Then
				Me.Onfec_cpgChanging(value)
				Me.SendPropertyChanging
				Me._fec_cpg = value
				Me.SendPropertyChanged("fec_cpg")
				Me.Onfec_cpgChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="deu_cls_cpg_cls", Storage:="_deu_cls", ThisKey:="deu_ide", OtherKey:="deu_ide", IsForeignKey:=true)>  _
	Public Property deu_cls() As deu_cls
		Get
			Return Me._deu_cls.Entity
		End Get
		Set
			Dim previousValue As deu_cls = Me._deu_cls.Entity
			If ((Object.Equals(previousValue, value) = false)  _
						OrElse (Me._deu_cls.HasLoadedOrAssignedValue = false)) Then
				Me.SendPropertyChanging
				If ((previousValue Is Nothing)  _
							= false) Then
					Me._deu_cls.Entity = Nothing
					previousValue.cpg_cls.Remove(Me)
				End If
				Me._deu_cls.Entity = value
				If ((value Is Nothing)  _
							= false) Then
					value.cpg_cls.Add(Me)
					Me._deu_ide = value.deu_ide
				Else
					Me._deu_ide = CType(Nothing, String)
				End If
				Me.SendPropertyChanged("deu_cls")
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.crt")>  _
Partial Public Class crt_cls
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _id_crt As Integer
	
	Private _crt_ctd_dia As System.Nullable(Of Integer)
	
	Private _crt_des As String
	
	Private _crt_num_temporal As System.Nullable(Of Integer)
	
	Private _cli_cls As EntitySet(Of cli_cls)
	
    #Region "Definiciones de métodos de extensibilidad"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub Onid_crtChanging(value As Integer)
    End Sub
    Partial Private Sub Onid_crtChanged()
    End Sub
    Partial Private Sub Oncrt_ctd_diaChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub Oncrt_ctd_diaChanged()
    End Sub
    Partial Private Sub Oncrt_desChanging(value As String)
    End Sub
    Partial Private Sub Oncrt_desChanged()
    End Sub
    Partial Private Sub Oncrt_num_temporalChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub Oncrt_num_temporalChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		Me._cli_cls = New EntitySet(Of cli_cls)(AddressOf Me.attach_cli_cls, AddressOf Me.detach_cli_cls)
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_id_crt", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property id_crt() As Integer
		Get
			Return Me._id_crt
		End Get
		Set
			If ((Me._id_crt = value)  _
						= false) Then
				Me.Onid_crtChanging(value)
				Me.SendPropertyChanging
				Me._id_crt = value
				Me.SendPropertyChanged("id_crt")
				Me.Onid_crtChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_crt_ctd_dia", DbType:="Int")>  _
	Public Property crt_ctd_dia() As System.Nullable(Of Integer)
		Get
			Return Me._crt_ctd_dia
		End Get
		Set
			If (Me._crt_ctd_dia.Equals(value) = false) Then
				Me.Oncrt_ctd_diaChanging(value)
				Me.SendPropertyChanging
				Me._crt_ctd_dia = value
				Me.SendPropertyChanged("crt_ctd_dia")
				Me.Oncrt_ctd_diaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_crt_des", DbType:="Char(30)")>  _
	Public Property crt_des() As String
		Get
			Return Me._crt_des
		End Get
		Set
			If (String.Equals(Me._crt_des, value) = false) Then
				Me.Oncrt_desChanging(value)
				Me.SendPropertyChanging
				Me._crt_des = value
				Me.SendPropertyChanged("crt_des")
				Me.Oncrt_desChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_crt_num_temporal", DbType:="Int")>  _
	Public Property crt_num_temporal() As System.Nullable(Of Integer)
		Get
			Return Me._crt_num_temporal
		End Get
		Set
			If (Me._crt_num_temporal.Equals(value) = false) Then
				Me.Oncrt_num_temporalChanging(value)
				Me.SendPropertyChanging
				Me._crt_num_temporal = value
				Me.SendPropertyChanged("crt_num_temporal")
				Me.Oncrt_num_temporalChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="crt_cls_cli_cls", Storage:="_cli_cls", ThisKey:="id_crt", OtherKey:="id_crt")>  _
	Public Property cli_cls() As EntitySet(Of cli_cls)
		Get
			Return Me._cli_cls
		End Get
		Set
			Me._cli_cls.Assign(value)
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
	
	Private Sub attach_cli_cls(ByVal entity As cli_cls)
		Me.SendPropertyChanging
		entity.crt_cls = Me
	End Sub
	
	Private Sub detach_cli_cls(ByVal entity As cli_cls)
		Me.SendPropertyChanging
		entity.crt_cls = Nothing
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.ctn")>  _
Partial Public Class ctn_cls
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _id_ctn As Decimal
	
	Private _id_P_0091 As Integer
	
	Private _id_cnc As System.Nullable(Of Decimal)
	
	Private _ctn_fec_emi As System.Nullable(Of Date)
	
	Private _dct As EntitySet(Of dct)
	
	Private _cnc_cls As EntityRef(Of cnc_cls)
	
	Private _P_0091_cls As EntityRef(Of P_0091_cls)
	
    #Region "Definiciones de métodos de extensibilidad"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub Onid_ctnChanging(value As Decimal)
    End Sub
    Partial Private Sub Onid_ctnChanged()
    End Sub
    Partial Private Sub Onid_P_0091Changing(value As Integer)
    End Sub
    Partial Private Sub Onid_P_0091Changed()
    End Sub
    Partial Private Sub Onid_cncChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub Onid_cncChanged()
    End Sub
    Partial Private Sub Onctn_fec_emiChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub Onctn_fec_emiChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		Me._dct = New EntitySet(Of dct)(AddressOf Me.attach_dct, AddressOf Me.detach_dct)
		Me._cnc_cls = CType(Nothing, EntityRef(Of cnc_cls))
		Me._P_0091_cls = CType(Nothing, EntityRef(Of P_0091_cls))
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_id_ctn", AutoSync:=AutoSync.OnInsert, DbType:="Decimal(10,0) NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property id_ctn() As Decimal
		Get
			Return Me._id_ctn
		End Get
		Set
			If ((Me._id_ctn = value)  _
						= false) Then
				Me.Onid_ctnChanging(value)
				Me.SendPropertyChanging
				Me._id_ctn = value
				Me.SendPropertyChanged("id_ctn")
				Me.Onid_ctnChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_id_P_0091", DbType:="Int NOT NULL")>  _
	Public Property id_P_0091() As Integer
		Get
			Return Me._id_P_0091
		End Get
		Set
			If ((Me._id_P_0091 = value)  _
						= false) Then
				If Me._P_0091_cls.HasLoadedOrAssignedValue Then
					Throw New System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException()
				End If
				Me.Onid_P_0091Changing(value)
				Me.SendPropertyChanging
				Me._id_P_0091 = value
				Me.SendPropertyChanged("id_P_0091")
				Me.Onid_P_0091Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_id_cnc", DbType:="Decimal(10,0)")>  _
	Public Property id_cnc() As System.Nullable(Of Decimal)
		Get
			Return Me._id_cnc
		End Get
		Set
			If (Me._id_cnc.Equals(value) = false) Then
				If Me._cnc_cls.HasLoadedOrAssignedValue Then
					Throw New System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException()
				End If
				Me.Onid_cncChanging(value)
				Me.SendPropertyChanging
				Me._id_cnc = value
				Me.SendPropertyChanged("id_cnc")
				Me.Onid_cncChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ctn_fec_emi", DbType:="DateTime")>  _
	Public Property ctn_fec_emi() As System.Nullable(Of Date)
		Get
			Return Me._ctn_fec_emi
		End Get
		Set
			If (Me._ctn_fec_emi.Equals(value) = false) Then
				Me.Onctn_fec_emiChanging(value)
				Me.SendPropertyChanging
				Me._ctn_fec_emi = value
				Me.SendPropertyChanged("ctn_fec_emi")
				Me.Onctn_fec_emiChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="ctn_cls_dct", Storage:="_dct", ThisKey:="id_ctn", OtherKey:="id_ctn")>  _
	Public Property dct() As EntitySet(Of dct)
		Get
			Return Me._dct
		End Get
		Set
			Me._dct.Assign(value)
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="cnc_cls_ctn_cls", Storage:="_cnc_cls", ThisKey:="id_cnc", OtherKey:="id_cnc", IsForeignKey:=true)>  _
	Public Property cnc_cls() As cnc_cls
		Get
			Return Me._cnc_cls.Entity
		End Get
		Set
			Dim previousValue As cnc_cls = Me._cnc_cls.Entity
			If ((Object.Equals(previousValue, value) = false)  _
						OrElse (Me._cnc_cls.HasLoadedOrAssignedValue = false)) Then
				Me.SendPropertyChanging
				If ((previousValue Is Nothing)  _
							= false) Then
					Me._cnc_cls.Entity = Nothing
					previousValue.ctn_cls.Remove(Me)
				End If
				Me._cnc_cls.Entity = value
				If ((value Is Nothing)  _
							= false) Then
					value.ctn_cls.Add(Me)
					Me._id_cnc = value.id_cnc
				Else
					Me._id_cnc = CType(Nothing, Nullable(Of Decimal))
				End If
				Me.SendPropertyChanged("cnc_cls")
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="P_0091_cls_ctn_cls", Storage:="_P_0091_cls", ThisKey:="id_P_0091", OtherKey:="id_P_0091", IsForeignKey:=true)>  _
	Public Property P_0091_cls() As P_0091_cls
		Get
			Return Me._P_0091_cls.Entity
		End Get
		Set
			Dim previousValue As P_0091_cls = Me._P_0091_cls.Entity
			If ((Object.Equals(previousValue, value) = false)  _
						OrElse (Me._P_0091_cls.HasLoadedOrAssignedValue = false)) Then
				Me.SendPropertyChanging
				If ((previousValue Is Nothing)  _
							= false) Then
					Me._P_0091_cls.Entity = Nothing
					previousValue.ctn_cls.Remove(Me)
				End If
				Me._P_0091_cls.Entity = value
				If ((value Is Nothing)  _
							= false) Then
					value.ctn_cls.Add(Me)
					Me._id_P_0091 = value.id_P_0091
				Else
					Me._id_P_0091 = CType(Nothing, Integer)
				End If
				Me.SendPropertyChanged("P_0091_cls")
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
	
	Private Sub attach_dct(ByVal entity As dct)
		Me.SendPropertyChanging
		entity.ctn_cls = Me
	End Sub
	
	Private Sub detach_dct(ByVal entity As dct)
		Me.SendPropertyChanging
		entity.ctn_cls = Nothing
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.ctr")>  _
Partial Public Class ctr_cls
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _id_ctr As Integer
	
	Private _id_P_0065 As Integer
	
	Private _id_p_0031 As Integer
	
	Private _ctr_dias_des As String
	
	Private _ctr_dias_hst As String
	
	Private _P_0031_cls As EntityRef(Of P_0031_cls)
	
	Private _P_0065_cls As EntityRef(Of P_0065_cls)
	
    #Region "Definiciones de métodos de extensibilidad"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub Onid_ctrChanging(value As Integer)
    End Sub
    Partial Private Sub Onid_ctrChanged()
    End Sub
    Partial Private Sub Onid_P_0065Changing(value As Integer)
    End Sub
    Partial Private Sub Onid_P_0065Changed()
    End Sub
    Partial Private Sub Onid_p_0031Changing(value As Integer)
    End Sub
    Partial Private Sub Onid_p_0031Changed()
    End Sub
    Partial Private Sub Onctr_dias_desChanging(value As String)
    End Sub
    Partial Private Sub Onctr_dias_desChanged()
    End Sub
    Partial Private Sub Onctr_dias_hstChanging(value As String)
    End Sub
    Partial Private Sub Onctr_dias_hstChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		Me._P_0031_cls = CType(Nothing, EntityRef(Of P_0031_cls))
		Me._P_0065_cls = CType(Nothing, EntityRef(Of P_0065_cls))
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_id_ctr", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property id_ctr() As Integer
		Get
			Return Me._id_ctr
		End Get
		Set
			If ((Me._id_ctr = value)  _
						= false) Then
				Me.Onid_ctrChanging(value)
				Me.SendPropertyChanging
				Me._id_ctr = value
				Me.SendPropertyChanged("id_ctr")
				Me.Onid_ctrChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_id_P_0065", DbType:="Int NOT NULL")>  _
	Public Property id_P_0065() As Integer
		Get
			Return Me._id_P_0065
		End Get
		Set
			If ((Me._id_P_0065 = value)  _
						= false) Then
				If Me._P_0065_cls.HasLoadedOrAssignedValue Then
					Throw New System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException()
				End If
				Me.Onid_P_0065Changing(value)
				Me.SendPropertyChanging
				Me._id_P_0065 = value
				Me.SendPropertyChanged("id_P_0065")
				Me.Onid_P_0065Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_id_p_0031", DbType:="Int NOT NULL")>  _
	Public Property id_p_0031() As Integer
		Get
			Return Me._id_p_0031
		End Get
		Set
			If ((Me._id_p_0031 = value)  _
						= false) Then
				If Me._P_0031_cls.HasLoadedOrAssignedValue Then
					Throw New System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException()
				End If
				Me.Onid_p_0031Changing(value)
				Me.SendPropertyChanging
				Me._id_p_0031 = value
				Me.SendPropertyChanged("id_p_0031")
				Me.Onid_p_0031Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ctr_dias_des", DbType:="VarChar(5)")>  _
	Public Property ctr_dias_des() As String
		Get
			Return Me._ctr_dias_des
		End Get
		Set
			If (String.Equals(Me._ctr_dias_des, value) = false) Then
				Me.Onctr_dias_desChanging(value)
				Me.SendPropertyChanging
				Me._ctr_dias_des = value
				Me.SendPropertyChanged("ctr_dias_des")
				Me.Onctr_dias_desChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ctr_dias_hst", DbType:="VarChar(5)")>  _
	Public Property ctr_dias_hst() As String
		Get
			Return Me._ctr_dias_hst
		End Get
		Set
			If (String.Equals(Me._ctr_dias_hst, value) = false) Then
				Me.Onctr_dias_hstChanging(value)
				Me.SendPropertyChanging
				Me._ctr_dias_hst = value
				Me.SendPropertyChanged("ctr_dias_hst")
				Me.Onctr_dias_hstChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="P_0031_cls_ctr_cls", Storage:="_P_0031_cls", ThisKey:="id_p_0031", OtherKey:="id_P_0031", IsForeignKey:=true)>  _
	Public Property P_0031_cls() As P_0031_cls
		Get
			Return Me._P_0031_cls.Entity
		End Get
		Set
			Dim previousValue As P_0031_cls = Me._P_0031_cls.Entity
			If ((Object.Equals(previousValue, value) = false)  _
						OrElse (Me._P_0031_cls.HasLoadedOrAssignedValue = false)) Then
				Me.SendPropertyChanging
				If ((previousValue Is Nothing)  _
							= false) Then
					Me._P_0031_cls.Entity = Nothing
					previousValue.ctr_cls.Remove(Me)
				End If
				Me._P_0031_cls.Entity = value
				If ((value Is Nothing)  _
							= false) Then
					value.ctr_cls.Add(Me)
					Me._id_p_0031 = value.id_P_0031
				Else
					Me._id_p_0031 = CType(Nothing, Integer)
				End If
				Me.SendPropertyChanged("P_0031_cls")
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="P_0065_cls_ctr_cls", Storage:="_P_0065_cls", ThisKey:="id_P_0065", OtherKey:="id_P_0065", IsForeignKey:=true)>  _
	Public Property P_0065_cls() As P_0065_cls
		Get
			Return Me._P_0065_cls.Entity
		End Get
		Set
			Dim previousValue As P_0065_cls = Me._P_0065_cls.Entity
			If ((Object.Equals(previousValue, value) = false)  _
						OrElse (Me._P_0065_cls.HasLoadedOrAssignedValue = false)) Then
				Me.SendPropertyChanging
				If ((previousValue Is Nothing)  _
							= false) Then
					Me._P_0065_cls.Entity = Nothing
					previousValue.ctr_cls.Remove(Me)
				End If
				Me._P_0065_cls.Entity = value
				If ((value Is Nothing)  _
							= false) Then
					value.ctr_cls.Add(Me)
					Me._id_P_0065 = value.id_P_0065
				Else
					Me._id_P_0065 = CType(Nothing, Integer)
				End If
				Me.SendPropertyChanged("P_0065_cls")
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.cxc")>  _
Partial Public Class cxc_cls
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _id_cxc As Decimal
	
	Private _cli_idc As String
	
	Private _id_doc As System.Nullable(Of Decimal)
	
	Private _id_opo As System.Nullable(Of Decimal)
	
	Private _id_fct As System.Nullable(Of Decimal)
	
	Private _id_P_0041 As Integer
	
	Private _id_P_0057 As System.Nullable(Of Integer)
	
	Private _id_P_0023 As System.Nullable(Of Integer)
	
	Private _cxc_fec As System.Nullable(Of Date)
	
	Private _cxc_mto As System.Nullable(Of Decimal)
	
	Private _cxc_des As String
	
	Private _cxc_int As System.Nullable(Of Decimal)
	
	Private _cxc_fec_int As System.Nullable(Of Date)
	
	Private _cxc_sal As System.Nullable(Of Decimal)
	
	Private _cxc_ful_pgo As System.Nullable(Of Date)
	
	Private _cxc_fct As System.Nullable(Of Char)
	
	Private _cxc_abo_ant As System.Nullable(Of Char)
	
	Private _cxc_fec_ctb As System.Nullable(Of Date)
	
	Private _cxc_num_vax As System.Nullable(Of Decimal)
	
	Private _cxc_fac_cam As System.Nullable(Of Decimal)
	
	Private _cxc_num_temporal As System.Nullable(Of Integer)
	
	Private _id_eje As System.Nullable(Of Integer)
	
	Private _dpo_cls As EntitySet(Of dpo_cls)
	
	Private _ing_sec_cls As EntitySet(Of ing_sec_cls)
	
	Private _pgr_cls As EntitySet(Of pgr_cls)
	
	Private _sim_cxc_cls As EntitySet(Of sim_cxc_cls)
	
	Private _cli_cls As EntityRef(Of cli_cls)
	
	Private _doc_cls As EntityRef(Of doc_cls)
	
	Private _fct_cls As EntityRef(Of fct_cls)
	
	Private _opo_cls As EntityRef(Of opo_cls)
	
	Private _P_0023_cls As EntityRef(Of P_0023_cls)
	
	Private _p_0041_cls As EntityRef(Of p_0041_cls)
	
	Private _P_0057_cls As EntityRef(Of P_0057_cls)
	
    #Region "Definiciones de métodos de extensibilidad"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub Onid_cxcChanging(value As Decimal)
    End Sub
    Partial Private Sub Onid_cxcChanged()
    End Sub
    Partial Private Sub Oncli_idcChanging(value As String)
    End Sub
    Partial Private Sub Oncli_idcChanged()
    End Sub
    Partial Private Sub Onid_docChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub Onid_docChanged()
    End Sub
    Partial Private Sub Onid_opoChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub Onid_opoChanged()
    End Sub
    Partial Private Sub Onid_fctChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub Onid_fctChanged()
    End Sub
    Partial Private Sub Onid_P_0041Changing(value As Integer)
    End Sub
    Partial Private Sub Onid_P_0041Changed()
    End Sub
    Partial Private Sub Onid_P_0057Changing(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub Onid_P_0057Changed()
    End Sub
    Partial Private Sub Onid_P_0023Changing(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub Onid_P_0023Changed()
    End Sub
    Partial Private Sub Oncxc_fecChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub Oncxc_fecChanged()
    End Sub
    Partial Private Sub Oncxc_mtoChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub Oncxc_mtoChanged()
    End Sub
    Partial Private Sub Oncxc_desChanging(value As String)
    End Sub
    Partial Private Sub Oncxc_desChanged()
    End Sub
    Partial Private Sub Oncxc_intChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub Oncxc_intChanged()
    End Sub
    Partial Private Sub Oncxc_fec_intChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub Oncxc_fec_intChanged()
    End Sub
    Partial Private Sub Oncxc_salChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub Oncxc_salChanged()
    End Sub
    Partial Private Sub Oncxc_ful_pgoChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub Oncxc_ful_pgoChanged()
    End Sub
    Partial Private Sub Oncxc_fctChanging(value As System.Nullable(Of Char))
    End Sub
    Partial Private Sub Oncxc_fctChanged()
    End Sub
    Partial Private Sub Oncxc_abo_antChanging(value As System.Nullable(Of Char))
    End Sub
    Partial Private Sub Oncxc_abo_antChanged()
    End Sub
    Partial Private Sub Oncxc_fec_ctbChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub Oncxc_fec_ctbChanged()
    End Sub
    Partial Private Sub Oncxc_num_vaxChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub Oncxc_num_vaxChanged()
    End Sub
    Partial Private Sub Oncxc_fac_camChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub Oncxc_fac_camChanged()
    End Sub
    Partial Private Sub Oncxc_num_temporalChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub Oncxc_num_temporalChanged()
    End Sub
    Partial Private Sub Onid_ejeChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub Onid_ejeChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		Me._dpo_cls = New EntitySet(Of dpo_cls)(AddressOf Me.attach_dpo_cls, AddressOf Me.detach_dpo_cls)
		Me._ing_sec_cls = New EntitySet(Of ing_sec_cls)(AddressOf Me.attach_ing_sec_cls, AddressOf Me.detach_ing_sec_cls)
		Me._pgr_cls = New EntitySet(Of pgr_cls)(AddressOf Me.attach_pgr_cls, AddressOf Me.detach_pgr_cls)
		Me._sim_cxc_cls = New EntitySet(Of sim_cxc_cls)(AddressOf Me.attach_sim_cxc_cls, AddressOf Me.detach_sim_cxc_cls)
		Me._cli_cls = CType(Nothing, EntityRef(Of cli_cls))
		Me._doc_cls = CType(Nothing, EntityRef(Of doc_cls))
		Me._fct_cls = CType(Nothing, EntityRef(Of fct_cls))
		Me._opo_cls = CType(Nothing, EntityRef(Of opo_cls))
		Me._P_0023_cls = CType(Nothing, EntityRef(Of P_0023_cls))
		Me._p_0041_cls = CType(Nothing, EntityRef(Of p_0041_cls))
		Me._P_0057_cls = CType(Nothing, EntityRef(Of P_0057_cls))
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_id_cxc", AutoSync:=AutoSync.OnInsert, DbType:="Decimal(10,0) NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property id_cxc() As Decimal
		Get
			Return Me._id_cxc
		End Get
		Set
			If ((Me._id_cxc = value)  _
						= false) Then
				Me.Onid_cxcChanging(value)
				Me.SendPropertyChanging
				Me._id_cxc = value
				Me.SendPropertyChanged("id_cxc")
				Me.Onid_cxcChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_cli_idc", DbType:="Char(12)")>  _
	Public Property cli_idc() As String
		Get
			Return Me._cli_idc
		End Get
		Set
			If (String.Equals(Me._cli_idc, value) = false) Then
				If Me._cli_cls.HasLoadedOrAssignedValue Then
					Throw New System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException()
				End If
				Me.Oncli_idcChanging(value)
				Me.SendPropertyChanging
				Me._cli_idc = value
				Me.SendPropertyChanged("cli_idc")
				Me.Oncli_idcChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_id_doc", DbType:="Decimal(18,0)")>  _
	Public Property id_doc() As System.Nullable(Of Decimal)
		Get
			Return Me._id_doc
		End Get
		Set
			If (Me._id_doc.Equals(value) = false) Then
				If Me._doc_cls.HasLoadedOrAssignedValue Then
					Throw New System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException()
				End If
				Me.Onid_docChanging(value)
				Me.SendPropertyChanging
				Me._id_doc = value
				Me.SendPropertyChanged("id_doc")
				Me.Onid_docChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_id_opo", DbType:="Decimal(10,0)")>  _
	Public Property id_opo() As System.Nullable(Of Decimal)
		Get
			Return Me._id_opo
		End Get
		Set
			If (Me._id_opo.Equals(value) = false) Then
				If Me._opo_cls.HasLoadedOrAssignedValue Then
					Throw New System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException()
				End If
				Me.Onid_opoChanging(value)
				Me.SendPropertyChanging
				Me._id_opo = value
				Me.SendPropertyChanged("id_opo")
				Me.Onid_opoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_id_fct", DbType:="Decimal(10,0)")>  _
	Public Property id_fct() As System.Nullable(Of Decimal)
		Get
			Return Me._id_fct
		End Get
		Set
			If (Me._id_fct.Equals(value) = false) Then
				If Me._fct_cls.HasLoadedOrAssignedValue Then
					Throw New System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException()
				End If
				Me.Onid_fctChanging(value)
				Me.SendPropertyChanging
				Me._id_fct = value
				Me.SendPropertyChanged("id_fct")
				Me.Onid_fctChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_id_P_0041", DbType:="Int NOT NULL")>  _
	Public Property id_P_0041() As Integer
		Get
			Return Me._id_P_0041
		End Get
		Set
			If ((Me._id_P_0041 = value)  _
						= false) Then
				If Me._p_0041_cls.HasLoadedOrAssignedValue Then
					Throw New System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException()
				End If
				Me.Onid_P_0041Changing(value)
				Me.SendPropertyChanging
				Me._id_P_0041 = value
				Me.SendPropertyChanged("id_P_0041")
				Me.Onid_P_0041Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_id_P_0057", DbType:="Int")>  _
	Public Property id_P_0057() As System.Nullable(Of Integer)
		Get
			Return Me._id_P_0057
		End Get
		Set
			If (Me._id_P_0057.Equals(value) = false) Then
				If Me._P_0057_cls.HasLoadedOrAssignedValue Then
					Throw New System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException()
				End If
				Me.Onid_P_0057Changing(value)
				Me.SendPropertyChanging
				Me._id_P_0057 = value
				Me.SendPropertyChanged("id_P_0057")
				Me.Onid_P_0057Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_id_P_0023", DbType:="Int")>  _
	Public Property id_P_0023() As System.Nullable(Of Integer)
		Get
			Return Me._id_P_0023
		End Get
		Set
			If (Me._id_P_0023.Equals(value) = false) Then
				If Me._P_0023_cls.HasLoadedOrAssignedValue Then
					Throw New System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException()
				End If
				Me.Onid_P_0023Changing(value)
				Me.SendPropertyChanging
				Me._id_P_0023 = value
				Me.SendPropertyChanged("id_P_0023")
				Me.Onid_P_0023Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_cxc_fec", DbType:="DateTime")>  _
	Public Property cxc_fec() As System.Nullable(Of Date)
		Get
			Return Me._cxc_fec
		End Get
		Set
			If (Me._cxc_fec.Equals(value) = false) Then
				Me.Oncxc_fecChanging(value)
				Me.SendPropertyChanging
				Me._cxc_fec = value
				Me.SendPropertyChanged("cxc_fec")
				Me.Oncxc_fecChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_cxc_mto", DbType:="Money")>  _
	Public Property cxc_mto() As System.Nullable(Of Decimal)
		Get
			Return Me._cxc_mto
		End Get
		Set
			If (Me._cxc_mto.Equals(value) = false) Then
				Me.Oncxc_mtoChanging(value)
				Me.SendPropertyChanging
				Me._cxc_mto = value
				Me.SendPropertyChanged("cxc_mto")
				Me.Oncxc_mtoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_cxc_des", DbType:="VarChar(100)")>  _
	Public Property cxc_des() As String
		Get
			Return Me._cxc_des
		End Get
		Set
			If (String.Equals(Me._cxc_des, value) = false) Then
				Me.Oncxc_desChanging(value)
				Me.SendPropertyChanging
				Me._cxc_des = value
				Me.SendPropertyChanged("cxc_des")
				Me.Oncxc_desChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_cxc_int", DbType:="Money")>  _
	Public Property cxc_int() As System.Nullable(Of Decimal)
		Get
			Return Me._cxc_int
		End Get
		Set
			If (Me._cxc_int.Equals(value) = false) Then
				Me.Oncxc_intChanging(value)
				Me.SendPropertyChanging
				Me._cxc_int = value
				Me.SendPropertyChanged("cxc_int")
				Me.Oncxc_intChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_cxc_fec_int", DbType:="DateTime")>  _
	Public Property cxc_fec_int() As System.Nullable(Of Date)
		Get
			Return Me._cxc_fec_int
		End Get
		Set
			If (Me._cxc_fec_int.Equals(value) = false) Then
				Me.Oncxc_fec_intChanging(value)
				Me.SendPropertyChanging
				Me._cxc_fec_int = value
				Me.SendPropertyChanged("cxc_fec_int")
				Me.Oncxc_fec_intChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_cxc_sal", DbType:="Money")>  _
	Public Property cxc_sal() As System.Nullable(Of Decimal)
		Get
			Return Me._cxc_sal
		End Get
		Set
			If (Me._cxc_sal.Equals(value) = false) Then
				Me.Oncxc_salChanging(value)
				Me.SendPropertyChanging
				Me._cxc_sal = value
				Me.SendPropertyChanged("cxc_sal")
				Me.Oncxc_salChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_cxc_ful_pgo", DbType:="DateTime")>  _
	Public Property cxc_ful_pgo() As System.Nullable(Of Date)
		Get
			Return Me._cxc_ful_pgo
		End Get
		Set
			If (Me._cxc_ful_pgo.Equals(value) = false) Then
				Me.Oncxc_ful_pgoChanging(value)
				Me.SendPropertyChanging
				Me._cxc_ful_pgo = value
				Me.SendPropertyChanged("cxc_ful_pgo")
				Me.Oncxc_ful_pgoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_cxc_fct", DbType:="Char(1)")>  _
	Public Property cxc_fct() As System.Nullable(Of Char)
		Get
			Return Me._cxc_fct
		End Get
		Set
			If (Me._cxc_fct.Equals(value) = false) Then
				Me.Oncxc_fctChanging(value)
				Me.SendPropertyChanging
				Me._cxc_fct = value
				Me.SendPropertyChanged("cxc_fct")
				Me.Oncxc_fctChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_cxc_abo_ant", DbType:="Char(1)")>  _
	Public Property cxc_abo_ant() As System.Nullable(Of Char)
		Get
			Return Me._cxc_abo_ant
		End Get
		Set
			If (Me._cxc_abo_ant.Equals(value) = false) Then
				Me.Oncxc_abo_antChanging(value)
				Me.SendPropertyChanging
				Me._cxc_abo_ant = value
				Me.SendPropertyChanged("cxc_abo_ant")
				Me.Oncxc_abo_antChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_cxc_fec_ctb", DbType:="DateTime")>  _
	Public Property cxc_fec_ctb() As System.Nullable(Of Date)
		Get
			Return Me._cxc_fec_ctb
		End Get
		Set
			If (Me._cxc_fec_ctb.Equals(value) = false) Then
				Me.Oncxc_fec_ctbChanging(value)
				Me.SendPropertyChanging
				Me._cxc_fec_ctb = value
				Me.SendPropertyChanged("cxc_fec_ctb")
				Me.Oncxc_fec_ctbChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_cxc_num_vax", DbType:="Decimal(10,0)")>  _
	Public Property cxc_num_vax() As System.Nullable(Of Decimal)
		Get
			Return Me._cxc_num_vax
		End Get
		Set
			If (Me._cxc_num_vax.Equals(value) = false) Then
				Me.Oncxc_num_vaxChanging(value)
				Me.SendPropertyChanging
				Me._cxc_num_vax = value
				Me.SendPropertyChanged("cxc_num_vax")
				Me.Oncxc_num_vaxChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_cxc_fac_cam", DbType:="Money")>  _
	Public Property cxc_fac_cam() As System.Nullable(Of Decimal)
		Get
			Return Me._cxc_fac_cam
		End Get
		Set
			If (Me._cxc_fac_cam.Equals(value) = false) Then
				Me.Oncxc_fac_camChanging(value)
				Me.SendPropertyChanging
				Me._cxc_fac_cam = value
				Me.SendPropertyChanged("cxc_fac_cam")
				Me.Oncxc_fac_camChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_cxc_num_temporal", DbType:="Int")>  _
	Public Property cxc_num_temporal() As System.Nullable(Of Integer)
		Get
			Return Me._cxc_num_temporal
		End Get
		Set
			If (Me._cxc_num_temporal.Equals(value) = false) Then
				Me.Oncxc_num_temporalChanging(value)
				Me.SendPropertyChanging
				Me._cxc_num_temporal = value
				Me.SendPropertyChanged("cxc_num_temporal")
				Me.Oncxc_num_temporalChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_id_eje", DbType:="Int")>  _
	Public Property id_eje() As System.Nullable(Of Integer)
		Get
			Return Me._id_eje
		End Get
		Set
			If (Me._id_eje.Equals(value) = false) Then
				Me.Onid_ejeChanging(value)
				Me.SendPropertyChanging
				Me._id_eje = value
				Me.SendPropertyChanged("id_eje")
				Me.Onid_ejeChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="cxc_cls_dpo_cls", Storage:="_dpo_cls", ThisKey:="id_cxc", OtherKey:="id_cxc")>  _
	Public Property dpo_cls() As EntitySet(Of dpo_cls)
		Get
			Return Me._dpo_cls
		End Get
		Set
			Me._dpo_cls.Assign(value)
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="cxc_cls_ing_sec_cls", Storage:="_ing_sec_cls", ThisKey:="id_cxc", OtherKey:="id_cxc")>  _
	Public Property ing_sec_cls() As EntitySet(Of ing_sec_cls)
		Get
			Return Me._ing_sec_cls
		End Get
		Set
			Me._ing_sec_cls.Assign(value)
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="cxc_cls_pgr_cls", Storage:="_pgr_cls", ThisKey:="id_cxc", OtherKey:="id_cxc")>  _
	Public Property pgr_cls() As EntitySet(Of pgr_cls)
		Get
			Return Me._pgr_cls
		End Get
		Set
			Me._pgr_cls.Assign(value)
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="cxc_cls_sim_cxc_cls", Storage:="_sim_cxc_cls", ThisKey:="id_cxc", OtherKey:="id_cxc")>  _
	Public Property sim_cxc_cls() As EntitySet(Of sim_cxc_cls)
		Get
			Return Me._sim_cxc_cls
		End Get
		Set
			Me._sim_cxc_cls.Assign(value)
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="cli_cls_cxc_cls", Storage:="_cli_cls", ThisKey:="cli_idc", OtherKey:="cli_idc", IsForeignKey:=true)>  _
	Public Property cli_cls() As cli_cls
		Get
			Return Me._cli_cls.Entity
		End Get
		Set
			Dim previousValue As cli_cls = Me._cli_cls.Entity
			If ((Object.Equals(previousValue, value) = false)  _
						OrElse (Me._cli_cls.HasLoadedOrAssignedValue = false)) Then
				Me.SendPropertyChanging
				If ((previousValue Is Nothing)  _
							= false) Then
					Me._cli_cls.Entity = Nothing
					previousValue.cxc_cls.Remove(Me)
				End If
				Me._cli_cls.Entity = value
				If ((value Is Nothing)  _
							= false) Then
					value.cxc_cls.Add(Me)
					Me._cli_idc = value.cli_idc
				Else
					Me._cli_idc = CType(Nothing, String)
				End If
				Me.SendPropertyChanged("cli_cls")
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="doc_cls_cxc_cls", Storage:="_doc_cls", ThisKey:="id_doc", OtherKey:="id_doc", IsForeignKey:=true)>  _
	Public Property doc_cls() As doc_cls
		Get
			Return Me._doc_cls.Entity
		End Get
		Set
			Dim previousValue As doc_cls = Me._doc_cls.Entity
			If ((Object.Equals(previousValue, value) = false)  _
						OrElse (Me._doc_cls.HasLoadedOrAssignedValue = false)) Then
				Me.SendPropertyChanging
				If ((previousValue Is Nothing)  _
							= false) Then
					Me._doc_cls.Entity = Nothing
					previousValue.cxc_cls.Remove(Me)
				End If
				Me._doc_cls.Entity = value
				If ((value Is Nothing)  _
							= false) Then
					value.cxc_cls.Add(Me)
					Me._id_doc = value.id_doc
				Else
					Me._id_doc = CType(Nothing, Nullable(Of Decimal))
				End If
				Me.SendPropertyChanged("doc_cls")
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="fct_cls_cxc_cls", Storage:="_fct_cls", ThisKey:="id_fct", OtherKey:="id_fct", IsForeignKey:=true)>  _
	Public Property fct_cls() As fct_cls
		Get
			Return Me._fct_cls.Entity
		End Get
		Set
			Dim previousValue As fct_cls = Me._fct_cls.Entity
			If ((Object.Equals(previousValue, value) = false)  _
						OrElse (Me._fct_cls.HasLoadedOrAssignedValue = false)) Then
				Me.SendPropertyChanging
				If ((previousValue Is Nothing)  _
							= false) Then
					Me._fct_cls.Entity = Nothing
					previousValue.cxc_cls.Remove(Me)
				End If
				Me._fct_cls.Entity = value
				If ((value Is Nothing)  _
							= false) Then
					value.cxc_cls.Add(Me)
					Me._id_fct = value.id_fct
				Else
					Me._id_fct = CType(Nothing, Nullable(Of Decimal))
				End If
				Me.SendPropertyChanged("fct_cls")
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="opo_cls_cxc_cls", Storage:="_opo_cls", ThisKey:="id_opo", OtherKey:="id_opo", IsForeignKey:=true)>  _
	Public Property opo_cls() As opo_cls
		Get
			Return Me._opo_cls.Entity
		End Get
		Set
			Dim previousValue As opo_cls = Me._opo_cls.Entity
			If ((Object.Equals(previousValue, value) = false)  _
						OrElse (Me._opo_cls.HasLoadedOrAssignedValue = false)) Then
				Me.SendPropertyChanging
				If ((previousValue Is Nothing)  _
							= false) Then
					Me._opo_cls.Entity = Nothing
					previousValue.cxc_cls.Remove(Me)
				End If
				Me._opo_cls.Entity = value
				If ((value Is Nothing)  _
							= false) Then
					value.cxc_cls.Add(Me)
					Me._id_opo = value.id_opo
				Else
					Me._id_opo = CType(Nothing, Nullable(Of Decimal))
				End If
				Me.SendPropertyChanged("opo_cls")
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="P_0023_cls_cxc_cls", Storage:="_P_0023_cls", ThisKey:="id_P_0023", OtherKey:="id_P_0023", IsForeignKey:=true)>  _
	Public Property P_0023_cls() As P_0023_cls
		Get
			Return Me._P_0023_cls.Entity
		End Get
		Set
			Dim previousValue As P_0023_cls = Me._P_0023_cls.Entity
			If ((Object.Equals(previousValue, value) = false)  _
						OrElse (Me._P_0023_cls.HasLoadedOrAssignedValue = false)) Then
				Me.SendPropertyChanging
				If ((previousValue Is Nothing)  _
							= false) Then
					Me._P_0023_cls.Entity = Nothing
					previousValue.cxc_cls.Remove(Me)
				End If
				Me._P_0023_cls.Entity = value
				If ((value Is Nothing)  _
							= false) Then
					value.cxc_cls.Add(Me)
					Me._id_P_0023 = value.id_P_0023
				Else
					Me._id_P_0023 = CType(Nothing, Nullable(Of Integer))
				End If
				Me.SendPropertyChanged("P_0023_cls")
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="p_0041_cls_cxc_cls", Storage:="_p_0041_cls", ThisKey:="id_P_0041", OtherKey:="id_P_0041", IsForeignKey:=true)>  _
	Public Property p_0041_cls() As p_0041_cls
		Get
			Return Me._p_0041_cls.Entity
		End Get
		Set
			Dim previousValue As p_0041_cls = Me._p_0041_cls.Entity
			If ((Object.Equals(previousValue, value) = false)  _
						OrElse (Me._p_0041_cls.HasLoadedOrAssignedValue = false)) Then
				Me.SendPropertyChanging
				If ((previousValue Is Nothing)  _
							= false) Then
					Me._p_0041_cls.Entity = Nothing
					previousValue.cxc_cls.Remove(Me)
				End If
				Me._p_0041_cls.Entity = value
				If ((value Is Nothing)  _
							= false) Then
					value.cxc_cls.Add(Me)
					Me._id_P_0041 = value.id_P_0041
				Else
					Me._id_P_0041 = CType(Nothing, Integer)
				End If
				Me.SendPropertyChanged("p_0041_cls")
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="P_0057_cls_cxc_cls", Storage:="_P_0057_cls", ThisKey:="id_P_0057", OtherKey:="id_P_0057", IsForeignKey:=true)>  _
	Public Property P_0057_cls() As P_0057_cls
		Get
			Return Me._P_0057_cls.Entity
		End Get
		Set
			Dim previousValue As P_0057_cls = Me._P_0057_cls.Entity
			If ((Object.Equals(previousValue, value) = false)  _
						OrElse (Me._P_0057_cls.HasLoadedOrAssignedValue = false)) Then
				Me.SendPropertyChanging
				If ((previousValue Is Nothing)  _
							= false) Then
					Me._P_0057_cls.Entity = Nothing
					previousValue.cxc_cls.Remove(Me)
				End If
				Me._P_0057_cls.Entity = value
				If ((value Is Nothing)  _
							= false) Then
					value.cxc_cls.Add(Me)
					Me._id_P_0057 = value.id_P_0057
				Else
					Me._id_P_0057 = CType(Nothing, Nullable(Of Integer))
				End If
				Me.SendPropertyChanged("P_0057_cls")
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
	
	Private Sub attach_dpo_cls(ByVal entity As dpo_cls)
		Me.SendPropertyChanging
		entity.cxc_cls = Me
	End Sub
	
	Private Sub detach_dpo_cls(ByVal entity As dpo_cls)
		Me.SendPropertyChanging
		entity.cxc_cls = Nothing
	End Sub
	
	Private Sub attach_ing_sec_cls(ByVal entity As ing_sec_cls)
		Me.SendPropertyChanging
		entity.cxc_cls = Me
	End Sub
	
	Private Sub detach_ing_sec_cls(ByVal entity As ing_sec_cls)
		Me.SendPropertyChanging
		entity.cxc_cls = Nothing
	End Sub
	
	Private Sub attach_pgr_cls(ByVal entity As pgr_cls)
		Me.SendPropertyChanging
		entity.cxc_cls = Me
	End Sub
	
	Private Sub detach_pgr_cls(ByVal entity As pgr_cls)
		Me.SendPropertyChanging
		entity.cxc_cls = Nothing
	End Sub
	
	Private Sub attach_sim_cxc_cls(ByVal entity As sim_cxc_cls)
		Me.SendPropertyChanging
		entity.cxc_cls = Me
	End Sub
	
	Private Sub detach_sim_cxc_cls(ByVal entity As sim_cxc_cls)
		Me.SendPropertyChanging
		entity.cxc_cls = Nothing
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.cxd")>  _
Partial Public Class cxd_cls
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _id_cxd As Integer
	
	Private _id_con_com As System.Nullable(Of Integer)
	
	Private _id_p_0031 As System.Nullable(Of Integer)
	
	Private _cxn_cls As EntitySet(Of cxn_cls)
	
	Private _con_com_cls As EntityRef(Of con_com_cls)
	
	Private _P_0031_cls As EntityRef(Of P_0031_cls)
	
    #Region "Definiciones de métodos de extensibilidad"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub Onid_cxdChanging(value As Integer)
    End Sub
    Partial Private Sub Onid_cxdChanged()
    End Sub
    Partial Private Sub Onid_con_comChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub Onid_con_comChanged()
    End Sub
    Partial Private Sub Onid_p_0031Changing(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub Onid_p_0031Changed()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		Me._cxn_cls = New EntitySet(Of cxn_cls)(AddressOf Me.attach_cxn_cls, AddressOf Me.detach_cxn_cls)
		Me._con_com_cls = CType(Nothing, EntityRef(Of con_com_cls))
		Me._P_0031_cls = CType(Nothing, EntityRef(Of P_0031_cls))
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_id_cxd", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property id_cxd() As Integer
		Get
			Return Me._id_cxd
		End Get
		Set
			If ((Me._id_cxd = value)  _
						= false) Then
				Me.Onid_cxdChanging(value)
				Me.SendPropertyChanging
				Me._id_cxd = value
				Me.SendPropertyChanged("id_cxd")
				Me.Onid_cxdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_id_con_com", DbType:="Int")>  _
	Public Property id_con_com() As System.Nullable(Of Integer)
		Get
			Return Me._id_con_com
		End Get
		Set
			If (Me._id_con_com.Equals(value) = false) Then
				If Me._con_com_cls.HasLoadedOrAssignedValue Then
					Throw New System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException()
				End If
				Me.Onid_con_comChanging(value)
				Me.SendPropertyChanging
				Me._id_con_com = value
				Me.SendPropertyChanged("id_con_com")
				Me.Onid_con_comChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_id_p_0031", DbType:="Int")>  _
	Public Property id_p_0031() As System.Nullable(Of Integer)
		Get
			Return Me._id_p_0031
		End Get
		Set
			If (Me._id_p_0031.Equals(value) = false) Then
				If Me._P_0031_cls.HasLoadedOrAssignedValue Then
					Throw New System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException()
				End If
				Me.Onid_p_0031Changing(value)
				Me.SendPropertyChanging
				Me._id_p_0031 = value
				Me.SendPropertyChanged("id_p_0031")
				Me.Onid_p_0031Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="cxd_cls_cxn_cls", Storage:="_cxn_cls", ThisKey:="id_cxd", OtherKey:="id_cxd")>  _
	Public Property cxn_cls() As EntitySet(Of cxn_cls)
		Get
			Return Me._cxn_cls
		End Get
		Set
			Me._cxn_cls.Assign(value)
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="con_com_cls_cxd_cls", Storage:="_con_com_cls", ThisKey:="id_con_com", OtherKey:="id_con_com", IsForeignKey:=true)>  _
	Public Property con_com_cls() As con_com_cls
		Get
			Return Me._con_com_cls.Entity
		End Get
		Set
			Dim previousValue As con_com_cls = Me._con_com_cls.Entity
			If ((Object.Equals(previousValue, value) = false)  _
						OrElse (Me._con_com_cls.HasLoadedOrAssignedValue = false)) Then
				Me.SendPropertyChanging
				If ((previousValue Is Nothing)  _
							= false) Then
					Me._con_com_cls.Entity = Nothing
					previousValue.cxd_cls.Remove(Me)
				End If
				Me._con_com_cls.Entity = value
				If ((value Is Nothing)  _
							= false) Then
					value.cxd_cls.Add(Me)
					Me._id_con_com = value.id_con_com
				Else
					Me._id_con_com = CType(Nothing, Nullable(Of Integer))
				End If
				Me.SendPropertyChanged("con_com_cls")
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="P_0031_cls_cxd_cls", Storage:="_P_0031_cls", ThisKey:="id_p_0031", OtherKey:="id_P_0031", IsForeignKey:=true)>  _
	Public Property P_0031_cls() As P_0031_cls
		Get
			Return Me._P_0031_cls.Entity
		End Get
		Set
			Dim previousValue As P_0031_cls = Me._P_0031_cls.Entity
			If ((Object.Equals(previousValue, value) = false)  _
						OrElse (Me._P_0031_cls.HasLoadedOrAssignedValue = false)) Then
				Me.SendPropertyChanging
				If ((previousValue Is Nothing)  _
							= false) Then
					Me._P_0031_cls.Entity = Nothing
					previousValue.cxd_cls.Remove(Me)
				End If
				Me._P_0031_cls.Entity = value
				If ((value Is Nothing)  _
							= false) Then
					value.cxd_cls.Add(Me)
					Me._id_p_0031 = value.id_P_0031
				Else
					Me._id_p_0031 = CType(Nothing, Nullable(Of Integer))
				End If
				Me.SendPropertyChanged("P_0031_cls")
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
	
	Private Sub attach_cxn_cls(ByVal entity As cxn_cls)
		Me.SendPropertyChanging
		entity.cxd_cls = Me
	End Sub
	
	Private Sub detach_cxn_cls(ByVal entity As cxn_cls)
		Me.SendPropertyChanging
		entity.cxd_cls = Nothing
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.cxn")>  _
Partial Public Class cxn_cls
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _id_cxn As Integer
	
	Private _id_cxd As System.Nullable(Of Integer)
	
	Private _id_opn As System.Nullable(Of Decimal)
	
	Private _est_cxn As System.Nullable(Of Char)
	
	Private _cxd_cls As EntityRef(Of cxd_cls)
	
	Private _opn_cls As EntityRef(Of opn_cls)
	
    #Region "Definiciones de métodos de extensibilidad"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub Onid_cxnChanging(value As Integer)
    End Sub
    Partial Private Sub Onid_cxnChanged()
    End Sub
    Partial Private Sub Onid_cxdChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub Onid_cxdChanged()
    End Sub
    Partial Private Sub Onid_opnChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub Onid_opnChanged()
    End Sub
    Partial Private Sub Onest_cxnChanging(value As System.Nullable(Of Char))
    End Sub
    Partial Private Sub Onest_cxnChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		Me._cxd_cls = CType(Nothing, EntityRef(Of cxd_cls))
		Me._opn_cls = CType(Nothing, EntityRef(Of opn_cls))
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_id_cxn", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property id_cxn() As Integer
		Get
			Return Me._id_cxn
		End Get
		Set
			If ((Me._id_cxn = value)  _
						= false) Then
				Me.Onid_cxnChanging(value)
				Me.SendPropertyChanging
				Me._id_cxn = value
				Me.SendPropertyChanged("id_cxn")
				Me.Onid_cxnChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_id_cxd", DbType:="Int")>  _
	Public Property id_cxd() As System.Nullable(Of Integer)
		Get
			Return Me._id_cxd
		End Get
		Set
			If (Me._id_cxd.Equals(value) = false) Then
				If Me._cxd_cls.HasLoadedOrAssignedValue Then
					Throw New System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException()
				End If
				Me.Onid_cxdChanging(value)
				Me.SendPropertyChanging
				Me._id_cxd = value
				Me.SendPropertyChanged("id_cxd")
				Me.Onid_cxdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_id_opn", DbType:="Decimal(10,0)")>  _
	Public Property id_opn() As System.Nullable(Of Decimal)
		Get
			Return Me._id_opn
		End Get
		Set
			If (Me._id_opn.Equals(value) = false) Then
				If Me._opn_cls.HasLoadedOrAssignedValue Then
					Throw New System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException()
				End If
				Me.Onid_opnChanging(value)
				Me.SendPropertyChanging
				Me._id_opn = value
				Me.SendPropertyChanged("id_opn")
				Me.Onid_opnChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_est_cxn", DbType:="Char(1)")>  _
	Public Property est_cxn() As System.Nullable(Of Char)
		Get
			Return Me._est_cxn
		End Get
		Set
			If (Me._est_cxn.Equals(value) = false) Then
				Me.Onest_cxnChanging(value)
				Me.SendPropertyChanging
				Me._est_cxn = value
				Me.SendPropertyChanged("est_cxn")
				Me.Onest_cxnChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="cxd_cls_cxn_cls", Storage:="_cxd_cls", ThisKey:="id_cxd", OtherKey:="id_cxd", IsForeignKey:=true)>  _
	Public Property cxd_cls() As cxd_cls
		Get
			Return Me._cxd_cls.Entity
		End Get
		Set
			Dim previousValue As cxd_cls = Me._cxd_cls.Entity
			If ((Object.Equals(previousValue, value) = false)  _
						OrElse (Me._cxd_cls.HasLoadedOrAssignedValue = false)) Then
				Me.SendPropertyChanging
				If ((previousValue Is Nothing)  _
							= false) Then
					Me._cxd_cls.Entity = Nothing
					previousValue.cxn_cls.Remove(Me)
				End If
				Me._cxd_cls.Entity = value
				If ((value Is Nothing)  _
							= false) Then
					value.cxn_cls.Add(Me)
					Me._id_cxd = value.id_cxd
				Else
					Me._id_cxd = CType(Nothing, Nullable(Of Integer))
				End If
				Me.SendPropertyChanged("cxd_cls")
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="opn_cls_cxn_cls", Storage:="_opn_cls", ThisKey:="id_opn", OtherKey:="id_opn", IsForeignKey:=true)>  _
	Public Property opn_cls() As opn_cls
		Get
			Return Me._opn_cls.Entity
		End Get
		Set
			Dim previousValue As opn_cls = Me._opn_cls.Entity
			If ((Object.Equals(previousValue, value) = false)  _
						OrElse (Me._opn_cls.HasLoadedOrAssignedValue = false)) Then
				Me.SendPropertyChanging
				If ((previousValue Is Nothing)  _
							= false) Then
					Me._opn_cls.Entity = Nothing
					previousValue.cxn_cls.Remove(Me)
				End If
				Me._opn_cls.Entity = value
				If ((value Is Nothing)  _
							= false) Then
					value.cxn_cls.Add(Me)
					Me._id_opn = value.id_opn
				Else
					Me._id_opn = CType(Nothing, Nullable(Of Decimal))
				End If
				Me.SendPropertyChanged("opn_cls")
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.cxp")>  _
Partial Public Class cxp_cls
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _id_cxp As Decimal
	
	Private _cli_idc As String
	
	Private _id_opo As System.Nullable(Of Decimal)
	
	Private _id_doc As System.Nullable(Of Decimal)
	
	Private _id_apl As System.Nullable(Of Decimal)
	
	Private _id_hre As System.Nullable(Of Decimal)
	
	Private _id_P_0041 As Integer
	
	Private _id_P_0023 As System.Nullable(Of Integer)
	
	Private _id_P_0057 As System.Nullable(Of Integer)
	
	Private _cxp_nro_ope As System.Nullable(Of Decimal)
	
	Private _cxp_fec As System.Nullable(Of Date)
	
	Private _cxp_mto As System.Nullable(Of Decimal)
	
	Private _cxp_des As String
	
	Private _cxp_sim_oto As System.Nullable(Of Char)
	
	Private _cxp_fec_ctb As System.Nullable(Of Date)
	
	Private _cxp_num_vax As System.Nullable(Of Decimal)
	
	Private _cxp_fac_cam As System.Nullable(Of Decimal)
	
	Private _id_eje As System.Nullable(Of Integer)
	
	Private _dpo_cls As EntitySet(Of dpo_cls)
	
	Private _egr_sec_cls As EntitySet(Of egr_sec_cls)
	
	Private _sim_cxp As EntitySet(Of sim_cxp_cls)
	
	Private _apl_cls As EntityRef(Of apl_cls)
	
	Private _cli_cls As EntityRef(Of cli_cls)
	
	Private _doc_cls As EntityRef(Of doc_cls)
	
	Private _hre_cls As EntityRef(Of hre_cls)
	
	Private _opo_cls As EntityRef(Of opo_cls)
	
	Private _P_0023_cls As EntityRef(Of P_0023_cls)
	
	Private _p_0041_cls As EntityRef(Of p_0041_cls)
	
	Private _P_0057_cls As EntityRef(Of P_0057_cls)
	
    #Region "Definiciones de métodos de extensibilidad"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub Onid_cxpChanging(value As Decimal)
    End Sub
    Partial Private Sub Onid_cxpChanged()
    End Sub
    Partial Private Sub Oncli_idcChanging(value As String)
    End Sub
    Partial Private Sub Oncli_idcChanged()
    End Sub
    Partial Private Sub Onid_opoChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub Onid_opoChanged()
    End Sub
    Partial Private Sub Onid_docChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub Onid_docChanged()
    End Sub
    Partial Private Sub Onid_aplChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub Onid_aplChanged()
    End Sub
    Partial Private Sub Onid_hreChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub Onid_hreChanged()
    End Sub
    Partial Private Sub Onid_P_0041Changing(value As Integer)
    End Sub
    Partial Private Sub Onid_P_0041Changed()
    End Sub
    Partial Private Sub Onid_P_0023Changing(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub Onid_P_0023Changed()
    End Sub
    Partial Private Sub Onid_P_0057Changing(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub Onid_P_0057Changed()
    End Sub
    Partial Private Sub Oncxp_nro_opeChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub Oncxp_nro_opeChanged()
    End Sub
    Partial Private Sub Oncxp_fecChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub Oncxp_fecChanged()
    End Sub
    Partial Private Sub Oncxp_mtoChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub Oncxp_mtoChanged()
    End Sub
    Partial Private Sub Oncxp_desChanging(value As String)
    End Sub
    Partial Private Sub Oncxp_desChanged()
    End Sub
    Partial Private Sub Oncxp_sim_otoChanging(value As System.Nullable(Of Char))
    End Sub
    Partial Private Sub Oncxp_sim_otoChanged()
    End Sub
    Partial Private Sub Oncxp_fec_ctbChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub Oncxp_fec_ctbChanged()
    End Sub
    Partial Private Sub Oncxp_num_vaxChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub Oncxp_num_vaxChanged()
    End Sub
    Partial Private Sub Oncxp_fac_camChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub Oncxp_fac_camChanged()
    End Sub
    Partial Private Sub Onid_ejeChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub Onid_ejeChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		Me._dpo_cls = New EntitySet(Of dpo_cls)(AddressOf Me.attach_dpo_cls, AddressOf Me.detach_dpo_cls)
		Me._egr_sec_cls = New EntitySet(Of egr_sec_cls)(AddressOf Me.attach_egr_sec_cls, AddressOf Me.detach_egr_sec_cls)
		Me._sim_cxp = New EntitySet(Of sim_cxp_cls)(AddressOf Me.attach_sim_cxp, AddressOf Me.detach_sim_cxp)
		Me._apl_cls = CType(Nothing, EntityRef(Of apl_cls))
		Me._cli_cls = CType(Nothing, EntityRef(Of cli_cls))
		Me._doc_cls = CType(Nothing, EntityRef(Of doc_cls))
		Me._hre_cls = CType(Nothing, EntityRef(Of hre_cls))
		Me._opo_cls = CType(Nothing, EntityRef(Of opo_cls))
		Me._P_0023_cls = CType(Nothing, EntityRef(Of P_0023_cls))
		Me._p_0041_cls = CType(Nothing, EntityRef(Of p_0041_cls))
		Me._P_0057_cls = CType(Nothing, EntityRef(Of P_0057_cls))
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_id_cxp", AutoSync:=AutoSync.OnInsert, DbType:="Decimal(10,0) NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property id_cxp() As Decimal
		Get
			Return Me._id_cxp
		End Get
		Set
			If ((Me._id_cxp = value)  _
						= false) Then
				Me.Onid_cxpChanging(value)
				Me.SendPropertyChanging
				Me._id_cxp = value
				Me.SendPropertyChanged("id_cxp")
				Me.Onid_cxpChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_cli_idc", DbType:="Char(12)")>  _
	Public Property cli_idc() As String
		Get
			Return Me._cli_idc
		End Get
		Set
			If (String.Equals(Me._cli_idc, value) = false) Then
				If Me._cli_cls.HasLoadedOrAssignedValue Then
					Throw New System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException()
				End If
				Me.Oncli_idcChanging(value)
				Me.SendPropertyChanging
				Me._cli_idc = value
				Me.SendPropertyChanged("cli_idc")
				Me.Oncli_idcChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_id_opo", DbType:="Decimal(10,0)")>  _
	Public Property id_opo() As System.Nullable(Of Decimal)
		Get
			Return Me._id_opo
		End Get
		Set
			If (Me._id_opo.Equals(value) = false) Then
				If Me._opo_cls.HasLoadedOrAssignedValue Then
					Throw New System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException()
				End If
				Me.Onid_opoChanging(value)
				Me.SendPropertyChanging
				Me._id_opo = value
				Me.SendPropertyChanged("id_opo")
				Me.Onid_opoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_id_doc", DbType:="Decimal(18,0)")>  _
	Public Property id_doc() As System.Nullable(Of Decimal)
		Get
			Return Me._id_doc
		End Get
		Set
			If (Me._id_doc.Equals(value) = false) Then
				If Me._doc_cls.HasLoadedOrAssignedValue Then
					Throw New System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException()
				End If
				Me.Onid_docChanging(value)
				Me.SendPropertyChanging
				Me._id_doc = value
				Me.SendPropertyChanged("id_doc")
				Me.Onid_docChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_id_apl", DbType:="Decimal(10,0)")>  _
	Public Property id_apl() As System.Nullable(Of Decimal)
		Get
			Return Me._id_apl
		End Get
		Set
			If (Me._id_apl.Equals(value) = false) Then
				If Me._apl_cls.HasLoadedOrAssignedValue Then
					Throw New System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException()
				End If
				Me.Onid_aplChanging(value)
				Me.SendPropertyChanging
				Me._id_apl = value
				Me.SendPropertyChanged("id_apl")
				Me.Onid_aplChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_id_hre", DbType:="Decimal(5,0)")>  _
	Public Property id_hre() As System.Nullable(Of Decimal)
		Get
			Return Me._id_hre
		End Get
		Set
			If (Me._id_hre.Equals(value) = false) Then
				If Me._hre_cls.HasLoadedOrAssignedValue Then
					Throw New System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException()
				End If
				Me.Onid_hreChanging(value)
				Me.SendPropertyChanging
				Me._id_hre = value
				Me.SendPropertyChanged("id_hre")
				Me.Onid_hreChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_id_P_0041", DbType:="Int NOT NULL")>  _
	Public Property id_P_0041() As Integer
		Get
			Return Me._id_P_0041
		End Get
		Set
			If ((Me._id_P_0041 = value)  _
						= false) Then
				If Me._p_0041_cls.HasLoadedOrAssignedValue Then
					Throw New System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException()
				End If
				Me.Onid_P_0041Changing(value)
				Me.SendPropertyChanging
				Me._id_P_0041 = value
				Me.SendPropertyChanged("id_P_0041")
				Me.Onid_P_0041Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_id_P_0023", DbType:="Int")>  _
	Public Property id_P_0023() As System.Nullable(Of Integer)
		Get
			Return Me._id_P_0023
		End Get
		Set
			If (Me._id_P_0023.Equals(value) = false) Then
				If Me._P_0023_cls.HasLoadedOrAssignedValue Then
					Throw New System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException()
				End If
				Me.Onid_P_0023Changing(value)
				Me.SendPropertyChanging
				Me._id_P_0023 = value
				Me.SendPropertyChanged("id_P_0023")
				Me.Onid_P_0023Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_id_P_0057", DbType:="Int")>  _
	Public Property id_P_0057() As System.Nullable(Of Integer)
		Get
			Return Me._id_P_0057
		End Get
		Set
			If (Me._id_P_0057.Equals(value) = false) Then
				If Me._P_0057_cls.HasLoadedOrAssignedValue Then
					Throw New System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException()
				End If
				Me.Onid_P_0057Changing(value)
				Me.SendPropertyChanging
				Me._id_P_0057 = value
				Me.SendPropertyChanged("id_P_0057")
				Me.Onid_P_0057Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_cxp_nro_ope", DbType:="Decimal(10,0)")>  _
	Public Property cxp_nro_ope() As System.Nullable(Of Decimal)
		Get
			Return Me._cxp_nro_ope
		End Get
		Set
			If (Me._cxp_nro_ope.Equals(value) = false) Then
				Me.Oncxp_nro_opeChanging(value)
				Me.SendPropertyChanging
				Me._cxp_nro_ope = value
				Me.SendPropertyChanged("cxp_nro_ope")
				Me.Oncxp_nro_opeChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_cxp_fec", DbType:="DateTime")>  _
	Public Property cxp_fec() As System.Nullable(Of Date)
		Get
			Return Me._cxp_fec
		End Get
		Set
			If (Me._cxp_fec.Equals(value) = false) Then
				Me.Oncxp_fecChanging(value)
				Me.SendPropertyChanging
				Me._cxp_fec = value
				Me.SendPropertyChanged("cxp_fec")
				Me.Oncxp_fecChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_cxp_mto", DbType:="Money")>  _
	Public Property cxp_mto() As System.Nullable(Of Decimal)
		Get
			Return Me._cxp_mto
		End Get
		Set
			If (Me._cxp_mto.Equals(value) = false) Then
				Me.Oncxp_mtoChanging(value)
				Me.SendPropertyChanging
				Me._cxp_mto = value
				Me.SendPropertyChanged("cxp_mto")
				Me.Oncxp_mtoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_cxp_des", DbType:="VarChar(100)")>  _
	Public Property cxp_des() As String
		Get
			Return Me._cxp_des
		End Get
		Set
			If (String.Equals(Me._cxp_des, value) = false) Then
				Me.Oncxp_desChanging(value)
				Me.SendPropertyChanging
				Me._cxp_des = value
				Me.SendPropertyChanged("cxp_des")
				Me.Oncxp_desChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_cxp_sim_oto", DbType:="Char(1)")>  _
	Public Property cxp_sim_oto() As System.Nullable(Of Char)
		Get
			Return Me._cxp_sim_oto
		End Get
		Set
			If (Me._cxp_sim_oto.Equals(value) = false) Then
				Me.Oncxp_sim_otoChanging(value)
				Me.SendPropertyChanging
				Me._cxp_sim_oto = value
				Me.SendPropertyChanged("cxp_sim_oto")
				Me.Oncxp_sim_otoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_cxp_fec_ctb", DbType:="DateTime")>  _
	Public Property cxp_fec_ctb() As System.Nullable(Of Date)
		Get
			Return Me._cxp_fec_ctb
		End Get
		Set
			If (Me._cxp_fec_ctb.Equals(value) = false) Then
				Me.Oncxp_fec_ctbChanging(value)
				Me.SendPropertyChanging
				Me._cxp_fec_ctb = value
				Me.SendPropertyChanged("cxp_fec_ctb")
				Me.Oncxp_fec_ctbChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_cxp_num_vax", DbType:="Decimal(10,0)")>  _
	Public Property cxp_num_vax() As System.Nullable(Of Decimal)
		Get
			Return Me._cxp_num_vax
		End Get
		Set
			If (Me._cxp_num_vax.Equals(value) = false) Then
				Me.Oncxp_num_vaxChanging(value)
				Me.SendPropertyChanging
				Me._cxp_num_vax = value
				Me.SendPropertyChanged("cxp_num_vax")
				Me.Oncxp_num_vaxChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_cxp_fac_cam", DbType:="Money")>  _
	Public Property cxp_fac_cam() As System.Nullable(Of Decimal)
		Get
			Return Me._cxp_fac_cam
		End Get
		Set
			If (Me._cxp_fac_cam.Equals(value) = false) Then
				Me.Oncxp_fac_camChanging(value)
				Me.SendPropertyChanging
				Me._cxp_fac_cam = value
				Me.SendPropertyChanged("cxp_fac_cam")
				Me.Oncxp_fac_camChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_id_eje", DbType:="Int")>  _
	Public Property id_eje() As System.Nullable(Of Integer)
		Get
			Return Me._id_eje
		End Get
		Set
			If (Me._id_eje.Equals(value) = false) Then
				Me.Onid_ejeChanging(value)
				Me.SendPropertyChanging
				Me._id_eje = value
				Me.SendPropertyChanged("id_eje")
				Me.Onid_ejeChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="cxp_cls_dpo_cls", Storage:="_dpo_cls", ThisKey:="id_cxp", OtherKey:="id_cxp")>  _
	Public Property dpo_cls() As EntitySet(Of dpo_cls)
		Get
			Return Me._dpo_cls
		End Get
		Set
			Me._dpo_cls.Assign(value)
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="cxp_cls_egr_sec_cls", Storage:="_egr_sec_cls", ThisKey:="id_cxp", OtherKey:="id_cxp")>  _
	Public Property egr_sec_cls() As EntitySet(Of egr_sec_cls)
		Get
			Return Me._egr_sec_cls
		End Get
		Set
			Me._egr_sec_cls.Assign(value)
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="cxp_cls_sim_cxp_cls", Storage:="_sim_cxp", ThisKey:="id_cxp", OtherKey:="id_cxp")>  _
	Public Property sim_cxp_cls() As EntitySet(Of sim_cxp_cls)
		Get
			Return Me._sim_cxp
		End Get
		Set
			Me._sim_cxp.Assign(value)
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="apl_cls_cxp_cls", Storage:="_apl_cls", ThisKey:="id_apl", OtherKey:="id_apl", IsForeignKey:=true)>  _
	Public Property apl_cls() As apl_cls
		Get
			Return Me._apl_cls.Entity
		End Get
		Set
			Dim previousValue As apl_cls = Me._apl_cls.Entity
			If ((Object.Equals(previousValue, value) = false)  _
						OrElse (Me._apl_cls.HasLoadedOrAssignedValue = false)) Then
				Me.SendPropertyChanging
				If ((previousValue Is Nothing)  _
							= false) Then
					Me._apl_cls.Entity = Nothing
					previousValue.cxp_cls.Remove(Me)
				End If
				Me._apl_cls.Entity = value
				If ((value Is Nothing)  _
							= false) Then
					value.cxp_cls.Add(Me)
					Me._id_apl = value.id_apl
				Else
					Me._id_apl = CType(Nothing, Nullable(Of Decimal))
				End If
				Me.SendPropertyChanged("apl_cls")
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="cli_cls_cxp_cls", Storage:="_cli_cls", ThisKey:="cli_idc", OtherKey:="cli_idc", IsForeignKey:=true)>  _
	Public Property cli_cls() As cli_cls
		Get
			Return Me._cli_cls.Entity
		End Get
		Set
			Dim previousValue As cli_cls = Me._cli_cls.Entity
			If ((Object.Equals(previousValue, value) = false)  _
						OrElse (Me._cli_cls.HasLoadedOrAssignedValue = false)) Then
				Me.SendPropertyChanging
				If ((previousValue Is Nothing)  _
							= false) Then
					Me._cli_cls.Entity = Nothing
					previousValue.cxp_cls.Remove(Me)
				End If
				Me._cli_cls.Entity = value
				If ((value Is Nothing)  _
							= false) Then
					value.cxp_cls.Add(Me)
					Me._cli_idc = value.cli_idc
				Else
					Me._cli_idc = CType(Nothing, String)
				End If
				Me.SendPropertyChanged("cli_cls")
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="doc_cls_cxp_cls", Storage:="_doc_cls", ThisKey:="id_doc", OtherKey:="id_doc", IsForeignKey:=true)>  _
	Public Property doc_cls() As doc_cls
		Get
			Return Me._doc_cls.Entity
		End Get
		Set
			Dim previousValue As doc_cls = Me._doc_cls.Entity
			If ((Object.Equals(previousValue, value) = false)  _
						OrElse (Me._doc_cls.HasLoadedOrAssignedValue = false)) Then
				Me.SendPropertyChanging
				If ((previousValue Is Nothing)  _
							= false) Then
					Me._doc_cls.Entity = Nothing
					previousValue.cxp_cls.Remove(Me)
				End If
				Me._doc_cls.Entity = value
				If ((value Is Nothing)  _
							= false) Then
					value.cxp_cls.Add(Me)
					Me._id_doc = value.id_doc
				Else
					Me._id_doc = CType(Nothing, Nullable(Of Decimal))
				End If
				Me.SendPropertyChanged("doc_cls")
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="hre_cls_cxp_cls", Storage:="_hre_cls", ThisKey:="id_hre", OtherKey:="id_hre", IsForeignKey:=true)>  _
	Public Property hre_cls() As hre_cls
		Get
			Return Me._hre_cls.Entity
		End Get
		Set
			Dim previousValue As hre_cls = Me._hre_cls.Entity
			If ((Object.Equals(previousValue, value) = false)  _
						OrElse (Me._hre_cls.HasLoadedOrAssignedValue = false)) Then
				Me.SendPropertyChanging
				If ((previousValue Is Nothing)  _
							= false) Then
					Me._hre_cls.Entity = Nothing
					previousValue.cxp_cls.Remove(Me)
				End If
				Me._hre_cls.Entity = value
				If ((value Is Nothing)  _
							= false) Then
					value.cxp_cls.Add(Me)
					Me._id_hre = value.id_hre
				Else
					Me._id_hre = CType(Nothing, Nullable(Of Decimal))
				End If
				Me.SendPropertyChanged("hre_cls")
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="opo_cls_cxp_cls", Storage:="_opo_cls", ThisKey:="id_opo", OtherKey:="id_opo", IsForeignKey:=true)>  _
	Public Property opo_cls() As opo_cls
		Get
			Return Me._opo_cls.Entity
		End Get
		Set
			Dim previousValue As opo_cls = Me._opo_cls.Entity
			If ((Object.Equals(previousValue, value) = false)  _
						OrElse (Me._opo_cls.HasLoadedOrAssignedValue = false)) Then
				Me.SendPropertyChanging
				If ((previousValue Is Nothing)  _
							= false) Then
					Me._opo_cls.Entity = Nothing
					previousValue.cxp_cls.Remove(Me)
				End If
				Me._opo_cls.Entity = value
				If ((value Is Nothing)  _
							= false) Then
					value.cxp_cls.Add(Me)
					Me._id_opo = value.id_opo
				Else
					Me._id_opo = CType(Nothing, Nullable(Of Decimal))
				End If
				Me.SendPropertyChanged("opo_cls")
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="P_0023_cls_cxp_cls", Storage:="_P_0023_cls", ThisKey:="id_P_0023", OtherKey:="id_P_0023", IsForeignKey:=true)>  _
	Public Property P_0023_cls() As P_0023_cls
		Get
			Return Me._P_0023_cls.Entity
		End Get
		Set
			Dim previousValue As P_0023_cls = Me._P_0023_cls.Entity
			If ((Object.Equals(previousValue, value) = false)  _
						OrElse (Me._P_0023_cls.HasLoadedOrAssignedValue = false)) Then
				Me.SendPropertyChanging
				If ((previousValue Is Nothing)  _
							= false) Then
					Me._P_0023_cls.Entity = Nothing
					previousValue.cxp_cls.Remove(Me)
				End If
				Me._P_0023_cls.Entity = value
				If ((value Is Nothing)  _
							= false) Then
					value.cxp_cls.Add(Me)
					Me._id_P_0023 = value.id_P_0023
				Else
					Me._id_P_0023 = CType(Nothing, Nullable(Of Integer))
				End If
				Me.SendPropertyChanged("P_0023_cls")
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="p_0041_cls_cxp_cls", Storage:="_p_0041_cls", ThisKey:="id_P_0041", OtherKey:="id_P_0041", IsForeignKey:=true)>  _
	Public Property p_0041_cls() As p_0041_cls
		Get
			Return Me._p_0041_cls.Entity
		End Get
		Set
			Dim previousValue As p_0041_cls = Me._p_0041_cls.Entity
			If ((Object.Equals(previousValue, value) = false)  _
						OrElse (Me._p_0041_cls.HasLoadedOrAssignedValue = false)) Then
				Me.SendPropertyChanging
				If ((previousValue Is Nothing)  _
							= false) Then
					Me._p_0041_cls.Entity = Nothing
					previousValue.cxp_cls.Remove(Me)
				End If
				Me._p_0041_cls.Entity = value
				If ((value Is Nothing)  _
							= false) Then
					value.cxp_cls.Add(Me)
					Me._id_P_0041 = value.id_P_0041
				Else
					Me._id_P_0041 = CType(Nothing, Integer)
				End If
				Me.SendPropertyChanged("p_0041_cls")
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="P_0057_cls_cxp_cls", Storage:="_P_0057_cls", ThisKey:="id_P_0057", OtherKey:="id_P_0057", IsForeignKey:=true)>  _
	Public Property P_0057_cls() As P_0057_cls
		Get
			Return Me._P_0057_cls.Entity
		End Get
		Set
			Dim previousValue As P_0057_cls = Me._P_0057_cls.Entity
			If ((Object.Equals(previousValue, value) = false)  _
						OrElse (Me._P_0057_cls.HasLoadedOrAssignedValue = false)) Then
				Me.SendPropertyChanging
				If ((previousValue Is Nothing)  _
							= false) Then
					Me._P_0057_cls.Entity = Nothing
					previousValue.cxp_cls.Remove(Me)
				End If
				Me._P_0057_cls.Entity = value
				If ((value Is Nothing)  _
							= false) Then
					value.cxp_cls.Add(Me)
					Me._id_P_0057 = value.id_P_0057
				Else
					Me._id_P_0057 = CType(Nothing, Nullable(Of Integer))
				End If
				Me.SendPropertyChanged("P_0057_cls")
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
	
	Private Sub attach_dpo_cls(ByVal entity As dpo_cls)
		Me.SendPropertyChanging
		entity.cxp_cls = Me
	End Sub
	
	Private Sub detach_dpo_cls(ByVal entity As dpo_cls)
		Me.SendPropertyChanging
		entity.cxp_cls = Nothing
	End Sub
	
	Private Sub attach_egr_sec_cls(ByVal entity As egr_sec_cls)
		Me.SendPropertyChanging
		entity.cxp_cls = Me
	End Sub
	
	Private Sub detach_egr_sec_cls(ByVal entity As egr_sec_cls)
		Me.SendPropertyChanging
		entity.cxp_cls = Nothing
	End Sub
	
	Private Sub attach_sim_cxp(ByVal entity As sim_cxp_cls)
		Me.SendPropertyChanging
		entity.cxp_cls = Me
	End Sub
	
	Private Sub detach_sim_cxp(ByVal entity As sim_cxp_cls)
		Me.SendPropertyChanging
		entity.cxp_cls = Nothing
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.cxs")>  _
Partial Public Class cxs_cls
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _id_cxs As Integer
	
	Private _id_ccf As System.Nullable(Of Integer)
	
	Private _id_suc As System.Nullable(Of Integer)
	
	Private _cxs_est As System.Nullable(Of Char)
	
	Private _sxa_cls As EntitySet(Of sxa_cls)
	
	Private _ccf_cls As EntityRef(Of ccf_cls)
	
	Private _suc_cls As EntityRef(Of suc_cls)
	
    #Region "Definiciones de métodos de extensibilidad"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub Onid_cxsChanging(value As Integer)
    End Sub
    Partial Private Sub Onid_cxsChanged()
    End Sub
    Partial Private Sub Onid_ccfChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub Onid_ccfChanged()
    End Sub
    Partial Private Sub Onid_sucChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub Onid_sucChanged()
    End Sub
    Partial Private Sub Oncxs_estChanging(value As System.Nullable(Of Char))
    End Sub
    Partial Private Sub Oncxs_estChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		Me._sxa_cls = New EntitySet(Of sxa_cls)(AddressOf Me.attach_sxa_cls, AddressOf Me.detach_sxa_cls)
		Me._ccf_cls = CType(Nothing, EntityRef(Of ccf_cls))
		Me._suc_cls = CType(Nothing, EntityRef(Of suc_cls))
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_id_cxs", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property id_cxs() As Integer
		Get
			Return Me._id_cxs
		End Get
		Set
			If ((Me._id_cxs = value)  _
						= false) Then
				Me.Onid_cxsChanging(value)
				Me.SendPropertyChanging
				Me._id_cxs = value
				Me.SendPropertyChanged("id_cxs")
				Me.Onid_cxsChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_id_ccf", DbType:="Int")>  _
	Public Property id_ccf() As System.Nullable(Of Integer)
		Get
			Return Me._id_ccf
		End Get
		Set
			If (Me._id_ccf.Equals(value) = false) Then
				If Me._ccf_cls.HasLoadedOrAssignedValue Then
					Throw New System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException()
				End If
				Me.Onid_ccfChanging(value)
				Me.SendPropertyChanging
				Me._id_ccf = value
				Me.SendPropertyChanged("id_ccf")
				Me.Onid_ccfChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_id_suc", DbType:="Int")>  _
	Public Property id_suc() As System.Nullable(Of Integer)
		Get
			Return Me._id_suc
		End Get
		Set
			If (Me._id_suc.Equals(value) = false) Then
				If Me._suc_cls.HasLoadedOrAssignedValue Then
					Throw New System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException()
				End If
				Me.Onid_sucChanging(value)
				Me.SendPropertyChanging
				Me._id_suc = value
				Me.SendPropertyChanged("id_suc")
				Me.Onid_sucChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_cxs_est", DbType:="Char(1)")>  _
	Public Property cxs_est() As System.Nullable(Of Char)
		Get
			Return Me._cxs_est
		End Get
		Set
			If (Me._cxs_est.Equals(value) = false) Then
				Me.Oncxs_estChanging(value)
				Me.SendPropertyChanging
				Me._cxs_est = value
				Me.SendPropertyChanged("cxs_est")
				Me.Oncxs_estChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="cxs_cls_sxa_cls", Storage:="_sxa_cls", ThisKey:="id_cxs", OtherKey:="id_cxs")>  _
	Public Property sxa_cls() As EntitySet(Of sxa_cls)
		Get
			Return Me._sxa_cls
		End Get
		Set
			Me._sxa_cls.Assign(value)
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="ccf_cls_cxs_cls", Storage:="_ccf_cls", ThisKey:="id_ccf", OtherKey:="id_ccf", IsForeignKey:=true)>  _
	Public Property ccf_cls() As ccf_cls
		Get
			Return Me._ccf_cls.Entity
		End Get
		Set
			Dim previousValue As ccf_cls = Me._ccf_cls.Entity
			If ((Object.Equals(previousValue, value) = false)  _
						OrElse (Me._ccf_cls.HasLoadedOrAssignedValue = false)) Then
				Me.SendPropertyChanging
				If ((previousValue Is Nothing)  _
							= false) Then
					Me._ccf_cls.Entity = Nothing
					previousValue.cxs_cls.Remove(Me)
				End If
				Me._ccf_cls.Entity = value
				If ((value Is Nothing)  _
							= false) Then
					value.cxs_cls.Add(Me)
					Me._id_ccf = value.id_ccf
				Else
					Me._id_ccf = CType(Nothing, Nullable(Of Integer))
				End If
				Me.SendPropertyChanged("ccf_cls")
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="suc_cls_cxs_cls", Storage:="_suc_cls", ThisKey:="id_suc", OtherKey:="id_suc", IsForeignKey:=true)>  _
	Public Property suc_cls() As suc_cls
		Get
			Return Me._suc_cls.Entity
		End Get
		Set
			Dim previousValue As suc_cls = Me._suc_cls.Entity
			If ((Object.Equals(previousValue, value) = false)  _
						OrElse (Me._suc_cls.HasLoadedOrAssignedValue = false)) Then
				Me.SendPropertyChanging
				If ((previousValue Is Nothing)  _
							= false) Then
					Me._suc_cls.Entity = Nothing
					previousValue.cxs_cls.Remove(Me)
				End If
				Me._suc_cls.Entity = value
				If ((value Is Nothing)  _
							= false) Then
					value.cxs_cls.Add(Me)
					Me._id_suc = value.id_suc
				Else
					Me._id_suc = CType(Nothing, Nullable(Of Integer))
				End If
				Me.SendPropertyChanged("suc_cls")
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
	
	Private Sub attach_sxa_cls(ByVal entity As sxa_cls)
		Me.SendPropertyChanging
		entity.cxs_cls = Me
	End Sub
	
	Private Sub detach_sxa_cls(ByVal entity As sxa_cls)
		Me.SendPropertyChanging
		entity.cxs_cls = Nothing
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.dcc")>  _
Partial Public Class dcc_cls
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _id_dcc As Decimal
	
	Private _id_doc As Decimal
	
	Private _dcc_fec As System.Nullable(Of Date)
	
    #Region "Definiciones de métodos de extensibilidad"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub Onid_dccChanging(value As Decimal)
    End Sub
    Partial Private Sub Onid_dccChanged()
    End Sub
    Partial Private Sub Onid_docChanging(value As Decimal)
    End Sub
    Partial Private Sub Onid_docChanged()
    End Sub
    Partial Private Sub Ondcc_fecChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub Ondcc_fecChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_id_dcc", AutoSync:=AutoSync.OnInsert, DbType:="Decimal(18,0) NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property id_dcc() As Decimal
		Get
			Return Me._id_dcc
		End Get
		Set
			If ((Me._id_dcc = value)  _
						= false) Then
				Me.Onid_dccChanging(value)
				Me.SendPropertyChanging
				Me._id_dcc = value
				Me.SendPropertyChanged("id_dcc")
				Me.Onid_dccChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_id_doc", DbType:="Decimal(18,0) NOT NULL")>  _
	Public Property id_doc() As Decimal
		Get
			Return Me._id_doc
		End Get
		Set
			If ((Me._id_doc = value)  _
						= false) Then
				Me.Onid_docChanging(value)
				Me.SendPropertyChanging
				Me._id_doc = value
				Me.SendPropertyChanged("id_doc")
				Me.Onid_docChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_dcc_fec", DbType:="DateTime")>  _
	Public Property dcc_fec() As System.Nullable(Of Date)
		Get
			Return Me._dcc_fec
		End Get
		Set
			If (Me._dcc_fec.Equals(value) = false) Then
				Me.Ondcc_fecChanging(value)
				Me.SendPropertyChanging
				Me._dcc_fec = value
				Me.SendPropertyChanged("dcc_fec")
				Me.Ondcc_fecChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.dci")>  _
Partial Public Class dci_cls
	
	Private _dci_tip_doc As System.Nullable(Of Integer)
	
	Private _dci_nom_tab As String
	
	Private _dci_cod_pla As String
	
	Private _dci_glo_pla As String
	
	Private _dci_car_not As String
	
	Private _dci_pro_pon As System.Nullable(Of Decimal)
	
	Private _dci_dif_pre As System.Nullable(Of Decimal)
	
	Private _dci_con_dev As String
	
	Private _dci_con_mor As String
	
	Private _dci_cod_mda As System.Nullable(Of Short)
	
	Private _dci_glo_pro As String
	
	Public Sub New()
		MyBase.New
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_dci_tip_doc", DbType:="Int")>  _
	Public Property dci_tip_doc() As System.Nullable(Of Integer)
		Get
			Return Me._dci_tip_doc
		End Get
		Set
			If (Me._dci_tip_doc.Equals(value) = false) Then
				Me._dci_tip_doc = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_dci_nom_tab", DbType:="Char(3)")>  _
	Public Property dci_nom_tab() As String
		Get
			Return Me._dci_nom_tab
		End Get
		Set
			If (String.Equals(Me._dci_nom_tab, value) = false) Then
				Me._dci_nom_tab = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_dci_cod_pla", DbType:="Char(2)")>  _
	Public Property dci_cod_pla() As String
		Get
			Return Me._dci_cod_pla
		End Get
		Set
			If (String.Equals(Me._dci_cod_pla, value) = false) Then
				Me._dci_cod_pla = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_dci_glo_pla", DbType:="VarChar(150)")>  _
	Public Property dci_glo_pla() As String
		Get
			Return Me._dci_glo_pla
		End Get
		Set
			If (String.Equals(Me._dci_glo_pla, value) = false) Then
				Me._dci_glo_pla = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_dci_car_not", DbType:="Text", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property dci_car_not() As String
		Get
			Return Me._dci_car_not
		End Get
		Set
			If (String.Equals(Me._dci_car_not, value) = false) Then
				Me._dci_car_not = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_dci_pro_pon", DbType:="Decimal(18,0)")>  _
	Public Property dci_pro_pon() As System.Nullable(Of Decimal)
		Get
			Return Me._dci_pro_pon
		End Get
		Set
			If (Me._dci_pro_pon.Equals(value) = false) Then
				Me._dci_pro_pon = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_dci_dif_pre", DbType:="Decimal(18,0)")>  _
	Public Property dci_dif_pre() As System.Nullable(Of Decimal)
		Get
			Return Me._dci_dif_pre
		End Get
		Set
			If (Me._dci_dif_pre.Equals(value) = false) Then
				Me._dci_dif_pre = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_dci_con_dev", DbType:="VarChar(1)")>  _
	Public Property dci_con_dev() As String
		Get
			Return Me._dci_con_dev
		End Get
		Set
			If (String.Equals(Me._dci_con_dev, value) = false) Then
				Me._dci_con_dev = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_dci_con_mor", DbType:="VarChar(1)")>  _
	Public Property dci_con_mor() As String
		Get
			Return Me._dci_con_mor
		End Get
		Set
			If (String.Equals(Me._dci_con_mor, value) = false) Then
				Me._dci_con_mor = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_dci_cod_mda", DbType:="SmallInt")>  _
	Public Property dci_cod_mda() As System.Nullable(Of Short)
		Get
			Return Me._dci_cod_mda
		End Get
		Set
			If (Me._dci_cod_mda.Equals(value) = false) Then
				Me._dci_cod_mda = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_dci_glo_pro", DbType:="Char(15)")>  _
	Public Property dci_glo_pro() As String
		Get
			Return Me._dci_glo_pro
		End Get
		Set
			If (String.Equals(Me._dci_glo_pro, value) = false) Then
				Me._dci_glo_pro = value
			End If
		End Set
	End Property
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.dco")>  _
Partial Public Class dco_cls
	
	Private _DCO_RUT_CLI As String
	
	Private _DCO_FEC_DCO As Date
	
	Private _DCO_TIP_PLA As String
	
	Private _DCO_COD_PLA As String
	
	Private _DCO_NUM_REG As Integer
	
	Private _DCO_NUM_LIN As Integer
	
	Private _DCO_TIP_VAL As String
	
	Private _DCO_MON_DCO As System.Nullable(Of Decimal)
	
	Private _ID_DOC As System.Nullable(Of Decimal)
	
	Private _ID_OPO As System.Nullable(Of Decimal)
	
	Private _DCO_REF_REG As String
	
	Private _DCO_TRA_CON As System.Nullable(Of Short)
	
	Private _DCO_MON_OPE As System.Nullable(Of Short)
	
	Private _DCO_FEC_CRR As System.Nullable(Of Date)
	
	Private _DCO_REF_ERE As String
	
	Private _DCO_COD_TRA As String
	
	Private _id_dco As Decimal
	
	Private _gpg_id_gpg As Integer
	
	Public Sub New()
		MyBase.New
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DCO_RUT_CLI", DbType:="VarChar(12)")>  _
	Public Property DCO_RUT_CLI() As String
		Get
			Return Me._DCO_RUT_CLI
		End Get
		Set
			If (String.Equals(Me._DCO_RUT_CLI, value) = false) Then
				Me._DCO_RUT_CLI = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DCO_FEC_DCO", DbType:="SmallDateTime NOT NULL")>  _
	Public Property DCO_FEC_DCO() As Date
		Get
			Return Me._DCO_FEC_DCO
		End Get
		Set
			If ((Me._DCO_FEC_DCO = value)  _
						= false) Then
				Me._DCO_FEC_DCO = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DCO_TIP_PLA", DbType:="VarChar(2) NOT NULL", CanBeNull:=false)>  _
	Public Property DCO_TIP_PLA() As String
		Get
			Return Me._DCO_TIP_PLA
		End Get
		Set
			If (String.Equals(Me._DCO_TIP_PLA, value) = false) Then
				Me._DCO_TIP_PLA = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DCO_COD_PLA", DbType:="VarChar(2) NOT NULL", CanBeNull:=false)>  _
	Public Property DCO_COD_PLA() As String
		Get
			Return Me._DCO_COD_PLA
		End Get
		Set
			If (String.Equals(Me._DCO_COD_PLA, value) = false) Then
				Me._DCO_COD_PLA = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DCO_NUM_REG", DbType:="Int NOT NULL")>  _
	Public Property DCO_NUM_REG() As Integer
		Get
			Return Me._DCO_NUM_REG
		End Get
		Set
			If ((Me._DCO_NUM_REG = value)  _
						= false) Then
				Me._DCO_NUM_REG = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DCO_NUM_LIN", DbType:="Int NOT NULL")>  _
	Public Property DCO_NUM_LIN() As Integer
		Get
			Return Me._DCO_NUM_LIN
		End Get
		Set
			If ((Me._DCO_NUM_LIN = value)  _
						= false) Then
				Me._DCO_NUM_LIN = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DCO_TIP_VAL", DbType:="VarChar(2) NOT NULL", CanBeNull:=false)>  _
	Public Property DCO_TIP_VAL() As String
		Get
			Return Me._DCO_TIP_VAL
		End Get
		Set
			If (String.Equals(Me._DCO_TIP_VAL, value) = false) Then
				Me._DCO_TIP_VAL = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DCO_MON_DCO", DbType:="Money")>  _
	Public Property DCO_MON_DCO() As System.Nullable(Of Decimal)
		Get
			Return Me._DCO_MON_DCO
		End Get
		Set
			If (Me._DCO_MON_DCO.Equals(value) = false) Then
				Me._DCO_MON_DCO = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ID_DOC", DbType:="Decimal(18,0)")>  _
	Public Property ID_DOC() As System.Nullable(Of Decimal)
		Get
			Return Me._ID_DOC
		End Get
		Set
			If (Me._ID_DOC.Equals(value) = false) Then
				Me._ID_DOC = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ID_OPO", DbType:="Decimal(10,0)")>  _
	Public Property ID_OPO() As System.Nullable(Of Decimal)
		Get
			Return Me._ID_OPO
		End Get
		Set
			If (Me._ID_OPO.Equals(value) = false) Then
				Me._ID_OPO = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DCO_REF_REG", DbType:="VarChar(255)")>  _
	Public Property DCO_REF_REG() As String
		Get
			Return Me._DCO_REF_REG
		End Get
		Set
			If (String.Equals(Me._DCO_REF_REG, value) = false) Then
				Me._DCO_REF_REG = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DCO_TRA_CON", DbType:="SmallInt")>  _
	Public Property DCO_TRA_CON() As System.Nullable(Of Short)
		Get
			Return Me._DCO_TRA_CON
		End Get
		Set
			If (Me._DCO_TRA_CON.Equals(value) = false) Then
				Me._DCO_TRA_CON = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DCO_MON_OPE", DbType:="SmallInt")>  _
	Public Property DCO_MON_OPE() As System.Nullable(Of Short)
		Get
			Return Me._DCO_MON_OPE
		End Get
		Set
			If (Me._DCO_MON_OPE.Equals(value) = false) Then
				Me._DCO_MON_OPE = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DCO_FEC_CRR", DbType:="DateTime")>  _
	Public Property DCO_FEC_CRR() As System.Nullable(Of Date)
		Get
			Return Me._DCO_FEC_CRR
		End Get
		Set
			If (Me._DCO_FEC_CRR.Equals(value) = false) Then
				Me._DCO_FEC_CRR = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DCO_REF_ERE", DbType:="VarChar(10)")>  _
	Public Property DCO_REF_ERE() As String
		Get
			Return Me._DCO_REF_ERE
		End Get
		Set
			If (String.Equals(Me._DCO_REF_ERE, value) = false) Then
				Me._DCO_REF_ERE = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DCO_COD_TRA", DbType:="VarChar(6)")>  _
	Public Property DCO_COD_TRA() As String
		Get
			Return Me._DCO_COD_TRA
		End Get
		Set
			If (String.Equals(Me._DCO_COD_TRA, value) = false) Then
				Me._DCO_COD_TRA = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_id_dco", AutoSync:=AutoSync.Always, DbType:="Decimal(18,0) NOT NULL IDENTITY", IsDbGenerated:=true)>  _
	Public Property id_dco() As Decimal
		Get
			Return Me._id_dco
		End Get
		Set
			If ((Me._id_dco = value)  _
						= false) Then
				Me._id_dco = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_gpg_id_gpg", DbType:="Int NOT NULL")>  _
	Public Property gpg_id_gpg() As Integer
		Get
			Return Me._gpg_id_gpg
		End Get
		Set
			If ((Me._gpg_id_gpg = value)  _
						= false) Then
				Me._gpg_id_gpg = value
			End If
		End Set
	End Property
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.dct")>  _
Partial Public Class dct
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _id_ctn As Decimal
	
	Private _id_doc As Decimal
	
	Private _ctn_cls As EntityRef(Of ctn_cls)
	
	Private _doc_cls As EntityRef(Of doc_cls)
	
    #Region "Definiciones de métodos de extensibilidad"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub Onid_ctnChanging(value As Decimal)
    End Sub
    Partial Private Sub Onid_ctnChanged()
    End Sub
    Partial Private Sub Onid_docChanging(value As Decimal)
    End Sub
    Partial Private Sub Onid_docChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		Me._ctn_cls = CType(Nothing, EntityRef(Of ctn_cls))
		Me._doc_cls = CType(Nothing, EntityRef(Of doc_cls))
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_id_ctn", DbType:="Decimal(10,0) NOT NULL", IsPrimaryKey:=true)>  _
	Public Property id_ctn() As Decimal
		Get
			Return Me._id_ctn
		End Get
		Set
			If ((Me._id_ctn = value)  _
						= false) Then
				If Me._ctn_cls.HasLoadedOrAssignedValue Then
					Throw New System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException()
				End If
				Me.Onid_ctnChanging(value)
				Me.SendPropertyChanging
				Me._id_ctn = value
				Me.SendPropertyChanged("id_ctn")
				Me.Onid_ctnChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_id_doc", DbType:="Decimal(18,0) NOT NULL", IsPrimaryKey:=true)>  _
	Public Property id_doc() As Decimal
		Get
			Return Me._id_doc
		End Get
		Set
			If ((Me._id_doc = value)  _
						= false) Then
				If Me._doc_cls.HasLoadedOrAssignedValue Then
					Throw New System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException()
				End If
				Me.Onid_docChanging(value)
				Me.SendPropertyChanging
				Me._id_doc = value
				Me.SendPropertyChanged("id_doc")
				Me.Onid_docChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="ctn_cls_dct", Storage:="_ctn_cls", ThisKey:="id_ctn", OtherKey:="id_ctn", IsForeignKey:=true)>  _
	Public Property ctn_cls() As ctn_cls
		Get
			Return Me._ctn_cls.Entity
		End Get
		Set
			Dim previousValue As ctn_cls = Me._ctn_cls.Entity
			If ((Object.Equals(previousValue, value) = false)  _
						OrElse (Me._ctn_cls.HasLoadedOrAssignedValue = false)) Then
				Me.SendPropertyChanging
				If ((previousValue Is Nothing)  _
							= false) Then
					Me._ctn_cls.Entity = Nothing
					previousValue.dct.Remove(Me)
				End If
				Me._ctn_cls.Entity = value
				If ((value Is Nothing)  _
							= false) Then
					value.dct.Add(Me)
					Me._id_ctn = value.id_ctn
				Else
					Me._id_ctn = CType(Nothing, Decimal)
				End If
				Me.SendPropertyChanged("ctn_cls")
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="doc_cls_dct", Storage:="_doc_cls", ThisKey:="id_doc", OtherKey:="id_doc", IsForeignKey:=true)>  _
	Public Property doc_cls() As doc_cls
		Get
			Return Me._doc_cls.Entity
		End Get
		Set
			Dim previousValue As doc_cls = Me._doc_cls.Entity
			If ((Object.Equals(previousValue, value) = false)  _
						OrElse (Me._doc_cls.HasLoadedOrAssignedValue = false)) Then
				Me.SendPropertyChanging
				If ((previousValue Is Nothing)  _
							= false) Then
					Me._doc_cls.Entity = Nothing
					previousValue.dct.Remove(Me)
				End If
				Me._doc_cls.Entity = value
				If ((value Is Nothing)  _
							= false) Then
					value.dct.Add(Me)
					Me._id_doc = value.id_doc
				Else
					Me._id_doc = CType(Nothing, Decimal)
				End If
				Me.SendPropertyChanged("doc_cls")
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.ddi")>  _
Partial Public Class ddi_cls
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _id_ddi As Decimal
	
	Private _deu_ide As String
	
	Private _id_cmn As Integer
	
	Private _ddr_dml_cbz As String
	
	Private _gsn_cls As EntitySet(Of gsn_cls)
	
	Private _cmn_cls As EntityRef(Of cmn_cls)
	
	Private _deu_cls As EntityRef(Of deu_cls)
	
    #Region "Definiciones de métodos de extensibilidad"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub Onid_ddiChanging(value As Decimal)
    End Sub
    Partial Private Sub Onid_ddiChanged()
    End Sub
    Partial Private Sub Ondeu_ideChanging(value As String)
    End Sub
    Partial Private Sub Ondeu_ideChanged()
    End Sub
    Partial Private Sub Onid_cmnChanging(value As Integer)
    End Sub
    Partial Private Sub Onid_cmnChanged()
    End Sub
    Partial Private Sub Onddr_dml_cbzChanging(value As String)
    End Sub
    Partial Private Sub Onddr_dml_cbzChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		Me._gsn_cls = New EntitySet(Of gsn_cls)(AddressOf Me.attach_gsn_cls, AddressOf Me.detach_gsn_cls)
		Me._cmn_cls = CType(Nothing, EntityRef(Of cmn_cls))
		Me._deu_cls = CType(Nothing, EntityRef(Of deu_cls))
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_id_ddi", AutoSync:=AutoSync.OnInsert, DbType:="Decimal(10,0) NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property id_ddi() As Decimal
		Get
			Return Me._id_ddi
		End Get
		Set
			If ((Me._id_ddi = value)  _
						= false) Then
				Me.Onid_ddiChanging(value)
				Me.SendPropertyChanging
				Me._id_ddi = value
				Me.SendPropertyChanged("id_ddi")
				Me.Onid_ddiChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_deu_ide", DbType:="Char(12) NOT NULL", CanBeNull:=false)>  _
	Public Property deu_ide() As String
		Get
			Return Me._deu_ide
		End Get
		Set
			If (String.Equals(Me._deu_ide, value) = false) Then
				If Me._deu_cls.HasLoadedOrAssignedValue Then
					Throw New System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException()
				End If
				Me.Ondeu_ideChanging(value)
				Me.SendPropertyChanging
				Me._deu_ide = value
				Me.SendPropertyChanged("deu_ide")
				Me.Ondeu_ideChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_id_cmn", DbType:="Int NOT NULL")>  _
	Public Property id_cmn() As Integer
		Get
			Return Me._id_cmn
		End Get
		Set
			If ((Me._id_cmn = value)  _
						= false) Then
				If Me._cmn_cls.HasLoadedOrAssignedValue Then
					Throw New System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException()
				End If
				Me.Onid_cmnChanging(value)
				Me.SendPropertyChanging
				Me._id_cmn = value
				Me.SendPropertyChanged("id_cmn")
				Me.Onid_cmnChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ddr_dml_cbz", DbType:="VarChar(50) NOT NULL", CanBeNull:=false)>  _
	Public Property ddr_dml_cbz() As String
		Get
			Return Me._ddr_dml_cbz
		End Get
		Set
			If (String.Equals(Me._ddr_dml_cbz, value) = false) Then
				Me.Onddr_dml_cbzChanging(value)
				Me.SendPropertyChanging
				Me._ddr_dml_cbz = value
				Me.SendPropertyChanged("ddr_dml_cbz")
				Me.Onddr_dml_cbzChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="ddi_cls_gsn_cls", Storage:="_gsn_cls", ThisKey:="id_ddi", OtherKey:="id_ddi")>  _
	Public Property gsn_cls() As EntitySet(Of gsn_cls)
		Get
			Return Me._gsn_cls
		End Get
		Set
			Me._gsn_cls.Assign(value)
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="cmn_cls_ddi_cls", Storage:="_cmn_cls", ThisKey:="id_cmn", OtherKey:="id_cmn", IsForeignKey:=true)>  _
	Public Property cmn_cls() As cmn_cls
		Get
			Return Me._cmn_cls.Entity
		End Get
		Set
			Dim previousValue As cmn_cls = Me._cmn_cls.Entity
			If ((Object.Equals(previousValue, value) = false)  _
						OrElse (Me._cmn_cls.HasLoadedOrAssignedValue = false)) Then
				Me.SendPropertyChanging
				If ((previousValue Is Nothing)  _
							= false) Then
					Me._cmn_cls.Entity = Nothing
					previousValue.ddi_cls.Remove(Me)
				End If
				Me._cmn_cls.Entity = value
				If ((value Is Nothing)  _
							= false) Then
					value.ddi_cls.Add(Me)
					Me._id_cmn = value.id_cmn
				Else
					Me._id_cmn = CType(Nothing, Integer)
				End If
				Me.SendPropertyChanged("cmn_cls")
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="deu_cls_ddi_cls", Storage:="_deu_cls", ThisKey:="deu_ide", OtherKey:="deu_ide", IsForeignKey:=true)>  _
	Public Property deu_cls() As deu_cls
		Get
			Return Me._deu_cls.Entity
		End Get
		Set
			Dim previousValue As deu_cls = Me._deu_cls.Entity
			If ((Object.Equals(previousValue, value) = false)  _
						OrElse (Me._deu_cls.HasLoadedOrAssignedValue = false)) Then
				Me.SendPropertyChanging
				If ((previousValue Is Nothing)  _
							= false) Then
					Me._deu_cls.Entity = Nothing
					previousValue.ddi_cls.Remove(Me)
				End If
				Me._deu_cls.Entity = value
				If ((value Is Nothing)  _
							= false) Then
					value.ddi_cls.Add(Me)
					Me._deu_ide = value.deu_ide
				Else
					Me._deu_ide = CType(Nothing, String)
				End If
				Me.SendPropertyChanged("deu_cls")
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
	
	Private Sub attach_gsn_cls(ByVal entity As gsn_cls)
		Me.SendPropertyChanging
		entity.ddi_cls = Me
	End Sub
	
	Private Sub detach_gsn_cls(ByVal entity As gsn_cls)
		Me.SendPropertyChanging
		entity.ddi_cls = Nothing
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.ddr")>  _
Partial Public Class ddr_cls
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _id_ddr As Decimal
	
	Private _deu_ide As String
	
	Private _cli_idc As String
	
	Private _rsd_cls As EntitySet(Of rsd_cls)
	
	Private _cli_cls As EntityRef(Of cli_cls)
	
	Private _deu_cls As EntityRef(Of deu_cls)
	
    #Region "Definiciones de métodos de extensibilidad"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub Onid_ddrChanging(value As Decimal)
    End Sub
    Partial Private Sub Onid_ddrChanged()
    End Sub
    Partial Private Sub Ondeu_ideChanging(value As String)
    End Sub
    Partial Private Sub Ondeu_ideChanged()
    End Sub
    Partial Private Sub Oncli_idcChanging(value As String)
    End Sub
    Partial Private Sub Oncli_idcChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		Me._rsd_cls = New EntitySet(Of rsd_cls)(AddressOf Me.attach_rsd_cls, AddressOf Me.detach_rsd_cls)
		Me._cli_cls = CType(Nothing, EntityRef(Of cli_cls))
		Me._deu_cls = CType(Nothing, EntityRef(Of deu_cls))
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_id_ddr", AutoSync:=AutoSync.OnInsert, DbType:="Decimal(10,0) NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property id_ddr() As Decimal
		Get
			Return Me._id_ddr
		End Get
		Set
			If ((Me._id_ddr = value)  _
						= false) Then
				Me.Onid_ddrChanging(value)
				Me.SendPropertyChanging
				Me._id_ddr = value
				Me.SendPropertyChanged("id_ddr")
				Me.Onid_ddrChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_deu_ide", DbType:="Char(12) NOT NULL", CanBeNull:=false)>  _
	Public Property deu_ide() As String
		Get
			Return Me._deu_ide
		End Get
		Set
			If (String.Equals(Me._deu_ide, value) = false) Then
				If Me._deu_cls.HasLoadedOrAssignedValue Then
					Throw New System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException()
				End If
				Me.Ondeu_ideChanging(value)
				Me.SendPropertyChanging
				Me._deu_ide = value
				Me.SendPropertyChanged("deu_ide")
				Me.Ondeu_ideChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_cli_idc", DbType:="Char(12) NOT NULL", CanBeNull:=false)>  _
	Public Property cli_idc() As String
		Get
			Return Me._cli_idc
		End Get
		Set
			If (String.Equals(Me._cli_idc, value) = false) Then
				If Me._cli_cls.HasLoadedOrAssignedValue Then
					Throw New System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException()
				End If
				Me.Oncli_idcChanging(value)
				Me.SendPropertyChanging
				Me._cli_idc = value
				Me.SendPropertyChanged("cli_idc")
				Me.Oncli_idcChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="ddr_cls_rsd_cls", Storage:="_rsd_cls", ThisKey:="id_ddr", OtherKey:="id_ddr")>  _
	Public Property rsd_cls() As EntitySet(Of rsd_cls)
		Get
			Return Me._rsd_cls
		End Get
		Set
			Me._rsd_cls.Assign(value)
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="cli_cls_ddr_cls", Storage:="_cli_cls", ThisKey:="cli_idc", OtherKey:="cli_idc", IsForeignKey:=true)>  _
	Public Property cli_cls() As cli_cls
		Get
			Return Me._cli_cls.Entity
		End Get
		Set
			Dim previousValue As cli_cls = Me._cli_cls.Entity
			If ((Object.Equals(previousValue, value) = false)  _
						OrElse (Me._cli_cls.HasLoadedOrAssignedValue = false)) Then
				Me.SendPropertyChanging
				If ((previousValue Is Nothing)  _
							= false) Then
					Me._cli_cls.Entity = Nothing
					previousValue.ddr_cls.Remove(Me)
				End If
				Me._cli_cls.Entity = value
				If ((value Is Nothing)  _
							= false) Then
					value.ddr_cls.Add(Me)
					Me._cli_idc = value.cli_idc
				Else
					Me._cli_idc = CType(Nothing, String)
				End If
				Me.SendPropertyChanged("cli_cls")
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="deu_cls_ddr_cls", Storage:="_deu_cls", ThisKey:="deu_ide", OtherKey:="deu_ide", IsForeignKey:=true)>  _
	Public Property deu_cls() As deu_cls
		Get
			Return Me._deu_cls.Entity
		End Get
		Set
			Dim previousValue As deu_cls = Me._deu_cls.Entity
			If ((Object.Equals(previousValue, value) = false)  _
						OrElse (Me._deu_cls.HasLoadedOrAssignedValue = false)) Then
				Me.SendPropertyChanging
				If ((previousValue Is Nothing)  _
							= false) Then
					Me._deu_cls.Entity = Nothing
					previousValue.ddr_cls.Remove(Me)
				End If
				Me._deu_cls.Entity = value
				If ((value Is Nothing)  _
							= false) Then
					value.ddr_cls.Add(Me)
					Me._deu_ide = value.deu_ide
				Else
					Me._deu_ide = CType(Nothing, String)
				End If
				Me.SendPropertyChanged("deu_cls")
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
	
	Private Sub attach_rsd_cls(ByVal entity As rsd_cls)
		Me.SendPropertyChanging
		entity.ddr_cls = Me
	End Sub
	
	Private Sub detach_rsd_cls(ByVal entity As rsd_cls)
		Me.SendPropertyChanging
		entity.ddr_cls = Nothing
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.deu")>  _
Partial Public Class deu_cls
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _deu_ide As String
	
	Private _id_suc As System.Nullable(Of Integer)
	
	Private _id_cmn As System.Nullable(Of Integer)
	
	Private _id_P_003 As System.Nullable(Of Integer)
	
	Private _id_PL_000006 As String
	
	Private _id_P_0044 As System.Nullable(Of Integer)
	
	Private _id_P_0063 As System.Nullable(Of Integer)
	
	Private _id_P_0064 As System.Nullable(Of Integer)
	
	Private _id_P_0076 As System.Nullable(Of Integer)
	
	Private _id_eje_cod_cob As System.Nullable(Of Integer)
	
	Private _deu_dig_ito As System.Nullable(Of Char)
	
	Private _deu_rso As String
	
	Private _deu_dml As String
	
	Private _deu_pct_vta As System.Nullable(Of Decimal)
	
	Private _deu_ntf As System.Nullable(Of Char)
	
	Private _deu_con_cbz As System.Nullable(Of Char)
	
	Private _deu_chq_gir As String
	
	Private _deu_cbz As System.Nullable(Of Char)
	
	Private _deu_obs_gsn As String
	
	Private _deu_fec_obs As System.Nullable(Of Date)
	
	Private _deu_nom As String
	
	Private _deu_ape_ptn As String
	
	Private _deu_ape_mtn As String
	
	Private _deu_var_ddr As System.Nullable(Of Char)
	
	Private _deu_atr_car As System.Nullable(Of Char)
	
	Private _deu_des_car As String
	
	Private _deu_rad_ori_fac As String
	
	Private _deu_rad_dia_vcto As System.Nullable(Of Short)
	
	Private _id_P_0313 As System.Nullable(Of Integer)
	
	Private _id_eje As System.Nullable(Of Integer)
	
	Private _ejecutivo As String
	
	Private _deu_cod_ges As String
	
	Private _id_p_0119 As System.Nullable(Of Integer)
	
	Private _deu_nro_cli As String
	
	Private _cnc_cls As EntitySet(Of cnc_cls)
	
	Private _cpg_cls As EntitySet(Of cpg_cls)
	
	Private _ddi_cls As EntitySet(Of ddi_cls)
	
	Private _ddr_cls As EntitySet(Of ddr_cls)
	
	Private _deu_mon_cls As EntitySet(Of deu_mon_cls)
	
	Private _dpa_cls As EntitySet(Of dpa_cls)
	
	Private _dsi_cls As EntitySet(Of dsi_cls)
	
	Private _dvf_cls As EntitySet(Of dvf_cls)
	
	Private _exd_cls As EntitySet(Of exd_cls)
	
	Private _fdd_cls As EntitySet(Of fdd_cls)
	
	Private _gga_cls As EntitySet(Of gga_cls)
	
	Private _has_cls As EntitySet(Of has_cls)
	
	Private _nce_cls As EntitySet(Of nce_cls)
	
	Private _sbl_cls As EntitySet(Of sbl_cls)
	
	Private _cmn_cls As EntityRef(Of cmn_cls)
	
	Private _P_003_cls As EntityRef(Of P_003_cls)
	
	Private _P_0044_cls As EntityRef(Of P_0044_cls)
	
	Private _P_0063_cls As EntityRef(Of P_0063_cls)
	
	Private _P_0064_cls As EntityRef(Of P_0064_cls)
	
	Private _P_0076_cls As EntityRef(Of P_0076_cls)
	
	Private _P_0119_cls As EntityRef(Of P_0119_cls)
	
	Private _suc_cls As EntityRef(Of suc_cls)
	
	Private _eje As EntityRef(Of eje_cls)
	
	Private _eje_cls As EntityRef(Of eje_cls)
	
    #Region "Definiciones de métodos de extensibilidad"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub Ondeu_ideChanging(value As String)
    End Sub
    Partial Private Sub Ondeu_ideChanged()
    End Sub
    Partial Private Sub Onid_sucChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub Onid_sucChanged()
    End Sub
    Partial Private Sub Onid_cmnChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub Onid_cmnChanged()
    End Sub
    Partial Private Sub Onid_P_003Changing(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub Onid_P_003Changed()
    End Sub
    Partial Private Sub Onid_PL_000006Changing(value As String)
    End Sub
    Partial Private Sub Onid_PL_000006Changed()
    End Sub
    Partial Private Sub Onid_P_0044Changing(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub Onid_P_0044Changed()
    End Sub
    Partial Private Sub Onid_P_0063Changing(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub Onid_P_0063Changed()
    End Sub
    Partial Private Sub Onid_P_0064Changing(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub Onid_P_0064Changed()
    End Sub
    Partial Private Sub Onid_P_0076Changing(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub Onid_P_0076Changed()
    End Sub
    Partial Private Sub Onid_eje_cod_cobChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub Onid_eje_cod_cobChanged()
    End Sub
    Partial Private Sub Ondeu_dig_itoChanging(value As System.Nullable(Of Char))
    End Sub
    Partial Private Sub Ondeu_dig_itoChanged()
    End Sub
    Partial Private Sub Ondeu_rsoChanging(value As String)
    End Sub
    Partial Private Sub Ondeu_rsoChanged()
    End Sub
    Partial Private Sub Ondeu_dmlChanging(value As String)
    End Sub
    Partial Private Sub Ondeu_dmlChanged()
    End Sub
    Partial Private Sub Ondeu_pct_vtaChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub Ondeu_pct_vtaChanged()
    End Sub
    Partial Private Sub Ondeu_ntfChanging(value As System.Nullable(Of Char))
    End Sub
    Partial Private Sub Ondeu_ntfChanged()
    End Sub
    Partial Private Sub Ondeu_con_cbzChanging(value As System.Nullable(Of Char))
    End Sub
    Partial Private Sub Ondeu_con_cbzChanged()
    End Sub
    Partial Private Sub Ondeu_chq_girChanging(value As String)
    End Sub
    Partial Private Sub Ondeu_chq_girChanged()
    End Sub
    Partial Private Sub Ondeu_cbzChanging(value As System.Nullable(Of Char))
    End Sub
    Partial Private Sub Ondeu_cbzChanged()
    End Sub
    Partial Private Sub Ondeu_obs_gsnChanging(value As String)
    End Sub
    Partial Private Sub Ondeu_obs_gsnChanged()
    End Sub
    Partial Private Sub Ondeu_fec_obsChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub Ondeu_fec_obsChanged()
    End Sub
    Partial Private Sub Ondeu_nomChanging(value As String)
    End Sub
    Partial Private Sub Ondeu_nomChanged()
    End Sub
    Partial Private Sub Ondeu_ape_ptnChanging(value As String)
    End Sub
    Partial Private Sub Ondeu_ape_ptnChanged()
    End Sub
    Partial Private Sub Ondeu_ape_mtnChanging(value As String)
    End Sub
    Partial Private Sub Ondeu_ape_mtnChanged()
    End Sub
    Partial Private Sub Ondeu_var_ddrChanging(value As System.Nullable(Of Char))
    End Sub
    Partial Private Sub Ondeu_var_ddrChanged()
    End Sub
    Partial Private Sub Ondeu_atr_carChanging(value As System.Nullable(Of Char))
    End Sub
    Partial Private Sub Ondeu_atr_carChanged()
    End Sub
    Partial Private Sub Ondeu_des_carChanging(value As String)
    End Sub
    Partial Private Sub Ondeu_des_carChanged()
    End Sub
    Partial Private Sub Ondeu_rad_ori_facChanging(value As String)
    End Sub
    Partial Private Sub Ondeu_rad_ori_facChanged()
    End Sub
    Partial Private Sub Ondeu_rad_dia_vctoChanging(value As System.Nullable(Of Short))
    End Sub
    Partial Private Sub Ondeu_rad_dia_vctoChanged()
    End Sub
    Partial Private Sub Onid_P_0313Changing(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub Onid_P_0313Changed()
    End Sub
    Partial Private Sub Onid_ejeChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub Onid_ejeChanged()
    End Sub
    Partial Private Sub OnejecutivoChanging(value As String)
    End Sub
    Partial Private Sub OnejecutivoChanged()
    End Sub
    Partial Private Sub Ondeu_cod_gesChanging(value As String)
    End Sub
    Partial Private Sub Ondeu_cod_gesChanged()
    End Sub
    Partial Private Sub Onid_p_0119Changing(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub Onid_p_0119Changed()
    End Sub
    Partial Private Sub Ondeu_nro_cliChanging(value As String)
    End Sub
    Partial Private Sub Ondeu_nro_cliChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		Me._cnc_cls = New EntitySet(Of cnc_cls)(AddressOf Me.attach_cnc_cls, AddressOf Me.detach_cnc_cls)
		Me._cpg_cls = New EntitySet(Of cpg_cls)(AddressOf Me.attach_cpg_cls, AddressOf Me.detach_cpg_cls)
		Me._ddi_cls = New EntitySet(Of ddi_cls)(AddressOf Me.attach_ddi_cls, AddressOf Me.detach_ddi_cls)
		Me._ddr_cls = New EntitySet(Of ddr_cls)(AddressOf Me.attach_ddr_cls, AddressOf Me.detach_ddr_cls)
		Me._deu_mon_cls = New EntitySet(Of deu_mon_cls)(AddressOf Me.attach_deu_mon_cls, AddressOf Me.detach_deu_mon_cls)
		Me._dpa_cls = New EntitySet(Of dpa_cls)(AddressOf Me.attach_dpa_cls, AddressOf Me.detach_dpa_cls)
		Me._dsi_cls = New EntitySet(Of dsi_cls)(AddressOf Me.attach_dsi_cls, AddressOf Me.detach_dsi_cls)
		Me._dvf_cls = New EntitySet(Of dvf_cls)(AddressOf Me.attach_dvf_cls, AddressOf Me.detach_dvf_cls)
		Me._exd_cls = New EntitySet(Of exd_cls)(AddressOf Me.attach_exd_cls, AddressOf Me.detach_exd_cls)
		Me._fdd_cls = New EntitySet(Of fdd_cls)(AddressOf Me.attach_fdd_cls, AddressOf Me.detach_fdd_cls)
		Me._gga_cls = New EntitySet(Of gga_cls)(AddressOf Me.attach_gga_cls, AddressOf Me.detach_gga_cls)
		Me._has_cls = New EntitySet(Of has_cls)(AddressOf Me.attach_has_cls, AddressOf Me.detach_has_cls)
		Me._nce_cls = New EntitySet(Of nce_cls)(AddressOf Me.attach_nce_cls, AddressOf Me.detach_nce_cls)
		Me._sbl_cls = New EntitySet(Of sbl_cls)(AddressOf Me.attach_sbl_cls, AddressOf Me.detach_sbl_cls)
		Me._cmn_cls = CType(Nothing, EntityRef(Of cmn_cls))
		Me._P_003_cls = CType(Nothing, EntityRef(Of P_003_cls))
		Me._P_0044_cls = CType(Nothing, EntityRef(Of P_0044_cls))
		Me._P_0063_cls = CType(Nothing, EntityRef(Of P_0063_cls))
		Me._P_0064_cls = CType(Nothing, EntityRef(Of P_0064_cls))
		Me._P_0076_cls = CType(Nothing, EntityRef(Of P_0076_cls))
		Me._P_0119_cls = CType(Nothing, EntityRef(Of P_0119_cls))
		Me._suc_cls = CType(Nothing, EntityRef(Of suc_cls))
		Me._eje = CType(Nothing, EntityRef(Of eje_cls))
		Me._eje_cls = CType(Nothing, EntityRef(Of eje_cls))
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_deu_ide", DbType:="Char(12) NOT NULL", CanBeNull:=false, IsPrimaryKey:=true)>  _
	Public Property deu_ide() As String
		Get
			Return Me._deu_ide
		End Get
		Set
			If (String.Equals(Me._deu_ide, value) = false) Then
				Me.Ondeu_ideChanging(value)
				Me.SendPropertyChanging
				Me._deu_ide = value
				Me.SendPropertyChanged("deu_ide")
				Me.Ondeu_ideChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_id_suc", DbType:="Int")>  _
	Public Property id_suc() As System.Nullable(Of Integer)
		Get
			Return Me._id_suc
		End Get
		Set
			If (Me._id_suc.Equals(value) = false) Then
				If Me._suc_cls.HasLoadedOrAssignedValue Then
					Throw New System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException()
				End If
				Me.Onid_sucChanging(value)
				Me.SendPropertyChanging
				Me._id_suc = value
				Me.SendPropertyChanged("id_suc")
				Me.Onid_sucChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_id_cmn", DbType:="Int")>  _
	Public Property id_cmn() As System.Nullable(Of Integer)
		Get
			Return Me._id_cmn
		End Get
		Set
			If (Me._id_cmn.Equals(value) = false) Then
				If Me._cmn_cls.HasLoadedOrAssignedValue Then
					Throw New System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException()
				End If
				Me.Onid_cmnChanging(value)
				Me.SendPropertyChanging
				Me._id_cmn = value
				Me.SendPropertyChanged("id_cmn")
				Me.Onid_cmnChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_id_P_003", DbType:="Int")>  _
	Public Property id_P_003() As System.Nullable(Of Integer)
		Get
			Return Me._id_P_003
		End Get
		Set
			If (Me._id_P_003.Equals(value) = false) Then
				If Me._P_003_cls.HasLoadedOrAssignedValue Then
					Throw New System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException()
				End If
				Me.Onid_P_003Changing(value)
				Me.SendPropertyChanging
				Me._id_P_003 = value
				Me.SendPropertyChanged("id_P_003")
				Me.Onid_P_003Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_id_PL_000006", DbType:="VarChar(6)")>  _
	Public Property id_PL_000006() As String
		Get
			Return Me._id_PL_000006
		End Get
		Set
			If (String.Equals(Me._id_PL_000006, value) = false) Then
				Me.Onid_PL_000006Changing(value)
				Me.SendPropertyChanging
				Me._id_PL_000006 = value
				Me.SendPropertyChanged("id_PL_000006")
				Me.Onid_PL_000006Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_id_P_0044", DbType:="Int")>  _
	Public Property id_P_0044() As System.Nullable(Of Integer)
		Get
			Return Me._id_P_0044
		End Get
		Set
			If (Me._id_P_0044.Equals(value) = false) Then
				If Me._P_0044_cls.HasLoadedOrAssignedValue Then
					Throw New System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException()
				End If
				Me.Onid_P_0044Changing(value)
				Me.SendPropertyChanging
				Me._id_P_0044 = value
				Me.SendPropertyChanged("id_P_0044")
				Me.Onid_P_0044Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_id_P_0063", DbType:="Int")>  _
	Public Property id_P_0063() As System.Nullable(Of Integer)
		Get
			Return Me._id_P_0063
		End Get
		Set
			If (Me._id_P_0063.Equals(value) = false) Then
				If Me._P_0063_cls.HasLoadedOrAssignedValue Then
					Throw New System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException()
				End If
				Me.Onid_P_0063Changing(value)
				Me.SendPropertyChanging
				Me._id_P_0063 = value
				Me.SendPropertyChanged("id_P_0063")
				Me.Onid_P_0063Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_id_P_0064", DbType:="Int")>  _
	Public Property id_P_0064() As System.Nullable(Of Integer)
		Get
			Return Me._id_P_0064
		End Get
		Set
			If (Me._id_P_0064.Equals(value) = false) Then
				If Me._P_0064_cls.HasLoadedOrAssignedValue Then
					Throw New System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException()
				End If
				Me.Onid_P_0064Changing(value)
				Me.SendPropertyChanging
				Me._id_P_0064 = value
				Me.SendPropertyChanged("id_P_0064")
				Me.Onid_P_0064Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_id_P_0076", DbType:="Int")>  _
	Public Property id_P_0076() As System.Nullable(Of Integer)
		Get
			Return Me._id_P_0076
		End Get
		Set
			If (Me._id_P_0076.Equals(value) = false) Then
				If Me._P_0076_cls.HasLoadedOrAssignedValue Then
					Throw New System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException()
				End If
				Me.Onid_P_0076Changing(value)
				Me.SendPropertyChanging
				Me._id_P_0076 = value
				Me.SendPropertyChanged("id_P_0076")
				Me.Onid_P_0076Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_id_eje_cod_cob", DbType:="Int")>  _
	Public Property id_eje_cod_cob() As System.Nullable(Of Integer)
		Get
			Return Me._id_eje_cod_cob
		End Get
		Set
			If (Me._id_eje_cod_cob.Equals(value) = false) Then
				If Me._eje.HasLoadedOrAssignedValue Then
					Throw New System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException()
				End If
				Me.Onid_eje_cod_cobChanging(value)
				Me.SendPropertyChanging
				Me._id_eje_cod_cob = value
				Me.SendPropertyChanged("id_eje_cod_cob")
				Me.Onid_eje_cod_cobChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_deu_dig_ito", DbType:="Char(1)")>  _
	Public Property deu_dig_ito() As System.Nullable(Of Char)
		Get
			Return Me._deu_dig_ito
		End Get
		Set
			If (Me._deu_dig_ito.Equals(value) = false) Then
				Me.Ondeu_dig_itoChanging(value)
				Me.SendPropertyChanging
				Me._deu_dig_ito = value
				Me.SendPropertyChanged("deu_dig_ito")
				Me.Ondeu_dig_itoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_deu_rso", DbType:="VarChar(150)")>  _
	Public Property deu_rso() As String
		Get
			Return Me._deu_rso
		End Get
		Set
			If (String.Equals(Me._deu_rso, value) = false) Then
				Me.Ondeu_rsoChanging(value)
				Me.SendPropertyChanging
				Me._deu_rso = value
				Me.SendPropertyChanged("deu_rso")
				Me.Ondeu_rsoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_deu_dml", DbType:="VarChar(50)")>  _
	Public Property deu_dml() As String
		Get
			Return Me._deu_dml
		End Get
		Set
			If (String.Equals(Me._deu_dml, value) = false) Then
				Me.Ondeu_dmlChanging(value)
				Me.SendPropertyChanging
				Me._deu_dml = value
				Me.SendPropertyChanged("deu_dml")
				Me.Ondeu_dmlChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_deu_pct_vta", DbType:="Decimal(5,2)")>  _
	Public Property deu_pct_vta() As System.Nullable(Of Decimal)
		Get
			Return Me._deu_pct_vta
		End Get
		Set
			If (Me._deu_pct_vta.Equals(value) = false) Then
				Me.Ondeu_pct_vtaChanging(value)
				Me.SendPropertyChanging
				Me._deu_pct_vta = value
				Me.SendPropertyChanged("deu_pct_vta")
				Me.Ondeu_pct_vtaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_deu_ntf", DbType:="Char(1)")>  _
	Public Property deu_ntf() As System.Nullable(Of Char)
		Get
			Return Me._deu_ntf
		End Get
		Set
			If (Me._deu_ntf.Equals(value) = false) Then
				Me.Ondeu_ntfChanging(value)
				Me.SendPropertyChanging
				Me._deu_ntf = value
				Me.SendPropertyChanged("deu_ntf")
				Me.Ondeu_ntfChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_deu_con_cbz", DbType:="Char(1)")>  _
	Public Property deu_con_cbz() As System.Nullable(Of Char)
		Get
			Return Me._deu_con_cbz
		End Get
		Set
			If (Me._deu_con_cbz.Equals(value) = false) Then
				Me.Ondeu_con_cbzChanging(value)
				Me.SendPropertyChanging
				Me._deu_con_cbz = value
				Me.SendPropertyChanged("deu_con_cbz")
				Me.Ondeu_con_cbzChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_deu_chq_gir", DbType:="VarChar(50)")>  _
	Public Property deu_chq_gir() As String
		Get
			Return Me._deu_chq_gir
		End Get
		Set
			If (String.Equals(Me._deu_chq_gir, value) = false) Then
				Me.Ondeu_chq_girChanging(value)
				Me.SendPropertyChanging
				Me._deu_chq_gir = value
				Me.SendPropertyChanged("deu_chq_gir")
				Me.Ondeu_chq_girChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_deu_cbz", DbType:="Char(1)")>  _
	Public Property deu_cbz() As System.Nullable(Of Char)
		Get
			Return Me._deu_cbz
		End Get
		Set
			If (Me._deu_cbz.Equals(value) = false) Then
				Me.Ondeu_cbzChanging(value)
				Me.SendPropertyChanging
				Me._deu_cbz = value
				Me.SendPropertyChanged("deu_cbz")
				Me.Ondeu_cbzChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_deu_obs_gsn", DbType:="VarChar(255)")>  _
	Public Property deu_obs_gsn() As String
		Get
			Return Me._deu_obs_gsn
		End Get
		Set
			If (String.Equals(Me._deu_obs_gsn, value) = false) Then
				Me.Ondeu_obs_gsnChanging(value)
				Me.SendPropertyChanging
				Me._deu_obs_gsn = value
				Me.SendPropertyChanged("deu_obs_gsn")
				Me.Ondeu_obs_gsnChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_deu_fec_obs", DbType:="DateTime")>  _
	Public Property deu_fec_obs() As System.Nullable(Of Date)
		Get
			Return Me._deu_fec_obs
		End Get
		Set
			If (Me._deu_fec_obs.Equals(value) = false) Then
				Me.Ondeu_fec_obsChanging(value)
				Me.SendPropertyChanging
				Me._deu_fec_obs = value
				Me.SendPropertyChanged("deu_fec_obs")
				Me.Ondeu_fec_obsChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_deu_nom", DbType:="VarChar(50)")>  _
	Public Property deu_nom() As String
		Get
			Return Me._deu_nom
		End Get
		Set
			If (String.Equals(Me._deu_nom, value) = false) Then
				Me.Ondeu_nomChanging(value)
				Me.SendPropertyChanging
				Me._deu_nom = value
				Me.SendPropertyChanged("deu_nom")
				Me.Ondeu_nomChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_deu_ape_ptn", DbType:="VarChar(50)")>  _
	Public Property deu_ape_ptn() As String
		Get
			Return Me._deu_ape_ptn
		End Get
		Set
			If (String.Equals(Me._deu_ape_ptn, value) = false) Then
				Me.Ondeu_ape_ptnChanging(value)
				Me.SendPropertyChanging
				Me._deu_ape_ptn = value
				Me.SendPropertyChanged("deu_ape_ptn")
				Me.Ondeu_ape_ptnChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_deu_ape_mtn", DbType:="VarChar(50)")>  _
	Public Property deu_ape_mtn() As String
		Get
			Return Me._deu_ape_mtn
		End Get
		Set
			If (String.Equals(Me._deu_ape_mtn, value) = false) Then
				Me.Ondeu_ape_mtnChanging(value)
				Me.SendPropertyChanging
				Me._deu_ape_mtn = value
				Me.SendPropertyChanged("deu_ape_mtn")
				Me.Ondeu_ape_mtnChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_deu_var_ddr", DbType:="Char(1)")>  _
	Public Property deu_var_ddr() As System.Nullable(Of Char)
		Get
			Return Me._deu_var_ddr
		End Get
		Set
			If (Me._deu_var_ddr.Equals(value) = false) Then
				Me.Ondeu_var_ddrChanging(value)
				Me.SendPropertyChanging
				Me._deu_var_ddr = value
				Me.SendPropertyChanged("deu_var_ddr")
				Me.Ondeu_var_ddrChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_deu_atr_car", DbType:="Char(1)")>  _
	Public Property deu_atr_car() As System.Nullable(Of Char)
		Get
			Return Me._deu_atr_car
		End Get
		Set
			If (Me._deu_atr_car.Equals(value) = false) Then
				Me.Ondeu_atr_carChanging(value)
				Me.SendPropertyChanging
				Me._deu_atr_car = value
				Me.SendPropertyChanged("deu_atr_car")
				Me.Ondeu_atr_carChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_deu_des_car", DbType:="Char(250)")>  _
	Public Property deu_des_car() As String
		Get
			Return Me._deu_des_car
		End Get
		Set
			If (String.Equals(Me._deu_des_car, value) = false) Then
				Me.Ondeu_des_carChanging(value)
				Me.SendPropertyChanging
				Me._deu_des_car = value
				Me.SendPropertyChanged("deu_des_car")
				Me.Ondeu_des_carChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_deu_rad_ori_fac", DbType:="VarChar(1)")>  _
	Public Property deu_rad_ori_fac() As String
		Get
			Return Me._deu_rad_ori_fac
		End Get
		Set
			If (String.Equals(Me._deu_rad_ori_fac, value) = false) Then
				Me.Ondeu_rad_ori_facChanging(value)
				Me.SendPropertyChanging
				Me._deu_rad_ori_fac = value
				Me.SendPropertyChanged("deu_rad_ori_fac")
				Me.Ondeu_rad_ori_facChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_deu_rad_dia_vcto", DbType:="SmallInt")>  _
	Public Property deu_rad_dia_vcto() As System.Nullable(Of Short)
		Get
			Return Me._deu_rad_dia_vcto
		End Get
		Set
			If (Me._deu_rad_dia_vcto.Equals(value) = false) Then
				Me.Ondeu_rad_dia_vctoChanging(value)
				Me.SendPropertyChanging
				Me._deu_rad_dia_vcto = value
				Me.SendPropertyChanged("deu_rad_dia_vcto")
				Me.Ondeu_rad_dia_vctoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_id_P_0313", DbType:="Int")>  _
	Public Property id_P_0313() As System.Nullable(Of Integer)
		Get
			Return Me._id_P_0313
		End Get
		Set
			If (Me._id_P_0313.Equals(value) = false) Then
				Me.Onid_P_0313Changing(value)
				Me.SendPropertyChanging
				Me._id_P_0313 = value
				Me.SendPropertyChanged("id_P_0313")
				Me.Onid_P_0313Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_id_eje", DbType:="Int")>  _
	Public Property id_eje() As System.Nullable(Of Integer)
		Get
			Return Me._id_eje
		End Get
		Set
			If (Me._id_eje.Equals(value) = false) Then
				If Me._eje_cls.HasLoadedOrAssignedValue Then
					Throw New System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException()
				End If
				Me.Onid_ejeChanging(value)
				Me.SendPropertyChanging
				Me._id_eje = value
				Me.SendPropertyChanged("id_eje")
				Me.Onid_ejeChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ejecutivo", DbType:="VarChar(150)")>  _
	Public Property ejecutivo() As String
		Get
			Return Me._ejecutivo
		End Get
		Set
			If (String.Equals(Me._ejecutivo, value) = false) Then
				Me.OnejecutivoChanging(value)
				Me.SendPropertyChanging
				Me._ejecutivo = value
				Me.SendPropertyChanged("ejecutivo")
				Me.OnejecutivoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_deu_cod_ges", DbType:="VarChar(10)")>  _
	Public Property deu_cod_ges() As String
		Get
			Return Me._deu_cod_ges
		End Get
		Set
			If (String.Equals(Me._deu_cod_ges, value) = false) Then
				Me.Ondeu_cod_gesChanging(value)
				Me.SendPropertyChanging
				Me._deu_cod_ges = value
				Me.SendPropertyChanged("deu_cod_ges")
				Me.Ondeu_cod_gesChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_id_p_0119", DbType:="Int")>  _
	Public Property id_p_0119() As System.Nullable(Of Integer)
		Get
			Return Me._id_p_0119
		End Get
		Set
			If (Me._id_p_0119.Equals(value) = false) Then
				If Me._P_0119_cls.HasLoadedOrAssignedValue Then
					Throw New System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException()
				End If
				Me.Onid_p_0119Changing(value)
				Me.SendPropertyChanging
				Me._id_p_0119 = value
				Me.SendPropertyChanged("id_p_0119")
				Me.Onid_p_0119Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_deu_nro_cli", DbType:="VarChar(15)")>  _
	Public Property deu_nro_cli() As String
		Get
			Return Me._deu_nro_cli
		End Get
		Set
			If (String.Equals(Me._deu_nro_cli, value) = false) Then
				Me.Ondeu_nro_cliChanging(value)
				Me.SendPropertyChanging
				Me._deu_nro_cli = value
				Me.SendPropertyChanged("deu_nro_cli")
				Me.Ondeu_nro_cliChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="deu_cls_cnc_cls", Storage:="_cnc_cls", ThisKey:="deu_ide", OtherKey:="deu_ide")>  _
	Public Property cnc_cls() As EntitySet(Of cnc_cls)
		Get
			Return Me._cnc_cls
		End Get
		Set
			Me._cnc_cls.Assign(value)
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="deu_cls_cpg_cls", Storage:="_cpg_cls", ThisKey:="deu_ide", OtherKey:="deu_ide")>  _
	Public Property cpg_cls() As EntitySet(Of cpg_cls)
		Get
			Return Me._cpg_cls
		End Get
		Set
			Me._cpg_cls.Assign(value)
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="deu_cls_ddi_cls", Storage:="_ddi_cls", ThisKey:="deu_ide", OtherKey:="deu_ide")>  _
	Public Property ddi_cls() As EntitySet(Of ddi_cls)
		Get
			Return Me._ddi_cls
		End Get
		Set
			Me._ddi_cls.Assign(value)
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="deu_cls_ddr_cls", Storage:="_ddr_cls", ThisKey:="deu_ide", OtherKey:="deu_ide")>  _
	Public Property ddr_cls() As EntitySet(Of ddr_cls)
		Get
			Return Me._ddr_cls
		End Get
		Set
			Me._ddr_cls.Assign(value)
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="deu_cls_deu_mon_cls", Storage:="_deu_mon_cls", ThisKey:="deu_ide", OtherKey:="deu_ide")>  _
	Public Property deu_mon_cls() As EntitySet(Of deu_mon_cls)
		Get
			Return Me._deu_mon_cls
		End Get
		Set
			Me._deu_mon_cls.Assign(value)
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="deu_cls_dpa_cls", Storage:="_dpa_cls", ThisKey:="deu_ide", OtherKey:="deu_ide")>  _
	Public Property dpa_cls() As EntitySet(Of dpa_cls)
		Get
			Return Me._dpa_cls
		End Get
		Set
			Me._dpa_cls.Assign(value)
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="deu_cls_dsi_cls", Storage:="_dsi_cls", ThisKey:="deu_ide", OtherKey:="deu_ide")>  _
	Public Property dsi_cls() As EntitySet(Of dsi_cls)
		Get
			Return Me._dsi_cls
		End Get
		Set
			Me._dsi_cls.Assign(value)
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="deu_cls_dvf_cls", Storage:="_dvf_cls", ThisKey:="deu_ide", OtherKey:="deu_ide")>  _
	Public Property dvf_cls() As EntitySet(Of dvf_cls)
		Get
			Return Me._dvf_cls
		End Get
		Set
			Me._dvf_cls.Assign(value)
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="deu_cls_exd_cls", Storage:="_exd_cls", ThisKey:="deu_ide", OtherKey:="deu_ide")>  _
	Public Property exd_cls() As EntitySet(Of exd_cls)
		Get
			Return Me._exd_cls
		End Get
		Set
			Me._exd_cls.Assign(value)
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="deu_cls_fdd_cls", Storage:="_fdd_cls", ThisKey:="deu_ide", OtherKey:="deu_ide")>  _
	Public Property fdd_cls() As EntitySet(Of fdd_cls)
		Get
			Return Me._fdd_cls
		End Get
		Set
			Me._fdd_cls.Assign(value)
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="deu_cls_gga_cls", Storage:="_gga_cls", ThisKey:="deu_ide", OtherKey:="deu_ide")>  _
	Public Property gga_cls() As EntitySet(Of gga_cls)
		Get
			Return Me._gga_cls
		End Get
		Set
			Me._gga_cls.Assign(value)
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="deu_cls_has_cls", Storage:="_has_cls", ThisKey:="deu_ide", OtherKey:="deu_ide")>  _
	Public Property has_cls() As EntitySet(Of has_cls)
		Get
			Return Me._has_cls
		End Get
		Set
			Me._has_cls.Assign(value)
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="deu_cls_nce_cls", Storage:="_nce_cls", ThisKey:="deu_ide", OtherKey:="deu_ide")>  _
	Public Property nce_cls() As EntitySet(Of nce_cls)
		Get
			Return Me._nce_cls
		End Get
		Set
			Me._nce_cls.Assign(value)
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="deu_cls_sbl_cls", Storage:="_sbl_cls", ThisKey:="deu_ide", OtherKey:="deu_ide")>  _
	Public Property sbl_cls() As EntitySet(Of sbl_cls)
		Get
			Return Me._sbl_cls
		End Get
		Set
			Me._sbl_cls.Assign(value)
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="cmn_cls_deu_cls", Storage:="_cmn_cls", ThisKey:="id_cmn", OtherKey:="id_cmn", IsForeignKey:=true)>  _
	Public Property cmn_cls() As cmn_cls
		Get
			Return Me._cmn_cls.Entity
		End Get
		Set
			Dim previousValue As cmn_cls = Me._cmn_cls.Entity
			If ((Object.Equals(previousValue, value) = false)  _
						OrElse (Me._cmn_cls.HasLoadedOrAssignedValue = false)) Then
				Me.SendPropertyChanging
				If ((previousValue Is Nothing)  _
							= false) Then
					Me._cmn_cls.Entity = Nothing
					previousValue.deu_cls.Remove(Me)
				End If
				Me._cmn_cls.Entity = value
				If ((value Is Nothing)  _
							= false) Then
					value.deu_cls.Add(Me)
					Me._id_cmn = value.id_cmn
				Else
					Me._id_cmn = CType(Nothing, Nullable(Of Integer))
				End If
				Me.SendPropertyChanged("cmn_cls")
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="P_003_cls_deu_cls", Storage:="_P_003_cls", ThisKey:="id_P_003", OtherKey:="id_P_003", IsForeignKey:=true)>  _
	Public Property P_003_cls() As P_003_cls
		Get
			Return Me._P_003_cls.Entity
		End Get
		Set
			Dim previousValue As P_003_cls = Me._P_003_cls.Entity
			If ((Object.Equals(previousValue, value) = false)  _
						OrElse (Me._P_003_cls.HasLoadedOrAssignedValue = false)) Then
				Me.SendPropertyChanging
				If ((previousValue Is Nothing)  _
							= false) Then
					Me._P_003_cls.Entity = Nothing
					previousValue.deu_cls.Remove(Me)
				End If
				Me._P_003_cls.Entity = value
				If ((value Is Nothing)  _
							= false) Then
					value.deu_cls.Add(Me)
					Me._id_P_003 = value.id_P_003
				Else
					Me._id_P_003 = CType(Nothing, Nullable(Of Integer))
				End If
				Me.SendPropertyChanged("P_003_cls")
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="P_0044_cls_deu_cls", Storage:="_P_0044_cls", ThisKey:="id_P_0044", OtherKey:="id_P_0044", IsForeignKey:=true)>  _
	Public Property P_0044_cls() As P_0044_cls
		Get
			Return Me._P_0044_cls.Entity
		End Get
		Set
			Dim previousValue As P_0044_cls = Me._P_0044_cls.Entity
			If ((Object.Equals(previousValue, value) = false)  _
						OrElse (Me._P_0044_cls.HasLoadedOrAssignedValue = false)) Then
				Me.SendPropertyChanging
				If ((previousValue Is Nothing)  _
							= false) Then
					Me._P_0044_cls.Entity = Nothing
					previousValue.deu_cls.Remove(Me)
				End If
				Me._P_0044_cls.Entity = value
				If ((value Is Nothing)  _
							= false) Then
					value.deu_cls.Add(Me)
					Me._id_P_0044 = value.id_P_0044
				Else
					Me._id_P_0044 = CType(Nothing, Nullable(Of Integer))
				End If
				Me.SendPropertyChanged("P_0044_cls")
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="P_0063_cls_deu_cls", Storage:="_P_0063_cls", ThisKey:="id_P_0063", OtherKey:="id_P_0063", IsForeignKey:=true)>  _
	Public Property P_0063_cls() As P_0063_cls
		Get
			Return Me._P_0063_cls.Entity
		End Get
		Set
			Dim previousValue As P_0063_cls = Me._P_0063_cls.Entity
			If ((Object.Equals(previousValue, value) = false)  _
						OrElse (Me._P_0063_cls.HasLoadedOrAssignedValue = false)) Then
				Me.SendPropertyChanging
				If ((previousValue Is Nothing)  _
							= false) Then
					Me._P_0063_cls.Entity = Nothing
					previousValue.deu_cls.Remove(Me)
				End If
				Me._P_0063_cls.Entity = value
				If ((value Is Nothing)  _
							= false) Then
					value.deu_cls.Add(Me)
					Me._id_P_0063 = value.id_P_0063
				Else
					Me._id_P_0063 = CType(Nothing, Nullable(Of Integer))
				End If
				Me.SendPropertyChanged("P_0063_cls")
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="P_0064_cls_deu_cls", Storage:="_P_0064_cls", ThisKey:="id_P_0064", OtherKey:="id_P_0064", IsForeignKey:=true)>  _
	Public Property P_0064_cls() As P_0064_cls
		Get
			Return Me._P_0064_cls.Entity
		End Get
		Set
			Dim previousValue As P_0064_cls = Me._P_0064_cls.Entity
			If ((Object.Equals(previousValue, value) = false)  _
						OrElse (Me._P_0064_cls.HasLoadedOrAssignedValue = false)) Then
				Me.SendPropertyChanging
				If ((previousValue Is Nothing)  _
							= false) Then
					Me._P_0064_cls.Entity = Nothing
					previousValue.deu_cls.Remove(Me)
				End If
				Me._P_0064_cls.Entity = value
				If ((value Is Nothing)  _
							= false) Then
					value.deu_cls.Add(Me)
					Me._id_P_0064 = value.id_P_0064
				Else
					Me._id_P_0064 = CType(Nothing, Nullable(Of Integer))
				End If
				Me.SendPropertyChanged("P_0064_cls")
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="P_0076_cls_deu_cls", Storage:="_P_0076_cls", ThisKey:="id_P_0076", OtherKey:="id_P_0076", IsForeignKey:=true)>  _
	Public Property P_0076_cls() As P_0076_cls
		Get
			Return Me._P_0076_cls.Entity
		End Get
		Set
			Dim previousValue As P_0076_cls = Me._P_0076_cls.Entity
			If ((Object.Equals(previousValue, value) = false)  _
						OrElse (Me._P_0076_cls.HasLoadedOrAssignedValue = false)) Then
				Me.SendPropertyChanging
				If ((previousValue Is Nothing)  _
							= false) Then
					Me._P_0076_cls.Entity = Nothing
					previousValue.deu_cls.Remove(Me)
				End If
				Me._P_0076_cls.Entity = value
				If ((value Is Nothing)  _
							= false) Then
					value.deu_cls.Add(Me)
					Me._id_P_0076 = value.id_P_0076
				Else
					Me._id_P_0076 = CType(Nothing, Nullable(Of Integer))
				End If
				Me.SendPropertyChanged("P_0076_cls")
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="P_0119_cls_deu_cls", Storage:="_P_0119_cls", ThisKey:="id_p_0119", OtherKey:="id_0119", IsForeignKey:=true)>  _
	Public Property P_0119_cls() As P_0119_cls
		Get
			Return Me._P_0119_cls.Entity
		End Get
		Set
			Dim previousValue As P_0119_cls = Me._P_0119_cls.Entity
			If ((Object.Equals(previousValue, value) = false)  _
						OrElse (Me._P_0119_cls.HasLoadedOrAssignedValue = false)) Then
				Me.SendPropertyChanging
				If ((previousValue Is Nothing)  _
							= false) Then
					Me._P_0119_cls.Entity = Nothing
					previousValue.deu_cls.Remove(Me)
				End If
				Me._P_0119_cls.Entity = value
				If ((value Is Nothing)  _
							= false) Then
					value.deu_cls.Add(Me)
					Me._id_p_0119 = value.id_0119
				Else
					Me._id_p_0119 = CType(Nothing, Nullable(Of Integer))
				End If
				Me.SendPropertyChanged("P_0119_cls")
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="suc_cls_deu_cls", Storage:="_suc_cls", ThisKey:="id_suc", OtherKey:="id_suc", IsForeignKey:=true)>  _
	Public Property suc_cls() As suc_cls
		Get
			Return Me._suc_cls.Entity
		End Get
		Set
			Dim previousValue As suc_cls = Me._suc_cls.Entity
			If ((Object.Equals(previousValue, value) = false)  _
						OrElse (Me._suc_cls.HasLoadedOrAssignedValue = false)) Then
				Me.SendPropertyChanging
				If ((previousValue Is Nothing)  _
							= false) Then
					Me._suc_cls.Entity = Nothing
					previousValue.deu_cls.Remove(Me)
				End If
				Me._suc_cls.Entity = value
				If ((value Is Nothing)  _
							= false) Then
					value.deu_cls.Add(Me)
					Me._id_suc = value.id_suc
				Else
					Me._id_suc = CType(Nothing, Nullable(Of Integer))
				End If
				Me.SendPropertyChanged("suc_cls")
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="eje_cls_deu_cls", Storage:="_eje", ThisKey:="id_eje_cod_cob", OtherKey:="id_eje", IsForeignKey:=true)>  _
	Public Property eje() As eje_cls
		Get
			Return Me._eje.Entity
		End Get
		Set
			Dim previousValue As eje_cls = Me._eje.Entity
			If ((Object.Equals(previousValue, value) = false)  _
						OrElse (Me._eje.HasLoadedOrAssignedValue = false)) Then
				Me.SendPropertyChanging
				If ((previousValue Is Nothing)  _
							= false) Then
					Me._eje.Entity = Nothing
					previousValue.deu_cls.Remove(Me)
				End If
				Me._eje.Entity = value
				If ((value Is Nothing)  _
							= false) Then
					value.deu_cls.Add(Me)
					Me._id_eje_cod_cob = value.id_eje
				Else
					Me._id_eje_cod_cob = CType(Nothing, Nullable(Of Integer))
				End If
				Me.SendPropertyChanged("eje")
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="eje_cls_deu_cls1", Storage:="_eje_cls", ThisKey:="id_eje", OtherKey:="id_eje", IsForeignKey:=true)>  _
	Public Property eje_cls() As eje_cls
		Get
			Return Me._eje_cls.Entity
		End Get
		Set
			Dim previousValue As eje_cls = Me._eje_cls.Entity
			If ((Object.Equals(previousValue, value) = false)  _
						OrElse (Me._eje_cls.HasLoadedOrAssignedValue = false)) Then
				Me.SendPropertyChanging
				If ((previousValue Is Nothing)  _
							= false) Then
					Me._eje_cls.Entity = Nothing
					previousValue.deu_cls1.Remove(Me)
				End If
				Me._eje_cls.Entity = value
				If ((value Is Nothing)  _
							= false) Then
					value.deu_cls1.Add(Me)
					Me._id_eje = value.id_eje
				Else
					Me._id_eje = CType(Nothing, Nullable(Of Integer))
				End If
				Me.SendPropertyChanged("eje_cls")
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
	
	Private Sub attach_cnc_cls(ByVal entity As cnc_cls)
		Me.SendPropertyChanging
		entity.deu_cls = Me
	End Sub
	
	Private Sub detach_cnc_cls(ByVal entity As cnc_cls)
		Me.SendPropertyChanging
		entity.deu_cls = Nothing
	End Sub
	
	Private Sub attach_cpg_cls(ByVal entity As cpg_cls)
		Me.SendPropertyChanging
		entity.deu_cls = Me
	End Sub
	
	Private Sub detach_cpg_cls(ByVal entity As cpg_cls)
		Me.SendPropertyChanging
		entity.deu_cls = Nothing
	End Sub
	
	Private Sub attach_ddi_cls(ByVal entity As ddi_cls)
		Me.SendPropertyChanging
		entity.deu_cls = Me
	End Sub
	
	Private Sub detach_ddi_cls(ByVal entity As ddi_cls)
		Me.SendPropertyChanging
		entity.deu_cls = Nothing
	End Sub
	
	Private Sub attach_ddr_cls(ByVal entity As ddr_cls)
		Me.SendPropertyChanging
		entity.deu_cls = Me
	End Sub
	
	Private Sub detach_ddr_cls(ByVal entity As ddr_cls)
		Me.SendPropertyChanging
		entity.deu_cls = Nothing
	End Sub
	
	Private Sub attach_deu_mon_cls(ByVal entity As deu_mon_cls)
		Me.SendPropertyChanging
		entity.deu_cls = Me
	End Sub
	
	Private Sub detach_deu_mon_cls(ByVal entity As deu_mon_cls)
		Me.SendPropertyChanging
		entity.deu_cls = Nothing
	End Sub
	
	Private Sub attach_dpa_cls(ByVal entity As dpa_cls)
		Me.SendPropertyChanging
		entity.deu_cls = Me
	End Sub
	
	Private Sub detach_dpa_cls(ByVal entity As dpa_cls)
		Me.SendPropertyChanging
		entity.deu_cls = Nothing
	End Sub
	
	Private Sub attach_dsi_cls(ByVal entity As dsi_cls)
		Me.SendPropertyChanging
		entity.deu_cls = Me
	End Sub
	
	Private Sub detach_dsi_cls(ByVal entity As dsi_cls)
		Me.SendPropertyChanging
		entity.deu_cls = Nothing
	End Sub
	
	Private Sub attach_dvf_cls(ByVal entity As dvf_cls)
		Me.SendPropertyChanging
		entity.deu_cls = Me
	End Sub
	
	Private Sub detach_dvf_cls(ByVal entity As dvf_cls)
		Me.SendPropertyChanging
		entity.deu_cls = Nothing
	End Sub
	
	Private Sub attach_exd_cls(ByVal entity As exd_cls)
		Me.SendPropertyChanging
		entity.deu_cls = Me
	End Sub
	
	Private Sub detach_exd_cls(ByVal entity As exd_cls)
		Me.SendPropertyChanging
		entity.deu_cls = Nothing
	End Sub
	
	Private Sub attach_fdd_cls(ByVal entity As fdd_cls)
		Me.SendPropertyChanging
		entity.deu_cls = Me
	End Sub
	
	Private Sub detach_fdd_cls(ByVal entity As fdd_cls)
		Me.SendPropertyChanging
		entity.deu_cls = Nothing
	End Sub
	
	Private Sub attach_gga_cls(ByVal entity As gga_cls)
		Me.SendPropertyChanging
		entity.deu_cls = Me
	End Sub
	
	Private Sub detach_gga_cls(ByVal entity As gga_cls)
		Me.SendPropertyChanging
		entity.deu_cls = Nothing
	End Sub
	
	Private Sub attach_has_cls(ByVal entity As has_cls)
		Me.SendPropertyChanging
		entity.deu_cls = Me
	End Sub
	
	Private Sub detach_has_cls(ByVal entity As has_cls)
		Me.SendPropertyChanging
		entity.deu_cls = Nothing
	End Sub
	
	Private Sub attach_nce_cls(ByVal entity As nce_cls)
		Me.SendPropertyChanging
		entity.deu_cls = Me
	End Sub
	
	Private Sub detach_nce_cls(ByVal entity As nce_cls)
		Me.SendPropertyChanging
		entity.deu_cls = Nothing
	End Sub
	
	Private Sub attach_sbl_cls(ByVal entity As sbl_cls)
		Me.SendPropertyChanging
		entity.deu_cls = Me
	End Sub
	
	Private Sub detach_sbl_cls(ByVal entity As sbl_cls)
		Me.SendPropertyChanging
		entity.deu_cls = Nothing
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.deu_mon")>  _
Partial Public Class deu_mon_cls
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _id_deu_mon As Integer
	
	Private _deu_ide As String
	
	Private _id_p_0023 As System.Nullable(Of Integer)
	
	Private _id_p_0029 As System.Nullable(Of Integer)
	
	Private _id_eje As System.Nullable(Of Integer)
	
	Private _deu_mon_apr As System.Nullable(Of Decimal)
	
	Private _deu_mon_ocu As System.Nullable(Of Decimal)
	
	Private _deu_mon_dis As System.Nullable(Of Decimal)
	
	Private _deu_mon_obs As String
	
	Private _deu_mon_fec As System.Nullable(Of Date)
	
	Private _deu_fec_vto As System.Nullable(Of Date)
	
	Private _deu_cls As EntityRef(Of deu_cls)
	
	Private _P_0023_cls As EntityRef(Of P_0023_cls)
	
	Private _P_0029_cls As EntityRef(Of P_0029_cls)
	
	Private _eje_cls As EntityRef(Of eje_cls)
	
    #Region "Definiciones de métodos de extensibilidad"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub Onid_deu_monChanging(value As Integer)
    End Sub
    Partial Private Sub Onid_deu_monChanged()
    End Sub
    Partial Private Sub Ondeu_ideChanging(value As String)
    End Sub
    Partial Private Sub Ondeu_ideChanged()
    End Sub
    Partial Private Sub Onid_p_0023Changing(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub Onid_p_0023Changed()
    End Sub
    Partial Private Sub Onid_p_0029Changing(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub Onid_p_0029Changed()
    End Sub
    Partial Private Sub Onid_ejeChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub Onid_ejeChanged()
    End Sub
    Partial Private Sub Ondeu_mon_aprChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub Ondeu_mon_aprChanged()
    End Sub
    Partial Private Sub Ondeu_mon_ocuChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub Ondeu_mon_ocuChanged()
    End Sub
    Partial Private Sub Ondeu_mon_disChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub Ondeu_mon_disChanged()
    End Sub
    Partial Private Sub Ondeu_mon_obsChanging(value As String)
    End Sub
    Partial Private Sub Ondeu_mon_obsChanged()
    End Sub
    Partial Private Sub Ondeu_mon_fecChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub Ondeu_mon_fecChanged()
    End Sub
    Partial Private Sub Ondeu_fec_vtoChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub Ondeu_fec_vtoChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		Me._deu_cls = CType(Nothing, EntityRef(Of deu_cls))
		Me._P_0023_cls = CType(Nothing, EntityRef(Of P_0023_cls))
		Me._P_0029_cls = CType(Nothing, EntityRef(Of P_0029_cls))
		Me._eje_cls = CType(Nothing, EntityRef(Of eje_cls))
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_id_deu_mon", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property id_deu_mon() As Integer
		Get
			Return Me._id_deu_mon
		End Get
		Set
			If ((Me._id_deu_mon = value)  _
						= false) Then
				Me.Onid_deu_monChanging(value)
				Me.SendPropertyChanging
				Me._id_deu_mon = value
				Me.SendPropertyChanged("id_deu_mon")
				Me.Onid_deu_monChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_deu_ide", DbType:="Char(12)")>  _
	Public Property deu_ide() As String
		Get
			Return Me._deu_ide
		End Get
		Set
			If (String.Equals(Me._deu_ide, value) = false) Then
				If Me._deu_cls.HasLoadedOrAssignedValue Then
					Throw New System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException()
				End If
				Me.Ondeu_ideChanging(value)
				Me.SendPropertyChanging
				Me._deu_ide = value
				Me.SendPropertyChanged("deu_ide")
				Me.Ondeu_ideChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_id_p_0023", DbType:="Int")>  _
	Public Property id_p_0023() As System.Nullable(Of Integer)
		Get
			Return Me._id_p_0023
		End Get
		Set
			If (Me._id_p_0023.Equals(value) = false) Then
				If Me._P_0023_cls.HasLoadedOrAssignedValue Then
					Throw New System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException()
				End If
				Me.Onid_p_0023Changing(value)
				Me.SendPropertyChanging
				Me._id_p_0023 = value
				Me.SendPropertyChanged("id_p_0023")
				Me.Onid_p_0023Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_id_p_0029", DbType:="Int")>  _
	Public Property id_p_0029() As System.Nullable(Of Integer)
		Get
			Return Me._id_p_0029
		End Get
		Set
			If (Me._id_p_0029.Equals(value) = false) Then
				If Me._P_0029_cls.HasLoadedOrAssignedValue Then
					Throw New System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException()
				End If
				Me.Onid_p_0029Changing(value)
				Me.SendPropertyChanging
				Me._id_p_0029 = value
				Me.SendPropertyChanged("id_p_0029")
				Me.Onid_p_0029Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_id_eje", DbType:="Int")>  _
	Public Property id_eje() As System.Nullable(Of Integer)
		Get
			Return Me._id_eje
		End Get
		Set
			If (Me._id_eje.Equals(value) = false) Then
				If Me._eje_cls.HasLoadedOrAssignedValue Then
					Throw New System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException()
				End If
				Me.Onid_ejeChanging(value)
				Me.SendPropertyChanging
				Me._id_eje = value
				Me.SendPropertyChanged("id_eje")
				Me.Onid_ejeChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_deu_mon_apr", DbType:="Money")>  _
	Public Property deu_mon_apr() As System.Nullable(Of Decimal)
		Get
			Return Me._deu_mon_apr
		End Get
		Set
			If (Me._deu_mon_apr.Equals(value) = false) Then
				Me.Ondeu_mon_aprChanging(value)
				Me.SendPropertyChanging
				Me._deu_mon_apr = value
				Me.SendPropertyChanged("deu_mon_apr")
				Me.Ondeu_mon_aprChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_deu_mon_ocu", DbType:="Money")>  _
	Public Property deu_mon_ocu() As System.Nullable(Of Decimal)
		Get
			Return Me._deu_mon_ocu
		End Get
		Set
			If (Me._deu_mon_ocu.Equals(value) = false) Then
				Me.Ondeu_mon_ocuChanging(value)
				Me.SendPropertyChanging
				Me._deu_mon_ocu = value
				Me.SendPropertyChanged("deu_mon_ocu")
				Me.Ondeu_mon_ocuChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_deu_mon_dis", DbType:="Money")>  _
	Public Property deu_mon_dis() As System.Nullable(Of Decimal)
		Get
			Return Me._deu_mon_dis
		End Get
		Set
			If (Me._deu_mon_dis.Equals(value) = false) Then
				Me.Ondeu_mon_disChanging(value)
				Me.SendPropertyChanging
				Me._deu_mon_dis = value
				Me.SendPropertyChanged("deu_mon_dis")
				Me.Ondeu_mon_disChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_deu_mon_obs", DbType:="VarChar(250)")>  _
	Public Property deu_mon_obs() As String
		Get
			Return Me._deu_mon_obs
		End Get
		Set
			If (String.Equals(Me._deu_mon_obs, value) = false) Then
				Me.Ondeu_mon_obsChanging(value)
				Me.SendPropertyChanging
				Me._deu_mon_obs = value
				Me.SendPropertyChanged("deu_mon_obs")
				Me.Ondeu_mon_obsChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_deu_mon_fec", DbType:="DateTime")>  _
	Public Property deu_mon_fec() As System.Nullable(Of Date)
		Get
			Return Me._deu_mon_fec
		End Get
		Set
			If (Me._deu_mon_fec.Equals(value) = false) Then
				Me.Ondeu_mon_fecChanging(value)
				Me.SendPropertyChanging
				Me._deu_mon_fec = value
				Me.SendPropertyChanged("deu_mon_fec")
				Me.Ondeu_mon_fecChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_deu_fec_vto", DbType:="DateTime")>  _
	Public Property deu_fec_vto() As System.Nullable(Of Date)
		Get
			Return Me._deu_fec_vto
		End Get
		Set
			If (Me._deu_fec_vto.Equals(value) = false) Then
				Me.Ondeu_fec_vtoChanging(value)
				Me.SendPropertyChanging
				Me._deu_fec_vto = value
				Me.SendPropertyChanged("deu_fec_vto")
				Me.Ondeu_fec_vtoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="deu_cls_deu_mon_cls", Storage:="_deu_cls", ThisKey:="deu_ide", OtherKey:="deu_ide", IsForeignKey:=true)>  _
	Public Property deu_cls() As deu_cls
		Get
			Return Me._deu_cls.Entity
		End Get
		Set
			Dim previousValue As deu_cls = Me._deu_cls.Entity
			If ((Object.Equals(previousValue, value) = false)  _
						OrElse (Me._deu_cls.HasLoadedOrAssignedValue = false)) Then
				Me.SendPropertyChanging
				If ((previousValue Is Nothing)  _
							= false) Then
					Me._deu_cls.Entity = Nothing
					previousValue.deu_mon_cls.Remove(Me)
				End If
				Me._deu_cls.Entity = value
				If ((value Is Nothing)  _
							= false) Then
					value.deu_mon_cls.Add(Me)
					Me._deu_ide = value.deu_ide
				Else
					Me._deu_ide = CType(Nothing, String)
				End If
				Me.SendPropertyChanged("deu_cls")
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="P_0023_cls_deu_mon_cls", Storage:="_P_0023_cls", ThisKey:="id_p_0023", OtherKey:="id_P_0023", IsForeignKey:=true)>  _
	Public Property P_0023_cls() As P_0023_cls
		Get
			Return Me._P_0023_cls.Entity
		End Get
		Set
			Dim previousValue As P_0023_cls = Me._P_0023_cls.Entity
			If ((Object.Equals(previousValue, value) = false)  _
						OrElse (Me._P_0023_cls.HasLoadedOrAssignedValue = false)) Then
				Me.SendPropertyChanging
				If ((previousValue Is Nothing)  _
							= false) Then
					Me._P_0023_cls.Entity = Nothing
					previousValue.deu_mon_cls.Remove(Me)
				End If
				Me._P_0023_cls.Entity = value
				If ((value Is Nothing)  _
							= false) Then
					value.deu_mon_cls.Add(Me)
					Me._id_p_0023 = value.id_P_0023
				Else
					Me._id_p_0023 = CType(Nothing, Nullable(Of Integer))
				End If
				Me.SendPropertyChanged("P_0023_cls")
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="P_0029_cls_deu_mon_cls", Storage:="_P_0029_cls", ThisKey:="id_p_0029", OtherKey:="id_P_0029", IsForeignKey:=true)>  _
	Public Property P_0029_cls() As P_0029_cls
		Get
			Return Me._P_0029_cls.Entity
		End Get
		Set
			Dim previousValue As P_0029_cls = Me._P_0029_cls.Entity
			If ((Object.Equals(previousValue, value) = false)  _
						OrElse (Me._P_0029_cls.HasLoadedOrAssignedValue = false)) Then
				Me.SendPropertyChanging
				If ((previousValue Is Nothing)  _
							= false) Then
					Me._P_0029_cls.Entity = Nothing
					previousValue.deu_mon_cls.Remove(Me)
				End If
				Me._P_0029_cls.Entity = value
				If ((value Is Nothing)  _
							= false) Then
					value.deu_mon_cls.Add(Me)
					Me._id_p_0029 = value.id_P_0029
				Else
					Me._id_p_0029 = CType(Nothing, Nullable(Of Integer))
				End If
				Me.SendPropertyChanged("P_0029_cls")
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="eje_cls_deu_mon_cls", Storage:="_eje_cls", ThisKey:="id_eje", OtherKey:="id_eje", IsForeignKey:=true)>  _
	Public Property eje_cls() As eje_cls
		Get
			Return Me._eje_cls.Entity
		End Get
		Set
			Dim previousValue As eje_cls = Me._eje_cls.Entity
			If ((Object.Equals(previousValue, value) = false)  _
						OrElse (Me._eje_cls.HasLoadedOrAssignedValue = false)) Then
				Me.SendPropertyChanging
				If ((previousValue Is Nothing)  _
							= false) Then
					Me._eje_cls.Entity = Nothing
					previousValue.deu_mon_cls.Remove(Me)
				End If
				Me._eje_cls.Entity = value
				If ((value Is Nothing)  _
							= false) Then
					value.deu_mon_cls.Add(Me)
					Me._id_eje = value.id_eje
				Else
					Me._id_eje = CType(Nothing, Nullable(Of Integer))
				End If
				Me.SendPropertyChanged("eje_cls")
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.dgh")>  _
Partial Public Class dgh_cls
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _id_eje As Integer
	
	Private _dgh_fec As Date
	
	Private _dgh_cli As System.Nullable(Of Decimal)
	
	Private _dgh_deu As System.Nullable(Of Decimal)
	
	Private _dgh_doc As System.Nullable(Of Decimal)
	
	Private _dgh_lla As System.Nullable(Of Decimal)
	
	Private _dgh_exi As System.Nullable(Of Decimal)
	
	Private _eje_cls As EntityRef(Of eje_cls)
	
    #Region "Definiciones de métodos de extensibilidad"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub Onid_ejeChanging(value As Integer)
    End Sub
    Partial Private Sub Onid_ejeChanged()
    End Sub
    Partial Private Sub Ondgh_fecChanging(value As Date)
    End Sub
    Partial Private Sub Ondgh_fecChanged()
    End Sub
    Partial Private Sub Ondgh_cliChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub Ondgh_cliChanged()
    End Sub
    Partial Private Sub Ondgh_deuChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub Ondgh_deuChanged()
    End Sub
    Partial Private Sub Ondgh_docChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub Ondgh_docChanged()
    End Sub
    Partial Private Sub Ondgh_llaChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub Ondgh_llaChanged()
    End Sub
    Partial Private Sub Ondgh_exiChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub Ondgh_exiChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		Me._eje_cls = CType(Nothing, EntityRef(Of eje_cls))
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_id_eje", DbType:="Int NOT NULL", IsPrimaryKey:=true)>  _
	Public Property id_eje() As Integer
		Get
			Return Me._id_eje
		End Get
		Set
			If ((Me._id_eje = value)  _
						= false) Then
				If Me._eje_cls.HasLoadedOrAssignedValue Then
					Throw New System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException()
				End If
				Me.Onid_ejeChanging(value)
				Me.SendPropertyChanging
				Me._id_eje = value
				Me.SendPropertyChanged("id_eje")
				Me.Onid_ejeChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_dgh_fec", DbType:="DateTime NOT NULL", IsPrimaryKey:=true)>  _
	Public Property dgh_fec() As Date
		Get
			Return Me._dgh_fec
		End Get
		Set
			If ((Me._dgh_fec = value)  _
						= false) Then
				Me.Ondgh_fecChanging(value)
				Me.SendPropertyChanging
				Me._dgh_fec = value
				Me.SendPropertyChanged("dgh_fec")
				Me.Ondgh_fecChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_dgh_cli", DbType:="Decimal(3,0)")>  _
	Public Property dgh_cli() As System.Nullable(Of Decimal)
		Get
			Return Me._dgh_cli
		End Get
		Set
			If (Me._dgh_cli.Equals(value) = false) Then
				Me.Ondgh_cliChanging(value)
				Me.SendPropertyChanging
				Me._dgh_cli = value
				Me.SendPropertyChanged("dgh_cli")
				Me.Ondgh_cliChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_dgh_deu", DbType:="Decimal(3,0)")>  _
	Public Property dgh_deu() As System.Nullable(Of Decimal)
		Get
			Return Me._dgh_deu
		End Get
		Set
			If (Me._dgh_deu.Equals(value) = false) Then
				Me.Ondgh_deuChanging(value)
				Me.SendPropertyChanging
				Me._dgh_deu = value
				Me.SendPropertyChanged("dgh_deu")
				Me.Ondgh_deuChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_dgh_doc", DbType:="Decimal(3,0)")>  _
	Public Property dgh_doc() As System.Nullable(Of Decimal)
		Get
			Return Me._dgh_doc
		End Get
		Set
			If (Me._dgh_doc.Equals(value) = false) Then
				Me.Ondgh_docChanging(value)
				Me.SendPropertyChanging
				Me._dgh_doc = value
				Me.SendPropertyChanged("dgh_doc")
				Me.Ondgh_docChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_dgh_lla", DbType:="Decimal(3,0)")>  _
	Public Property dgh_lla() As System.Nullable(Of Decimal)
		Get
			Return Me._dgh_lla
		End Get
		Set
			If (Me._dgh_lla.Equals(value) = false) Then
				Me.Ondgh_llaChanging(value)
				Me.SendPropertyChanging
				Me._dgh_lla = value
				Me.SendPropertyChanged("dgh_lla")
				Me.Ondgh_llaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_dgh_exi", DbType:="Decimal(3,0)")>  _
	Public Property dgh_exi() As System.Nullable(Of Decimal)
		Get
			Return Me._dgh_exi
		End Get
		Set
			If (Me._dgh_exi.Equals(value) = false) Then
				Me.Ondgh_exiChanging(value)
				Me.SendPropertyChanging
				Me._dgh_exi = value
				Me.SendPropertyChanged("dgh_exi")
				Me.Ondgh_exiChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="eje_cls_dgh_cls", Storage:="_eje_cls", ThisKey:="id_eje", OtherKey:="id_eje", IsForeignKey:=true)>  _
	Public Property eje_cls() As eje_cls
		Get
			Return Me._eje_cls.Entity
		End Get
		Set
			Dim previousValue As eje_cls = Me._eje_cls.Entity
			If ((Object.Equals(previousValue, value) = false)  _
						OrElse (Me._eje_cls.HasLoadedOrAssignedValue = false)) Then
				Me.SendPropertyChanging
				If ((previousValue Is Nothing)  _
							= false) Then
					Me._eje_cls.Entity = Nothing
					previousValue.dgh_cls.Remove(Me)
				End If
				Me._eje_cls.Entity = value
				If ((value Is Nothing)  _
							= false) Then
					value.dgh_cls.Add(Me)
					Me._id_eje = value.id_eje
				Else
					Me._id_eje = CType(Nothing, Integer)
				End If
				Me.SendPropertyChanged("eje_cls")
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.doc")>  _
Partial Public Class doc_cls
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _id_doc As Decimal
	
	Private _id_dsi As Decimal
	
	Private _id_opo As Decimal
	
	Private _id_fct As System.Nullable(Of Decimal)
	
	Private _id_fdd As System.Nullable(Of Decimal)
	
	Private _id_suc_cbz As System.Nullable(Of Integer)
	
	Private _id_suc_rcd As System.Nullable(Of Integer)
	
	Private _id_cco As System.Nullable(Of Integer)
	
	Private _doc_num_ren As Decimal
	
	Private _doc_gto As System.Nullable(Of Decimal)
	
	Private _doc_ful_pgo As System.Nullable(Of Date)
	
	Private _doc_int_dvg As System.Nullable(Of Decimal)
	
	Private _doc_ful_dvg As System.Nullable(Of Date)
	
	Private _doc_fct As String
	
	Private _doc_fec_cco As System.Nullable(Of Date)
	
	Private _doc_sdo_cli As System.Nullable(Of Decimal)
	
	Private _doc_sdo_ddr As System.Nullable(Of Decimal)
	
	Private _doc_tas_ren As System.Nullable(Of Decimal)
	
	Private _doc_cms_ren As System.Nullable(Of Decimal)
	
	Private _doc_iva_ren As System.Nullable(Of Decimal)
	
	Private _doc_rea_tot As System.Nullable(Of Decimal)
	
	Private _doc_not_cre As System.Nullable(Of Decimal)
	
	Private _doc_pag_ddr As System.Nullable(Of Char)
	
	Private _doc_int_cal_ant As System.Nullable(Of Decimal)
	
	Private _doc_dvg As System.Nullable(Of Char)
	
	Private _doc_rgo_adi As System.Nullable(Of Integer)
	
	Private _doc_cob_doi As System.Nullable(Of Integer)
	
	Private _doc_obs_cob As String
	
	Private _doc_int_dev As System.Nullable(Of Decimal)
	
	Private _doc_dev_cli As String
	
	Private _doc_fec_dem As System.Nullable(Of Date)
	
	Private _doc_fec_cas As System.Nullable(Of Date)
	
	Private _doc_con_obl As String
	
	Private _doc_sdo_exc As System.Nullable(Of Decimal)
	
	Private _doc_cod_tmp As String
	
	Private _doc_int_mor_dvg As System.Nullable(Of Decimal)
	
	Private _doc_INT_dvg_mor As System.Nullable(Of Decimal)
	
	Private _doc_INT_cal_ant_mor As System.Nullable(Of Decimal)
	
	Private _doc_ful_dvg_mor As System.Nullable(Of Date)
	
	Private _doc_cod_tmp_old As String
	
	Private _cal_def_ini_old As String
	
	Private _doc_cod_tmp_ctr As String
	
	Private _cxc_cls As EntitySet(Of cxc_cls)
	
	Private _cxp_cls As EntitySet(Of cxp_cls)
	
	Private _dct As EntitySet(Of dct)
	
	Private _doc_con_cls As EntityRef(Of doc_con_cls)
	
	Private _doc_rea As EntitySet(Of doc_rea)
	
	Private _dor_cls As EntitySet(Of dor_cls)
	
	Private _dpg_cls As EntitySet(Of dpg_cls)
	
	Private _egr_sec_cls As EntitySet(Of egr_sec_cls)
	
	Private _gsn_cls As EntitySet(Of gsn_cls)
	
	Private _ing_sec_cls As EntitySet(Of ing_sec_cls)
	
	Private _nce_cls As EntitySet(Of nce_cls)
	
	Private _cco_cls As EntityRef(Of cco_cls)
	
	Private _dsi_cls As EntityRef(Of dsi_cls)
	
	Private _opo_cls As EntityRef(Of opo_cls)
	
	Private _suc As EntityRef(Of suc_cls)
	
	Private _suc_cls As EntityRef(Of suc_cls)
	
    #Region "Definiciones de métodos de extensibilidad"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub Onid_docChanging(value As Decimal)
    End Sub
    Partial Private Sub Onid_docChanged()
    End Sub
    Partial Private Sub Onid_dsiChanging(value As Decimal)
    End Sub
    Partial Private Sub Onid_dsiChanged()
    End Sub
    Partial Private Sub Onid_opoChanging(value As Decimal)
    End Sub
    Partial Private Sub Onid_opoChanged()
    End Sub
    Partial Private Sub Onid_fctChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub Onid_fctChanged()
    End Sub
    Partial Private Sub Onid_fddChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub Onid_fddChanged()
    End Sub
    Partial Private Sub Onid_suc_cbzChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub Onid_suc_cbzChanged()
    End Sub
    Partial Private Sub Onid_suc_rcdChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub Onid_suc_rcdChanged()
    End Sub
    Partial Private Sub Onid_ccoChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub Onid_ccoChanged()
    End Sub
    Partial Private Sub Ondoc_num_renChanging(value As Decimal)
    End Sub
    Partial Private Sub Ondoc_num_renChanged()
    End Sub
    Partial Private Sub Ondoc_gtoChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub Ondoc_gtoChanged()
    End Sub
    Partial Private Sub Ondoc_ful_pgoChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub Ondoc_ful_pgoChanged()
    End Sub
    Partial Private Sub Ondoc_int_dvgChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub Ondoc_int_dvgChanged()
    End Sub
    Partial Private Sub Ondoc_ful_dvgChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub Ondoc_ful_dvgChanged()
    End Sub
    Partial Private Sub Ondoc_fctChanging(value As String)
    End Sub
    Partial Private Sub Ondoc_fctChanged()
    End Sub
    Partial Private Sub Ondoc_fec_ccoChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub Ondoc_fec_ccoChanged()
    End Sub
    Partial Private Sub Ondoc_sdo_cliChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub Ondoc_sdo_cliChanged()
    End Sub
    Partial Private Sub Ondoc_sdo_ddrChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub Ondoc_sdo_ddrChanged()
    End Sub
    Partial Private Sub Ondoc_tas_renChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub Ondoc_tas_renChanged()
    End Sub
    Partial Private Sub Ondoc_cms_renChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub Ondoc_cms_renChanged()
    End Sub
    Partial Private Sub Ondoc_iva_renChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub Ondoc_iva_renChanged()
    End Sub
    Partial Private Sub Ondoc_rea_totChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub Ondoc_rea_totChanged()
    End Sub
    Partial Private Sub Ondoc_not_creChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub Ondoc_not_creChanged()
    End Sub
    Partial Private Sub Ondoc_pag_ddrChanging(value As System.Nullable(Of Char))
    End Sub
    Partial Private Sub Ondoc_pag_ddrChanged()
    End Sub
    Partial Private Sub Ondoc_int_cal_antChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub Ondoc_int_cal_antChanged()
    End Sub
    Partial Private Sub Ondoc_dvgChanging(value As System.Nullable(Of Char))
    End Sub
    Partial Private Sub Ondoc_dvgChanged()
    End Sub
    Partial Private Sub Ondoc_rgo_adiChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub Ondoc_rgo_adiChanged()
    End Sub
    Partial Private Sub Ondoc_cob_doiChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub Ondoc_cob_doiChanged()
    End Sub
    Partial Private Sub Ondoc_obs_cobChanging(value As String)
    End Sub
    Partial Private Sub Ondoc_obs_cobChanged()
    End Sub
    Partial Private Sub Ondoc_int_devChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub Ondoc_int_devChanged()
    End Sub
    Partial Private Sub Ondoc_dev_cliChanging(value As String)
    End Sub
    Partial Private Sub Ondoc_dev_cliChanged()
    End Sub
    Partial Private Sub Ondoc_fec_demChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub Ondoc_fec_demChanged()
    End Sub
    Partial Private Sub Ondoc_fec_casChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub Ondoc_fec_casChanged()
    End Sub
    Partial Private Sub Ondoc_con_oblChanging(value As String)
    End Sub
    Partial Private Sub Ondoc_con_oblChanged()
    End Sub
    Partial Private Sub Ondoc_sdo_excChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub Ondoc_sdo_excChanged()
    End Sub
    Partial Private Sub Ondoc_cod_tmpChanging(value As String)
    End Sub
    Partial Private Sub Ondoc_cod_tmpChanged()
    End Sub
    Partial Private Sub Ondoc_int_mor_dvgChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub Ondoc_int_mor_dvgChanged()
    End Sub
    Partial Private Sub Ondoc_INT_dvg_morChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub Ondoc_INT_dvg_morChanged()
    End Sub
    Partial Private Sub Ondoc_INT_cal_ant_morChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub Ondoc_INT_cal_ant_morChanged()
    End Sub
    Partial Private Sub Ondoc_ful_dvg_morChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub Ondoc_ful_dvg_morChanged()
    End Sub
    Partial Private Sub Ondoc_cod_tmp_oldChanging(value As String)
    End Sub
    Partial Private Sub Ondoc_cod_tmp_oldChanged()
    End Sub
    Partial Private Sub Oncal_def_ini_oldChanging(value As String)
    End Sub
    Partial Private Sub Oncal_def_ini_oldChanged()
    End Sub
    Partial Private Sub Ondoc_cod_tmp_ctrChanging(value As String)
    End Sub
    Partial Private Sub Ondoc_cod_tmp_ctrChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		Me._cxc_cls = New EntitySet(Of cxc_cls)(AddressOf Me.attach_cxc_cls, AddressOf Me.detach_cxc_cls)
		Me._cxp_cls = New EntitySet(Of cxp_cls)(AddressOf Me.attach_cxp_cls, AddressOf Me.detach_cxp_cls)
		Me._dct = New EntitySet(Of dct)(AddressOf Me.attach_dct, AddressOf Me.detach_dct)
		Me._doc_con_cls = CType(Nothing, EntityRef(Of doc_con_cls))
		Me._doc_rea = New EntitySet(Of doc_rea)(AddressOf Me.attach_doc_rea, AddressOf Me.detach_doc_rea)
		Me._dor_cls = New EntitySet(Of dor_cls)(AddressOf Me.attach_dor_cls, AddressOf Me.detach_dor_cls)
		Me._dpg_cls = New EntitySet(Of dpg_cls)(AddressOf Me.attach_dpg_cls, AddressOf Me.detach_dpg_cls)
		Me._egr_sec_cls = New EntitySet(Of egr_sec_cls)(AddressOf Me.attach_egr_sec_cls, AddressOf Me.detach_egr_sec_cls)
		Me._gsn_cls = New EntitySet(Of gsn_cls)(AddressOf Me.attach_gsn_cls, AddressOf Me.detach_gsn_cls)
		Me._ing_sec_cls = New EntitySet(Of ing_sec_cls)(AddressOf Me.attach_ing_sec_cls, AddressOf Me.detach_ing_sec_cls)
		Me._nce_cls = New EntitySet(Of nce_cls)(AddressOf Me.attach_nce_cls, AddressOf Me.detach_nce_cls)
		Me._cco_cls = CType(Nothing, EntityRef(Of cco_cls))
		Me._dsi_cls = CType(Nothing, EntityRef(Of dsi_cls))
		Me._opo_cls = CType(Nothing, EntityRef(Of opo_cls))
		Me._suc = CType(Nothing, EntityRef(Of suc_cls))
		Me._suc_cls = CType(Nothing, EntityRef(Of suc_cls))
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_id_doc", AutoSync:=AutoSync.OnInsert, DbType:="Decimal(18,0) NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property id_doc() As Decimal
		Get
			Return Me._id_doc
		End Get
		Set
			If ((Me._id_doc = value)  _
						= false) Then
				Me.Onid_docChanging(value)
				Me.SendPropertyChanging
				Me._id_doc = value
				Me.SendPropertyChanged("id_doc")
				Me.Onid_docChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_id_dsi", DbType:="Decimal(18,0) NOT NULL")>  _
	Public Property id_dsi() As Decimal
		Get
			Return Me._id_dsi
		End Get
		Set
			If ((Me._id_dsi = value)  _
						= false) Then
				If Me._dsi_cls.HasLoadedOrAssignedValue Then
					Throw New System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException()
				End If
				Me.Onid_dsiChanging(value)
				Me.SendPropertyChanging
				Me._id_dsi = value
				Me.SendPropertyChanged("id_dsi")
				Me.Onid_dsiChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_id_opo", DbType:="Decimal(10,0) NOT NULL")>  _
	Public Property id_opo() As Decimal
		Get
			Return Me._id_opo
		End Get
		Set
			If ((Me._id_opo = value)  _
						= false) Then
				If Me._opo_cls.HasLoadedOrAssignedValue Then
					Throw New System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException()
				End If
				Me.Onid_opoChanging(value)
				Me.SendPropertyChanging
				Me._id_opo = value
				Me.SendPropertyChanged("id_opo")
				Me.Onid_opoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_id_fct", DbType:="Decimal(10,0)")>  _
	Public Property id_fct() As System.Nullable(Of Decimal)
		Get
			Return Me._id_fct
		End Get
		Set
			If (Me._id_fct.Equals(value) = false) Then
				Me.Onid_fctChanging(value)
				Me.SendPropertyChanging
				Me._id_fct = value
				Me.SendPropertyChanged("id_fct")
				Me.Onid_fctChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_id_fdd", DbType:="Decimal(10,0)")>  _
	Public Property id_fdd() As System.Nullable(Of Decimal)
		Get
			Return Me._id_fdd
		End Get
		Set
			If (Me._id_fdd.Equals(value) = false) Then
				Me.Onid_fddChanging(value)
				Me.SendPropertyChanging
				Me._id_fdd = value
				Me.SendPropertyChanged("id_fdd")
				Me.Onid_fddChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_id_suc_cbz", DbType:="Int")>  _
	Public Property id_suc_cbz() As System.Nullable(Of Integer)
		Get
			Return Me._id_suc_cbz
		End Get
		Set
			If (Me._id_suc_cbz.Equals(value) = false) Then
				If Me._suc.HasLoadedOrAssignedValue Then
					Throw New System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException()
				End If
				Me.Onid_suc_cbzChanging(value)
				Me.SendPropertyChanging
				Me._id_suc_cbz = value
				Me.SendPropertyChanged("id_suc_cbz")
				Me.Onid_suc_cbzChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_id_suc_rcd", DbType:="Int")>  _
	Public Property id_suc_rcd() As System.Nullable(Of Integer)
		Get
			Return Me._id_suc_rcd
		End Get
		Set
			If (Me._id_suc_rcd.Equals(value) = false) Then
				If Me._suc_cls.HasLoadedOrAssignedValue Then
					Throw New System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException()
				End If
				Me.Onid_suc_rcdChanging(value)
				Me.SendPropertyChanging
				Me._id_suc_rcd = value
				Me.SendPropertyChanged("id_suc_rcd")
				Me.Onid_suc_rcdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_id_cco", DbType:="Int")>  _
	Public Property id_cco() As System.Nullable(Of Integer)
		Get
			Return Me._id_cco
		End Get
		Set
			If (Me._id_cco.Equals(value) = false) Then
				If Me._cco_cls.HasLoadedOrAssignedValue Then
					Throw New System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException()
				End If
				Me.Onid_ccoChanging(value)
				Me.SendPropertyChanging
				Me._id_cco = value
				Me.SendPropertyChanged("id_cco")
				Me.Onid_ccoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_doc_num_ren", DbType:="Decimal(5,0) NOT NULL")>  _
	Public Property doc_num_ren() As Decimal
		Get
			Return Me._doc_num_ren
		End Get
		Set
			If ((Me._doc_num_ren = value)  _
						= false) Then
				Me.Ondoc_num_renChanging(value)
				Me.SendPropertyChanging
				Me._doc_num_ren = value
				Me.SendPropertyChanged("doc_num_ren")
				Me.Ondoc_num_renChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_doc_gto", DbType:="Money")>  _
	Public Property doc_gto() As System.Nullable(Of Decimal)
		Get
			Return Me._doc_gto
		End Get
		Set
			If (Me._doc_gto.Equals(value) = false) Then
				Me.Ondoc_gtoChanging(value)
				Me.SendPropertyChanging
				Me._doc_gto = value
				Me.SendPropertyChanged("doc_gto")
				Me.Ondoc_gtoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_doc_ful_pgo", DbType:="DateTime")>  _
	Public Property doc_ful_pgo() As System.Nullable(Of Date)
		Get
			Return Me._doc_ful_pgo
		End Get
		Set
			If (Me._doc_ful_pgo.Equals(value) = false) Then
				Me.Ondoc_ful_pgoChanging(value)
				Me.SendPropertyChanging
				Me._doc_ful_pgo = value
				Me.SendPropertyChanged("doc_ful_pgo")
				Me.Ondoc_ful_pgoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_doc_int_dvg", DbType:="Money")>  _
	Public Property doc_int_dvg() As System.Nullable(Of Decimal)
		Get
			Return Me._doc_int_dvg
		End Get
		Set
			If (Me._doc_int_dvg.Equals(value) = false) Then
				Me.Ondoc_int_dvgChanging(value)
				Me.SendPropertyChanging
				Me._doc_int_dvg = value
				Me.SendPropertyChanged("doc_int_dvg")
				Me.Ondoc_int_dvgChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_doc_ful_dvg", DbType:="DateTime")>  _
	Public Property doc_ful_dvg() As System.Nullable(Of Date)
		Get
			Return Me._doc_ful_dvg
		End Get
		Set
			If (Me._doc_ful_dvg.Equals(value) = false) Then
				Me.Ondoc_ful_dvgChanging(value)
				Me.SendPropertyChanging
				Me._doc_ful_dvg = value
				Me.SendPropertyChanged("doc_ful_dvg")
				Me.Ondoc_ful_dvgChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_doc_fct", DbType:="VarChar(1)")>  _
	Public Property doc_fct() As String
		Get
			Return Me._doc_fct
		End Get
		Set
			If (String.Equals(Me._doc_fct, value) = false) Then
				Me.Ondoc_fctChanging(value)
				Me.SendPropertyChanging
				Me._doc_fct = value
				Me.SendPropertyChanged("doc_fct")
				Me.Ondoc_fctChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_doc_fec_cco", DbType:="DateTime")>  _
	Public Property doc_fec_cco() As System.Nullable(Of Date)
		Get
			Return Me._doc_fec_cco
		End Get
		Set
			If (Me._doc_fec_cco.Equals(value) = false) Then
				Me.Ondoc_fec_ccoChanging(value)
				Me.SendPropertyChanging
				Me._doc_fec_cco = value
				Me.SendPropertyChanged("doc_fec_cco")
				Me.Ondoc_fec_ccoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_doc_sdo_cli", DbType:="Money")>  _
	Public Property doc_sdo_cli() As System.Nullable(Of Decimal)
		Get
			Return Me._doc_sdo_cli
		End Get
		Set
			If (Me._doc_sdo_cli.Equals(value) = false) Then
				Me.Ondoc_sdo_cliChanging(value)
				Me.SendPropertyChanging
				Me._doc_sdo_cli = value
				Me.SendPropertyChanged("doc_sdo_cli")
				Me.Ondoc_sdo_cliChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_doc_sdo_ddr", DbType:="Money")>  _
	Public Property doc_sdo_ddr() As System.Nullable(Of Decimal)
		Get
			Return Me._doc_sdo_ddr
		End Get
		Set
			If (Me._doc_sdo_ddr.Equals(value) = false) Then
				Me.Ondoc_sdo_ddrChanging(value)
				Me.SendPropertyChanging
				Me._doc_sdo_ddr = value
				Me.SendPropertyChanged("doc_sdo_ddr")
				Me.Ondoc_sdo_ddrChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_doc_tas_ren", DbType:="Decimal(5,2)")>  _
	Public Property doc_tas_ren() As System.Nullable(Of Decimal)
		Get
			Return Me._doc_tas_ren
		End Get
		Set
			If (Me._doc_tas_ren.Equals(value) = false) Then
				Me.Ondoc_tas_renChanging(value)
				Me.SendPropertyChanging
				Me._doc_tas_ren = value
				Me.SendPropertyChanged("doc_tas_ren")
				Me.Ondoc_tas_renChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_doc_cms_ren", DbType:="Decimal(10,0)")>  _
	Public Property doc_cms_ren() As System.Nullable(Of Decimal)
		Get
			Return Me._doc_cms_ren
		End Get
		Set
			If (Me._doc_cms_ren.Equals(value) = false) Then
				Me.Ondoc_cms_renChanging(value)
				Me.SendPropertyChanging
				Me._doc_cms_ren = value
				Me.SendPropertyChanged("doc_cms_ren")
				Me.Ondoc_cms_renChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_doc_iva_ren", DbType:="Decimal(18,2)")>  _
	Public Property doc_iva_ren() As System.Nullable(Of Decimal)
		Get
			Return Me._doc_iva_ren
		End Get
		Set
			If (Me._doc_iva_ren.Equals(value) = false) Then
				Me.Ondoc_iva_renChanging(value)
				Me.SendPropertyChanging
				Me._doc_iva_ren = value
				Me.SendPropertyChanged("doc_iva_ren")
				Me.Ondoc_iva_renChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_doc_rea_tot", DbType:="Money")>  _
	Public Property doc_rea_tot() As System.Nullable(Of Decimal)
		Get
			Return Me._doc_rea_tot
		End Get
		Set
			If (Me._doc_rea_tot.Equals(value) = false) Then
				Me.Ondoc_rea_totChanging(value)
				Me.SendPropertyChanging
				Me._doc_rea_tot = value
				Me.SendPropertyChanged("doc_rea_tot")
				Me.Ondoc_rea_totChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_doc_not_cre", DbType:="Money")>  _
	Public Property doc_not_cre() As System.Nullable(Of Decimal)
		Get
			Return Me._doc_not_cre
		End Get
		Set
			If (Me._doc_not_cre.Equals(value) = false) Then
				Me.Ondoc_not_creChanging(value)
				Me.SendPropertyChanging
				Me._doc_not_cre = value
				Me.SendPropertyChanged("doc_not_cre")
				Me.Ondoc_not_creChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_doc_pag_ddr", DbType:="Char(1)")>  _
	Public Property doc_pag_ddr() As System.Nullable(Of Char)
		Get
			Return Me._doc_pag_ddr
		End Get
		Set
			If (Me._doc_pag_ddr.Equals(value) = false) Then
				Me.Ondoc_pag_ddrChanging(value)
				Me.SendPropertyChanging
				Me._doc_pag_ddr = value
				Me.SendPropertyChanged("doc_pag_ddr")
				Me.Ondoc_pag_ddrChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_doc_int_cal_ant", DbType:="Money")>  _
	Public Property doc_int_cal_ant() As System.Nullable(Of Decimal)
		Get
			Return Me._doc_int_cal_ant
		End Get
		Set
			If (Me._doc_int_cal_ant.Equals(value) = false) Then
				Me.Ondoc_int_cal_antChanging(value)
				Me.SendPropertyChanging
				Me._doc_int_cal_ant = value
				Me.SendPropertyChanged("doc_int_cal_ant")
				Me.Ondoc_int_cal_antChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_doc_dvg", DbType:="Char(1)")>  _
	Public Property doc_dvg() As System.Nullable(Of Char)
		Get
			Return Me._doc_dvg
		End Get
		Set
			If (Me._doc_dvg.Equals(value) = false) Then
				Me.Ondoc_dvgChanging(value)
				Me.SendPropertyChanging
				Me._doc_dvg = value
				Me.SendPropertyChanged("doc_dvg")
				Me.Ondoc_dvgChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_doc_rgo_adi", DbType:="Int")>  _
	Public Property doc_rgo_adi() As System.Nullable(Of Integer)
		Get
			Return Me._doc_rgo_adi
		End Get
		Set
			If (Me._doc_rgo_adi.Equals(value) = false) Then
				Me.Ondoc_rgo_adiChanging(value)
				Me.SendPropertyChanging
				Me._doc_rgo_adi = value
				Me.SendPropertyChanged("doc_rgo_adi")
				Me.Ondoc_rgo_adiChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_doc_cob_doi", DbType:="Int")>  _
	Public Property doc_cob_doi() As System.Nullable(Of Integer)
		Get
			Return Me._doc_cob_doi
		End Get
		Set
			If (Me._doc_cob_doi.Equals(value) = false) Then
				Me.Ondoc_cob_doiChanging(value)
				Me.SendPropertyChanging
				Me._doc_cob_doi = value
				Me.SendPropertyChanged("doc_cob_doi")
				Me.Ondoc_cob_doiChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_doc_obs_cob", DbType:="VarChar(80)")>  _
	Public Property doc_obs_cob() As String
		Get
			Return Me._doc_obs_cob
		End Get
		Set
			If (String.Equals(Me._doc_obs_cob, value) = false) Then
				Me.Ondoc_obs_cobChanging(value)
				Me.SendPropertyChanging
				Me._doc_obs_cob = value
				Me.SendPropertyChanged("doc_obs_cob")
				Me.Ondoc_obs_cobChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_doc_int_dev", DbType:="Money")>  _
	Public Property doc_int_dev() As System.Nullable(Of Decimal)
		Get
			Return Me._doc_int_dev
		End Get
		Set
			If (Me._doc_int_dev.Equals(value) = false) Then
				Me.Ondoc_int_devChanging(value)
				Me.SendPropertyChanging
				Me._doc_int_dev = value
				Me.SendPropertyChanged("doc_int_dev")
				Me.Ondoc_int_devChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_doc_dev_cli", DbType:="VarChar(1)")>  _
	Public Property doc_dev_cli() As String
		Get
			Return Me._doc_dev_cli
		End Get
		Set
			If (String.Equals(Me._doc_dev_cli, value) = false) Then
				Me.Ondoc_dev_cliChanging(value)
				Me.SendPropertyChanging
				Me._doc_dev_cli = value
				Me.SendPropertyChanged("doc_dev_cli")
				Me.Ondoc_dev_cliChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_doc_fec_dem", DbType:="DateTime")>  _
	Public Property doc_fec_dem() As System.Nullable(Of Date)
		Get
			Return Me._doc_fec_dem
		End Get
		Set
			If (Me._doc_fec_dem.Equals(value) = false) Then
				Me.Ondoc_fec_demChanging(value)
				Me.SendPropertyChanging
				Me._doc_fec_dem = value
				Me.SendPropertyChanged("doc_fec_dem")
				Me.Ondoc_fec_demChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_doc_fec_cas", DbType:="DateTime")>  _
	Public Property doc_fec_cas() As System.Nullable(Of Date)
		Get
			Return Me._doc_fec_cas
		End Get
		Set
			If (Me._doc_fec_cas.Equals(value) = false) Then
				Me.Ondoc_fec_casChanging(value)
				Me.SendPropertyChanging
				Me._doc_fec_cas = value
				Me.SendPropertyChanged("doc_fec_cas")
				Me.Ondoc_fec_casChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_doc_con_obl", DbType:="VarChar(1)")>  _
	Public Property doc_con_obl() As String
		Get
			Return Me._doc_con_obl
		End Get
		Set
			If (String.Equals(Me._doc_con_obl, value) = false) Then
				Me.Ondoc_con_oblChanging(value)
				Me.SendPropertyChanging
				Me._doc_con_obl = value
				Me.SendPropertyChanged("doc_con_obl")
				Me.Ondoc_con_oblChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_doc_sdo_exc", DbType:="Money")>  _
	Public Property doc_sdo_exc() As System.Nullable(Of Decimal)
		Get
			Return Me._doc_sdo_exc
		End Get
		Set
			If (Me._doc_sdo_exc.Equals(value) = false) Then
				Me.Ondoc_sdo_excChanging(value)
				Me.SendPropertyChanging
				Me._doc_sdo_exc = value
				Me.SendPropertyChanged("doc_sdo_exc")
				Me.Ondoc_sdo_excChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_doc_cod_tmp", DbType:="VarChar(3)")>  _
	Public Property doc_cod_tmp() As String
		Get
			Return Me._doc_cod_tmp
		End Get
		Set
			If (String.Equals(Me._doc_cod_tmp, value) = false) Then
				Me.Ondoc_cod_tmpChanging(value)
				Me.SendPropertyChanging
				Me._doc_cod_tmp = value
				Me.SendPropertyChanged("doc_cod_tmp")
				Me.Ondoc_cod_tmpChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_doc_int_mor_dvg", DbType:="Money")>  _
	Public Property doc_int_mor_dvg() As System.Nullable(Of Decimal)
		Get
			Return Me._doc_int_mor_dvg
		End Get
		Set
			If (Me._doc_int_mor_dvg.Equals(value) = false) Then
				Me.Ondoc_int_mor_dvgChanging(value)
				Me.SendPropertyChanging
				Me._doc_int_mor_dvg = value
				Me.SendPropertyChanged("doc_int_mor_dvg")
				Me.Ondoc_int_mor_dvgChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_doc_INT_dvg_mor", DbType:="Money")>  _
	Public Property doc_INT_dvg_mor() As System.Nullable(Of Decimal)
		Get
			Return Me._doc_INT_dvg_mor
		End Get
		Set
			If (Me._doc_INT_dvg_mor.Equals(value) = false) Then
				Me.Ondoc_INT_dvg_morChanging(value)
				Me.SendPropertyChanging
				Me._doc_INT_dvg_mor = value
				Me.SendPropertyChanged("doc_INT_dvg_mor")
				Me.Ondoc_INT_dvg_morChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_doc_INT_cal_ant_mor", DbType:="Money")>  _
	Public Property doc_INT_cal_ant_mor() As System.Nullable(Of Decimal)
		Get
			Return Me._doc_INT_cal_ant_mor
		End Get
		Set
			If (Me._doc_INT_cal_ant_mor.Equals(value) = false) Then
				Me.Ondoc_INT_cal_ant_morChanging(value)
				Me.SendPropertyChanging
				Me._doc_INT_cal_ant_mor = value
				Me.SendPropertyChanged("doc_INT_cal_ant_mor")
				Me.Ondoc_INT_cal_ant_morChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_doc_ful_dvg_mor", DbType:="DateTime")>  _
	Public Property doc_ful_dvg_mor() As System.Nullable(Of Date)
		Get
			Return Me._doc_ful_dvg_mor
		End Get
		Set
			If (Me._doc_ful_dvg_mor.Equals(value) = false) Then
				Me.Ondoc_ful_dvg_morChanging(value)
				Me.SendPropertyChanging
				Me._doc_ful_dvg_mor = value
				Me.SendPropertyChanged("doc_ful_dvg_mor")
				Me.Ondoc_ful_dvg_morChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_doc_cod_tmp_old", DbType:="VarChar(3)")>  _
	Public Property doc_cod_tmp_old() As String
		Get
			Return Me._doc_cod_tmp_old
		End Get
		Set
			If (String.Equals(Me._doc_cod_tmp_old, value) = false) Then
				Me.Ondoc_cod_tmp_oldChanging(value)
				Me.SendPropertyChanging
				Me._doc_cod_tmp_old = value
				Me.SendPropertyChanged("doc_cod_tmp_old")
				Me.Ondoc_cod_tmp_oldChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_cal_def_ini_old", DbType:="VarChar(2)")>  _
	Public Property cal_def_ini_old() As String
		Get
			Return Me._cal_def_ini_old
		End Get
		Set
			If (String.Equals(Me._cal_def_ini_old, value) = false) Then
				Me.Oncal_def_ini_oldChanging(value)
				Me.SendPropertyChanging
				Me._cal_def_ini_old = value
				Me.SendPropertyChanged("cal_def_ini_old")
				Me.Oncal_def_ini_oldChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_doc_cod_tmp_ctr", DbType:="VarChar(3)")>  _
	Public Property doc_cod_tmp_ctr() As String
		Get
			Return Me._doc_cod_tmp_ctr
		End Get
		Set
			If (String.Equals(Me._doc_cod_tmp_ctr, value) = false) Then
				Me.Ondoc_cod_tmp_ctrChanging(value)
				Me.SendPropertyChanging
				Me._doc_cod_tmp_ctr = value
				Me.SendPropertyChanged("doc_cod_tmp_ctr")
				Me.Ondoc_cod_tmp_ctrChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="doc_cls_cxc_cls", Storage:="_cxc_cls", ThisKey:="id_doc", OtherKey:="id_doc")>  _
	Public Property cxc_cls() As EntitySet(Of cxc_cls)
		Get
			Return Me._cxc_cls
		End Get
		Set
			Me._cxc_cls.Assign(value)
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="doc_cls_cxp_cls", Storage:="_cxp_cls", ThisKey:="id_doc", OtherKey:="id_doc")>  _
	Public Property cxp_cls() As EntitySet(Of cxp_cls)
		Get
			Return Me._cxp_cls
		End Get
		Set
			Me._cxp_cls.Assign(value)
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="doc_cls_dct", Storage:="_dct", ThisKey:="id_doc", OtherKey:="id_doc")>  _
	Public Property dct() As EntitySet(Of dct)
		Get
			Return Me._dct
		End Get
		Set
			Me._dct.Assign(value)
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="doc_cls_doc_con_cls", Storage:="_doc_con_cls", ThisKey:="id_doc", OtherKey:="id_doc", IsUnique:=true, IsForeignKey:=false)>  _
	Public Property doc_con_cls() As doc_con_cls
		Get
			Return Me._doc_con_cls.Entity
		End Get
		Set
			Dim previousValue As doc_con_cls = Me._doc_con_cls.Entity
			If ((Object.Equals(previousValue, value) = false)  _
						OrElse (Me._doc_con_cls.HasLoadedOrAssignedValue = false)) Then
				Me.SendPropertyChanging
				If ((previousValue Is Nothing)  _
							= false) Then
					Me._doc_con_cls.Entity = Nothing
					previousValue.doc_cls = Nothing
				End If
				Me._doc_con_cls.Entity = value
				If (Object.Equals(value, Nothing) = false) Then
					value.doc_cls = Me
				End If
				Me.SendPropertyChanged("doc_con_cls")
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="doc_cls_doc_rea", Storage:="_doc_rea", ThisKey:="id_doc", OtherKey:="id_doc")>  _
	Public Property doc_rea() As EntitySet(Of doc_rea)
		Get
			Return Me._doc_rea
		End Get
		Set
			Me._doc_rea.Assign(value)
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="doc_cls_dor_cls", Storage:="_dor_cls", ThisKey:="id_doc", OtherKey:="id_doc")>  _
	Public Property dor_cls() As EntitySet(Of dor_cls)
		Get
			Return Me._dor_cls
		End Get
		Set
			Me._dor_cls.Assign(value)
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="doc_cls_dpg_cls", Storage:="_dpg_cls", ThisKey:="id_doc", OtherKey:="id_doc")>  _
	Public Property dpg_cls() As EntitySet(Of dpg_cls)
		Get
			Return Me._dpg_cls
		End Get
		Set
			Me._dpg_cls.Assign(value)
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="doc_cls_egr_sec_cls", Storage:="_egr_sec_cls", ThisKey:="id_doc", OtherKey:="id_doc")>  _
	Public Property egr_sec_cls() As EntitySet(Of egr_sec_cls)
		Get
			Return Me._egr_sec_cls
		End Get
		Set
			Me._egr_sec_cls.Assign(value)
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="doc_cls_gsn_cls", Storage:="_gsn_cls", ThisKey:="id_doc", OtherKey:="id_doc")>  _
	Public Property gsn_cls() As EntitySet(Of gsn_cls)
		Get
			Return Me._gsn_cls
		End Get
		Set
			Me._gsn_cls.Assign(value)
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="doc_cls_ing_sec_cls", Storage:="_ing_sec_cls", ThisKey:="id_doc", OtherKey:="id_doc")>  _
	Public Property ing_sec_cls() As EntitySet(Of ing_sec_cls)
		Get
			Return Me._ing_sec_cls
		End Get
		Set
			Me._ing_sec_cls.Assign(value)
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="doc_cls_nce_cls", Storage:="_nce_cls", ThisKey:="id_doc", OtherKey:="id_doc")>  _
	Public Property nce_cls() As EntitySet(Of nce_cls)
		Get
			Return Me._nce_cls
		End Get
		Set
			Me._nce_cls.Assign(value)
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="cco_cls_doc_cls", Storage:="_cco_cls", ThisKey:="id_cco", OtherKey:="id_cco", IsForeignKey:=true)>  _
	Public Property cco_cls() As cco_cls
		Get
			Return Me._cco_cls.Entity
		End Get
		Set
			Dim previousValue As cco_cls = Me._cco_cls.Entity
			If ((Object.Equals(previousValue, value) = false)  _
						OrElse (Me._cco_cls.HasLoadedOrAssignedValue = false)) Then
				Me.SendPropertyChanging
				If ((previousValue Is Nothing)  _
							= false) Then
					Me._cco_cls.Entity = Nothing
					previousValue.doc_cls.Remove(Me)
				End If
				Me._cco_cls.Entity = value
				If ((value Is Nothing)  _
							= false) Then
					value.doc_cls.Add(Me)
					Me._id_cco = value.id_cco
				Else
					Me._id_cco = CType(Nothing, Nullable(Of Integer))
				End If
				Me.SendPropertyChanged("cco_cls")
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="dsi_cls_doc_cls", Storage:="_dsi_cls", ThisKey:="id_dsi", OtherKey:="id_dsi", IsForeignKey:=true)>  _
	Public Property dsi_cls() As dsi_cls
		Get
			Return Me._dsi_cls.Entity
		End Get
		Set
			Dim previousValue As dsi_cls = Me._dsi_cls.Entity
			If ((Object.Equals(previousValue, value) = false)  _
						OrElse (Me._dsi_cls.HasLoadedOrAssignedValue = false)) Then
				Me.SendPropertyChanging
				If ((previousValue Is Nothing)  _
							= false) Then
					Me._dsi_cls.Entity = Nothing
					previousValue.doc_cls.Remove(Me)
				End If
				Me._dsi_cls.Entity = value
				If ((value Is Nothing)  _
							= false) Then
					value.doc_cls.Add(Me)
					Me._id_dsi = value.id_dsi
				Else
					Me._id_dsi = CType(Nothing, Decimal)
				End If
				Me.SendPropertyChanged("dsi_cls")
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="opo_cls_doc_cls", Storage:="_opo_cls", ThisKey:="id_opo", OtherKey:="id_opo", IsForeignKey:=true)>  _
	Public Property opo_cls() As opo_cls
		Get
			Return Me._opo_cls.Entity
		End Get
		Set
			Dim previousValue As opo_cls = Me._opo_cls.Entity
			If ((Object.Equals(previousValue, value) = false)  _
						OrElse (Me._opo_cls.HasLoadedOrAssignedValue = false)) Then
				Me.SendPropertyChanging
				If ((previousValue Is Nothing)  _
							= false) Then
					Me._opo_cls.Entity = Nothing
					previousValue.doc_cls.Remove(Me)
				End If
				Me._opo_cls.Entity = value
				If ((value Is Nothing)  _
							= false) Then
					value.doc_cls.Add(Me)
					Me._id_opo = value.id_opo
				Else
					Me._id_opo = CType(Nothing, Decimal)
				End If
				Me.SendPropertyChanged("opo_cls")
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="suc_cls_doc_cls", Storage:="_suc", ThisKey:="id_suc_cbz", OtherKey:="id_suc", IsForeignKey:=true)>  _
	Public Property suc() As suc_cls
		Get
			Return Me._suc.Entity
		End Get
		Set
			Dim previousValue As suc_cls = Me._suc.Entity
			If ((Object.Equals(previousValue, value) = false)  _
						OrElse (Me._suc.HasLoadedOrAssignedValue = false)) Then
				Me.SendPropertyChanging
				If ((previousValue Is Nothing)  _
							= false) Then
					Me._suc.Entity = Nothing
					previousValue.doc.Remove(Me)
				End If
				Me._suc.Entity = value
				If ((value Is Nothing)  _
							= false) Then
					value.doc.Add(Me)
					Me._id_suc_cbz = value.id_suc
				Else
					Me._id_suc_cbz = CType(Nothing, Nullable(Of Integer))
				End If
				Me.SendPropertyChanged("suc")
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="suc_cls_doc_cls1", Storage:="_suc_cls", ThisKey:="id_suc_rcd", OtherKey:="id_suc", IsForeignKey:=true)>  _
	Public Property suc_cls() As suc_cls
		Get
			Return Me._suc_cls.Entity
		End Get
		Set
			Dim previousValue As suc_cls = Me._suc_cls.Entity
			If ((Object.Equals(previousValue, value) = false)  _
						OrElse (Me._suc_cls.HasLoadedOrAssignedValue = false)) Then
				Me.SendPropertyChanging
				If ((previousValue Is Nothing)  _
							= false) Then
					Me._suc_cls.Entity = Nothing
					previousValue.doc_cls.Remove(Me)
				End If
				Me._suc_cls.Entity = value
				If ((value Is Nothing)  _
							= false) Then
					value.doc_cls.Add(Me)
					Me._id_suc_rcd = value.id_suc
				Else
					Me._id_suc_rcd = CType(Nothing, Nullable(Of Integer))
				End If
				Me.SendPropertyChanged("suc_cls")
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
	
	Private Sub attach_cxc_cls(ByVal entity As cxc_cls)
		Me.SendPropertyChanging
		entity.doc_cls = Me
	End Sub
	
	Private Sub detach_cxc_cls(ByVal entity As cxc_cls)
		Me.SendPropertyChanging
		entity.doc_cls = Nothing
	End Sub
	
	Private Sub attach_cxp_cls(ByVal entity As cxp_cls)
		Me.SendPropertyChanging
		entity.doc_cls = Me
	End Sub
	
	Private Sub detach_cxp_cls(ByVal entity As cxp_cls)
		Me.SendPropertyChanging
		entity.doc_cls = Nothing
	End Sub
	
	Private Sub attach_dct(ByVal entity As dct)
		Me.SendPropertyChanging
		entity.doc_cls = Me
	End Sub
	
	Private Sub detach_dct(ByVal entity As dct)
		Me.SendPropertyChanging
		entity.doc_cls = Nothing
	End Sub
	
	Private Sub attach_doc_rea(ByVal entity As doc_rea)
		Me.SendPropertyChanging
		entity.doc_cls = Me
	End Sub
	
	Private Sub detach_doc_rea(ByVal entity As doc_rea)
		Me.SendPropertyChanging
		entity.doc_cls = Nothing
	End Sub
	
	Private Sub attach_dor_cls(ByVal entity As dor_cls)
		Me.SendPropertyChanging
		entity.doc_cls = Me
	End Sub
	
	Private Sub detach_dor_cls(ByVal entity As dor_cls)
		Me.SendPropertyChanging
		entity.doc_cls = Nothing
	End Sub
	
	Private Sub attach_dpg_cls(ByVal entity As dpg_cls)
		Me.SendPropertyChanging
		entity.doc_cls = Me
	End Sub
	
	Private Sub detach_dpg_cls(ByVal entity As dpg_cls)
		Me.SendPropertyChanging
		entity.doc_cls = Nothing
	End Sub
	
	Private Sub attach_egr_sec_cls(ByVal entity As egr_sec_cls)
		Me.SendPropertyChanging
		entity.doc_cls = Me
	End Sub
	
	Private Sub detach_egr_sec_cls(ByVal entity As egr_sec_cls)
		Me.SendPropertyChanging
		entity.doc_cls = Nothing
	End Sub
	
	Private Sub attach_gsn_cls(ByVal entity As gsn_cls)
		Me.SendPropertyChanging
		entity.doc_cls = Me
	End Sub
	
	Private Sub detach_gsn_cls(ByVal entity As gsn_cls)
		Me.SendPropertyChanging
		entity.doc_cls = Nothing
	End Sub
	
	Private Sub attach_ing_sec_cls(ByVal entity As ing_sec_cls)
		Me.SendPropertyChanging
		entity.doc_cls = Me
	End Sub
	
	Private Sub detach_ing_sec_cls(ByVal entity As ing_sec_cls)
		Me.SendPropertyChanging
		entity.doc_cls = Nothing
	End Sub
	
	Private Sub attach_nce_cls(ByVal entity As nce_cls)
		Me.SendPropertyChanging
		entity.doc_cls = Me
	End Sub
	
	Private Sub detach_nce_cls(ByVal entity As nce_cls)
		Me.SendPropertyChanging
		entity.doc_cls = Nothing
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.doc_com")>  _
Partial Public Class doc_com_cls
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _id_doc_com As Integer
	
	Private _des_doc_com As String
	
	Private _est_doc_com As System.Nullable(Of Integer)
	
	Private _id_tipo As System.Nullable(Of Integer)
	
	Private _dxd_cls As EntitySet(Of dxd_cls)
	
    #Region "Definiciones de métodos de extensibilidad"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub Onid_doc_comChanging(value As Integer)
    End Sub
    Partial Private Sub Onid_doc_comChanged()
    End Sub
    Partial Private Sub Ondes_doc_comChanging(value As String)
    End Sub
    Partial Private Sub Ondes_doc_comChanged()
    End Sub
    Partial Private Sub Onest_doc_comChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub Onest_doc_comChanged()
    End Sub
    Partial Private Sub Onid_tipoChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub Onid_tipoChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		Me._dxd_cls = New EntitySet(Of dxd_cls)(AddressOf Me.attach_dxd_cls, AddressOf Me.detach_dxd_cls)
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_id_doc_com", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property id_doc_com() As Integer
		Get
			Return Me._id_doc_com
		End Get
		Set
			If ((Me._id_doc_com = value)  _
						= false) Then
				Me.Onid_doc_comChanging(value)
				Me.SendPropertyChanging
				Me._id_doc_com = value
				Me.SendPropertyChanged("id_doc_com")
				Me.Onid_doc_comChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_des_doc_com", DbType:="VarChar(50)")>  _
	Public Property des_doc_com() As String
		Get
			Return Me._des_doc_com
		End Get
		Set
			If (String.Equals(Me._des_doc_com, value) = false) Then
				Me.Ondes_doc_comChanging(value)
				Me.SendPropertyChanging
				Me._des_doc_com = value
				Me.SendPropertyChanged("des_doc_com")
				Me.Ondes_doc_comChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_est_doc_com", DbType:="Int")>  _
	Public Property est_doc_com() As System.Nullable(Of Integer)
		Get
			Return Me._est_doc_com
		End Get
		Set
			If (Me._est_doc_com.Equals(value) = false) Then
				Me.Onest_doc_comChanging(value)
				Me.SendPropertyChanging
				Me._est_doc_com = value
				Me.SendPropertyChanged("est_doc_com")
				Me.Onest_doc_comChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_id_tipo", DbType:="Int")>  _
	Public Property id_tipo() As System.Nullable(Of Integer)
		Get
			Return Me._id_tipo
		End Get
		Set
			If (Me._id_tipo.Equals(value) = false) Then
				Me.Onid_tipoChanging(value)
				Me.SendPropertyChanging
				Me._id_tipo = value
				Me.SendPropertyChanged("id_tipo")
				Me.Onid_tipoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="doc_com_cls_dxd_cls", Storage:="_dxd_cls", ThisKey:="id_doc_com", OtherKey:="id_doc_com")>  _
	Public Property dxd_cls() As EntitySet(Of dxd_cls)
		Get
			Return Me._dxd_cls
		End Get
		Set
			Me._dxd_cls.Assign(value)
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
	
	Private Sub attach_dxd_cls(ByVal entity As dxd_cls)
		Me.SendPropertyChanging
		entity.doc_com_cls = Me
	End Sub
	
	Private Sub detach_dxd_cls(ByVal entity As dxd_cls)
		Me.SendPropertyChanging
		entity.doc_com_cls = Nothing
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.doc_con")>  _
Partial Public Class doc_con_cls
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _id_doc As Decimal
	
	Private _cod_emp As String
	
	Private _ofi_cin As String
	
	Private _dig_ver_uno As String
	
	Private _pro_duc As String
	
	Private _con_tra As String
	
	Private _dig_ver_doc As String
	
	Private _doc_cls As EntityRef(Of doc_cls)
	
    #Region "Definiciones de métodos de extensibilidad"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub Onid_docChanging(value As Decimal)
    End Sub
    Partial Private Sub Onid_docChanged()
    End Sub
    Partial Private Sub Oncod_empChanging(value As String)
    End Sub
    Partial Private Sub Oncod_empChanged()
    End Sub
    Partial Private Sub Onofi_cinChanging(value As String)
    End Sub
    Partial Private Sub Onofi_cinChanged()
    End Sub
    Partial Private Sub Ondig_ver_unoChanging(value As String)
    End Sub
    Partial Private Sub Ondig_ver_unoChanged()
    End Sub
    Partial Private Sub Onpro_ducChanging(value As String)
    End Sub
    Partial Private Sub Onpro_ducChanged()
    End Sub
    Partial Private Sub Oncon_traChanging(value As String)
    End Sub
    Partial Private Sub Oncon_traChanged()
    End Sub
    Partial Private Sub Ondig_ver_docChanging(value As String)
    End Sub
    Partial Private Sub Ondig_ver_docChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		Me._doc_cls = CType(Nothing, EntityRef(Of doc_cls))
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_id_doc", DbType:="Decimal(18,0) NOT NULL", IsPrimaryKey:=true)>  _
	Public Property id_doc() As Decimal
		Get
			Return Me._id_doc
		End Get
		Set
			If ((Me._id_doc = value)  _
						= false) Then
				If Me._doc_cls.HasLoadedOrAssignedValue Then
					Throw New System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException()
				End If
				Me.Onid_docChanging(value)
				Me.SendPropertyChanging
				Me._id_doc = value
				Me.SendPropertyChanged("id_doc")
				Me.Onid_docChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_cod_emp", DbType:="VarChar(4)")>  _
	Public Property cod_emp() As String
		Get
			Return Me._cod_emp
		End Get
		Set
			If (String.Equals(Me._cod_emp, value) = false) Then
				Me.Oncod_empChanging(value)
				Me.SendPropertyChanging
				Me._cod_emp = value
				Me.SendPropertyChanged("cod_emp")
				Me.Oncod_empChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ofi_cin", DbType:="VarChar(4)")>  _
	Public Property ofi_cin() As String
		Get
			Return Me._ofi_cin
		End Get
		Set
			If (String.Equals(Me._ofi_cin, value) = false) Then
				Me.Onofi_cinChanging(value)
				Me.SendPropertyChanging
				Me._ofi_cin = value
				Me.SendPropertyChanged("ofi_cin")
				Me.Onofi_cinChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_dig_ver_uno", DbType:="VarChar(2)")>  _
	Public Property dig_ver_uno() As String
		Get
			Return Me._dig_ver_uno
		End Get
		Set
			If (String.Equals(Me._dig_ver_uno, value) = false) Then
				Me.Ondig_ver_unoChanging(value)
				Me.SendPropertyChanging
				Me._dig_ver_uno = value
				Me.SendPropertyChanged("dig_ver_uno")
				Me.Ondig_ver_unoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pro_duc", DbType:="VarChar(2)")>  _
	Public Property pro_duc() As String
		Get
			Return Me._pro_duc
		End Get
		Set
			If (String.Equals(Me._pro_duc, value) = false) Then
				Me.Onpro_ducChanging(value)
				Me.SendPropertyChanging
				Me._pro_duc = value
				Me.SendPropertyChanged("pro_duc")
				Me.Onpro_ducChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_con_tra", DbType:="VarChar(7)")>  _
	Public Property con_tra() As String
		Get
			Return Me._con_tra
		End Get
		Set
			If (String.Equals(Me._con_tra, value) = false) Then
				Me.Oncon_traChanging(value)
				Me.SendPropertyChanging
				Me._con_tra = value
				Me.SendPropertyChanged("con_tra")
				Me.Oncon_traChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_dig_ver_doc", DbType:="VarChar(1)")>  _
	Public Property dig_ver_doc() As String
		Get
			Return Me._dig_ver_doc
		End Get
		Set
			If (String.Equals(Me._dig_ver_doc, value) = false) Then
				Me.Ondig_ver_docChanging(value)
				Me.SendPropertyChanging
				Me._dig_ver_doc = value
				Me.SendPropertyChanged("dig_ver_doc")
				Me.Ondig_ver_docChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="doc_cls_doc_con_cls", Storage:="_doc_cls", ThisKey:="id_doc", OtherKey:="id_doc", IsForeignKey:=true)>  _
	Public Property doc_cls() As doc_cls
		Get
			Return Me._doc_cls.Entity
		End Get
		Set
			Dim previousValue As doc_cls = Me._doc_cls.Entity
			If ((Object.Equals(previousValue, value) = false)  _
						OrElse (Me._doc_cls.HasLoadedOrAssignedValue = false)) Then
				Me.SendPropertyChanging
				If ((previousValue Is Nothing)  _
							= false) Then
					Me._doc_cls.Entity = Nothing
					previousValue.doc_con_cls = Nothing
				End If
				Me._doc_cls.Entity = value
				If ((value Is Nothing)  _
							= false) Then
					value.doc_con_cls = Me
					Me._id_doc = value.id_doc
				Else
					Me._id_doc = CType(Nothing, Decimal)
				End If
				Me.SendPropertyChanged("doc_cls")
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.doc_ctb")>  _
Partial Public Class doc_ctb_cls
	
	Private _id_doc As Integer
	
	Private _id_p_0301 As String
	
	Private _fec_ctb As Date
	
	Private _doc_fec_det As System.Nullable(Of Date)
	
	Public Sub New()
		MyBase.New
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_id_doc", DbType:="Int NOT NULL")>  _
	Public Property id_doc() As Integer
		Get
			Return Me._id_doc
		End Get
		Set
			If ((Me._id_doc = value)  _
						= false) Then
				Me._id_doc = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_id_p_0301", DbType:="Char(50) NOT NULL", CanBeNull:=false)>  _
	Public Property id_p_0301() As String
		Get
			Return Me._id_p_0301
		End Get
		Set
			If (String.Equals(Me._id_p_0301, value) = false) Then
				Me._id_p_0301 = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_fec_ctb", DbType:="DateTime NOT NULL")>  _
	Public Property fec_ctb() As Date
		Get
			Return Me._fec_ctb
		End Get
		Set
			If ((Me._fec_ctb = value)  _
						= false) Then
				Me._fec_ctb = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_doc_fec_det", DbType:="DateTime")>  _
	Public Property doc_fec_det() As System.Nullable(Of Date)
		Get
			Return Me._doc_fec_det
		End Get
		Set
			If (Me._doc_fec_det.Equals(value) = false) Then
				Me._doc_fec_det = value
			End If
		End Set
	End Property
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.doc_dig_ope")>  _
Partial Public Class doc_dig_ope_cls
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _doc_dig_id As Integer
	
	Private _id_ope As System.Nullable(Of Decimal)
	
	Private _doc_dig_desc As String
	
	Private _doc_dig_file As System.Data.Linq.Binary
	
	Private _ope_cls As EntityRef(Of ope_cls)
	
    #Region "Definiciones de métodos de extensibilidad"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub Ondoc_dig_idChanging(value As Integer)
    End Sub
    Partial Private Sub Ondoc_dig_idChanged()
    End Sub
    Partial Private Sub Onid_opeChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub Onid_opeChanged()
    End Sub
    Partial Private Sub Ondoc_dig_descChanging(value As String)
    End Sub
    Partial Private Sub Ondoc_dig_descChanged()
    End Sub
    Partial Private Sub Ondoc_dig_fileChanging(value As System.Data.Linq.Binary)
    End Sub
    Partial Private Sub Ondoc_dig_fileChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		Me._ope_cls = CType(Nothing, EntityRef(Of ope_cls))
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_doc_dig_id", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property doc_dig_id() As Integer
		Get
			Return Me._doc_dig_id
		End Get
		Set
			If ((Me._doc_dig_id = value)  _
						= false) Then
				Me.Ondoc_dig_idChanging(value)
				Me.SendPropertyChanging
				Me._doc_dig_id = value
				Me.SendPropertyChanged("doc_dig_id")
				Me.Ondoc_dig_idChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_id_ope", DbType:="Decimal(10,0)")>  _
	Public Property id_ope() As System.Nullable(Of Decimal)
		Get
			Return Me._id_ope
		End Get
		Set
			If (Me._id_ope.Equals(value) = false) Then
				If Me._ope_cls.HasLoadedOrAssignedValue Then
					Throw New System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException()
				End If
				Me.Onid_opeChanging(value)
				Me.SendPropertyChanging
				Me._id_ope = value
				Me.SendPropertyChanged("id_ope")
				Me.Onid_opeChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_doc_dig_desc", DbType:="VarChar(100)")>  _
	Public Property doc_dig_desc() As String
		Get
			Return Me._doc_dig_desc
		End Get
		Set
			If (String.Equals(Me._doc_dig_desc, value) = false) Then
				Me.Ondoc_dig_descChanging(value)
				Me.SendPropertyChanging
				Me._doc_dig_desc = value
				Me.SendPropertyChanged("doc_dig_desc")
				Me.Ondoc_dig_descChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_doc_dig_file", DbType:="Image", CanBeNull:=true, UpdateCheck:=UpdateCheck.Never)>  _
	Public Property doc_dig_file() As System.Data.Linq.Binary
		Get
			Return Me._doc_dig_file
		End Get
		Set
			If (Object.Equals(Me._doc_dig_file, value) = false) Then
				Me.Ondoc_dig_fileChanging(value)
				Me.SendPropertyChanging
				Me._doc_dig_file = value
				Me.SendPropertyChanged("doc_dig_file")
				Me.Ondoc_dig_fileChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="ope_cls_doc_dig_ope_cls", Storage:="_ope_cls", ThisKey:="id_ope", OtherKey:="id_ope", IsForeignKey:=true)>  _
	Public Property ope_cls() As ope_cls
		Get
			Return Me._ope_cls.Entity
		End Get
		Set
			Dim previousValue As ope_cls = Me._ope_cls.Entity
			If ((Object.Equals(previousValue, value) = false)  _
						OrElse (Me._ope_cls.HasLoadedOrAssignedValue = false)) Then
				Me.SendPropertyChanging
				If ((previousValue Is Nothing)  _
							= false) Then
					Me._ope_cls.Entity = Nothing
					previousValue.doc_dig_ope_cls.Remove(Me)
				End If
				Me._ope_cls.Entity = value
				If ((value Is Nothing)  _
							= false) Then
					value.doc_dig_ope_cls.Add(Me)
					Me._id_ope = value.id_ope
				Else
					Me._id_ope = CType(Nothing, Nullable(Of Decimal))
				End If
				Me.SendPropertyChanged("ope_cls")
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.doc_est")>  _
Partial Public Class doc_est_cls
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _id_doc_est As Decimal
	
	Private _id_doc As Decimal
	
	Private _id_P_0011 As System.Nullable(Of Integer)
	
	Private _id_P_0011_con As System.Nullable(Of Integer)
	
	Private _mto_no_ant As System.Nullable(Of Decimal)
	
	Private _mto_no_ant_ant As System.Nullable(Of Decimal)
	
	Private _doc_mto As System.Nullable(Of Decimal)
	
	Private _doc_mto_ant As System.Nullable(Of Decimal)
	
	Private _doc_sdo_cli As System.Nullable(Of Decimal)
	
	Private _doc_sdo_cli_ant As System.Nullable(Of Decimal)
	
	Private _doc_sdo_ddr As System.Nullable(Of Decimal)
	
	Private _doc_sdo_ddr_ant As System.Nullable(Of Decimal)
	
	Private _doc_mto_dev As System.Nullable(Of Decimal)
	
	Private _doc_mto_dev_ant As System.Nullable(Of Decimal)
	
	Private _doc_fec_pro As System.Nullable(Of Date)
	
	Private _doc_mto_dev_sus As System.Nullable(Of Decimal)
	
	Private _doc_mto_sus_dev As System.Nullable(Of Decimal)
	
	Private _id_P_0011_car_nor_ant As System.Nullable(Of Integer)
	
    #Region "Definiciones de métodos de extensibilidad"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub Onid_doc_estChanging(value As Decimal)
    End Sub
    Partial Private Sub Onid_doc_estChanged()
    End Sub
    Partial Private Sub Onid_docChanging(value As Decimal)
    End Sub
    Partial Private Sub Onid_docChanged()
    End Sub
    Partial Private Sub Onid_P_0011Changing(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub Onid_P_0011Changed()
    End Sub
    Partial Private Sub Onid_P_0011_conChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub Onid_P_0011_conChanged()
    End Sub
    Partial Private Sub Onmto_no_antChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub Onmto_no_antChanged()
    End Sub
    Partial Private Sub Onmto_no_ant_antChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub Onmto_no_ant_antChanged()
    End Sub
    Partial Private Sub Ondoc_mtoChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub Ondoc_mtoChanged()
    End Sub
    Partial Private Sub Ondoc_mto_antChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub Ondoc_mto_antChanged()
    End Sub
    Partial Private Sub Ondoc_sdo_cliChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub Ondoc_sdo_cliChanged()
    End Sub
    Partial Private Sub Ondoc_sdo_cli_antChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub Ondoc_sdo_cli_antChanged()
    End Sub
    Partial Private Sub Ondoc_sdo_ddrChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub Ondoc_sdo_ddrChanged()
    End Sub
    Partial Private Sub Ondoc_sdo_ddr_antChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub Ondoc_sdo_ddr_antChanged()
    End Sub
    Partial Private Sub Ondoc_mto_devChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub Ondoc_mto_devChanged()
    End Sub
    Partial Private Sub Ondoc_mto_dev_antChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub Ondoc_mto_dev_antChanged()
    End Sub
    Partial Private Sub Ondoc_fec_proChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub Ondoc_fec_proChanged()
    End Sub
    Partial Private Sub Ondoc_mto_dev_susChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub Ondoc_mto_dev_susChanged()
    End Sub
    Partial Private Sub Ondoc_mto_sus_devChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub Ondoc_mto_sus_devChanged()
    End Sub
    Partial Private Sub Onid_P_0011_car_nor_antChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub Onid_P_0011_car_nor_antChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_id_doc_est", AutoSync:=AutoSync.OnInsert, DbType:="Decimal(18,0) NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property id_doc_est() As Decimal
		Get
			Return Me._id_doc_est
		End Get
		Set
			If ((Me._id_doc_est = value)  _
						= false) Then
				Me.Onid_doc_estChanging(value)
				Me.SendPropertyChanging
				Me._id_doc_est = value
				Me.SendPropertyChanged("id_doc_est")
				Me.Onid_doc_estChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_id_doc", DbType:="Decimal(18,0) NOT NULL")>  _
	Public Property id_doc() As Decimal
		Get
			Return Me._id_doc
		End Get
		Set
			If ((Me._id_doc = value)  _
						= false) Then
				Me.Onid_docChanging(value)
				Me.SendPropertyChanging
				Me._id_doc = value
				Me.SendPropertyChanged("id_doc")
				Me.Onid_docChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_id_P_0011", DbType:="Int")>  _
	Public Property id_P_0011() As System.Nullable(Of Integer)
		Get
			Return Me._id_P_0011
		End Get
		Set
			If (Me._id_P_0011.Equals(value) = false) Then
				Me.Onid_P_0011Changing(value)
				Me.SendPropertyChanging
				Me._id_P_0011 = value
				Me.SendPropertyChanged("id_P_0011")
				Me.Onid_P_0011Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_id_P_0011_con", DbType:="Int")>  _
	Public Property id_P_0011_con() As System.Nullable(Of Integer)
		Get
			Return Me._id_P_0011_con
		End Get
		Set
			If (Me._id_P_0011_con.Equals(value) = false) Then
				Me.Onid_P_0011_conChanging(value)
				Me.SendPropertyChanging
				Me._id_P_0011_con = value
				Me.SendPropertyChanged("id_P_0011_con")
				Me.Onid_P_0011_conChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_mto_no_ant", DbType:="Money")>  _
	Public Property mto_no_ant() As System.Nullable(Of Decimal)
		Get
			Return Me._mto_no_ant
		End Get
		Set
			If (Me._mto_no_ant.Equals(value) = false) Then
				Me.Onmto_no_antChanging(value)
				Me.SendPropertyChanging
				Me._mto_no_ant = value
				Me.SendPropertyChanged("mto_no_ant")
				Me.Onmto_no_antChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_mto_no_ant_ant", DbType:="Money")>  _
	Public Property mto_no_ant_ant() As System.Nullable(Of Decimal)
		Get
			Return Me._mto_no_ant_ant
		End Get
		Set
			If (Me._mto_no_ant_ant.Equals(value) = false) Then
				Me.Onmto_no_ant_antChanging(value)
				Me.SendPropertyChanging
				Me._mto_no_ant_ant = value
				Me.SendPropertyChanged("mto_no_ant_ant")
				Me.Onmto_no_ant_antChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_doc_mto", DbType:="Money")>  _
	Public Property doc_mto() As System.Nullable(Of Decimal)
		Get
			Return Me._doc_mto
		End Get
		Set
			If (Me._doc_mto.Equals(value) = false) Then
				Me.Ondoc_mtoChanging(value)
				Me.SendPropertyChanging
				Me._doc_mto = value
				Me.SendPropertyChanged("doc_mto")
				Me.Ondoc_mtoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_doc_mto_ant", DbType:="Money")>  _
	Public Property doc_mto_ant() As System.Nullable(Of Decimal)
		Get
			Return Me._doc_mto_ant
		End Get
		Set
			If (Me._doc_mto_ant.Equals(value) = false) Then
				Me.Ondoc_mto_antChanging(value)
				Me.SendPropertyChanging
				Me._doc_mto_ant = value
				Me.SendPropertyChanged("doc_mto_ant")
				Me.Ondoc_mto_antChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_doc_sdo_cli", DbType:="Money")>  _
	Public Property doc_sdo_cli() As System.Nullable(Of Decimal)
		Get
			Return Me._doc_sdo_cli
		End Get
		Set
			If (Me._doc_sdo_cli.Equals(value) = false) Then
				Me.Ondoc_sdo_cliChanging(value)
				Me.SendPropertyChanging
				Me._doc_sdo_cli = value
				Me.SendPropertyChanged("doc_sdo_cli")
				Me.Ondoc_sdo_cliChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_doc_sdo_cli_ant", DbType:="Money")>  _
	Public Property doc_sdo_cli_ant() As System.Nullable(Of Decimal)
		Get
			Return Me._doc_sdo_cli_ant
		End Get
		Set
			If (Me._doc_sdo_cli_ant.Equals(value) = false) Then
				Me.Ondoc_sdo_cli_antChanging(value)
				Me.SendPropertyChanging
				Me._doc_sdo_cli_ant = value
				Me.SendPropertyChanged("doc_sdo_cli_ant")
				Me.Ondoc_sdo_cli_antChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_doc_sdo_ddr", DbType:="Money")>  _
	Public Property doc_sdo_ddr() As System.Nullable(Of Decimal)
		Get
			Return Me._doc_sdo_ddr
		End Get
		Set
			If (Me._doc_sdo_ddr.Equals(value) = false) Then
				Me.Ondoc_sdo_ddrChanging(value)
				Me.SendPropertyChanging
				Me._doc_sdo_ddr = value
				Me.SendPropertyChanged("doc_sdo_ddr")
				Me.Ondoc_sdo_ddrChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_doc_sdo_ddr_ant", DbType:="Money")>  _
	Public Property doc_sdo_ddr_ant() As System.Nullable(Of Decimal)
		Get
			Return Me._doc_sdo_ddr_ant
		End Get
		Set
			If (Me._doc_sdo_ddr_ant.Equals(value) = false) Then
				Me.Ondoc_sdo_ddr_antChanging(value)
				Me.SendPropertyChanging
				Me._doc_sdo_ddr_ant = value
				Me.SendPropertyChanged("doc_sdo_ddr_ant")
				Me.Ondoc_sdo_ddr_antChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_doc_mto_dev", DbType:="Money")>  _
	Public Property doc_mto_dev() As System.Nullable(Of Decimal)
		Get
			Return Me._doc_mto_dev
		End Get
		Set
			If (Me._doc_mto_dev.Equals(value) = false) Then
				Me.Ondoc_mto_devChanging(value)
				Me.SendPropertyChanging
				Me._doc_mto_dev = value
				Me.SendPropertyChanged("doc_mto_dev")
				Me.Ondoc_mto_devChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_doc_mto_dev_ant", DbType:="Money")>  _
	Public Property doc_mto_dev_ant() As System.Nullable(Of Decimal)
		Get
			Return Me._doc_mto_dev_ant
		End Get
		Set
			If (Me._doc_mto_dev_ant.Equals(value) = false) Then
				Me.Ondoc_mto_dev_antChanging(value)
				Me.SendPropertyChanging
				Me._doc_mto_dev_ant = value
				Me.SendPropertyChanged("doc_mto_dev_ant")
				Me.Ondoc_mto_dev_antChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_doc_fec_pro", DbType:="DateTime")>  _
	Public Property doc_fec_pro() As System.Nullable(Of Date)
		Get
			Return Me._doc_fec_pro
		End Get
		Set
			If (Me._doc_fec_pro.Equals(value) = false) Then
				Me.Ondoc_fec_proChanging(value)
				Me.SendPropertyChanging
				Me._doc_fec_pro = value
				Me.SendPropertyChanged("doc_fec_pro")
				Me.Ondoc_fec_proChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_doc_mto_dev_sus", DbType:="Money")>  _
	Public Property doc_mto_dev_sus() As System.Nullable(Of Decimal)
		Get
			Return Me._doc_mto_dev_sus
		End Get
		Set
			If (Me._doc_mto_dev_sus.Equals(value) = false) Then
				Me.Ondoc_mto_dev_susChanging(value)
				Me.SendPropertyChanging
				Me._doc_mto_dev_sus = value
				Me.SendPropertyChanged("doc_mto_dev_sus")
				Me.Ondoc_mto_dev_susChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_doc_mto_sus_dev", DbType:="Money")>  _
	Public Property doc_mto_sus_dev() As System.Nullable(Of Decimal)
		Get
			Return Me._doc_mto_sus_dev
		End Get
		Set
			If (Me._doc_mto_sus_dev.Equals(value) = false) Then
				Me.Ondoc_mto_sus_devChanging(value)
				Me.SendPropertyChanging
				Me._doc_mto_sus_dev = value
				Me.SendPropertyChanged("doc_mto_sus_dev")
				Me.Ondoc_mto_sus_devChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_id_P_0011_car_nor_ant", DbType:="Int")>  _
	Public Property id_P_0011_car_nor_ant() As System.Nullable(Of Integer)
		Get
			Return Me._id_P_0011_car_nor_ant
		End Get
		Set
			If (Me._id_P_0011_car_nor_ant.Equals(value) = false) Then
				Me.Onid_P_0011_car_nor_antChanging(value)
				Me.SendPropertyChanging
				Me._id_P_0011_car_nor_ant = value
				Me.SendPropertyChanged("id_P_0011_car_nor_ant")
				Me.Onid_P_0011_car_nor_antChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.doc_rea")>  _
Partial Public Class doc_rea
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _id_doc_rea As Decimal
	
	Private _id_opo As System.Nullable(Of Decimal)
	
	Private _id_doc As System.Nullable(Of Decimal)
	
	Private _id_P_0011 As System.Nullable(Of Integer)
	
	Private _doc_rea_mon As Decimal
	
	Private _rea_doc_mto_fin As Decimal
	
	Private _rea_doc_mto_no_fin As Decimal
	
	Private _doc_sdo_cli_hoy As System.Nullable(Of Decimal)
	
	Private _doc_cls As EntityRef(Of doc_cls)
	
	Private _opo_cls As EntityRef(Of opo_cls)
	
	Private _P_0011_cls As EntityRef(Of P_0011_cls)
	
    #Region "Definiciones de métodos de extensibilidad"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub Onid_doc_reaChanging(value As Decimal)
    End Sub
    Partial Private Sub Onid_doc_reaChanged()
    End Sub
    Partial Private Sub Onid_opoChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub Onid_opoChanged()
    End Sub
    Partial Private Sub Onid_docChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub Onid_docChanged()
    End Sub
    Partial Private Sub Onid_P_0011Changing(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub Onid_P_0011Changed()
    End Sub
    Partial Private Sub Ondoc_rea_monChanging(value As Decimal)
    End Sub
    Partial Private Sub Ondoc_rea_monChanged()
    End Sub
    Partial Private Sub Onrea_doc_mto_finChanging(value As Decimal)
    End Sub
    Partial Private Sub Onrea_doc_mto_finChanged()
    End Sub
    Partial Private Sub Onrea_doc_mto_no_finChanging(value As Decimal)
    End Sub
    Partial Private Sub Onrea_doc_mto_no_finChanged()
    End Sub
    Partial Private Sub Ondoc_sdo_cli_hoyChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub Ondoc_sdo_cli_hoyChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		Me._doc_cls = CType(Nothing, EntityRef(Of doc_cls))
		Me._opo_cls = CType(Nothing, EntityRef(Of opo_cls))
		Me._P_0011_cls = CType(Nothing, EntityRef(Of P_0011_cls))
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_id_doc_rea", AutoSync:=AutoSync.OnInsert, DbType:="Decimal(18,0) NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property id_doc_rea() As Decimal
		Get
			Return Me._id_doc_rea
		End Get
		Set
			If ((Me._id_doc_rea = value)  _
						= false) Then
				Me.Onid_doc_reaChanging(value)
				Me.SendPropertyChanging
				Me._id_doc_rea = value
				Me.SendPropertyChanged("id_doc_rea")
				Me.Onid_doc_reaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_id_opo", DbType:="Decimal(10,0)")>  _
	Public Property id_opo() As System.Nullable(Of Decimal)
		Get
			Return Me._id_opo
		End Get
		Set
			If (Me._id_opo.Equals(value) = false) Then
				If Me._opo_cls.HasLoadedOrAssignedValue Then
					Throw New System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException()
				End If
				Me.Onid_opoChanging(value)
				Me.SendPropertyChanging
				Me._id_opo = value
				Me.SendPropertyChanged("id_opo")
				Me.Onid_opoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_id_doc", DbType:="Decimal(18,0)")>  _
	Public Property id_doc() As System.Nullable(Of Decimal)
		Get
			Return Me._id_doc
		End Get
		Set
			If (Me._id_doc.Equals(value) = false) Then
				If Me._doc_cls.HasLoadedOrAssignedValue Then
					Throw New System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException()
				End If
				Me.Onid_docChanging(value)
				Me.SendPropertyChanging
				Me._id_doc = value
				Me.SendPropertyChanged("id_doc")
				Me.Onid_docChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_id_P_0011", DbType:="Int")>  _
	Public Property id_P_0011() As System.Nullable(Of Integer)
		Get
			Return Me._id_P_0011
		End Get
		Set
			If (Me._id_P_0011.Equals(value) = false) Then
				If Me._P_0011_cls.HasLoadedOrAssignedValue Then
					Throw New System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException()
				End If
				Me.Onid_P_0011Changing(value)
				Me.SendPropertyChanging
				Me._id_P_0011 = value
				Me.SendPropertyChanged("id_P_0011")
				Me.Onid_P_0011Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_doc_rea_mon", DbType:="Money NOT NULL")>  _
	Public Property doc_rea_mon() As Decimal
		Get
			Return Me._doc_rea_mon
		End Get
		Set
			If ((Me._doc_rea_mon = value)  _
						= false) Then
				Me.Ondoc_rea_monChanging(value)
				Me.SendPropertyChanging
				Me._doc_rea_mon = value
				Me.SendPropertyChanged("doc_rea_mon")
				Me.Ondoc_rea_monChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_rea_doc_mto_fin", DbType:="Money NOT NULL")>  _
	Public Property rea_doc_mto_fin() As Decimal
		Get
			Return Me._rea_doc_mto_fin
		End Get
		Set
			If ((Me._rea_doc_mto_fin = value)  _
						= false) Then
				Me.Onrea_doc_mto_finChanging(value)
				Me.SendPropertyChanging
				Me._rea_doc_mto_fin = value
				Me.SendPropertyChanged("rea_doc_mto_fin")
				Me.Onrea_doc_mto_finChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_rea_doc_mto_no_fin", DbType:="Money NOT NULL")>  _
	Public Property rea_doc_mto_no_fin() As Decimal
		Get
			Return Me._rea_doc_mto_no_fin
		End Get
		Set
			If ((Me._rea_doc_mto_no_fin = value)  _
						= false) Then
				Me.Onrea_doc_mto_no_finChanging(value)
				Me.SendPropertyChanging
				Me._rea_doc_mto_no_fin = value
				Me.SendPropertyChanged("rea_doc_mto_no_fin")
				Me.Onrea_doc_mto_no_finChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_doc_sdo_cli_hoy", DbType:="Money")>  _
	Public Property doc_sdo_cli_hoy() As System.Nullable(Of Decimal)
		Get
			Return Me._doc_sdo_cli_hoy
		End Get
		Set
			If (Me._doc_sdo_cli_hoy.Equals(value) = false) Then
				Me.Ondoc_sdo_cli_hoyChanging(value)
				Me.SendPropertyChanging
				Me._doc_sdo_cli_hoy = value
				Me.SendPropertyChanged("doc_sdo_cli_hoy")
				Me.Ondoc_sdo_cli_hoyChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="doc_cls_doc_rea", Storage:="_doc_cls", ThisKey:="id_doc", OtherKey:="id_doc", IsForeignKey:=true)>  _
	Public Property doc_cls() As doc_cls
		Get
			Return Me._doc_cls.Entity
		End Get
		Set
			Dim previousValue As doc_cls = Me._doc_cls.Entity
			If ((Object.Equals(previousValue, value) = false)  _
						OrElse (Me._doc_cls.HasLoadedOrAssignedValue = false)) Then
				Me.SendPropertyChanging
				If ((previousValue Is Nothing)  _
							= false) Then
					Me._doc_cls.Entity = Nothing
					previousValue.doc_rea.Remove(Me)
				End If
				Me._doc_cls.Entity = value
				If ((value Is Nothing)  _
							= false) Then
					value.doc_rea.Add(Me)
					Me._id_doc = value.id_doc
				Else
					Me._id_doc = CType(Nothing, Nullable(Of Decimal))
				End If
				Me.SendPropertyChanged("doc_cls")
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="opo_cls_doc_rea", Storage:="_opo_cls", ThisKey:="id_opo", OtherKey:="id_opo", IsForeignKey:=true)>  _
	Public Property opo_cls() As opo_cls
		Get
			Return Me._opo_cls.Entity
		End Get
		Set
			Dim previousValue As opo_cls = Me._opo_cls.Entity
			If ((Object.Equals(previousValue, value) = false)  _
						OrElse (Me._opo_cls.HasLoadedOrAssignedValue = false)) Then
				Me.SendPropertyChanging
				If ((previousValue Is Nothing)  _
							= false) Then
					Me._opo_cls.Entity = Nothing
					previousValue.doc_rea.Remove(Me)
				End If
				Me._opo_cls.Entity = value
				If ((value Is Nothing)  _
							= false) Then
					value.doc_rea.Add(Me)
					Me._id_opo = value.id_opo
				Else
					Me._id_opo = CType(Nothing, Nullable(Of Decimal))
				End If
				Me.SendPropertyChanged("opo_cls")
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="P_0011_cls_doc_rea", Storage:="_P_0011_cls", ThisKey:="id_P_0011", OtherKey:="id_P_0011", IsForeignKey:=true)>  _
	Public Property P_0011_cls() As P_0011_cls
		Get
			Return Me._P_0011_cls.Entity
		End Get
		Set
			Dim previousValue As P_0011_cls = Me._P_0011_cls.Entity
			If ((Object.Equals(previousValue, value) = false)  _
						OrElse (Me._P_0011_cls.HasLoadedOrAssignedValue = false)) Then
				Me.SendPropertyChanging
				If ((previousValue Is Nothing)  _
							= false) Then
					Me._P_0011_cls.Entity = Nothing
					previousValue.doc_rea.Remove(Me)
				End If
				Me._P_0011_cls.Entity = value
				If ((value Is Nothing)  _
							= false) Then
					value.doc_rea.Add(Me)
					Me._id_P_0011 = value.id_P_0011
				Else
					Me._id_P_0011 = CType(Nothing, Nullable(Of Integer))
				End If
				Me.SendPropertyChanged("P_0011_cls")
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.DocMasivo")>  _
Partial Public Class DocMasivo_cls
	
	Private _nom_cli As String
	
	Private _nit_cli As String
	
	Private _dig_cli As String
	
	Private _dsi_num As String
	
	Private _dsi_fev As System.Nullable(Of Date)
	
	Private _dsi_fev_rea As System.Nullable(Of Date)
	
	Private _dsi_mto As System.Nullable(Of Decimal)
	
	Private _nom_pag As String
	
	Private _nit_pag As String
	
	Private _dig_pag As String
	
	Public Sub New()
		MyBase.New
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_nom_cli", DbType:="VarChar(150)")>  _
	Public Property nom_cli() As String
		Get
			Return Me._nom_cli
		End Get
		Set
			If (String.Equals(Me._nom_cli, value) = false) Then
				Me._nom_cli = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_nit_cli", DbType:="VarChar(12)")>  _
	Public Property nit_cli() As String
		Get
			Return Me._nit_cli
		End Get
		Set
			If (String.Equals(Me._nit_cli, value) = false) Then
				Me._nit_cli = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_dig_cli", DbType:="VarChar(1)")>  _
	Public Property dig_cli() As String
		Get
			Return Me._dig_cli
		End Get
		Set
			If (String.Equals(Me._dig_cli, value) = false) Then
				Me._dig_cli = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_dsi_num", DbType:="VarChar(20)")>  _
	Public Property dsi_num() As String
		Get
			Return Me._dsi_num
		End Get
		Set
			If (String.Equals(Me._dsi_num, value) = false) Then
				Me._dsi_num = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_dsi_fev", DbType:="DateTime")>  _
	Public Property dsi_fev() As System.Nullable(Of Date)
		Get
			Return Me._dsi_fev
		End Get
		Set
			If (Me._dsi_fev.Equals(value) = false) Then
				Me._dsi_fev = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_dsi_fev_rea", DbType:="DateTime")>  _
	Public Property dsi_fev_rea() As System.Nullable(Of Date)
		Get
			Return Me._dsi_fev_rea
		End Get
		Set
			If (Me._dsi_fev_rea.Equals(value) = false) Then
				Me._dsi_fev_rea = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_dsi_mto", DbType:="Money")>  _
	Public Property dsi_mto() As System.Nullable(Of Decimal)
		Get
			Return Me._dsi_mto
		End Get
		Set
			If (Me._dsi_mto.Equals(value) = false) Then
				Me._dsi_mto = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_nom_pag", DbType:="VarChar(150)")>  _
	Public Property nom_pag() As String
		Get
			Return Me._nom_pag
		End Get
		Set
			If (String.Equals(Me._nom_pag, value) = false) Then
				Me._nom_pag = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_nit_pag", DbType:="VarChar(12)")>  _
	Public Property nit_pag() As String
		Get
			Return Me._nit_pag
		End Get
		Set
			If (String.Equals(Me._nit_pag, value) = false) Then
				Me._nit_pag = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_dig_pag", DbType:="VarChar(1)")>  _
	Public Property dig_pag() As String
		Get
			Return Me._dig_pag
		End Get
		Set
			If (String.Equals(Me._dig_pag, value) = false) Then
				Me._dig_pag = value
			End If
		End Set
	End Property
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.dom")>  _
Partial Public Class dom_cls
	
	Private _dom_fec_prx As System.Nullable(Of Date)
	
	Private _id_doc As Decimal
	
	Private _id_cco As System.Nullable(Of Integer)
	
	Private _dom_num_ren As Decimal
	
	Private _dom_ful_pgo As System.Nullable(Of Date)
	
	Private _dom_int_dvg As System.Nullable(Of Decimal)
	
	Private _dom_sdo_cli As System.Nullable(Of Decimal)
	
	Private _dom_sdo_ddr As System.Nullable(Of Decimal)
	
	Private _dom_rgo_adi As System.Nullable(Of Integer)
	
	Private _dom_cob_doi As System.Nullable(Of Integer)
	
	Private _dom_int_dev As System.Nullable(Of Decimal)
	
	Private _id_P_0011 As System.Nullable(Of Decimal)
	
	Public Sub New()
		MyBase.New
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_dom_fec_prx", DbType:="DateTime")>  _
	Public Property dom_fec_prx() As System.Nullable(Of Date)
		Get
			Return Me._dom_fec_prx
		End Get
		Set
			If (Me._dom_fec_prx.Equals(value) = false) Then
				Me._dom_fec_prx = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_id_doc", DbType:="Decimal(18,0) NOT NULL")>  _
	Public Property id_doc() As Decimal
		Get
			Return Me._id_doc
		End Get
		Set
			If ((Me._id_doc = value)  _
						= false) Then
				Me._id_doc = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_id_cco", DbType:="Int")>  _
	Public Property id_cco() As System.Nullable(Of Integer)
		Get
			Return Me._id_cco
		End Get
		Set
			If (Me._id_cco.Equals(value) = false) Then
				Me._id_cco = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_dom_num_ren", DbType:="Decimal(5,0) NOT NULL")>  _
	Public Property dom_num_ren() As Decimal
		Get
			Return Me._dom_num_ren
		End Get
		Set
			If ((Me._dom_num_ren = value)  _
						= false) Then
				Me._dom_num_ren = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_dom_ful_pgo", DbType:="DateTime")>  _
	Public Property dom_ful_pgo() As System.Nullable(Of Date)
		Get
			Return Me._dom_ful_pgo
		End Get
		Set
			If (Me._dom_ful_pgo.Equals(value) = false) Then
				Me._dom_ful_pgo = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_dom_int_dvg", DbType:="Money")>  _
	Public Property dom_int_dvg() As System.Nullable(Of Decimal)
		Get
			Return Me._dom_int_dvg
		End Get
		Set
			If (Me._dom_int_dvg.Equals(value) = false) Then
				Me._dom_int_dvg = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_dom_sdo_cli", DbType:="Money")>  _
	Public Property dom_sdo_cli() As System.Nullable(Of Decimal)
		Get
			Return Me._dom_sdo_cli
		End Get
		Set
			If (Me._dom_sdo_cli.Equals(value) = false) Then
				Me._dom_sdo_cli = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_dom_sdo_ddr", DbType:="Money")>  _
	Public Property dom_sdo_ddr() As System.Nullable(Of Decimal)
		Get
			Return Me._dom_sdo_ddr
		End Get
		Set
			If (Me._dom_sdo_ddr.Equals(value) = false) Then
				Me._dom_sdo_ddr = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_dom_rgo_adi", DbType:="Int")>  _
	Public Property dom_rgo_adi() As System.Nullable(Of Integer)
		Get
			Return Me._dom_rgo_adi
		End Get
		Set
			If (Me._dom_rgo_adi.Equals(value) = false) Then
				Me._dom_rgo_adi = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_dom_cob_doi", DbType:="Int")>  _
	Public Property dom_cob_doi() As System.Nullable(Of Integer)
		Get
			Return Me._dom_cob_doi
		End Get
		Set
			If (Me._dom_cob_doi.Equals(value) = false) Then
				Me._dom_cob_doi = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_dom_int_dev", DbType:="Money")>  _
	Public Property dom_int_dev() As System.Nullable(Of Decimal)
		Get
			Return Me._dom_int_dev
		End Get
		Set
			If (Me._dom_int_dev.Equals(value) = false) Then
				Me._dom_int_dev = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_id_P_0011", DbType:="Decimal(18,0)")>  _
	Public Property id_P_0011() As System.Nullable(Of Decimal)
		Get
			Return Me._id_P_0011
		End Get
		Set
			If (Me._id_P_0011.Equals(value) = false) Then
				Me._id_P_0011 = value
			End If
		End Set
	End Property
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.dor")>  _
Partial Public Class dor_cls
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _id_dor As Integer
	
	Private _id_doc As Decimal
	
	Private _id_suc As System.Nullable(Of Integer)
	
	Private _id_suc_orn As System.Nullable(Of Integer)
	
	Private _dor_fec_sol As System.Nullable(Of Date)
	
	Private _dor_est As System.Nullable(Of Char)
	
	Private _dor_hor_prx As System.Nullable(Of Date)
	
	Private _dor_otr_suc As System.Nullable(Of Char)
	
	Private _doc_cls As EntityRef(Of doc_cls)
	
	Private _suc As EntityRef(Of suc_cls)
	
	Private _suc_cls As EntityRef(Of suc_cls)
	
    #Region "Definiciones de métodos de extensibilidad"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub Onid_dorChanging(value As Integer)
    End Sub
    Partial Private Sub Onid_dorChanged()
    End Sub
    Partial Private Sub Onid_docChanging(value As Decimal)
    End Sub
    Partial Private Sub Onid_docChanged()
    End Sub
    Partial Private Sub Onid_sucChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub Onid_sucChanged()
    End Sub
    Partial Private Sub Onid_suc_ornChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub Onid_suc_ornChanged()
    End Sub
    Partial Private Sub Ondor_fec_solChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub Ondor_fec_solChanged()
    End Sub
    Partial Private Sub Ondor_estChanging(value As System.Nullable(Of Char))
    End Sub
    Partial Private Sub Ondor_estChanged()
    End Sub
    Partial Private Sub Ondor_hor_prxChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub Ondor_hor_prxChanged()
    End Sub
    Partial Private Sub Ondor_otr_sucChanging(value As System.Nullable(Of Char))
    End Sub
    Partial Private Sub Ondor_otr_sucChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		Me._doc_cls = CType(Nothing, EntityRef(Of doc_cls))
		Me._suc = CType(Nothing, EntityRef(Of suc_cls))
		Me._suc_cls = CType(Nothing, EntityRef(Of suc_cls))
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_id_dor", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property id_dor() As Integer
		Get
			Return Me._id_dor
		End Get
		Set
			If ((Me._id_dor = value)  _
						= false) Then
				Me.Onid_dorChanging(value)
				Me.SendPropertyChanging
				Me._id_dor = value
				Me.SendPropertyChanged("id_dor")
				Me.Onid_dorChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_id_doc", DbType:="Decimal(18,0) NOT NULL")>  _
	Public Property id_doc() As Decimal
		Get
			Return Me._id_doc
		End Get
		Set
			If ((Me._id_doc = value)  _
						= false) Then
				If Me._doc_cls.HasLoadedOrAssignedValue Then
					Throw New System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException()
				End If
				Me.Onid_docChanging(value)
				Me.SendPropertyChanging
				Me._id_doc = value
				Me.SendPropertyChanged("id_doc")
				Me.Onid_docChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_id_suc", DbType:="Int")>  _
	Public Property id_suc() As System.Nullable(Of Integer)
		Get
			Return Me._id_suc
		End Get
		Set
			If (Me._id_suc.Equals(value) = false) Then
				If Me._suc.HasLoadedOrAssignedValue Then
					Throw New System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException()
				End If
				Me.Onid_sucChanging(value)
				Me.SendPropertyChanging
				Me._id_suc = value
				Me.SendPropertyChanged("id_suc")
				Me.Onid_sucChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_id_suc_orn", DbType:="Int")>  _
	Public Property id_suc_orn() As System.Nullable(Of Integer)
		Get
			Return Me._id_suc_orn
		End Get
		Set
			If (Me._id_suc_orn.Equals(value) = false) Then
				If Me._suc_cls.HasLoadedOrAssignedValue Then
					Throw New System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException()
				End If
				Me.Onid_suc_ornChanging(value)
				Me.SendPropertyChanging
				Me._id_suc_orn = value
				Me.SendPropertyChanged("id_suc_orn")
				Me.Onid_suc_ornChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_dor_fec_sol", DbType:="DateTime")>  _
	Public Property dor_fec_sol() As System.Nullable(Of Date)
		Get
			Return Me._dor_fec_sol
		End Get
		Set
			If (Me._dor_fec_sol.Equals(value) = false) Then
				Me.Ondor_fec_solChanging(value)
				Me.SendPropertyChanging
				Me._dor_fec_sol = value
				Me.SendPropertyChanged("dor_fec_sol")
				Me.Ondor_fec_solChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_dor_est", DbType:="Char(1)")>  _
	Public Property dor_est() As System.Nullable(Of Char)
		Get
			Return Me._dor_est
		End Get
		Set
			If (Me._dor_est.Equals(value) = false) Then
				Me.Ondor_estChanging(value)
				Me.SendPropertyChanging
				Me._dor_est = value
				Me.SendPropertyChanged("dor_est")
				Me.Ondor_estChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_dor_hor_prx", DbType:="DateTime")>  _
	Public Property dor_hor_prx() As System.Nullable(Of Date)
		Get
			Return Me._dor_hor_prx
		End Get
		Set
			If (Me._dor_hor_prx.Equals(value) = false) Then
				Me.Ondor_hor_prxChanging(value)
				Me.SendPropertyChanging
				Me._dor_hor_prx = value
				Me.SendPropertyChanged("dor_hor_prx")
				Me.Ondor_hor_prxChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_dor_otr_suc", DbType:="Char(1)")>  _
	Public Property dor_otr_suc() As System.Nullable(Of Char)
		Get
			Return Me._dor_otr_suc
		End Get
		Set
			If (Me._dor_otr_suc.Equals(value) = false) Then
				Me.Ondor_otr_sucChanging(value)
				Me.SendPropertyChanging
				Me._dor_otr_suc = value
				Me.SendPropertyChanged("dor_otr_suc")
				Me.Ondor_otr_sucChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="doc_cls_dor_cls", Storage:="_doc_cls", ThisKey:="id_doc", OtherKey:="id_doc", IsForeignKey:=true)>  _
	Public Property doc_cls() As doc_cls
		Get
			Return Me._doc_cls.Entity
		End Get
		Set
			Dim previousValue As doc_cls = Me._doc_cls.Entity
			If ((Object.Equals(previousValue, value) = false)  _
						OrElse (Me._doc_cls.HasLoadedOrAssignedValue = false)) Then
				Me.SendPropertyChanging
				If ((previousValue Is Nothing)  _
							= false) Then
					Me._doc_cls.Entity = Nothing
					previousValue.dor_cls.Remove(Me)
				End If
				Me._doc_cls.Entity = value
				If ((value Is Nothing)  _
							= false) Then
					value.dor_cls.Add(Me)
					Me._id_doc = value.id_doc
				Else
					Me._id_doc = CType(Nothing, Decimal)
				End If
				Me.SendPropertyChanged("doc_cls")
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="suc_cls_dor_cls", Storage:="_suc", ThisKey:="id_suc", OtherKey:="id_suc", IsForeignKey:=true)>  _
	Public Property suc() As suc_cls
		Get
			Return Me._suc.Entity
		End Get
		Set
			Dim previousValue As suc_cls = Me._suc.Entity
			If ((Object.Equals(previousValue, value) = false)  _
						OrElse (Me._suc.HasLoadedOrAssignedValue = false)) Then
				Me.SendPropertyChanging
				If ((previousValue Is Nothing)  _
							= false) Then
					Me._suc.Entity = Nothing
					previousValue.dor.Remove(Me)
				End If
				Me._suc.Entity = value
				If ((value Is Nothing)  _
							= false) Then
					value.dor.Add(Me)
					Me._id_suc = value.id_suc
				Else
					Me._id_suc = CType(Nothing, Nullable(Of Integer))
				End If
				Me.SendPropertyChanged("suc")
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="suc_cls_dor_cls1", Storage:="_suc_cls", ThisKey:="id_suc_orn", OtherKey:="id_suc", IsForeignKey:=true)>  _
	Public Property suc_cls() As suc_cls
		Get
			Return Me._suc_cls.Entity
		End Get
		Set
			Dim previousValue As suc_cls = Me._suc_cls.Entity
			If ((Object.Equals(previousValue, value) = false)  _
						OrElse (Me._suc_cls.HasLoadedOrAssignedValue = false)) Then
				Me.SendPropertyChanging
				If ((previousValue Is Nothing)  _
							= false) Then
					Me._suc_cls.Entity = Nothing
					previousValue.dor_cls.Remove(Me)
				End If
				Me._suc_cls.Entity = value
				If ((value Is Nothing)  _
							= false) Then
					value.dor_cls.Add(Me)
					Me._id_suc_orn = value.id_suc
				Else
					Me._id_suc_orn = CType(Nothing, Nullable(Of Integer))
				End If
				Me.SendPropertyChanged("suc_cls")
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.dpa")>  _
Partial Public Class dpa_cls
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _id_dpa As Decimal
	
	Private _cli_idc As String
	
	Private _deu_ide As String
	
	Private _dpa_hor_lun As String
	
	Private _dpa_res_lun As System.Nullable(Of Char)
	
	Private _dpa_hor_mar As String
	
	Private _dpa_res_mar As System.Nullable(Of Char)
	
	Private _dpa_hor_mie As String
	
	Private _dpa_res_mie As System.Nullable(Of Char)
	
	Private _dpa_hor_jue As String
	
	Private _dpa_res_jue As System.Nullable(Of Char)
	
	Private _dpa_hor_vie As String
	
	Private _dpa_res_vie As System.Nullable(Of Char)
	
	Private _cli_cls As EntityRef(Of cli_cls)
	
	Private _deu_cls As EntityRef(Of deu_cls)
	
    #Region "Definiciones de métodos de extensibilidad"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub Onid_dpaChanging(value As Decimal)
    End Sub
    Partial Private Sub Onid_dpaChanged()
    End Sub
    Partial Private Sub Oncli_idcChanging(value As String)
    End Sub
    Partial Private Sub Oncli_idcChanged()
    End Sub
    Partial Private Sub Ondeu_ideChanging(value As String)
    End Sub
    Partial Private Sub Ondeu_ideChanged()
    End Sub
    Partial Private Sub Ondpa_hor_lunChanging(value As String)
    End Sub
    Partial Private Sub Ondpa_hor_lunChanged()
    End Sub
    Partial Private Sub Ondpa_res_lunChanging(value As System.Nullable(Of Char))
    End Sub
    Partial Private Sub Ondpa_res_lunChanged()
    End Sub
    Partial Private Sub Ondpa_hor_marChanging(value As String)
    End Sub
    Partial Private Sub Ondpa_hor_marChanged()
    End Sub
    Partial Private Sub Ondpa_res_marChanging(value As System.Nullable(Of Char))
    End Sub
    Partial Private Sub Ondpa_res_marChanged()
    End Sub
    Partial Private Sub Ondpa_hor_mieChanging(value As String)
    End Sub
    Partial Private Sub Ondpa_hor_mieChanged()
    End Sub
    Partial Private Sub Ondpa_res_mieChanging(value As System.Nullable(Of Char))
    End Sub
    Partial Private Sub Ondpa_res_mieChanged()
    End Sub
    Partial Private Sub Ondpa_hor_jueChanging(value As String)
    End Sub
    Partial Private Sub Ondpa_hor_jueChanged()
    End Sub
    Partial Private Sub Ondpa_res_jueChanging(value As System.Nullable(Of Char))
    End Sub
    Partial Private Sub Ondpa_res_jueChanged()
    End Sub
    Partial Private Sub Ondpa_hor_vieChanging(value As String)
    End Sub
    Partial Private Sub Ondpa_hor_vieChanged()
    End Sub
    Partial Private Sub Ondpa_res_vieChanging(value As System.Nullable(Of Char))
    End Sub
    Partial Private Sub Ondpa_res_vieChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		Me._cli_cls = CType(Nothing, EntityRef(Of cli_cls))
		Me._deu_cls = CType(Nothing, EntityRef(Of deu_cls))
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_id_dpa", AutoSync:=AutoSync.OnInsert, DbType:="Decimal(10,0) NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property id_dpa() As Decimal
		Get
			Return Me._id_dpa
		End Get
		Set
			If ((Me._id_dpa = value)  _
						= false) Then
				Me.Onid_dpaChanging(value)
				Me.SendPropertyChanging
				Me._id_dpa = value
				Me.SendPropertyChanged("id_dpa")
				Me.Onid_dpaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_cli_idc", DbType:="Char(12)")>  _
	Public Property cli_idc() As String
		Get
			Return Me._cli_idc
		End Get
		Set
			If (String.Equals(Me._cli_idc, value) = false) Then
				If Me._cli_cls.HasLoadedOrAssignedValue Then
					Throw New System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException()
				End If
				Me.Oncli_idcChanging(value)
				Me.SendPropertyChanging
				Me._cli_idc = value
				Me.SendPropertyChanged("cli_idc")
				Me.Oncli_idcChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_deu_ide", DbType:="Char(12) NOT NULL", CanBeNull:=false)>  _
	Public Property deu_ide() As String
		Get
			Return Me._deu_ide
		End Get
		Set
			If (String.Equals(Me._deu_ide, value) = false) Then
				If Me._deu_cls.HasLoadedOrAssignedValue Then
					Throw New System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException()
				End If
				Me.Ondeu_ideChanging(value)
				Me.SendPropertyChanging
				Me._deu_ide = value
				Me.SendPropertyChanged("deu_ide")
				Me.Ondeu_ideChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_dpa_hor_lun", DbType:="Char(50)")>  _
	Public Property dpa_hor_lun() As String
		Get
			Return Me._dpa_hor_lun
		End Get
		Set
			If (String.Equals(Me._dpa_hor_lun, value) = false) Then
				Me.Ondpa_hor_lunChanging(value)
				Me.SendPropertyChanging
				Me._dpa_hor_lun = value
				Me.SendPropertyChanged("dpa_hor_lun")
				Me.Ondpa_hor_lunChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_dpa_res_lun", DbType:="Char(1)")>  _
	Public Property dpa_res_lun() As System.Nullable(Of Char)
		Get
			Return Me._dpa_res_lun
		End Get
		Set
			If (Me._dpa_res_lun.Equals(value) = false) Then
				Me.Ondpa_res_lunChanging(value)
				Me.SendPropertyChanging
				Me._dpa_res_lun = value
				Me.SendPropertyChanged("dpa_res_lun")
				Me.Ondpa_res_lunChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_dpa_hor_mar", DbType:="Char(50)")>  _
	Public Property dpa_hor_mar() As String
		Get
			Return Me._dpa_hor_mar
		End Get
		Set
			If (String.Equals(Me._dpa_hor_mar, value) = false) Then
				Me.Ondpa_hor_marChanging(value)
				Me.SendPropertyChanging
				Me._dpa_hor_mar = value
				Me.SendPropertyChanged("dpa_hor_mar")
				Me.Ondpa_hor_marChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_dpa_res_mar", DbType:="Char(1)")>  _
	Public Property dpa_res_mar() As System.Nullable(Of Char)
		Get
			Return Me._dpa_res_mar
		End Get
		Set
			If (Me._dpa_res_mar.Equals(value) = false) Then
				Me.Ondpa_res_marChanging(value)
				Me.SendPropertyChanging
				Me._dpa_res_mar = value
				Me.SendPropertyChanged("dpa_res_mar")
				Me.Ondpa_res_marChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_dpa_hor_mie", DbType:="Char(50)")>  _
	Public Property dpa_hor_mie() As String
		Get
			Return Me._dpa_hor_mie
		End Get
		Set
			If (String.Equals(Me._dpa_hor_mie, value) = false) Then
				Me.Ondpa_hor_mieChanging(value)
				Me.SendPropertyChanging
				Me._dpa_hor_mie = value
				Me.SendPropertyChanged("dpa_hor_mie")
				Me.Ondpa_hor_mieChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_dpa_res_mie", DbType:="Char(1)")>  _
	Public Property dpa_res_mie() As System.Nullable(Of Char)
		Get
			Return Me._dpa_res_mie
		End Get
		Set
			If (Me._dpa_res_mie.Equals(value) = false) Then
				Me.Ondpa_res_mieChanging(value)
				Me.SendPropertyChanging
				Me._dpa_res_mie = value
				Me.SendPropertyChanged("dpa_res_mie")
				Me.Ondpa_res_mieChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_dpa_hor_jue", DbType:="Char(50)")>  _
	Public Property dpa_hor_jue() As String
		Get
			Return Me._dpa_hor_jue
		End Get
		Set
			If (String.Equals(Me._dpa_hor_jue, value) = false) Then
				Me.Ondpa_hor_jueChanging(value)
				Me.SendPropertyChanging
				Me._dpa_hor_jue = value
				Me.SendPropertyChanged("dpa_hor_jue")
				Me.Ondpa_hor_jueChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_dpa_res_jue", DbType:="Char(1)")>  _
	Public Property dpa_res_jue() As System.Nullable(Of Char)
		Get
			Return Me._dpa_res_jue
		End Get
		Set
			If (Me._dpa_res_jue.Equals(value) = false) Then
				Me.Ondpa_res_jueChanging(value)
				Me.SendPropertyChanging
				Me._dpa_res_jue = value
				Me.SendPropertyChanged("dpa_res_jue")
				Me.Ondpa_res_jueChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_dpa_hor_vie", DbType:="Char(50)")>  _
	Public Property dpa_hor_vie() As String
		Get
			Return Me._dpa_hor_vie
		End Get
		Set
			If (String.Equals(Me._dpa_hor_vie, value) = false) Then
				Me.Ondpa_hor_vieChanging(value)
				Me.SendPropertyChanging
				Me._dpa_hor_vie = value
				Me.SendPropertyChanged("dpa_hor_vie")
				Me.Ondpa_hor_vieChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_dpa_res_vie", DbType:="Char(1)")>  _
	Public Property dpa_res_vie() As System.Nullable(Of Char)
		Get
			Return Me._dpa_res_vie
		End Get
		Set
			If (Me._dpa_res_vie.Equals(value) = false) Then
				Me.Ondpa_res_vieChanging(value)
				Me.SendPropertyChanging
				Me._dpa_res_vie = value
				Me.SendPropertyChanged("dpa_res_vie")
				Me.Ondpa_res_vieChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="cli_cls_dpa_cls", Storage:="_cli_cls", ThisKey:="cli_idc", OtherKey:="cli_idc", IsForeignKey:=true)>  _
	Public Property cli_cls() As cli_cls
		Get
			Return Me._cli_cls.Entity
		End Get
		Set
			Dim previousValue As cli_cls = Me._cli_cls.Entity
			If ((Object.Equals(previousValue, value) = false)  _
						OrElse (Me._cli_cls.HasLoadedOrAssignedValue = false)) Then
				Me.SendPropertyChanging
				If ((previousValue Is Nothing)  _
							= false) Then
					Me._cli_cls.Entity = Nothing
					previousValue.dpa_cls.Remove(Me)
				End If
				Me._cli_cls.Entity = value
				If ((value Is Nothing)  _
							= false) Then
					value.dpa_cls.Add(Me)
					Me._cli_idc = value.cli_idc
				Else
					Me._cli_idc = CType(Nothing, String)
				End If
				Me.SendPropertyChanged("cli_cls")
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="deu_cls_dpa_cls", Storage:="_deu_cls", ThisKey:="deu_ide", OtherKey:="deu_ide", IsForeignKey:=true)>  _
	Public Property deu_cls() As deu_cls
		Get
			Return Me._deu_cls.Entity
		End Get
		Set
			Dim previousValue As deu_cls = Me._deu_cls.Entity
			If ((Object.Equals(previousValue, value) = false)  _
						OrElse (Me._deu_cls.HasLoadedOrAssignedValue = false)) Then
				Me.SendPropertyChanging
				If ((previousValue Is Nothing)  _
							= false) Then
					Me._deu_cls.Entity = Nothing
					previousValue.dpa_cls.Remove(Me)
				End If
				Me._deu_cls.Entity = value
				If ((value Is Nothing)  _
							= false) Then
					value.dpa_cls.Add(Me)
					Me._deu_ide = value.deu_ide
				Else
					Me._deu_ide = CType(Nothing, String)
				End If
				Me.SendPropertyChanged("deu_cls")
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.dpd")>  _
Partial Public Class dpd_cls
	
	Private _deu_ide As String
	
	Private _dpd_rut As String
	
	Public Sub New()
		MyBase.New
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_deu_ide", DbType:="Char(12)")>  _
	Public Property deu_ide() As String
		Get
			Return Me._deu_ide
		End Get
		Set
			If (String.Equals(Me._deu_ide, value) = false) Then
				Me._deu_ide = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_dpd_rut", DbType:="Char(12)")>  _
	Public Property dpd_rut() As String
		Get
			Return Me._dpd_rut
		End Get
		Set
			If (String.Equals(Me._dpd_rut, value) = false) Then
				Me._dpd_rut = value
			End If
		End Set
	End Property
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.dpg")>  _
Partial Public Class dpg_cls
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _id_dpg As Decimal
	
	Private _id_spg As Decimal
	
	Private _id_doc As System.Nullable(Of Decimal)
	
	Private _id_P_0011 As System.Nullable(Of Integer)
	
	Private _doc_sdo_cli As System.Nullable(Of Decimal)
	
	Private _doc_fev_rea As System.Nullable(Of Date)
	
	Private _nva_doc_fev_rea As System.Nullable(Of Date)
	
	Private _dpg_int_ere As System.Nullable(Of Decimal)
	
	Private _dpg_com_isi As System.Nullable(Of Decimal)
	
	Private _dpg_iva_com As System.Nullable(Of Decimal)
	
	Private _dpg_fac_cam As System.Nullable(Of Decimal)
	
	Private _dpg_fec_ctb As System.Nullable(Of Date)
	
	Private _doc_fev_cal As System.Nullable(Of Date)
	
	Private _doc_cls As EntityRef(Of doc_cls)
	
	Private _P_0011_cls As EntityRef(Of P_0011_cls)
	
	Private _spg_cls As EntityRef(Of spg_cls)
	
    #Region "Definiciones de métodos de extensibilidad"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub Onid_dpgChanging(value As Decimal)
    End Sub
    Partial Private Sub Onid_dpgChanged()
    End Sub
    Partial Private Sub Onid_spgChanging(value As Decimal)
    End Sub
    Partial Private Sub Onid_spgChanged()
    End Sub
    Partial Private Sub Onid_docChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub Onid_docChanged()
    End Sub
    Partial Private Sub Onid_P_0011Changing(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub Onid_P_0011Changed()
    End Sub
    Partial Private Sub Ondoc_sdo_cliChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub Ondoc_sdo_cliChanged()
    End Sub
    Partial Private Sub Ondoc_fev_reaChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub Ondoc_fev_reaChanged()
    End Sub
    Partial Private Sub Onnva_doc_fev_reaChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub Onnva_doc_fev_reaChanged()
    End Sub
    Partial Private Sub Ondpg_int_ereChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub Ondpg_int_ereChanged()
    End Sub
    Partial Private Sub Ondpg_com_isiChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub Ondpg_com_isiChanged()
    End Sub
    Partial Private Sub Ondpg_iva_comChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub Ondpg_iva_comChanged()
    End Sub
    Partial Private Sub Ondpg_fac_camChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub Ondpg_fac_camChanged()
    End Sub
    Partial Private Sub Ondpg_fec_ctbChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub Ondpg_fec_ctbChanged()
    End Sub
    Partial Private Sub Ondoc_fev_calChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub Ondoc_fev_calChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		Me._doc_cls = CType(Nothing, EntityRef(Of doc_cls))
		Me._P_0011_cls = CType(Nothing, EntityRef(Of P_0011_cls))
		Me._spg_cls = CType(Nothing, EntityRef(Of spg_cls))
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_id_dpg", AutoSync:=AutoSync.OnInsert, DbType:="Decimal(18,0) NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property id_dpg() As Decimal
		Get
			Return Me._id_dpg
		End Get
		Set
			If ((Me._id_dpg = value)  _
						= false) Then
				Me.Onid_dpgChanging(value)
				Me.SendPropertyChanging
				Me._id_dpg = value
				Me.SendPropertyChanged("id_dpg")
				Me.Onid_dpgChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_id_spg", DbType:="Decimal(18,0) NOT NULL")>  _
	Public Property id_spg() As Decimal
		Get
			Return Me._id_spg
		End Get
		Set
			If ((Me._id_spg = value)  _
						= false) Then
				If Me._spg_cls.HasLoadedOrAssignedValue Then
					Throw New System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException()
				End If
				Me.Onid_spgChanging(value)
				Me.SendPropertyChanging
				Me._id_spg = value
				Me.SendPropertyChanged("id_spg")
				Me.Onid_spgChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_id_doc", DbType:="Decimal(18,0)")>  _
	Public Property id_doc() As System.Nullable(Of Decimal)
		Get
			Return Me._id_doc
		End Get
		Set
			If (Me._id_doc.Equals(value) = false) Then
				If Me._doc_cls.HasLoadedOrAssignedValue Then
					Throw New System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException()
				End If
				Me.Onid_docChanging(value)
				Me.SendPropertyChanging
				Me._id_doc = value
				Me.SendPropertyChanged("id_doc")
				Me.Onid_docChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_id_P_0011", DbType:="Int")>  _
	Public Property id_P_0011() As System.Nullable(Of Integer)
		Get
			Return Me._id_P_0011
		End Get
		Set
			If (Me._id_P_0011.Equals(value) = false) Then
				If Me._P_0011_cls.HasLoadedOrAssignedValue Then
					Throw New System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException()
				End If
				Me.Onid_P_0011Changing(value)
				Me.SendPropertyChanging
				Me._id_P_0011 = value
				Me.SendPropertyChanged("id_P_0011")
				Me.Onid_P_0011Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_doc_sdo_cli", DbType:="Money")>  _
	Public Property doc_sdo_cli() As System.Nullable(Of Decimal)
		Get
			Return Me._doc_sdo_cli
		End Get
		Set
			If (Me._doc_sdo_cli.Equals(value) = false) Then
				Me.Ondoc_sdo_cliChanging(value)
				Me.SendPropertyChanging
				Me._doc_sdo_cli = value
				Me.SendPropertyChanged("doc_sdo_cli")
				Me.Ondoc_sdo_cliChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_doc_fev_rea", DbType:="DateTime")>  _
	Public Property doc_fev_rea() As System.Nullable(Of Date)
		Get
			Return Me._doc_fev_rea
		End Get
		Set
			If (Me._doc_fev_rea.Equals(value) = false) Then
				Me.Ondoc_fev_reaChanging(value)
				Me.SendPropertyChanging
				Me._doc_fev_rea = value
				Me.SendPropertyChanged("doc_fev_rea")
				Me.Ondoc_fev_reaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_nva_doc_fev_rea", DbType:="DateTime")>  _
	Public Property nva_doc_fev_rea() As System.Nullable(Of Date)
		Get
			Return Me._nva_doc_fev_rea
		End Get
		Set
			If (Me._nva_doc_fev_rea.Equals(value) = false) Then
				Me.Onnva_doc_fev_reaChanging(value)
				Me.SendPropertyChanging
				Me._nva_doc_fev_rea = value
				Me.SendPropertyChanged("nva_doc_fev_rea")
				Me.Onnva_doc_fev_reaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_dpg_int_ere", DbType:="Money")>  _
	Public Property dpg_int_ere() As System.Nullable(Of Decimal)
		Get
			Return Me._dpg_int_ere
		End Get
		Set
			If (Me._dpg_int_ere.Equals(value) = false) Then
				Me.Ondpg_int_ereChanging(value)
				Me.SendPropertyChanging
				Me._dpg_int_ere = value
				Me.SendPropertyChanged("dpg_int_ere")
				Me.Ondpg_int_ereChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_dpg_com_isi", DbType:="Money")>  _
	Public Property dpg_com_isi() As System.Nullable(Of Decimal)
		Get
			Return Me._dpg_com_isi
		End Get
		Set
			If (Me._dpg_com_isi.Equals(value) = false) Then
				Me.Ondpg_com_isiChanging(value)
				Me.SendPropertyChanging
				Me._dpg_com_isi = value
				Me.SendPropertyChanged("dpg_com_isi")
				Me.Ondpg_com_isiChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_dpg_iva_com", DbType:="Money")>  _
	Public Property dpg_iva_com() As System.Nullable(Of Decimal)
		Get
			Return Me._dpg_iva_com
		End Get
		Set
			If (Me._dpg_iva_com.Equals(value) = false) Then
				Me.Ondpg_iva_comChanging(value)
				Me.SendPropertyChanging
				Me._dpg_iva_com = value
				Me.SendPropertyChanged("dpg_iva_com")
				Me.Ondpg_iva_comChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_dpg_fac_cam", DbType:="Money")>  _
	Public Property dpg_fac_cam() As System.Nullable(Of Decimal)
		Get
			Return Me._dpg_fac_cam
		End Get
		Set
			If (Me._dpg_fac_cam.Equals(value) = false) Then
				Me.Ondpg_fac_camChanging(value)
				Me.SendPropertyChanging
				Me._dpg_fac_cam = value
				Me.SendPropertyChanged("dpg_fac_cam")
				Me.Ondpg_fac_camChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_dpg_fec_ctb", DbType:="DateTime")>  _
	Public Property dpg_fec_ctb() As System.Nullable(Of Date)
		Get
			Return Me._dpg_fec_ctb
		End Get
		Set
			If (Me._dpg_fec_ctb.Equals(value) = false) Then
				Me.Ondpg_fec_ctbChanging(value)
				Me.SendPropertyChanging
				Me._dpg_fec_ctb = value
				Me.SendPropertyChanged("dpg_fec_ctb")
				Me.Ondpg_fec_ctbChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_doc_fev_cal", DbType:="DateTime")>  _
	Public Property doc_fev_cal() As System.Nullable(Of Date)
		Get
			Return Me._doc_fev_cal
		End Get
		Set
			If (Me._doc_fev_cal.Equals(value) = false) Then
				Me.Ondoc_fev_calChanging(value)
				Me.SendPropertyChanging
				Me._doc_fev_cal = value
				Me.SendPropertyChanged("doc_fev_cal")
				Me.Ondoc_fev_calChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="doc_cls_dpg_cls", Storage:="_doc_cls", ThisKey:="id_doc", OtherKey:="id_doc", IsForeignKey:=true)>  _
	Public Property doc_cls() As doc_cls
		Get
			Return Me._doc_cls.Entity
		End Get
		Set
			Dim previousValue As doc_cls = Me._doc_cls.Entity
			If ((Object.Equals(previousValue, value) = false)  _
						OrElse (Me._doc_cls.HasLoadedOrAssignedValue = false)) Then
				Me.SendPropertyChanging
				If ((previousValue Is Nothing)  _
							= false) Then
					Me._doc_cls.Entity = Nothing
					previousValue.dpg_cls.Remove(Me)
				End If
				Me._doc_cls.Entity = value
				If ((value Is Nothing)  _
							= false) Then
					value.dpg_cls.Add(Me)
					Me._id_doc = value.id_doc
				Else
					Me._id_doc = CType(Nothing, Nullable(Of Decimal))
				End If
				Me.SendPropertyChanged("doc_cls")
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="P_0011_cls_dpg_cls", Storage:="_P_0011_cls", ThisKey:="id_P_0011", OtherKey:="id_P_0011", IsForeignKey:=true)>  _
	Public Property P_0011_cls() As P_0011_cls
		Get
			Return Me._P_0011_cls.Entity
		End Get
		Set
			Dim previousValue As P_0011_cls = Me._P_0011_cls.Entity
			If ((Object.Equals(previousValue, value) = false)  _
						OrElse (Me._P_0011_cls.HasLoadedOrAssignedValue = false)) Then
				Me.SendPropertyChanging
				If ((previousValue Is Nothing)  _
							= false) Then
					Me._P_0011_cls.Entity = Nothing
					previousValue.dpg_cls.Remove(Me)
				End If
				Me._P_0011_cls.Entity = value
				If ((value Is Nothing)  _
							= false) Then
					value.dpg_cls.Add(Me)
					Me._id_P_0011 = value.id_P_0011
				Else
					Me._id_P_0011 = CType(Nothing, Nullable(Of Integer))
				End If
				Me.SendPropertyChanged("P_0011_cls")
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="spg_cls_dpg_cls", Storage:="_spg_cls", ThisKey:="id_spg", OtherKey:="id_spg", IsForeignKey:=true)>  _
	Public Property spg_cls() As spg_cls
		Get
			Return Me._spg_cls.Entity
		End Get
		Set
			Dim previousValue As spg_cls = Me._spg_cls.Entity
			If ((Object.Equals(previousValue, value) = false)  _
						OrElse (Me._spg_cls.HasLoadedOrAssignedValue = false)) Then
				Me.SendPropertyChanging
				If ((previousValue Is Nothing)  _
							= false) Then
					Me._spg_cls.Entity = Nothing
					previousValue.dpg_cls.Remove(Me)
				End If
				Me._spg_cls.Entity = value
				If ((value Is Nothing)  _
							= false) Then
					value.dpg_cls.Add(Me)
					Me._id_spg = value.id_spg
				Else
					Me._id_spg = CType(Nothing, Decimal)
				End If
				Me.SendPropertyChanged("spg_cls")
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.dpo")>  _
Partial Public Class dpo_cls
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _id_dpo As Decimal
	
	Private _id_nma As System.Nullable(Of Decimal)
	
	Private _id_bco As System.Nullable(Of Integer)
	
	Private _id_cxp As System.Nullable(Of Decimal)
	
	Private _id_cxc As System.Nullable(Of Decimal)
	
	Private _id_P_0023 As System.Nullable(Of Integer)
	
	Private _id_P_0052 As System.Nullable(Of Integer)
	
	Private _id_P_0054 As System.Nullable(Of Integer)
	
	Private _id_P_0061 As System.Nullable(Of Integer)
	
	Private _id_P_0087 As System.Nullable(Of Integer)
	
	Private _id_PL_000047 As String
	
	Private _dpo_num As String
	
	Private _dpo_ioe As System.Nullable(Of Char)
	
	Private _dpo_mto As System.Nullable(Of Decimal)
	
	Private _dpo_fec_emi As System.Nullable(Of Date)
	
	Private _dpo_fev As System.Nullable(Of Date)
	
	Private _dpo_cct As String
	
	Private _dpo_aor As String
	
	Private _dpo_anl As String
	
	Private _dpo_mot_prt As System.Nullable(Of Integer)
	
	Private _dpo_orf As System.Nullable(Of Integer)
	
	Private _egr_sec_cls As EntitySet(Of egr_sec_cls)
	
	Private _ing_sec_cls As EntitySet(Of ing_sec_cls)
	
	Private _bco_cls As EntityRef(Of bco_cls)
	
	Private _cxc_cls As EntityRef(Of cxc_cls)
	
	Private _cxp_cls As EntityRef(Of cxp_cls)
	
	Private _nma_cls As EntityRef(Of nma_cls)
	
	Private _P_0023_cls As EntityRef(Of P_0023_cls)
	
	Private _P_0052_cls As EntityRef(Of P_0052_cls)
	
	Private _P_0061_cls As EntityRef(Of P_0061_cls)
	
	Private _P_0087_cls As EntityRef(Of P_0087_cls)
	
	Private _PL_000047_cls As EntityRef(Of PL_000047_cls)
	
    #Region "Definiciones de métodos de extensibilidad"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub Onid_dpoChanging(value As Decimal)
    End Sub
    Partial Private Sub Onid_dpoChanged()
    End Sub
    Partial Private Sub Onid_nmaChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub Onid_nmaChanged()
    End Sub
    Partial Private Sub Onid_bcoChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub Onid_bcoChanged()
    End Sub
    Partial Private Sub Onid_cxpChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub Onid_cxpChanged()
    End Sub
    Partial Private Sub Onid_cxcChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub Onid_cxcChanged()
    End Sub
    Partial Private Sub Onid_P_0023Changing(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub Onid_P_0023Changed()
    End Sub
    Partial Private Sub Onid_P_0052Changing(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub Onid_P_0052Changed()
    End Sub
    Partial Private Sub Onid_P_0054Changing(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub Onid_P_0054Changed()
    End Sub
    Partial Private Sub Onid_P_0061Changing(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub Onid_P_0061Changed()
    End Sub
    Partial Private Sub Onid_P_0087Changing(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub Onid_P_0087Changed()
    End Sub
    Partial Private Sub Onid_PL_000047Changing(value As String)
    End Sub
    Partial Private Sub Onid_PL_000047Changed()
    End Sub
    Partial Private Sub Ondpo_numChanging(value As String)
    End Sub
    Partial Private Sub Ondpo_numChanged()
    End Sub
    Partial Private Sub Ondpo_ioeChanging(value As System.Nullable(Of Char))
    End Sub
    Partial Private Sub Ondpo_ioeChanged()
    End Sub
    Partial Private Sub Ondpo_mtoChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub Ondpo_mtoChanged()
    End Sub
    Partial Private Sub Ondpo_fec_emiChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub Ondpo_fec_emiChanged()
    End Sub
    Partial Private Sub Ondpo_fevChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub Ondpo_fevChanged()
    End Sub
    Partial Private Sub Ondpo_cctChanging(value As String)
    End Sub
    Partial Private Sub Ondpo_cctChanged()
    End Sub
    Partial Private Sub Ondpo_aorChanging(value As String)
    End Sub
    Partial Private Sub Ondpo_aorChanged()
    End Sub
    Partial Private Sub Ondpo_anlChanging(value As String)
    End Sub
    Partial Private Sub Ondpo_anlChanged()
    End Sub
    Partial Private Sub Ondpo_mot_prtChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub Ondpo_mot_prtChanged()
    End Sub
    Partial Private Sub Ondpo_orfChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub Ondpo_orfChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		Me._egr_sec_cls = New EntitySet(Of egr_sec_cls)(AddressOf Me.attach_egr_sec_cls, AddressOf Me.detach_egr_sec_cls)
		Me._ing_sec_cls = New EntitySet(Of ing_sec_cls)(AddressOf Me.attach_ing_sec_cls, AddressOf Me.detach_ing_sec_cls)
		Me._bco_cls = CType(Nothing, EntityRef(Of bco_cls))
		Me._cxc_cls = CType(Nothing, EntityRef(Of cxc_cls))
		Me._cxp_cls = CType(Nothing, EntityRef(Of cxp_cls))
		Me._nma_cls = CType(Nothing, EntityRef(Of nma_cls))
		Me._P_0023_cls = CType(Nothing, EntityRef(Of P_0023_cls))
		Me._P_0052_cls = CType(Nothing, EntityRef(Of P_0052_cls))
		Me._P_0061_cls = CType(Nothing, EntityRef(Of P_0061_cls))
		Me._P_0087_cls = CType(Nothing, EntityRef(Of P_0087_cls))
		Me._PL_000047_cls = CType(Nothing, EntityRef(Of PL_000047_cls))
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_id_dpo", AutoSync:=AutoSync.OnInsert, DbType:="Decimal(10,0) NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property id_dpo() As Decimal
		Get
			Return Me._id_dpo
		End Get
		Set
			If ((Me._id_dpo = value)  _
						= false) Then
				Me.Onid_dpoChanging(value)
				Me.SendPropertyChanging
				Me._id_dpo = value
				Me.SendPropertyChanged("id_dpo")
				Me.Onid_dpoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_id_nma", DbType:="Decimal(10,0)")>  _
	Public Property id_nma() As System.Nullable(Of Decimal)
		Get
			Return Me._id_nma
		End Get
		Set
			If (Me._id_nma.Equals(value) = false) Then
				If Me._nma_cls.HasLoadedOrAssignedValue Then
					Throw New System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException()
				End If
				Me.Onid_nmaChanging(value)
				Me.SendPropertyChanging
				Me._id_nma = value
				Me.SendPropertyChanged("id_nma")
				Me.Onid_nmaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_id_bco", DbType:="Int")>  _
	Public Property id_bco() As System.Nullable(Of Integer)
		Get
			Return Me._id_bco
		End Get
		Set
			If (Me._id_bco.Equals(value) = false) Then
				If Me._bco_cls.HasLoadedOrAssignedValue Then
					Throw New System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException()
				End If
				Me.Onid_bcoChanging(value)
				Me.SendPropertyChanging
				Me._id_bco = value
				Me.SendPropertyChanged("id_bco")
				Me.Onid_bcoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_id_cxp", DbType:="Decimal(10,0)")>  _
	Public Property id_cxp() As System.Nullable(Of Decimal)
		Get
			Return Me._id_cxp
		End Get
		Set
			If (Me._id_cxp.Equals(value) = false) Then
				If Me._cxp_cls.HasLoadedOrAssignedValue Then
					Throw New System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException()
				End If
				Me.Onid_cxpChanging(value)
				Me.SendPropertyChanging
				Me._id_cxp = value
				Me.SendPropertyChanged("id_cxp")
				Me.Onid_cxpChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_id_cxc", DbType:="Decimal(10,0)")>  _
	Public Property id_cxc() As System.Nullable(Of Decimal)
		Get
			Return Me._id_cxc
		End Get
		Set
			If (Me._id_cxc.Equals(value) = false) Then
				If Me._cxc_cls.HasLoadedOrAssignedValue Then
					Throw New System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException()
				End If
				Me.Onid_cxcChanging(value)
				Me.SendPropertyChanging
				Me._id_cxc = value
				Me.SendPropertyChanged("id_cxc")
				Me.Onid_cxcChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_id_P_0023", DbType:="Int")>  _
	Public Property id_P_0023() As System.Nullable(Of Integer)
		Get
			Return Me._id_P_0023
		End Get
		Set
			If (Me._id_P_0023.Equals(value) = false) Then
				If Me._P_0023_cls.HasLoadedOrAssignedValue Then
					Throw New System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException()
				End If
				Me.Onid_P_0023Changing(value)
				Me.SendPropertyChanging
				Me._id_P_0023 = value
				Me.SendPropertyChanged("id_P_0023")
				Me.Onid_P_0023Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_id_P_0052", DbType:="Int")>  _
	Public Property id_P_0052() As System.Nullable(Of Integer)
		Get
			Return Me._id_P_0052
		End Get
		Set
			If (Me._id_P_0052.Equals(value) = false) Then
				If Me._P_0052_cls.HasLoadedOrAssignedValue Then
					Throw New System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException()
				End If
				Me.Onid_P_0052Changing(value)
				Me.SendPropertyChanging
				Me._id_P_0052 = value
				Me.SendPropertyChanged("id_P_0052")
				Me.Onid_P_0052Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_id_P_0054", DbType:="Int")>  _
	Public Property id_P_0054() As System.Nullable(Of Integer)
		Get
			Return Me._id_P_0054
		End Get
		Set
			If (Me._id_P_0054.Equals(value) = false) Then
				Me.Onid_P_0054Changing(value)
				Me.SendPropertyChanging
				Me._id_P_0054 = value
				Me.SendPropertyChanged("id_P_0054")
				Me.Onid_P_0054Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_id_P_0061", DbType:="Int")>  _
	Public Property id_P_0061() As System.Nullable(Of Integer)
		Get
			Return Me._id_P_0061
		End Get
		Set
			If (Me._id_P_0061.Equals(value) = false) Then
				If Me._P_0061_cls.HasLoadedOrAssignedValue Then
					Throw New System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException()
				End If
				Me.Onid_P_0061Changing(value)
				Me.SendPropertyChanging
				Me._id_P_0061 = value
				Me.SendPropertyChanged("id_P_0061")
				Me.Onid_P_0061Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_id_P_0087", DbType:="Int")>  _
	Public Property id_P_0087() As System.Nullable(Of Integer)
		Get
			Return Me._id_P_0087
		End Get
		Set
			If (Me._id_P_0087.Equals(value) = false) Then
				If Me._P_0087_cls.HasLoadedOrAssignedValue Then
					Throw New System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException()
				End If
				Me.Onid_P_0087Changing(value)
				Me.SendPropertyChanging
				Me._id_P_0087 = value
				Me.SendPropertyChanged("id_P_0087")
				Me.Onid_P_0087Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_id_PL_000047", DbType:="Char(6)")>  _
	Public Property id_PL_000047() As String
		Get
			Return Me._id_PL_000047
		End Get
		Set
			If (String.Equals(Me._id_PL_000047, value) = false) Then
				If Me._PL_000047_cls.HasLoadedOrAssignedValue Then
					Throw New System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException()
				End If
				Me.Onid_PL_000047Changing(value)
				Me.SendPropertyChanging
				Me._id_PL_000047 = value
				Me.SendPropertyChanged("id_PL_000047")
				Me.Onid_PL_000047Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_dpo_num", DbType:="VarChar(11)")>  _
	Public Property dpo_num() As String
		Get
			Return Me._dpo_num
		End Get
		Set
			If (String.Equals(Me._dpo_num, value) = false) Then
				Me.Ondpo_numChanging(value)
				Me.SendPropertyChanging
				Me._dpo_num = value
				Me.SendPropertyChanged("dpo_num")
				Me.Ondpo_numChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_dpo_ioe", DbType:="Char(1)")>  _
	Public Property dpo_ioe() As System.Nullable(Of Char)
		Get
			Return Me._dpo_ioe
		End Get
		Set
			If (Me._dpo_ioe.Equals(value) = false) Then
				Me.Ondpo_ioeChanging(value)
				Me.SendPropertyChanging
				Me._dpo_ioe = value
				Me.SendPropertyChanged("dpo_ioe")
				Me.Ondpo_ioeChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_dpo_mto", DbType:="Money")>  _
	Public Property dpo_mto() As System.Nullable(Of Decimal)
		Get
			Return Me._dpo_mto
		End Get
		Set
			If (Me._dpo_mto.Equals(value) = false) Then
				Me.Ondpo_mtoChanging(value)
				Me.SendPropertyChanging
				Me._dpo_mto = value
				Me.SendPropertyChanged("dpo_mto")
				Me.Ondpo_mtoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_dpo_fec_emi", DbType:="DateTime")>  _
	Public Property dpo_fec_emi() As System.Nullable(Of Date)
		Get
			Return Me._dpo_fec_emi
		End Get
		Set
			If (Me._dpo_fec_emi.Equals(value) = false) Then
				Me.Ondpo_fec_emiChanging(value)
				Me.SendPropertyChanging
				Me._dpo_fec_emi = value
				Me.SendPropertyChanged("dpo_fec_emi")
				Me.Ondpo_fec_emiChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_dpo_fev", DbType:="DateTime")>  _
	Public Property dpo_fev() As System.Nullable(Of Date)
		Get
			Return Me._dpo_fev
		End Get
		Set
			If (Me._dpo_fev.Equals(value) = false) Then
				Me.Ondpo_fevChanging(value)
				Me.SendPropertyChanging
				Me._dpo_fev = value
				Me.SendPropertyChanged("dpo_fev")
				Me.Ondpo_fevChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_dpo_cct", DbType:="VarChar(50)")>  _
	Public Property dpo_cct() As String
		Get
			Return Me._dpo_cct
		End Get
		Set
			If (String.Equals(Me._dpo_cct, value) = false) Then
				Me.Ondpo_cctChanging(value)
				Me.SendPropertyChanging
				Me._dpo_cct = value
				Me.SendPropertyChanged("dpo_cct")
				Me.Ondpo_cctChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_dpo_aor", DbType:="VarChar(50)")>  _
	Public Property dpo_aor() As String
		Get
			Return Me._dpo_aor
		End Get
		Set
			If (String.Equals(Me._dpo_aor, value) = false) Then
				Me.Ondpo_aorChanging(value)
				Me.SendPropertyChanging
				Me._dpo_aor = value
				Me.SendPropertyChanged("dpo_aor")
				Me.Ondpo_aorChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_dpo_anl", DbType:="VarChar(1)")>  _
	Public Property dpo_anl() As String
		Get
			Return Me._dpo_anl
		End Get
		Set
			If (String.Equals(Me._dpo_anl, value) = false) Then
				Me.Ondpo_anlChanging(value)
				Me.SendPropertyChanging
				Me._dpo_anl = value
				Me.SendPropertyChanged("dpo_anl")
				Me.Ondpo_anlChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_dpo_mot_prt", DbType:="Int")>  _
	Public Property dpo_mot_prt() As System.Nullable(Of Integer)
		Get
			Return Me._dpo_mot_prt
		End Get
		Set
			If (Me._dpo_mot_prt.Equals(value) = false) Then
				Me.Ondpo_mot_prtChanging(value)
				Me.SendPropertyChanging
				Me._dpo_mot_prt = value
				Me.SendPropertyChanged("dpo_mot_prt")
				Me.Ondpo_mot_prtChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_dpo_orf", DbType:="Int")>  _
	Public Property dpo_orf() As System.Nullable(Of Integer)
		Get
			Return Me._dpo_orf
		End Get
		Set
			If (Me._dpo_orf.Equals(value) = false) Then
				Me.Ondpo_orfChanging(value)
				Me.SendPropertyChanging
				Me._dpo_orf = value
				Me.SendPropertyChanged("dpo_orf")
				Me.Ondpo_orfChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="dpo_cls_egr_sec_cls", Storage:="_egr_sec_cls", ThisKey:="id_dpo", OtherKey:="id_dpo")>  _
	Public Property egr_sec_cls() As EntitySet(Of egr_sec_cls)
		Get
			Return Me._egr_sec_cls
		End Get
		Set
			Me._egr_sec_cls.Assign(value)
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="dpo_cls_ing_sec_cls", Storage:="_ing_sec_cls", ThisKey:="id_dpo", OtherKey:="id_dpo")>  _
	Public Property ing_sec_cls() As EntitySet(Of ing_sec_cls)
		Get
			Return Me._ing_sec_cls
		End Get
		Set
			Me._ing_sec_cls.Assign(value)
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="bco_cls_dpo_cls", Storage:="_bco_cls", ThisKey:="id_bco", OtherKey:="id_bco", IsForeignKey:=true)>  _
	Public Property bco_cls() As bco_cls
		Get
			Return Me._bco_cls.Entity
		End Get
		Set
			Dim previousValue As bco_cls = Me._bco_cls.Entity
			If ((Object.Equals(previousValue, value) = false)  _
						OrElse (Me._bco_cls.HasLoadedOrAssignedValue = false)) Then
				Me.SendPropertyChanging
				If ((previousValue Is Nothing)  _
							= false) Then
					Me._bco_cls.Entity = Nothing
					previousValue.dpo_cls.Remove(Me)
				End If
				Me._bco_cls.Entity = value
				If ((value Is Nothing)  _
							= false) Then
					value.dpo_cls.Add(Me)
					Me._id_bco = value.id_bco
				Else
					Me._id_bco = CType(Nothing, Nullable(Of Integer))
				End If
				Me.SendPropertyChanged("bco_cls")
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="cxc_cls_dpo_cls", Storage:="_cxc_cls", ThisKey:="id_cxc", OtherKey:="id_cxc", IsForeignKey:=true)>  _
	Public Property cxc_cls() As cxc_cls
		Get
			Return Me._cxc_cls.Entity
		End Get
		Set
			Dim previousValue As cxc_cls = Me._cxc_cls.Entity
			If ((Object.Equals(previousValue, value) = false)  _
						OrElse (Me._cxc_cls.HasLoadedOrAssignedValue = false)) Then
				Me.SendPropertyChanging
				If ((previousValue Is Nothing)  _
							= false) Then
					Me._cxc_cls.Entity = Nothing
					previousValue.dpo_cls.Remove(Me)
				End If
				Me._cxc_cls.Entity = value
				If ((value Is Nothing)  _
							= false) Then
					value.dpo_cls.Add(Me)
					Me._id_cxc = value.id_cxc
				Else
					Me._id_cxc = CType(Nothing, Nullable(Of Decimal))
				End If
				Me.SendPropertyChanged("cxc_cls")
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="cxp_cls_dpo_cls", Storage:="_cxp_cls", ThisKey:="id_cxp", OtherKey:="id_cxp", IsForeignKey:=true)>  _
	Public Property cxp_cls() As cxp_cls
		Get
			Return Me._cxp_cls.Entity
		End Get
		Set
			Dim previousValue As cxp_cls = Me._cxp_cls.Entity
			If ((Object.Equals(previousValue, value) = false)  _
						OrElse (Me._cxp_cls.HasLoadedOrAssignedValue = false)) Then
				Me.SendPropertyChanging
				If ((previousValue Is Nothing)  _
							= false) Then
					Me._cxp_cls.Entity = Nothing
					previousValue.dpo_cls.Remove(Me)
				End If
				Me._cxp_cls.Entity = value
				If ((value Is Nothing)  _
							= false) Then
					value.dpo_cls.Add(Me)
					Me._id_cxp = value.id_cxp
				Else
					Me._id_cxp = CType(Nothing, Nullable(Of Decimal))
				End If
				Me.SendPropertyChanged("cxp_cls")
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="nma_cls_dpo_cls", Storage:="_nma_cls", ThisKey:="id_nma", OtherKey:="id_nma", IsForeignKey:=true)>  _
	Public Property nma_cls() As nma_cls
		Get
			Return Me._nma_cls.Entity
		End Get
		Set
			Dim previousValue As nma_cls = Me._nma_cls.Entity
			If ((Object.Equals(previousValue, value) = false)  _
						OrElse (Me._nma_cls.HasLoadedOrAssignedValue = false)) Then
				Me.SendPropertyChanging
				If ((previousValue Is Nothing)  _
							= false) Then
					Me._nma_cls.Entity = Nothing
					previousValue.dpo_cls.Remove(Me)
				End If
				Me._nma_cls.Entity = value
				If ((value Is Nothing)  _
							= false) Then
					value.dpo_cls.Add(Me)
					Me._id_nma = value.id_nma
				Else
					Me._id_nma = CType(Nothing, Nullable(Of Decimal))
				End If
				Me.SendPropertyChanged("nma_cls")
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="P_0023_cls_dpo_cls", Storage:="_P_0023_cls", ThisKey:="id_P_0023", OtherKey:="id_P_0023", IsForeignKey:=true)>  _
	Public Property P_0023_cls() As P_0023_cls
		Get
			Return Me._P_0023_cls.Entity
		End Get
		Set
			Dim previousValue As P_0023_cls = Me._P_0023_cls.Entity
			If ((Object.Equals(previousValue, value) = false)  _
						OrElse (Me._P_0023_cls.HasLoadedOrAssignedValue = false)) Then
				Me.SendPropertyChanging
				If ((previousValue Is Nothing)  _
							= false) Then
					Me._P_0023_cls.Entity = Nothing
					previousValue.dpo_cls.Remove(Me)
				End If
				Me._P_0023_cls.Entity = value
				If ((value Is Nothing)  _
							= false) Then
					value.dpo_cls.Add(Me)
					Me._id_P_0023 = value.id_P_0023
				Else
					Me._id_P_0023 = CType(Nothing, Nullable(Of Integer))
				End If
				Me.SendPropertyChanged("P_0023_cls")
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="P_0052_cls_dpo_cls", Storage:="_P_0052_cls", ThisKey:="id_P_0052", OtherKey:="id_P_0052", IsForeignKey:=true)>  _
	Public Property P_0052_cls() As P_0052_cls
		Get
			Return Me._P_0052_cls.Entity
		End Get
		Set
			Dim previousValue As P_0052_cls = Me._P_0052_cls.Entity
			If ((Object.Equals(previousValue, value) = false)  _
						OrElse (Me._P_0052_cls.HasLoadedOrAssignedValue = false)) Then
				Me.SendPropertyChanging
				If ((previousValue Is Nothing)  _
							= false) Then
					Me._P_0052_cls.Entity = Nothing
					previousValue.dpo_cls.Remove(Me)
				End If
				Me._P_0052_cls.Entity = value
				If ((value Is Nothing)  _
							= false) Then
					value.dpo_cls.Add(Me)
					Me._id_P_0052 = value.id_P_0052
				Else
					Me._id_P_0052 = CType(Nothing, Nullable(Of Integer))
				End If
				Me.SendPropertyChanged("P_0052_cls")
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="P_0061_cls_dpo_cls", Storage:="_P_0061_cls", ThisKey:="id_P_0061", OtherKey:="id_P_0061", IsForeignKey:=true)>  _
	Public Property P_0061_cls() As P_0061_cls
		Get
			Return Me._P_0061_cls.Entity
		End Get
		Set
			Dim previousValue As P_0061_cls = Me._P_0061_cls.Entity
			If ((Object.Equals(previousValue, value) = false)  _
						OrElse (Me._P_0061_cls.HasLoadedOrAssignedValue = false)) Then
				Me.SendPropertyChanging
				If ((previousValue Is Nothing)  _
							= false) Then
					Me._P_0061_cls.Entity = Nothing
					previousValue.dpo_cls.Remove(Me)
				End If
				Me._P_0061_cls.Entity = value
				If ((value Is Nothing)  _
							= false) Then
					value.dpo_cls.Add(Me)
					Me._id_P_0061 = value.id_P_0061
				Else
					Me._id_P_0061 = CType(Nothing, Nullable(Of Integer))
				End If
				Me.SendPropertyChanged("P_0061_cls")
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="P_0087_cls_dpo_cls", Storage:="_P_0087_cls", ThisKey:="id_P_0087", OtherKey:="id_P_0087", IsForeignKey:=true)>  _
	Public Property P_0087_cls() As P_0087_cls
		Get
			Return Me._P_0087_cls.Entity
		End Get
		Set
			Dim previousValue As P_0087_cls = Me._P_0087_cls.Entity
			If ((Object.Equals(previousValue, value) = false)  _
						OrElse (Me._P_0087_cls.HasLoadedOrAssignedValue = false)) Then
				Me.SendPropertyChanging
				If ((previousValue Is Nothing)  _
							= false) Then
					Me._P_0087_cls.Entity = Nothing
					previousValue.dpo_cls.Remove(Me)
				End If
				Me._P_0087_cls.Entity = value
				If ((value Is Nothing)  _
							= false) Then
					value.dpo_cls.Add(Me)
					Me._id_P_0087 = value.id_P_0087
				Else
					Me._id_P_0087 = CType(Nothing, Nullable(Of Integer))
				End If
				Me.SendPropertyChanged("P_0087_cls")
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="PL_000047_cls_dpo_cls", Storage:="_PL_000047_cls", ThisKey:="id_PL_000047", OtherKey:="id_PL_000047", IsForeignKey:=true)>  _
	Public Property PL_000047_cls() As PL_000047_cls
		Get
			Return Me._PL_000047_cls.Entity
		End Get
		Set
			Dim previousValue As PL_000047_cls = Me._PL_000047_cls.Entity
			If ((Object.Equals(previousValue, value) = false)  _
						OrElse (Me._PL_000047_cls.HasLoadedOrAssignedValue = false)) Then
				Me.SendPropertyChanging
				If ((previousValue Is Nothing)  _
							= false) Then
					Me._PL_000047_cls.Entity = Nothing
					previousValue.dpo_cls.Remove(Me)
				End If
				Me._PL_000047_cls.Entity = value
				If ((value Is Nothing)  _
							= false) Then
					value.dpo_cls.Add(Me)
					Me._id_PL_000047 = value.id_PL_000047
				Else
					Me._id_PL_000047 = CType(Nothing, String)
				End If
				Me.SendPropertyChanged("PL_000047_cls")
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
	
	Private Sub attach_egr_sec_cls(ByVal entity As egr_sec_cls)
		Me.SendPropertyChanging
		entity.dpo_cls = Me
	End Sub
	
	Private Sub detach_egr_sec_cls(ByVal entity As egr_sec_cls)
		Me.SendPropertyChanging
		entity.dpo_cls = Nothing
	End Sub
	
	Private Sub attach_ing_sec_cls(ByVal entity As ing_sec_cls)
		Me.SendPropertyChanging
		entity.dpo_cls = Me
	End Sub
	
	Private Sub detach_ing_sec_cls(ByVal entity As ing_sec_cls)
		Me.SendPropertyChanging
		entity.dpo_cls = Nothing
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.drc")>  _
Partial Public Class drc_cls
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _id_drc As Decimal
	
	Private _id_hre As Decimal
	
	Private _id_gsn As Decimal
	
	Private _id_P_0103 As System.Nullable(Of Integer)
	
	Private _drc_est As System.Nullable(Of Char)
	
	Private _drc_fec_pag As System.Nullable(Of Date)
	
	Private _drc_ntf_rec As String
	
	Private _drc_pen As System.Nullable(Of Char)
	
	Private _drc_fec_pen As System.Nullable(Of Date)
	
	Private _gsn_cls As EntityRef(Of gsn_cls)
	
	Private _hre_cls As EntityRef(Of hre_cls)
	
	Private _P_0103_cls As EntityRef(Of P_0103_cls)
	
    #Region "Definiciones de métodos de extensibilidad"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub Onid_drcChanging(value As Decimal)
    End Sub
    Partial Private Sub Onid_drcChanged()
    End Sub
    Partial Private Sub Onid_hreChanging(value As Decimal)
    End Sub
    Partial Private Sub Onid_hreChanged()
    End Sub
    Partial Private Sub Onid_gsnChanging(value As Decimal)
    End Sub
    Partial Private Sub Onid_gsnChanged()
    End Sub
    Partial Private Sub Onid_P_0103Changing(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub Onid_P_0103Changed()
    End Sub
    Partial Private Sub Ondrc_estChanging(value As System.Nullable(Of Char))
    End Sub
    Partial Private Sub Ondrc_estChanged()
    End Sub
    Partial Private Sub Ondrc_fec_pagChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub Ondrc_fec_pagChanged()
    End Sub
    Partial Private Sub Ondrc_ntf_recChanging(value As String)
    End Sub
    Partial Private Sub Ondrc_ntf_recChanged()
    End Sub
    Partial Private Sub Ondrc_penChanging(value As System.Nullable(Of Char))
    End Sub
    Partial Private Sub Ondrc_penChanged()
    End Sub
    Partial Private Sub Ondrc_fec_penChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub Ondrc_fec_penChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		Me._gsn_cls = CType(Nothing, EntityRef(Of gsn_cls))
		Me._hre_cls = CType(Nothing, EntityRef(Of hre_cls))
		Me._P_0103_cls = CType(Nothing, EntityRef(Of P_0103_cls))
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_id_drc", AutoSync:=AutoSync.OnInsert, DbType:="Decimal(10,0) NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property id_drc() As Decimal
		Get
			Return Me._id_drc
		End Get
		Set
			If ((Me._id_drc = value)  _
						= false) Then
				Me.Onid_drcChanging(value)
				Me.SendPropertyChanging
				Me._id_drc = value
				Me.SendPropertyChanged("id_drc")
				Me.Onid_drcChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_id_hre", DbType:="Decimal(5,0) NOT NULL")>  _
	Public Property id_hre() As Decimal
		Get
			Return Me._id_hre
		End Get
		Set
			If ((Me._id_hre = value)  _
						= false) Then
				If Me._hre_cls.HasLoadedOrAssignedValue Then
					Throw New System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException()
				End If
				Me.Onid_hreChanging(value)
				Me.SendPropertyChanging
				Me._id_hre = value
				Me.SendPropertyChanged("id_hre")
				Me.Onid_hreChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_id_gsn", DbType:="Decimal(18,0) NOT NULL")>  _
	Public Property id_gsn() As Decimal
		Get
			Return Me._id_gsn
		End Get
		Set
			If ((Me._id_gsn = value)  _
						= false) Then
				If Me._gsn_cls.HasLoadedOrAssignedValue Then
					Throw New System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException()
				End If
				Me.Onid_gsnChanging(value)
				Me.SendPropertyChanging
				Me._id_gsn = value
				Me.SendPropertyChanged("id_gsn")
				Me.Onid_gsnChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_id_P_0103", DbType:="Int")>  _
	Public Property id_P_0103() As System.Nullable(Of Integer)
		Get
			Return Me._id_P_0103
		End Get
		Set
			If (Me._id_P_0103.Equals(value) = false) Then
				If Me._P_0103_cls.HasLoadedOrAssignedValue Then
					Throw New System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException()
				End If
				Me.Onid_P_0103Changing(value)
				Me.SendPropertyChanging
				Me._id_P_0103 = value
				Me.SendPropertyChanged("id_P_0103")
				Me.Onid_P_0103Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_drc_est", DbType:="Char(1)")>  _
	Public Property drc_est() As System.Nullable(Of Char)
		Get
			Return Me._drc_est
		End Get
		Set
			If (Me._drc_est.Equals(value) = false) Then
				Me.Ondrc_estChanging(value)
				Me.SendPropertyChanging
				Me._drc_est = value
				Me.SendPropertyChanged("drc_est")
				Me.Ondrc_estChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_drc_fec_pag", DbType:="DateTime")>  _
	Public Property drc_fec_pag() As System.Nullable(Of Date)
		Get
			Return Me._drc_fec_pag
		End Get
		Set
			If (Me._drc_fec_pag.Equals(value) = false) Then
				Me.Ondrc_fec_pagChanging(value)
				Me.SendPropertyChanging
				Me._drc_fec_pag = value
				Me.SendPropertyChanged("drc_fec_pag")
				Me.Ondrc_fec_pagChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_drc_ntf_rec", DbType:="VarChar(1)")>  _
	Public Property drc_ntf_rec() As String
		Get
			Return Me._drc_ntf_rec
		End Get
		Set
			If (String.Equals(Me._drc_ntf_rec, value) = false) Then
				Me.Ondrc_ntf_recChanging(value)
				Me.SendPropertyChanging
				Me._drc_ntf_rec = value
				Me.SendPropertyChanged("drc_ntf_rec")
				Me.Ondrc_ntf_recChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_drc_pen", DbType:="Char(1)")>  _
	Public Property drc_pen() As System.Nullable(Of Char)
		Get
			Return Me._drc_pen
		End Get
		Set
			If (Me._drc_pen.Equals(value) = false) Then
				Me.Ondrc_penChanging(value)
				Me.SendPropertyChanging
				Me._drc_pen = value
				Me.SendPropertyChanged("drc_pen")
				Me.Ondrc_penChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_drc_fec_pen", DbType:="DateTime")>  _
	Public Property drc_fec_pen() As System.Nullable(Of Date)
		Get
			Return Me._drc_fec_pen
		End Get
		Set
			If (Me._drc_fec_pen.Equals(value) = false) Then
				Me.Ondrc_fec_penChanging(value)
				Me.SendPropertyChanging
				Me._drc_fec_pen = value
				Me.SendPropertyChanged("drc_fec_pen")
				Me.Ondrc_fec_penChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="gsn_cls_drc_cls", Storage:="_gsn_cls", ThisKey:="id_gsn", OtherKey:="id_gsn", IsForeignKey:=true)>  _
	Public Property gsn_cls() As gsn_cls
		Get
			Return Me._gsn_cls.Entity
		End Get
		Set
			Dim previousValue As gsn_cls = Me._gsn_cls.Entity
			If ((Object.Equals(previousValue, value) = false)  _
						OrElse (Me._gsn_cls.HasLoadedOrAssignedValue = false)) Then
				Me.SendPropertyChanging
				If ((previousValue Is Nothing)  _
							= false) Then
					Me._gsn_cls.Entity = Nothing
					previousValue.drc_cls.Remove(Me)
				End If
				Me._gsn_cls.Entity = value
				If ((value Is Nothing)  _
							= false) Then
					value.drc_cls.Add(Me)
					Me._id_gsn = value.id_gsn
				Else
					Me._id_gsn = CType(Nothing, Decimal)
				End If
				Me.SendPropertyChanged("gsn_cls")
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="hre_cls_drc_cls", Storage:="_hre_cls", ThisKey:="id_hre", OtherKey:="id_hre", IsForeignKey:=true)>  _
	Public Property hre_cls() As hre_cls
		Get
			Return Me._hre_cls.Entity
		End Get
		Set
			Dim previousValue As hre_cls = Me._hre_cls.Entity
			If ((Object.Equals(previousValue, value) = false)  _
						OrElse (Me._hre_cls.HasLoadedOrAssignedValue = false)) Then
				Me.SendPropertyChanging
				If ((previousValue Is Nothing)  _
							= false) Then
					Me._hre_cls.Entity = Nothing
					previousValue.drc_cls.Remove(Me)
				End If
				Me._hre_cls.Entity = value
				If ((value Is Nothing)  _
							= false) Then
					value.drc_cls.Add(Me)
					Me._id_hre = value.id_hre
				Else
					Me._id_hre = CType(Nothing, Decimal)
				End If
				Me.SendPropertyChanged("hre_cls")
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="P_0103_cls_drc_cls", Storage:="_P_0103_cls", ThisKey:="id_P_0103", OtherKey:="id_P_0103", IsForeignKey:=true)>  _
	Public Property P_0103_cls() As P_0103_cls
		Get
			Return Me._P_0103_cls.Entity
		End Get
		Set
			Dim previousValue As P_0103_cls = Me._P_0103_cls.Entity
			If ((Object.Equals(previousValue, value) = false)  _
						OrElse (Me._P_0103_cls.HasLoadedOrAssignedValue = false)) Then
				Me.SendPropertyChanging
				If ((previousValue Is Nothing)  _
							= false) Then
					Me._P_0103_cls.Entity = Nothing
					previousValue.drc_cls.Remove(Me)
				End If
				Me._P_0103_cls.Entity = value
				If ((value Is Nothing)  _
							= false) Then
					value.drc_cls.Add(Me)
					Me._id_P_0103 = value.id_P_0103
				Else
					Me._id_P_0103 = CType(Nothing, Nullable(Of Integer))
				End If
				Me.SendPropertyChanged("P_0103_cls")
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.dsb")>  _
Partial Public Class dsb_cls
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _cli_idc As String
	
	Private _id_p_0031 As Integer
	
	Private _dsb_mor_001 As System.Nullable(Of Decimal)
	
	Private _dsb_mor_002 As System.Nullable(Of Decimal)
	
	Private _dsb_mor_003 As System.Nullable(Of Decimal)
	
	Private _dsb_mor_004 As System.Nullable(Of Decimal)
	
	Private _dsb_mor_005 As System.Nullable(Of Decimal)
	
	Private _dsb_ven_001 As System.Nullable(Of Decimal)
	
	Private _dsb_ven_002 As System.Nullable(Of Decimal)
	
	Private _dsb_ven_003 As System.Nullable(Of Decimal)
	
	Private _dsb_ven_004 As System.Nullable(Of Decimal)
	
	Private _dsb_ven_005 As System.Nullable(Of Decimal)
	
	Private _dsb_mor_ddr_001 As System.Nullable(Of Decimal)
	
	Private _dsb_mor_ddr_002 As System.Nullable(Of Decimal)
	
	Private _dsb_mor_ddr_003 As System.Nullable(Of Decimal)
	
	Private _dsb_mor_ddr_004 As System.Nullable(Of Decimal)
	
	Private _dsb_mor_ddr_005 As System.Nullable(Of Decimal)
	
	Private _dsb_ven_ddr_001 As System.Nullable(Of Decimal)
	
	Private _dsb_ven_ddr_002 As System.Nullable(Of Decimal)
	
	Private _dsb_ven_ddr_003 As System.Nullable(Of Decimal)
	
	Private _dsb_ven_ddr_004 As System.Nullable(Of Decimal)
	
	Private _dsb_ven_ddr_005 As System.Nullable(Of Decimal)
	
	Private _dsb_ctd_mor_m60 As System.Nullable(Of Integer)
	
	Private _cli_cls As EntityRef(Of cli_cls)
	
	Private _P_0031_cls As EntityRef(Of P_0031_cls)
	
    #Region "Definiciones de métodos de extensibilidad"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub Oncli_idcChanging(value As String)
    End Sub
    Partial Private Sub Oncli_idcChanged()
    End Sub
    Partial Private Sub Onid_p_0031Changing(value As Integer)
    End Sub
    Partial Private Sub Onid_p_0031Changed()
    End Sub
    Partial Private Sub Ondsb_mor_001Changing(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub Ondsb_mor_001Changed()
    End Sub
    Partial Private Sub Ondsb_mor_002Changing(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub Ondsb_mor_002Changed()
    End Sub
    Partial Private Sub Ondsb_mor_003Changing(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub Ondsb_mor_003Changed()
    End Sub
    Partial Private Sub Ondsb_mor_004Changing(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub Ondsb_mor_004Changed()
    End Sub
    Partial Private Sub Ondsb_mor_005Changing(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub Ondsb_mor_005Changed()
    End Sub
    Partial Private Sub Ondsb_ven_001Changing(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub Ondsb_ven_001Changed()
    End Sub
    Partial Private Sub Ondsb_ven_002Changing(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub Ondsb_ven_002Changed()
    End Sub
    Partial Private Sub Ondsb_ven_003Changing(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub Ondsb_ven_003Changed()
    End Sub
    Partial Private Sub Ondsb_ven_004Changing(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub Ondsb_ven_004Changed()
    End Sub
    Partial Private Sub Ondsb_ven_005Changing(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub Ondsb_ven_005Changed()
    End Sub
    Partial Private Sub Ondsb_mor_ddr_001Changing(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub Ondsb_mor_ddr_001Changed()
    End Sub
    Partial Private Sub Ondsb_mor_ddr_002Changing(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub Ondsb_mor_ddr_002Changed()
    End Sub
    Partial Private Sub Ondsb_mor_ddr_003Changing(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub Ondsb_mor_ddr_003Changed()
    End Sub
    Partial Private Sub Ondsb_mor_ddr_004Changing(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub Ondsb_mor_ddr_004Changed()
    End Sub
    Partial Private Sub Ondsb_mor_ddr_005Changing(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub Ondsb_mor_ddr_005Changed()
    End Sub
    Partial Private Sub Ondsb_ven_ddr_001Changing(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub Ondsb_ven_ddr_001Changed()
    End Sub
    Partial Private Sub Ondsb_ven_ddr_002Changing(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub Ondsb_ven_ddr_002Changed()
    End Sub
    Partial Private Sub Ondsb_ven_ddr_003Changing(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub Ondsb_ven_ddr_003Changed()
    End Sub
    Partial Private Sub Ondsb_ven_ddr_004Changing(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub Ondsb_ven_ddr_004Changed()
    End Sub
    Partial Private Sub Ondsb_ven_ddr_005Changing(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub Ondsb_ven_ddr_005Changed()
    End Sub
    Partial Private Sub Ondsb_ctd_mor_m60Changing(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub Ondsb_ctd_mor_m60Changed()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		Me._cli_cls = CType(Nothing, EntityRef(Of cli_cls))
		Me._P_0031_cls = CType(Nothing, EntityRef(Of P_0031_cls))
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_cli_idc", DbType:="Char(12) NOT NULL", CanBeNull:=false, IsPrimaryKey:=true)>  _
	Public Property cli_idc() As String
		Get
			Return Me._cli_idc
		End Get
		Set
			If (String.Equals(Me._cli_idc, value) = false) Then
				If Me._cli_cls.HasLoadedOrAssignedValue Then
					Throw New System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException()
				End If
				Me.Oncli_idcChanging(value)
				Me.SendPropertyChanging
				Me._cli_idc = value
				Me.SendPropertyChanged("cli_idc")
				Me.Oncli_idcChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_id_p_0031", DbType:="Int NOT NULL", IsPrimaryKey:=true)>  _
	Public Property id_p_0031() As Integer
		Get
			Return Me._id_p_0031
		End Get
		Set
			If ((Me._id_p_0031 = value)  _
						= false) Then
				If Me._P_0031_cls.HasLoadedOrAssignedValue Then
					Throw New System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException()
				End If
				Me.Onid_p_0031Changing(value)
				Me.SendPropertyChanging
				Me._id_p_0031 = value
				Me.SendPropertyChanged("id_p_0031")
				Me.Onid_p_0031Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_dsb_mor_001", DbType:="Money")>  _
	Public Property dsb_mor_001() As System.Nullable(Of Decimal)
		Get
			Return Me._dsb_mor_001
		End Get
		Set
			If (Me._dsb_mor_001.Equals(value) = false) Then
				Me.Ondsb_mor_001Changing(value)
				Me.SendPropertyChanging
				Me._dsb_mor_001 = value
				Me.SendPropertyChanged("dsb_mor_001")
				Me.Ondsb_mor_001Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_dsb_mor_002", DbType:="Money")>  _
	Public Property dsb_mor_002() As System.Nullable(Of Decimal)
		Get
			Return Me._dsb_mor_002
		End Get
		Set
			If (Me._dsb_mor_002.Equals(value) = false) Then
				Me.Ondsb_mor_002Changing(value)
				Me.SendPropertyChanging
				Me._dsb_mor_002 = value
				Me.SendPropertyChanged("dsb_mor_002")
				Me.Ondsb_mor_002Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_dsb_mor_003", DbType:="Money")>  _
	Public Property dsb_mor_003() As System.Nullable(Of Decimal)
		Get
			Return Me._dsb_mor_003
		End Get
		Set
			If (Me._dsb_mor_003.Equals(value) = false) Then
				Me.Ondsb_mor_003Changing(value)
				Me.SendPropertyChanging
				Me._dsb_mor_003 = value
				Me.SendPropertyChanged("dsb_mor_003")
				Me.Ondsb_mor_003Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_dsb_mor_004", DbType:="Money")>  _
	Public Property dsb_mor_004() As System.Nullable(Of Decimal)
		Get
			Return Me._dsb_mor_004
		End Get
		Set
			If (Me._dsb_mor_004.Equals(value) = false) Then
				Me.Ondsb_mor_004Changing(value)
				Me.SendPropertyChanging
				Me._dsb_mor_004 = value
				Me.SendPropertyChanged("dsb_mor_004")
				Me.Ondsb_mor_004Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_dsb_mor_005", DbType:="Money")>  _
	Public Property dsb_mor_005() As System.Nullable(Of Decimal)
		Get
			Return Me._dsb_mor_005
		End Get
		Set
			If (Me._dsb_mor_005.Equals(value) = false) Then
				Me.Ondsb_mor_005Changing(value)
				Me.SendPropertyChanging
				Me._dsb_mor_005 = value
				Me.SendPropertyChanged("dsb_mor_005")
				Me.Ondsb_mor_005Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_dsb_ven_001", DbType:="Money")>  _
	Public Property dsb_ven_001() As System.Nullable(Of Decimal)
		Get
			Return Me._dsb_ven_001
		End Get
		Set
			If (Me._dsb_ven_001.Equals(value) = false) Then
				Me.Ondsb_ven_001Changing(value)
				Me.SendPropertyChanging
				Me._dsb_ven_001 = value
				Me.SendPropertyChanged("dsb_ven_001")
				Me.Ondsb_ven_001Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_dsb_ven_002", DbType:="Money")>  _
	Public Property dsb_ven_002() As System.Nullable(Of Decimal)
		Get
			Return Me._dsb_ven_002
		End Get
		Set
			If (Me._dsb_ven_002.Equals(value) = false) Then
				Me.Ondsb_ven_002Changing(value)
				Me.SendPropertyChanging
				Me._dsb_ven_002 = value
				Me.SendPropertyChanged("dsb_ven_002")
				Me.Ondsb_ven_002Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_dsb_ven_003", DbType:="Money")>  _
	Public Property dsb_ven_003() As System.Nullable(Of Decimal)
		Get
			Return Me._dsb_ven_003
		End Get
		Set
			If (Me._dsb_ven_003.Equals(value) = false) Then
				Me.Ondsb_ven_003Changing(value)
				Me.SendPropertyChanging
				Me._dsb_ven_003 = value
				Me.SendPropertyChanged("dsb_ven_003")
				Me.Ondsb_ven_003Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_dsb_ven_004", DbType:="Money")>  _
	Public Property dsb_ven_004() As System.Nullable(Of Decimal)
		Get
			Return Me._dsb_ven_004
		End Get
		Set
			If (Me._dsb_ven_004.Equals(value) = false) Then
				Me.Ondsb_ven_004Changing(value)
				Me.SendPropertyChanging
				Me._dsb_ven_004 = value
				Me.SendPropertyChanged("dsb_ven_004")
				Me.Ondsb_ven_004Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_dsb_ven_005", DbType:="Money")>  _
	Public Property dsb_ven_005() As System.Nullable(Of Decimal)
		Get
			Return Me._dsb_ven_005
		End Get
		Set
			If (Me._dsb_ven_005.Equals(value) = false) Then
				Me.Ondsb_ven_005Changing(value)
				Me.SendPropertyChanging
				Me._dsb_ven_005 = value
				Me.SendPropertyChanged("dsb_ven_005")
				Me.Ondsb_ven_005Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_dsb_mor_ddr_001", DbType:="Money")>  _
	Public Property dsb_mor_ddr_001() As System.Nullable(Of Decimal)
		Get
			Return Me._dsb_mor_ddr_001
		End Get
		Set
			If (Me._dsb_mor_ddr_001.Equals(value) = false) Then
				Me.Ondsb_mor_ddr_001Changing(value)
				Me.SendPropertyChanging
				Me._dsb_mor_ddr_001 = value
				Me.SendPropertyChanged("dsb_mor_ddr_001")
				Me.Ondsb_mor_ddr_001Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_dsb_mor_ddr_002", DbType:="Money")>  _
	Public Property dsb_mor_ddr_002() As System.Nullable(Of Decimal)
		Get
			Return Me._dsb_mor_ddr_002
		End Get
		Set
			If (Me._dsb_mor_ddr_002.Equals(value) = false) Then
				Me.Ondsb_mor_ddr_002Changing(value)
				Me.SendPropertyChanging
				Me._dsb_mor_ddr_002 = value
				Me.SendPropertyChanged("dsb_mor_ddr_002")
				Me.Ondsb_mor_ddr_002Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_dsb_mor_ddr_003", DbType:="Money")>  _
	Public Property dsb_mor_ddr_003() As System.Nullable(Of Decimal)
		Get
			Return Me._dsb_mor_ddr_003
		End Get
		Set
			If (Me._dsb_mor_ddr_003.Equals(value) = false) Then
				Me.Ondsb_mor_ddr_003Changing(value)
				Me.SendPropertyChanging
				Me._dsb_mor_ddr_003 = value
				Me.SendPropertyChanged("dsb_mor_ddr_003")
				Me.Ondsb_mor_ddr_003Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_dsb_mor_ddr_004", DbType:="Money")>  _
	Public Property dsb_mor_ddr_004() As System.Nullable(Of Decimal)
		Get
			Return Me._dsb_mor_ddr_004
		End Get
		Set
			If (Me._dsb_mor_ddr_004.Equals(value) = false) Then
				Me.Ondsb_mor_ddr_004Changing(value)
				Me.SendPropertyChanging
				Me._dsb_mor_ddr_004 = value
				Me.SendPropertyChanged("dsb_mor_ddr_004")
				Me.Ondsb_mor_ddr_004Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_dsb_mor_ddr_005", DbType:="Money")>  _
	Public Property dsb_mor_ddr_005() As System.Nullable(Of Decimal)
		Get
			Return Me._dsb_mor_ddr_005
		End Get
		Set
			If (Me._dsb_mor_ddr_005.Equals(value) = false) Then
				Me.Ondsb_mor_ddr_005Changing(value)
				Me.SendPropertyChanging
				Me._dsb_mor_ddr_005 = value
				Me.SendPropertyChanged("dsb_mor_ddr_005")
				Me.Ondsb_mor_ddr_005Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_dsb_ven_ddr_001", DbType:="Money")>  _
	Public Property dsb_ven_ddr_001() As System.Nullable(Of Decimal)
		Get
			Return Me._dsb_ven_ddr_001
		End Get
		Set
			If (Me._dsb_ven_ddr_001.Equals(value) = false) Then
				Me.Ondsb_ven_ddr_001Changing(value)
				Me.SendPropertyChanging
				Me._dsb_ven_ddr_001 = value
				Me.SendPropertyChanged("dsb_ven_ddr_001")
				Me.Ondsb_ven_ddr_001Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_dsb_ven_ddr_002", DbType:="Money")>  _
	Public Property dsb_ven_ddr_002() As System.Nullable(Of Decimal)
		Get
			Return Me._dsb_ven_ddr_002
		End Get
		Set
			If (Me._dsb_ven_ddr_002.Equals(value) = false) Then
				Me.Ondsb_ven_ddr_002Changing(value)
				Me.SendPropertyChanging
				Me._dsb_ven_ddr_002 = value
				Me.SendPropertyChanged("dsb_ven_ddr_002")
				Me.Ondsb_ven_ddr_002Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_dsb_ven_ddr_003", DbType:="Money")>  _
	Public Property dsb_ven_ddr_003() As System.Nullable(Of Decimal)
		Get
			Return Me._dsb_ven_ddr_003
		End Get
		Set
			If (Me._dsb_ven_ddr_003.Equals(value) = false) Then
				Me.Ondsb_ven_ddr_003Changing(value)
				Me.SendPropertyChanging
				Me._dsb_ven_ddr_003 = value
				Me.SendPropertyChanged("dsb_ven_ddr_003")
				Me.Ondsb_ven_ddr_003Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_dsb_ven_ddr_004", DbType:="Money")>  _
	Public Property dsb_ven_ddr_004() As System.Nullable(Of Decimal)
		Get
			Return Me._dsb_ven_ddr_004
		End Get
		Set
			If (Me._dsb_ven_ddr_004.Equals(value) = false) Then
				Me.Ondsb_ven_ddr_004Changing(value)
				Me.SendPropertyChanging
				Me._dsb_ven_ddr_004 = value
				Me.SendPropertyChanged("dsb_ven_ddr_004")
				Me.Ondsb_ven_ddr_004Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_dsb_ven_ddr_005", DbType:="Money")>  _
	Public Property dsb_ven_ddr_005() As System.Nullable(Of Decimal)
		Get
			Return Me._dsb_ven_ddr_005
		End Get
		Set
			If (Me._dsb_ven_ddr_005.Equals(value) = false) Then
				Me.Ondsb_ven_ddr_005Changing(value)
				Me.SendPropertyChanging
				Me._dsb_ven_ddr_005 = value
				Me.SendPropertyChanged("dsb_ven_ddr_005")
				Me.Ondsb_ven_ddr_005Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_dsb_ctd_mor_m60", DbType:="Int")>  _
	Public Property dsb_ctd_mor_m60() As System.Nullable(Of Integer)
		Get
			Return Me._dsb_ctd_mor_m60
		End Get
		Set
			If (Me._dsb_ctd_mor_m60.Equals(value) = false) Then
				Me.Ondsb_ctd_mor_m60Changing(value)
				Me.SendPropertyChanging
				Me._dsb_ctd_mor_m60 = value
				Me.SendPropertyChanged("dsb_ctd_mor_m60")
				Me.Ondsb_ctd_mor_m60Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="cli_cls_dsb_cls", Storage:="_cli_cls", ThisKey:="cli_idc", OtherKey:="cli_idc", IsForeignKey:=true)>  _
	Public Property cli_cls() As cli_cls
		Get
			Return Me._cli_cls.Entity
		End Get
		Set
			Dim previousValue As cli_cls = Me._cli_cls.Entity
			If ((Object.Equals(previousValue, value) = false)  _
						OrElse (Me._cli_cls.HasLoadedOrAssignedValue = false)) Then
				Me.SendPropertyChanging
				If ((previousValue Is Nothing)  _
							= false) Then
					Me._cli_cls.Entity = Nothing
					previousValue.dsb_cls.Remove(Me)
				End If
				Me._cli_cls.Entity = value
				If ((value Is Nothing)  _
							= false) Then
					value.dsb_cls.Add(Me)
					Me._cli_idc = value.cli_idc
				Else
					Me._cli_idc = CType(Nothing, String)
				End If
				Me.SendPropertyChanged("cli_cls")
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="P_0031_cls_dsb_cls", Storage:="_P_0031_cls", ThisKey:="id_p_0031", OtherKey:="id_P_0031", IsForeignKey:=true)>  _
	Public Property P_0031_cls() As P_0031_cls
		Get
			Return Me._P_0031_cls.Entity
		End Get
		Set
			Dim previousValue As P_0031_cls = Me._P_0031_cls.Entity
			If ((Object.Equals(previousValue, value) = false)  _
						OrElse (Me._P_0031_cls.HasLoadedOrAssignedValue = false)) Then
				Me.SendPropertyChanging
				If ((previousValue Is Nothing)  _
							= false) Then
					Me._P_0031_cls.Entity = Nothing
					previousValue.dsb_cls.Remove(Me)
				End If
				Me._P_0031_cls.Entity = value
				If ((value Is Nothing)  _
							= false) Then
					value.dsb_cls.Add(Me)
					Me._id_p_0031 = value.id_P_0031
				Else
					Me._id_p_0031 = CType(Nothing, Integer)
				End If
				Me.SendPropertyChanged("P_0031_cls")
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.dsi")>  _
Partial Public Class dsi_cls
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _id_dsi As Decimal
	
	Private _deu_ide As String
	
	Private _id_ope As Decimal
	
	Private _id_P_0011 As System.Nullable(Of Integer)
	
	Private _id_P_0040 As System.Nullable(Of Integer)
	
	Private _id_PL_000047 As String
	
	Private _id_P_0061 As System.Nullable(Of Integer)
	
	Private _id_P_0065 As System.Nullable(Of Integer)
	
	Private _dsi_num As String
	
	Private _dsi_mto As System.Nullable(Of Decimal)
	
	Private _dsi_mto_fin As System.Nullable(Of Decimal)
	
	Private _dsi_flj As String
	
	Private _dsi_flj_num As Integer
	
	Private _dsi_num_ren As Decimal
	
	Private _dsi_cei As String
	
	Private _dsi_ntf As String
	
	Private _dsi_fec_emi As System.Nullable(Of Date)
	
	Private _dsi_fev_ori As System.Nullable(Of Date)
	
	Private _dsi_fev As System.Nullable(Of Date)
	
	Private _dsi_fev_rea As System.Nullable(Of Date)
	
	Private _dsi_mto_ant As System.Nullable(Of Decimal)
	
	Private _dsi_ctd_dia As System.Nullable(Of Integer)
	
	Private _dsi_pre_com As System.Nullable(Of Decimal)
	
	Private _dsi_dif_pre As System.Nullable(Of Decimal)
	
	Private _dsi_sal_pen As System.Nullable(Of Decimal)
	
	Private _dsi_sal_pag As System.Nullable(Of Decimal)
	
	Private _dsi_cms As System.Nullable(Of Decimal)
	
	Private _dsi_iva_cms As System.Nullable(Of Decimal)
	
	Private _dsi_gto As System.Nullable(Of Decimal)
	
	Private _dsi_tot_gir As System.Nullable(Of Decimal)
	
	Private _dsi_cbz As String
	
	Private _dsi_cbz_son As String
	
	Private _dsi_inc As System.Nullable(Of Char)
	
	Private _dsi_env_bci As System.Nullable(Of Char)
	
	Private _dsi_sec_ing As System.Nullable(Of Integer)
	
	Private _id_P_0112 As System.Nullable(Of Integer)
	
	Private _id_bco As System.Nullable(Of Integer)
	
	Private _cta_cte As String
	
	Private _dsi_rsp As String
	
	Private _dsi_est_rsp As String
	
	Private _dsi_cls_moa As String
	
	Private _dsi_fec_ven As System.Nullable(Of Date)
	
	Private _dsi_img_url As String
	
	Private _dsi_fev_cal As System.Nullable(Of Date)
	
	Private _dsi_cms_fla As System.Nullable(Of Decimal)
	
	Private _dsi_gto_afe As System.Nullable(Of Decimal)
	
	Private _DVF_FEV_REA As System.Nullable(Of Date)
	
	Private _dsi_pro_gto_G_A As System.Nullable(Of Decimal)
	
	Private _dsi_pro_gto_G_B As System.Nullable(Of Decimal)
	
	Private _dsi_pro_dct_cxc_abo_ant As System.Nullable(Of Decimal)
	
	Private _dsi_pro_imp_ope As System.Nullable(Of Decimal)
	
	Private _dsi_pro_dct_cxc As System.Nullable(Of Decimal)
	
	Private _dsi_pro_dct_doc As System.Nullable(Of Decimal)
	
	Private _dsi_pro_cxp_sol_cob As System.Nullable(Of Decimal)
	
	Private _dsi_pro_dct_cxc_pro As System.Nullable(Of Decimal)
	
	Private _dsi_pro_cxc_gmf As System.Nullable(Of Decimal)
	
	Private _doc_cls As EntitySet(Of doc_cls)
	
	Private _dvf_cls As EntitySet(Of dvf_cls)
	
	Private _nrd_cls As EntitySet(Of nrd_cls)
	
	Private _bco_cls As EntityRef(Of bco_cls)
	
	Private _deu_cls As EntityRef(Of deu_cls)
	
	Private _ope_cls As EntityRef(Of ope_cls)
	
	Private _P_0011_cls As EntityRef(Of P_0011_cls)
	
	Private _P_0040_cls As EntityRef(Of P_0040_cls)
	
	Private _P_0061_cls As EntityRef(Of P_0061_cls)
	
	Private _P_0065_cls As EntityRef(Of P_0065_cls)
	
	Private _P_0112_cls As EntityRef(Of P_0112_cls)
	
	Private _PL_000047_cls As EntityRef(Of PL_000047_cls)
	
    #Region "Definiciones de métodos de extensibilidad"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub Onid_dsiChanging(value As Decimal)
    End Sub
    Partial Private Sub Onid_dsiChanged()
    End Sub
    Partial Private Sub Ondeu_ideChanging(value As String)
    End Sub
    Partial Private Sub Ondeu_ideChanged()
    End Sub
    Partial Private Sub Onid_opeChanging(value As Decimal)
    End Sub
    Partial Private Sub Onid_opeChanged()
    End Sub
    Partial Private Sub Onid_P_0011Changing(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub Onid_P_0011Changed()
    End Sub
    Partial Private Sub Onid_P_0040Changing(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub Onid_P_0040Changed()
    End Sub
    Partial Private Sub Onid_PL_000047Changing(value As String)
    End Sub
    Partial Private Sub Onid_PL_000047Changed()
    End Sub
    Partial Private Sub Onid_P_0061Changing(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub Onid_P_0061Changed()
    End Sub
    Partial Private Sub Onid_P_0065Changing(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub Onid_P_0065Changed()
    End Sub
    Partial Private Sub Ondsi_numChanging(value As String)
    End Sub
    Partial Private Sub Ondsi_numChanged()
    End Sub
    Partial Private Sub Ondsi_mtoChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub Ondsi_mtoChanged()
    End Sub
    Partial Private Sub Ondsi_mto_finChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub Ondsi_mto_finChanged()
    End Sub
    Partial Private Sub Ondsi_fljChanging(value As String)
    End Sub
    Partial Private Sub Ondsi_fljChanged()
    End Sub
    Partial Private Sub Ondsi_flj_numChanging(value As Integer)
    End Sub
    Partial Private Sub Ondsi_flj_numChanged()
    End Sub
    Partial Private Sub Ondsi_num_renChanging(value As Decimal)
    End Sub
    Partial Private Sub Ondsi_num_renChanged()
    End Sub
    Partial Private Sub Ondsi_ceiChanging(value As String)
    End Sub
    Partial Private Sub Ondsi_ceiChanged()
    End Sub
    Partial Private Sub Ondsi_ntfChanging(value As String)
    End Sub
    Partial Private Sub Ondsi_ntfChanged()
    End Sub
    Partial Private Sub Ondsi_fec_emiChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub Ondsi_fec_emiChanged()
    End Sub
    Partial Private Sub Ondsi_fev_oriChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub Ondsi_fev_oriChanged()
    End Sub
    Partial Private Sub Ondsi_fevChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub Ondsi_fevChanged()
    End Sub
    Partial Private Sub Ondsi_fev_reaChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub Ondsi_fev_reaChanged()
    End Sub
    Partial Private Sub Ondsi_mto_antChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub Ondsi_mto_antChanged()
    End Sub
    Partial Private Sub Ondsi_ctd_diaChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub Ondsi_ctd_diaChanged()
    End Sub
    Partial Private Sub Ondsi_pre_comChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub Ondsi_pre_comChanged()
    End Sub
    Partial Private Sub Ondsi_dif_preChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub Ondsi_dif_preChanged()
    End Sub
    Partial Private Sub Ondsi_sal_penChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub Ondsi_sal_penChanged()
    End Sub
    Partial Private Sub Ondsi_sal_pagChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub Ondsi_sal_pagChanged()
    End Sub
    Partial Private Sub Ondsi_cmsChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub Ondsi_cmsChanged()
    End Sub
    Partial Private Sub Ondsi_iva_cmsChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub Ondsi_iva_cmsChanged()
    End Sub
    Partial Private Sub Ondsi_gtoChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub Ondsi_gtoChanged()
    End Sub
    Partial Private Sub Ondsi_tot_girChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub Ondsi_tot_girChanged()
    End Sub
    Partial Private Sub Ondsi_cbzChanging(value As String)
    End Sub
    Partial Private Sub Ondsi_cbzChanged()
    End Sub
    Partial Private Sub Ondsi_cbz_sonChanging(value As String)
    End Sub
    Partial Private Sub Ondsi_cbz_sonChanged()
    End Sub
    Partial Private Sub Ondsi_incChanging(value As System.Nullable(Of Char))
    End Sub
    Partial Private Sub Ondsi_incChanged()
    End Sub
    Partial Private Sub Ondsi_env_bciChanging(value As System.Nullable(Of Char))
    End Sub
    Partial Private Sub Ondsi_env_bciChanged()
    End Sub
    Partial Private Sub Ondsi_sec_ingChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub Ondsi_sec_ingChanged()
    End Sub
    Partial Private Sub Onid_P_0112Changing(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub Onid_P_0112Changed()
    End Sub
    Partial Private Sub Onid_bcoChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub Onid_bcoChanged()
    End Sub
    Partial Private Sub Oncta_cteChanging(value As String)
    End Sub
    Partial Private Sub Oncta_cteChanged()
    End Sub
    Partial Private Sub Ondsi_rspChanging(value As String)
    End Sub
    Partial Private Sub Ondsi_rspChanged()
    End Sub
    Partial Private Sub Ondsi_est_rspChanging(value As String)
    End Sub
    Partial Private Sub Ondsi_est_rspChanged()
    End Sub
    Partial Private Sub Ondsi_cls_moaChanging(value As String)
    End Sub
    Partial Private Sub Ondsi_cls_moaChanged()
    End Sub
    Partial Private Sub Ondsi_fec_venChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub Ondsi_fec_venChanged()
    End Sub
    Partial Private Sub Ondsi_img_urlChanging(value As String)
    End Sub
    Partial Private Sub Ondsi_img_urlChanged()
    End Sub
    Partial Private Sub Ondsi_fev_calChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub Ondsi_fev_calChanged()
    End Sub
    Partial Private Sub Ondsi_cms_flaChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub Ondsi_cms_flaChanged()
    End Sub
    Partial Private Sub Ondsi_gto_afeChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub Ondsi_gto_afeChanged()
    End Sub
    Partial Private Sub OnDVF_FEV_REAChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnDVF_FEV_REAChanged()
    End Sub
    Partial Private Sub Ondsi_pro_gto_G_AChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub Ondsi_pro_gto_G_AChanged()
    End Sub
    Partial Private Sub Ondsi_pro_gto_G_BChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub Ondsi_pro_gto_G_BChanged()
    End Sub
    Partial Private Sub Ondsi_pro_dct_cxc_abo_antChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub Ondsi_pro_dct_cxc_abo_antChanged()
    End Sub
    Partial Private Sub Ondsi_pro_imp_opeChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub Ondsi_pro_imp_opeChanged()
    End Sub
    Partial Private Sub Ondsi_pro_dct_cxcChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub Ondsi_pro_dct_cxcChanged()
    End Sub
    Partial Private Sub Ondsi_pro_dct_docChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub Ondsi_pro_dct_docChanged()
    End Sub
    Partial Private Sub Ondsi_pro_cxp_sol_cobChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub Ondsi_pro_cxp_sol_cobChanged()
    End Sub
    Partial Private Sub Ondsi_pro_dct_cxc_proChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub Ondsi_pro_dct_cxc_proChanged()
    End Sub
    Partial Private Sub Ondsi_pro_cxc_gmfChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub Ondsi_pro_cxc_gmfChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		Me._doc_cls = New EntitySet(Of doc_cls)(AddressOf Me.attach_doc_cls, AddressOf Me.detach_doc_cls)
		Me._dvf_cls = New EntitySet(Of dvf_cls)(AddressOf Me.attach_dvf_cls, AddressOf Me.detach_dvf_cls)
		Me._nrd_cls = New EntitySet(Of nrd_cls)(AddressOf Me.attach_nrd_cls, AddressOf Me.detach_nrd_cls)
		Me._bco_cls = CType(Nothing, EntityRef(Of bco_cls))
		Me._deu_cls = CType(Nothing, EntityRef(Of deu_cls))
		Me._ope_cls = CType(Nothing, EntityRef(Of ope_cls))
		Me._P_0011_cls = CType(Nothing, EntityRef(Of P_0011_cls))
		Me._P_0040_cls = CType(Nothing, EntityRef(Of P_0040_cls))
		Me._P_0061_cls = CType(Nothing, EntityRef(Of P_0061_cls))
		Me._P_0065_cls = CType(Nothing, EntityRef(Of P_0065_cls))
		Me._P_0112_cls = CType(Nothing, EntityRef(Of P_0112_cls))
		Me._PL_000047_cls = CType(Nothing, EntityRef(Of PL_000047_cls))
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_id_dsi", AutoSync:=AutoSync.OnInsert, DbType:="Decimal(18,0) NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property id_dsi() As Decimal
		Get
			Return Me._id_dsi
		End Get
		Set
			If ((Me._id_dsi = value)  _
						= false) Then
				Me.Onid_dsiChanging(value)
				Me.SendPropertyChanging
				Me._id_dsi = value
				Me.SendPropertyChanged("id_dsi")
				Me.Onid_dsiChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_deu_ide", DbType:="Char(12) NOT NULL", CanBeNull:=false)>  _
	Public Property deu_ide() As String
		Get
			Return Me._deu_ide
		End Get
		Set
			If (String.Equals(Me._deu_ide, value) = false) Then
				If Me._deu_cls.HasLoadedOrAssignedValue Then
					Throw New System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException()
				End If
				Me.Ondeu_ideChanging(value)
				Me.SendPropertyChanging
				Me._deu_ide = value
				Me.SendPropertyChanged("deu_ide")
				Me.Ondeu_ideChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_id_ope", DbType:="Decimal(10,0) NOT NULL")>  _
	Public Property id_ope() As Decimal
		Get
			Return Me._id_ope
		End Get
		Set
			If ((Me._id_ope = value)  _
						= false) Then
				If Me._ope_cls.HasLoadedOrAssignedValue Then
					Throw New System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException()
				End If
				Me.Onid_opeChanging(value)
				Me.SendPropertyChanging
				Me._id_ope = value
				Me.SendPropertyChanged("id_ope")
				Me.Onid_opeChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_id_P_0011", DbType:="Int")>  _
	Public Property id_P_0011() As System.Nullable(Of Integer)
		Get
			Return Me._id_P_0011
		End Get
		Set
			If (Me._id_P_0011.Equals(value) = false) Then
				If Me._P_0011_cls.HasLoadedOrAssignedValue Then
					Throw New System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException()
				End If
				Me.Onid_P_0011Changing(value)
				Me.SendPropertyChanging
				Me._id_P_0011 = value
				Me.SendPropertyChanged("id_P_0011")
				Me.Onid_P_0011Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_id_P_0040", DbType:="Int")>  _
	Public Property id_P_0040() As System.Nullable(Of Integer)
		Get
			Return Me._id_P_0040
		End Get
		Set
			If (Me._id_P_0040.Equals(value) = false) Then
				If Me._P_0040_cls.HasLoadedOrAssignedValue Then
					Throw New System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException()
				End If
				Me.Onid_P_0040Changing(value)
				Me.SendPropertyChanging
				Me._id_P_0040 = value
				Me.SendPropertyChanged("id_P_0040")
				Me.Onid_P_0040Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_id_PL_000047", DbType:="Char(6)")>  _
	Public Property id_PL_000047() As String
		Get
			Return Me._id_PL_000047
		End Get
		Set
			If (String.Equals(Me._id_PL_000047, value) = false) Then
				If Me._PL_000047_cls.HasLoadedOrAssignedValue Then
					Throw New System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException()
				End If
				Me.Onid_PL_000047Changing(value)
				Me.SendPropertyChanging
				Me._id_PL_000047 = value
				Me.SendPropertyChanged("id_PL_000047")
				Me.Onid_PL_000047Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_id_P_0061", DbType:="Int")>  _
	Public Property id_P_0061() As System.Nullable(Of Integer)
		Get
			Return Me._id_P_0061
		End Get
		Set
			If (Me._id_P_0061.Equals(value) = false) Then
				If Me._P_0061_cls.HasLoadedOrAssignedValue Then
					Throw New System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException()
				End If
				Me.Onid_P_0061Changing(value)
				Me.SendPropertyChanging
				Me._id_P_0061 = value
				Me.SendPropertyChanged("id_P_0061")
				Me.Onid_P_0061Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_id_P_0065", DbType:="Int")>  _
	Public Property id_P_0065() As System.Nullable(Of Integer)
		Get
			Return Me._id_P_0065
		End Get
		Set
			If (Me._id_P_0065.Equals(value) = false) Then
				If Me._P_0065_cls.HasLoadedOrAssignedValue Then
					Throw New System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException()
				End If
				Me.Onid_P_0065Changing(value)
				Me.SendPropertyChanging
				Me._id_P_0065 = value
				Me.SendPropertyChanged("id_P_0065")
				Me.Onid_P_0065Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_dsi_num", DbType:="VarChar(20)")>  _
	Public Property dsi_num() As String
		Get
			Return Me._dsi_num
		End Get
		Set
			If (String.Equals(Me._dsi_num, value) = false) Then
				Me.Ondsi_numChanging(value)
				Me.SendPropertyChanging
				Me._dsi_num = value
				Me.SendPropertyChanged("dsi_num")
				Me.Ondsi_numChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_dsi_mto", DbType:="Money")>  _
	Public Property dsi_mto() As System.Nullable(Of Decimal)
		Get
			Return Me._dsi_mto
		End Get
		Set
			If (Me._dsi_mto.Equals(value) = false) Then
				Me.Ondsi_mtoChanging(value)
				Me.SendPropertyChanging
				Me._dsi_mto = value
				Me.SendPropertyChanged("dsi_mto")
				Me.Ondsi_mtoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_dsi_mto_fin", DbType:="Money")>  _
	Public Property dsi_mto_fin() As System.Nullable(Of Decimal)
		Get
			Return Me._dsi_mto_fin
		End Get
		Set
			If (Me._dsi_mto_fin.Equals(value) = false) Then
				Me.Ondsi_mto_finChanging(value)
				Me.SendPropertyChanging
				Me._dsi_mto_fin = value
				Me.SendPropertyChanged("dsi_mto_fin")
				Me.Ondsi_mto_finChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_dsi_flj", DbType:="VarChar(1) NOT NULL", CanBeNull:=false)>  _
	Public Property dsi_flj() As String
		Get
			Return Me._dsi_flj
		End Get
		Set
			If (String.Equals(Me._dsi_flj, value) = false) Then
				Me.Ondsi_fljChanging(value)
				Me.SendPropertyChanging
				Me._dsi_flj = value
				Me.SendPropertyChanged("dsi_flj")
				Me.Ondsi_fljChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_dsi_flj_num", DbType:="Int NOT NULL")>  _
	Public Property dsi_flj_num() As Integer
		Get
			Return Me._dsi_flj_num
		End Get
		Set
			If ((Me._dsi_flj_num = value)  _
						= false) Then
				Me.Ondsi_flj_numChanging(value)
				Me.SendPropertyChanging
				Me._dsi_flj_num = value
				Me.SendPropertyChanged("dsi_flj_num")
				Me.Ondsi_flj_numChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_dsi_num_ren", DbType:="Decimal(5,0) NOT NULL")>  _
	Public Property dsi_num_ren() As Decimal
		Get
			Return Me._dsi_num_ren
		End Get
		Set
			If ((Me._dsi_num_ren = value)  _
						= false) Then
				Me.Ondsi_num_renChanging(value)
				Me.SendPropertyChanging
				Me._dsi_num_ren = value
				Me.SendPropertyChanged("dsi_num_ren")
				Me.Ondsi_num_renChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_dsi_cei", DbType:="VarChar(1)")>  _
	Public Property dsi_cei() As String
		Get
			Return Me._dsi_cei
		End Get
		Set
			If (String.Equals(Me._dsi_cei, value) = false) Then
				Me.Ondsi_ceiChanging(value)
				Me.SendPropertyChanging
				Me._dsi_cei = value
				Me.SendPropertyChanged("dsi_cei")
				Me.Ondsi_ceiChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_dsi_ntf", DbType:="VarChar(1)")>  _
	Public Property dsi_ntf() As String
		Get
			Return Me._dsi_ntf
		End Get
		Set
			If (String.Equals(Me._dsi_ntf, value) = false) Then
				Me.Ondsi_ntfChanging(value)
				Me.SendPropertyChanging
				Me._dsi_ntf = value
				Me.SendPropertyChanged("dsi_ntf")
				Me.Ondsi_ntfChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_dsi_fec_emi", DbType:="DateTime")>  _
	Public Property dsi_fec_emi() As System.Nullable(Of Date)
		Get
			Return Me._dsi_fec_emi
		End Get
		Set
			If (Me._dsi_fec_emi.Equals(value) = false) Then
				Me.Ondsi_fec_emiChanging(value)
				Me.SendPropertyChanging
				Me._dsi_fec_emi = value
				Me.SendPropertyChanged("dsi_fec_emi")
				Me.Ondsi_fec_emiChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_dsi_fev_ori", DbType:="DateTime")>  _
	Public Property dsi_fev_ori() As System.Nullable(Of Date)
		Get
			Return Me._dsi_fev_ori
		End Get
		Set
			If (Me._dsi_fev_ori.Equals(value) = false) Then
				Me.Ondsi_fev_oriChanging(value)
				Me.SendPropertyChanging
				Me._dsi_fev_ori = value
				Me.SendPropertyChanged("dsi_fev_ori")
				Me.Ondsi_fev_oriChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_dsi_fev", DbType:="DateTime")>  _
	Public Property dsi_fev() As System.Nullable(Of Date)
		Get
			Return Me._dsi_fev
		End Get
		Set
			If (Me._dsi_fev.Equals(value) = false) Then
				Me.Ondsi_fevChanging(value)
				Me.SendPropertyChanging
				Me._dsi_fev = value
				Me.SendPropertyChanged("dsi_fev")
				Me.Ondsi_fevChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_dsi_fev_rea", DbType:="DateTime")>  _
	Public Property dsi_fev_rea() As System.Nullable(Of Date)
		Get
			Return Me._dsi_fev_rea
		End Get
		Set
			If (Me._dsi_fev_rea.Equals(value) = false) Then
				Me.Ondsi_fev_reaChanging(value)
				Me.SendPropertyChanging
				Me._dsi_fev_rea = value
				Me.SendPropertyChanged("dsi_fev_rea")
				Me.Ondsi_fev_reaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_dsi_mto_ant", DbType:="Money")>  _
	Public Property dsi_mto_ant() As System.Nullable(Of Decimal)
		Get
			Return Me._dsi_mto_ant
		End Get
		Set
			If (Me._dsi_mto_ant.Equals(value) = false) Then
				Me.Ondsi_mto_antChanging(value)
				Me.SendPropertyChanging
				Me._dsi_mto_ant = value
				Me.SendPropertyChanged("dsi_mto_ant")
				Me.Ondsi_mto_antChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_dsi_ctd_dia", DbType:="Int")>  _
	Public Property dsi_ctd_dia() As System.Nullable(Of Integer)
		Get
			Return Me._dsi_ctd_dia
		End Get
		Set
			If (Me._dsi_ctd_dia.Equals(value) = false) Then
				Me.Ondsi_ctd_diaChanging(value)
				Me.SendPropertyChanging
				Me._dsi_ctd_dia = value
				Me.SendPropertyChanged("dsi_ctd_dia")
				Me.Ondsi_ctd_diaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_dsi_pre_com", DbType:="Money")>  _
	Public Property dsi_pre_com() As System.Nullable(Of Decimal)
		Get
			Return Me._dsi_pre_com
		End Get
		Set
			If (Me._dsi_pre_com.Equals(value) = false) Then
				Me.Ondsi_pre_comChanging(value)
				Me.SendPropertyChanging
				Me._dsi_pre_com = value
				Me.SendPropertyChanged("dsi_pre_com")
				Me.Ondsi_pre_comChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_dsi_dif_pre", DbType:="Money")>  _
	Public Property dsi_dif_pre() As System.Nullable(Of Decimal)
		Get
			Return Me._dsi_dif_pre
		End Get
		Set
			If (Me._dsi_dif_pre.Equals(value) = false) Then
				Me.Ondsi_dif_preChanging(value)
				Me.SendPropertyChanging
				Me._dsi_dif_pre = value
				Me.SendPropertyChanged("dsi_dif_pre")
				Me.Ondsi_dif_preChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_dsi_sal_pen", DbType:="Money")>  _
	Public Property dsi_sal_pen() As System.Nullable(Of Decimal)
		Get
			Return Me._dsi_sal_pen
		End Get
		Set
			If (Me._dsi_sal_pen.Equals(value) = false) Then
				Me.Ondsi_sal_penChanging(value)
				Me.SendPropertyChanging
				Me._dsi_sal_pen = value
				Me.SendPropertyChanged("dsi_sal_pen")
				Me.Ondsi_sal_penChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_dsi_sal_pag", DbType:="Money")>  _
	Public Property dsi_sal_pag() As System.Nullable(Of Decimal)
		Get
			Return Me._dsi_sal_pag
		End Get
		Set
			If (Me._dsi_sal_pag.Equals(value) = false) Then
				Me.Ondsi_sal_pagChanging(value)
				Me.SendPropertyChanging
				Me._dsi_sal_pag = value
				Me.SendPropertyChanged("dsi_sal_pag")
				Me.Ondsi_sal_pagChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_dsi_cms", DbType:="Money")>  _
	Public Property dsi_cms() As System.Nullable(Of Decimal)
		Get
			Return Me._dsi_cms
		End Get
		Set
			If (Me._dsi_cms.Equals(value) = false) Then
				Me.Ondsi_cmsChanging(value)
				Me.SendPropertyChanging
				Me._dsi_cms = value
				Me.SendPropertyChanged("dsi_cms")
				Me.Ondsi_cmsChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_dsi_iva_cms", DbType:="Money")>  _
	Public Property dsi_iva_cms() As System.Nullable(Of Decimal)
		Get
			Return Me._dsi_iva_cms
		End Get
		Set
			If (Me._dsi_iva_cms.Equals(value) = false) Then
				Me.Ondsi_iva_cmsChanging(value)
				Me.SendPropertyChanging
				Me._dsi_iva_cms = value
				Me.SendPropertyChanged("dsi_iva_cms")
				Me.Ondsi_iva_cmsChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_dsi_gto", DbType:="Money")>  _
	Public Property dsi_gto() As System.Nullable(Of Decimal)
		Get
			Return Me._dsi_gto
		End Get
		Set
			If (Me._dsi_gto.Equals(value) = false) Then
				Me.Ondsi_gtoChanging(value)
				Me.SendPropertyChanging
				Me._dsi_gto = value
				Me.SendPropertyChanged("dsi_gto")
				Me.Ondsi_gtoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_dsi_tot_gir", DbType:="Money")>  _
	Public Property dsi_tot_gir() As System.Nullable(Of Decimal)
		Get
			Return Me._dsi_tot_gir
		End Get
		Set
			If (Me._dsi_tot_gir.Equals(value) = false) Then
				Me.Ondsi_tot_girChanging(value)
				Me.SendPropertyChanging
				Me._dsi_tot_gir = value
				Me.SendPropertyChanged("dsi_tot_gir")
				Me.Ondsi_tot_girChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_dsi_cbz", DbType:="VarChar(1)")>  _
	Public Property dsi_cbz() As String
		Get
			Return Me._dsi_cbz
		End Get
		Set
			If (String.Equals(Me._dsi_cbz, value) = false) Then
				Me.Ondsi_cbzChanging(value)
				Me.SendPropertyChanging
				Me._dsi_cbz = value
				Me.SendPropertyChanged("dsi_cbz")
				Me.Ondsi_cbzChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_dsi_cbz_son", DbType:="VarChar(1)")>  _
	Public Property dsi_cbz_son() As String
		Get
			Return Me._dsi_cbz_son
		End Get
		Set
			If (String.Equals(Me._dsi_cbz_son, value) = false) Then
				Me.Ondsi_cbz_sonChanging(value)
				Me.SendPropertyChanging
				Me._dsi_cbz_son = value
				Me.SendPropertyChanged("dsi_cbz_son")
				Me.Ondsi_cbz_sonChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_dsi_inc", DbType:="Char(1)")>  _
	Public Property dsi_inc() As System.Nullable(Of Char)
		Get
			Return Me._dsi_inc
		End Get
		Set
			If (Me._dsi_inc.Equals(value) = false) Then
				Me.Ondsi_incChanging(value)
				Me.SendPropertyChanging
				Me._dsi_inc = value
				Me.SendPropertyChanged("dsi_inc")
				Me.Ondsi_incChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_dsi_env_bci", DbType:="Char(1)")>  _
	Public Property dsi_env_bci() As System.Nullable(Of Char)
		Get
			Return Me._dsi_env_bci
		End Get
		Set
			If (Me._dsi_env_bci.Equals(value) = false) Then
				Me.Ondsi_env_bciChanging(value)
				Me.SendPropertyChanging
				Me._dsi_env_bci = value
				Me.SendPropertyChanged("dsi_env_bci")
				Me.Ondsi_env_bciChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_dsi_sec_ing", DbType:="Int")>  _
	Public Property dsi_sec_ing() As System.Nullable(Of Integer)
		Get
			Return Me._dsi_sec_ing
		End Get
		Set
			If (Me._dsi_sec_ing.Equals(value) = false) Then
				Me.Ondsi_sec_ingChanging(value)
				Me.SendPropertyChanging
				Me._dsi_sec_ing = value
				Me.SendPropertyChanged("dsi_sec_ing")
				Me.Ondsi_sec_ingChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_id_P_0112", DbType:="Int")>  _
	Public Property id_P_0112() As System.Nullable(Of Integer)
		Get
			Return Me._id_P_0112
		End Get
		Set
			If (Me._id_P_0112.Equals(value) = false) Then
				If Me._P_0112_cls.HasLoadedOrAssignedValue Then
					Throw New System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException()
				End If
				Me.Onid_P_0112Changing(value)
				Me.SendPropertyChanging
				Me._id_P_0112 = value
				Me.SendPropertyChanged("id_P_0112")
				Me.Onid_P_0112Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_id_bco", DbType:="Int")>  _
	Public Property id_bco() As System.Nullable(Of Integer)
		Get
			Return Me._id_bco
		End Get
		Set
			If (Me._id_bco.Equals(value) = false) Then
				If Me._bco_cls.HasLoadedOrAssignedValue Then
					Throw New System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException()
				End If
				Me.Onid_bcoChanging(value)
				Me.SendPropertyChanging
				Me._id_bco = value
				Me.SendPropertyChanged("id_bco")
				Me.Onid_bcoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_cta_cte", DbType:="VarChar(50)")>  _
	Public Property cta_cte() As String
		Get
			Return Me._cta_cte
		End Get
		Set
			If (String.Equals(Me._cta_cte, value) = false) Then
				Me.Oncta_cteChanging(value)
				Me.SendPropertyChanging
				Me._cta_cte = value
				Me.SendPropertyChanged("cta_cte")
				Me.Oncta_cteChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_dsi_rsp", DbType:="VarChar(1)")>  _
	Public Property dsi_rsp() As String
		Get
			Return Me._dsi_rsp
		End Get
		Set
			If (String.Equals(Me._dsi_rsp, value) = false) Then
				Me.Ondsi_rspChanging(value)
				Me.SendPropertyChanging
				Me._dsi_rsp = value
				Me.SendPropertyChanged("dsi_rsp")
				Me.Ondsi_rspChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_dsi_est_rsp", DbType:="VarChar(1)")>  _
	Public Property dsi_est_rsp() As String
		Get
			Return Me._dsi_est_rsp
		End Get
		Set
			If (String.Equals(Me._dsi_est_rsp, value) = false) Then
				Me.Ondsi_est_rspChanging(value)
				Me.SendPropertyChanging
				Me._dsi_est_rsp = value
				Me.SendPropertyChanged("dsi_est_rsp")
				Me.Ondsi_est_rspChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_dsi_cls_moa", DbType:="VarChar(1)")>  _
	Public Property dsi_cls_moa() As String
		Get
			Return Me._dsi_cls_moa
		End Get
		Set
			If (String.Equals(Me._dsi_cls_moa, value) = false) Then
				Me.Ondsi_cls_moaChanging(value)
				Me.SendPropertyChanging
				Me._dsi_cls_moa = value
				Me.SendPropertyChanged("dsi_cls_moa")
				Me.Ondsi_cls_moaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_dsi_fec_ven", DbType:="DateTime")>  _
	Public Property dsi_fec_ven() As System.Nullable(Of Date)
		Get
			Return Me._dsi_fec_ven
		End Get
		Set
			If (Me._dsi_fec_ven.Equals(value) = false) Then
				Me.Ondsi_fec_venChanging(value)
				Me.SendPropertyChanging
				Me._dsi_fec_ven = value
				Me.SendPropertyChanged("dsi_fec_ven")
				Me.Ondsi_fec_venChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_dsi_img_url", DbType:="VarChar(100)")>  _
	Public Property dsi_img_url() As String
		Get
			Return Me._dsi_img_url
		End Get
		Set
			If (String.Equals(Me._dsi_img_url, value) = false) Then
				Me.Ondsi_img_urlChanging(value)
				Me.SendPropertyChanging
				Me._dsi_img_url = value
				Me.SendPropertyChanged("dsi_img_url")
				Me.Ondsi_img_urlChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_dsi_fev_cal", DbType:="DateTime")>  _
	Public Property dsi_fev_cal() As System.Nullable(Of Date)
		Get
			Return Me._dsi_fev_cal
		End Get
		Set
			If (Me._dsi_fev_cal.Equals(value) = false) Then
				Me.Ondsi_fev_calChanging(value)
				Me.SendPropertyChanging
				Me._dsi_fev_cal = value
				Me.SendPropertyChanged("dsi_fev_cal")
				Me.Ondsi_fev_calChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_dsi_cms_fla", DbType:="Money")>  _
	Public Property dsi_cms_fla() As System.Nullable(Of Decimal)
		Get
			Return Me._dsi_cms_fla
		End Get
		Set
			If (Me._dsi_cms_fla.Equals(value) = false) Then
				Me.Ondsi_cms_flaChanging(value)
				Me.SendPropertyChanging
				Me._dsi_cms_fla = value
				Me.SendPropertyChanged("dsi_cms_fla")
				Me.Ondsi_cms_flaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_dsi_gto_afe", DbType:="Money")>  _
	Public Property dsi_gto_afe() As System.Nullable(Of Decimal)
		Get
			Return Me._dsi_gto_afe
		End Get
		Set
			If (Me._dsi_gto_afe.Equals(value) = false) Then
				Me.Ondsi_gto_afeChanging(value)
				Me.SendPropertyChanging
				Me._dsi_gto_afe = value
				Me.SendPropertyChanged("dsi_gto_afe")
				Me.Ondsi_gto_afeChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DVF_FEV_REA", DbType:="DateTime")>  _
	Public Property DVF_FEV_REA() As System.Nullable(Of Date)
		Get
			Return Me._DVF_FEV_REA
		End Get
		Set
			If (Me._DVF_FEV_REA.Equals(value) = false) Then
				Me.OnDVF_FEV_REAChanging(value)
				Me.SendPropertyChanging
				Me._DVF_FEV_REA = value
				Me.SendPropertyChanged("DVF_FEV_REA")
				Me.OnDVF_FEV_REAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_dsi_pro_gto_G_A", DbType:="Money")>  _
	Public Property dsi_pro_gto_G_A() As System.Nullable(Of Decimal)
		Get
			Return Me._dsi_pro_gto_G_A
		End Get
		Set
			If (Me._dsi_pro_gto_G_A.Equals(value) = false) Then
				Me.Ondsi_pro_gto_G_AChanging(value)
				Me.SendPropertyChanging
				Me._dsi_pro_gto_G_A = value
				Me.SendPropertyChanged("dsi_pro_gto_G_A")
				Me.Ondsi_pro_gto_G_AChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_dsi_pro_gto_G_B", DbType:="Money")>  _
	Public Property dsi_pro_gto_G_B() As System.Nullable(Of Decimal)
		Get
			Return Me._dsi_pro_gto_G_B
		End Get
		Set
			If (Me._dsi_pro_gto_G_B.Equals(value) = false) Then
				Me.Ondsi_pro_gto_G_BChanging(value)
				Me.SendPropertyChanging
				Me._dsi_pro_gto_G_B = value
				Me.SendPropertyChanged("dsi_pro_gto_G_B")
				Me.Ondsi_pro_gto_G_BChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_dsi_pro_dct_cxc_abo_ant", DbType:="Money")>  _
	Public Property dsi_pro_dct_cxc_abo_ant() As System.Nullable(Of Decimal)
		Get
			Return Me._dsi_pro_dct_cxc_abo_ant
		End Get
		Set
			If (Me._dsi_pro_dct_cxc_abo_ant.Equals(value) = false) Then
				Me.Ondsi_pro_dct_cxc_abo_antChanging(value)
				Me.SendPropertyChanging
				Me._dsi_pro_dct_cxc_abo_ant = value
				Me.SendPropertyChanged("dsi_pro_dct_cxc_abo_ant")
				Me.Ondsi_pro_dct_cxc_abo_antChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_dsi_pro_imp_ope", DbType:="Money")>  _
	Public Property dsi_pro_imp_ope() As System.Nullable(Of Decimal)
		Get
			Return Me._dsi_pro_imp_ope
		End Get
		Set
			If (Me._dsi_pro_imp_ope.Equals(value) = false) Then
				Me.Ondsi_pro_imp_opeChanging(value)
				Me.SendPropertyChanging
				Me._dsi_pro_imp_ope = value
				Me.SendPropertyChanged("dsi_pro_imp_ope")
				Me.Ondsi_pro_imp_opeChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_dsi_pro_dct_cxc", DbType:="Money")>  _
	Public Property dsi_pro_dct_cxc() As System.Nullable(Of Decimal)
		Get
			Return Me._dsi_pro_dct_cxc
		End Get
		Set
			If (Me._dsi_pro_dct_cxc.Equals(value) = false) Then
				Me.Ondsi_pro_dct_cxcChanging(value)
				Me.SendPropertyChanging
				Me._dsi_pro_dct_cxc = value
				Me.SendPropertyChanged("dsi_pro_dct_cxc")
				Me.Ondsi_pro_dct_cxcChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_dsi_pro_dct_doc", DbType:="Money")>  _
	Public Property dsi_pro_dct_doc() As System.Nullable(Of Decimal)
		Get
			Return Me._dsi_pro_dct_doc
		End Get
		Set
			If (Me._dsi_pro_dct_doc.Equals(value) = false) Then
				Me.Ondsi_pro_dct_docChanging(value)
				Me.SendPropertyChanging
				Me._dsi_pro_dct_doc = value
				Me.SendPropertyChanged("dsi_pro_dct_doc")
				Me.Ondsi_pro_dct_docChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_dsi_pro_cxp_sol_cob", DbType:="Money")>  _
	Public Property dsi_pro_cxp_sol_cob() As System.Nullable(Of Decimal)
		Get
			Return Me._dsi_pro_cxp_sol_cob
		End Get
		Set
			If (Me._dsi_pro_cxp_sol_cob.Equals(value) = false) Then
				Me.Ondsi_pro_cxp_sol_cobChanging(value)
				Me.SendPropertyChanging
				Me._dsi_pro_cxp_sol_cob = value
				Me.SendPropertyChanged("dsi_pro_cxp_sol_cob")
				Me.Ondsi_pro_cxp_sol_cobChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_dsi_pro_dct_cxc_pro", DbType:="Money")>  _
	Public Property dsi_pro_dct_cxc_pro() As System.Nullable(Of Decimal)
		Get
			Return Me._dsi_pro_dct_cxc_pro
		End Get
		Set
			If (Me._dsi_pro_dct_cxc_pro.Equals(value) = false) Then
				Me.Ondsi_pro_dct_cxc_proChanging(value)
				Me.SendPropertyChanging
				Me._dsi_pro_dct_cxc_pro = value
				Me.SendPropertyChanged("dsi_pro_dct_cxc_pro")
				Me.Ondsi_pro_dct_cxc_proChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_dsi_pro_cxc_gmf", DbType:="Money")>  _
	Public Property dsi_pro_cxc_gmf() As System.Nullable(Of Decimal)
		Get
			Return Me._dsi_pro_cxc_gmf
		End Get
		Set
			If (Me._dsi_pro_cxc_gmf.Equals(value) = false) Then
				Me.Ondsi_pro_cxc_gmfChanging(value)
				Me.SendPropertyChanging
				Me._dsi_pro_cxc_gmf = value
				Me.SendPropertyChanged("dsi_pro_cxc_gmf")
				Me.Ondsi_pro_cxc_gmfChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="dsi_cls_doc_cls", Storage:="_doc_cls", ThisKey:="id_dsi", OtherKey:="id_dsi")>  _
	Public Property doc_cls() As EntitySet(Of doc_cls)
		Get
			Return Me._doc_cls
		End Get
		Set
			Me._doc_cls.Assign(value)
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="dsi_cls_dvf_cls", Storage:="_dvf_cls", ThisKey:="id_dsi", OtherKey:="id_dsi")>  _
	Public Property dvf_cls() As EntitySet(Of dvf_cls)
		Get
			Return Me._dvf_cls
		End Get
		Set
			Me._dvf_cls.Assign(value)
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="dsi_cls_nrd_cls", Storage:="_nrd_cls", ThisKey:="id_dsi", OtherKey:="id_dsi")>  _
	Public Property nrd_cls() As EntitySet(Of nrd_cls)
		Get
			Return Me._nrd_cls
		End Get
		Set
			Me._nrd_cls.Assign(value)
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="bco_cls_dsi_cls", Storage:="_bco_cls", ThisKey:="id_bco", OtherKey:="id_bco", IsForeignKey:=true)>  _
	Public Property bco_cls() As bco_cls
		Get
			Return Me._bco_cls.Entity
		End Get
		Set
			Dim previousValue As bco_cls = Me._bco_cls.Entity
			If ((Object.Equals(previousValue, value) = false)  _
						OrElse (Me._bco_cls.HasLoadedOrAssignedValue = false)) Then
				Me.SendPropertyChanging
				If ((previousValue Is Nothing)  _
							= false) Then
					Me._bco_cls.Entity = Nothing
					previousValue.dsi_cls.Remove(Me)
				End If
				Me._bco_cls.Entity = value
				If ((value Is Nothing)  _
							= false) Then
					value.dsi_cls.Add(Me)
					Me._id_bco = value.id_bco
				Else
					Me._id_bco = CType(Nothing, Nullable(Of Integer))
				End If
				Me.SendPropertyChanged("bco_cls")
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="deu_cls_dsi_cls", Storage:="_deu_cls", ThisKey:="deu_ide", OtherKey:="deu_ide", IsForeignKey:=true)>  _
	Public Property deu_cls() As deu_cls
		Get
			Return Me._deu_cls.Entity
		End Get
		Set
			Dim previousValue As deu_cls = Me._deu_cls.Entity
			If ((Object.Equals(previousValue, value) = false)  _
						OrElse (Me._deu_cls.HasLoadedOrAssignedValue = false)) Then
				Me.SendPropertyChanging
				If ((previousValue Is Nothing)  _
							= false) Then
					Me._deu_cls.Entity = Nothing
					previousValue.dsi_cls.Remove(Me)
				End If
				Me._deu_cls.Entity = value
				If ((value Is Nothing)  _
							= false) Then
					value.dsi_cls.Add(Me)
					Me._deu_ide = value.deu_ide
				Else
					Me._deu_ide = CType(Nothing, String)
				End If
				Me.SendPropertyChanged("deu_cls")
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="ope_cls_dsi_cls", Storage:="_ope_cls", ThisKey:="id_ope", OtherKey:="id_ope", IsForeignKey:=true)>  _
	Public Property ope_cls() As ope_cls
		Get
			Return Me._ope_cls.Entity
		End Get
		Set
			Dim previousValue As ope_cls = Me._ope_cls.Entity
			If ((Object.Equals(previousValue, value) = false)  _
						OrElse (Me._ope_cls.HasLoadedOrAssignedValue = false)) Then
				Me.SendPropertyChanging
				If ((previousValue Is Nothing)  _
							= false) Then
					Me._ope_cls.Entity = Nothing
					previousValue.dsi_cls.Remove(Me)
				End If
				Me._ope_cls.Entity = value
				If ((value Is Nothing)  _
							= false) Then
					value.dsi_cls.Add(Me)
					Me._id_ope = value.id_ope
				Else
					Me._id_ope = CType(Nothing, Decimal)
				End If
				Me.SendPropertyChanged("ope_cls")
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="P_0011_cls_dsi_cls", Storage:="_P_0011_cls", ThisKey:="id_P_0011", OtherKey:="id_P_0011", IsForeignKey:=true)>  _
	Public Property P_0011_cls() As P_0011_cls
		Get
			Return Me._P_0011_cls.Entity
		End Get
		Set
			Dim previousValue As P_0011_cls = Me._P_0011_cls.Entity
			If ((Object.Equals(previousValue, value) = false)  _
						OrElse (Me._P_0011_cls.HasLoadedOrAssignedValue = false)) Then
				Me.SendPropertyChanging
				If ((previousValue Is Nothing)  _
							= false) Then
					Me._P_0011_cls.Entity = Nothing
					previousValue.dsi_cls.Remove(Me)
				End If
				Me._P_0011_cls.Entity = value
				If ((value Is Nothing)  _
							= false) Then
					value.dsi_cls.Add(Me)
					Me._id_P_0011 = value.id_P_0011
				Else
					Me._id_P_0011 = CType(Nothing, Nullable(Of Integer))
				End If
				Me.SendPropertyChanged("P_0011_cls")
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="P_0040_cls_dsi_cls", Storage:="_P_0040_cls", ThisKey:="id_P_0040", OtherKey:="id_P_0040", IsForeignKey:=true)>  _
	Public Property P_0040_cls() As P_0040_cls
		Get
			Return Me._P_0040_cls.Entity
		End Get
		Set
			Dim previousValue As P_0040_cls = Me._P_0040_cls.Entity
			If ((Object.Equals(previousValue, value) = false)  _
						OrElse (Me._P_0040_cls.HasLoadedOrAssignedValue = false)) Then
				Me.SendPropertyChanging
				If ((previousValue Is Nothing)  _
							= false) Then
					Me._P_0040_cls.Entity = Nothing
					previousValue.dsi_cls.Remove(Me)
				End If
				Me._P_0040_cls.Entity = value
				If ((value Is Nothing)  _
							= false) Then
					value.dsi_cls.Add(Me)
					Me._id_P_0040 = value.id_P_0040
				Else
					Me._id_P_0040 = CType(Nothing, Nullable(Of Integer))
				End If
				Me.SendPropertyChanged("P_0040_cls")
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="P_0061_cls_dsi_cls", Storage:="_P_0061_cls", ThisKey:="id_P_0061", OtherKey:="id_P_0061", IsForeignKey:=true)>  _
	Public Property P_0061_cls() As P_0061_cls
		Get
			Return Me._P_0061_cls.Entity
		End Get
		Set
			Dim previousValue As P_0061_cls = Me._P_0061_cls.Entity
			If ((Object.Equals(previousValue, value) = false)  _
						OrElse (Me._P_0061_cls.HasLoadedOrAssignedValue = false)) Then
				Me.SendPropertyChanging
				If ((previousValue Is Nothing)  _
							= false) Then
					Me._P_0061_cls.Entity = Nothing
					previousValue.dsi_cls.Remove(Me)
				End If
				Me._P_0061_cls.Entity = value
				If ((value Is Nothing)  _
							= false) Then
					value.dsi_cls.Add(Me)
					Me._id_P_0061 = value.id_P_0061
				Else
					Me._id_P_0061 = CType(Nothing, Nullable(Of Integer))
				End If
				Me.SendPropertyChanged("P_0061_cls")
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="P_0065_cls_dsi_cls", Storage:="_P_0065_cls", ThisKey:="id_P_0065", OtherKey:="id_P_0065", IsForeignKey:=true)>  _
	Public Property P_0065_cls() As P_0065_cls
		Get
			Return Me._P_0065_cls.Entity
		End Get
		Set
			Dim previousValue As P_0065_cls = Me._P_0065_cls.Entity
			If ((Object.Equals(previousValue, value) = false)  _
						OrElse (Me._P_0065_cls.HasLoadedOrAssignedValue = false)) Then
				Me.SendPropertyChanging
				If ((previousValue Is Nothing)  _
							= false) Then
					Me._P_0065_cls.Entity = Nothing
					previousValue.dsi_cls.Remove(Me)
				End If
				Me._P_0065_cls.Entity = value
				If ((value Is Nothing)  _
							= false) Then
					value.dsi_cls.Add(Me)
					Me._id_P_0065 = value.id_P_0065
				Else
					Me._id_P_0065 = CType(Nothing, Nullable(Of Integer))
				End If
				Me.SendPropertyChanged("P_0065_cls")
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="P_0112_cls_dsi_cls", Storage:="_P_0112_cls", ThisKey:="id_P_0112", OtherKey:="id_P_0112", IsForeignKey:=true)>  _
	Public Property P_0112_cls() As P_0112_cls
		Get
			Return Me._P_0112_cls.Entity
		End Get
		Set
			Dim previousValue As P_0112_cls = Me._P_0112_cls.Entity
			If ((Object.Equals(previousValue, value) = false)  _
						OrElse (Me._P_0112_cls.HasLoadedOrAssignedValue = false)) Then
				Me.SendPropertyChanging
				If ((previousValue Is Nothing)  _
							= false) Then
					Me._P_0112_cls.Entity = Nothing
					previousValue.dsi_cls.Remove(Me)
				End If
				Me._P_0112_cls.Entity = value
				If ((value Is Nothing)  _
							= false) Then
					value.dsi_cls.Add(Me)
					Me._id_P_0112 = value.id_P_0112
				Else
					Me._id_P_0112 = CType(Nothing, Nullable(Of Integer))
				End If
				Me.SendPropertyChanged("P_0112_cls")
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="PL_000047_cls_dsi_cls", Storage:="_PL_000047_cls", ThisKey:="id_PL_000047", OtherKey:="id_PL_000047", IsForeignKey:=true)>  _
	Public Property PL_000047_cls() As PL_000047_cls
		Get
			Return Me._PL_000047_cls.Entity
		End Get
		Set
			Dim previousValue As PL_000047_cls = Me._PL_000047_cls.Entity
			If ((Object.Equals(previousValue, value) = false)  _
						OrElse (Me._PL_000047_cls.HasLoadedOrAssignedValue = false)) Then
				Me.SendPropertyChanging
				If ((previousValue Is Nothing)  _
							= false) Then
					Me._PL_000047_cls.Entity = Nothing
					previousValue.dsi_cls.Remove(Me)
				End If
				Me._PL_000047_cls.Entity = value
				If ((value Is Nothing)  _
							= false) Then
					value.dsi_cls.Add(Me)
					Me._id_PL_000047 = value.id_PL_000047
				Else
					Me._id_PL_000047 = CType(Nothing, String)
				End If
				Me.SendPropertyChanged("PL_000047_cls")
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
	
	Private Sub attach_doc_cls(ByVal entity As doc_cls)
		Me.SendPropertyChanging
		entity.dsi_cls = Me
	End Sub
	
	Private Sub detach_doc_cls(ByVal entity As doc_cls)
		Me.SendPropertyChanging
		entity.dsi_cls = Nothing
	End Sub
	
	Private Sub attach_dvf_cls(ByVal entity As dvf_cls)
		Me.SendPropertyChanging
		entity.dsi_cls = Me
	End Sub
	
	Private Sub detach_dvf_cls(ByVal entity As dvf_cls)
		Me.SendPropertyChanging
		entity.dsi_cls = Nothing
	End Sub
	
	Private Sub attach_nrd_cls(ByVal entity As nrd_cls)
		Me.SendPropertyChanging
		entity.dsi_cls = Me
	End Sub
	
	Private Sub detach_nrd_cls(ByVal entity As nrd_cls)
		Me.SendPropertyChanging
		entity.dsi_cls = Nothing
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.dsn")>  _
Partial Public Class dsn_cls
	
	Private _cli_idc As String
	
	Private _pnu_tip_doc As Integer
	
	Private _dsb_mor_001 As System.Nullable(Of Decimal)
	
	Private _dsb_mor_002 As System.Nullable(Of Decimal)
	
	Private _dsb_mor_003 As System.Nullable(Of Decimal)
	
	Private _dsb_mor_004 As System.Nullable(Of Decimal)
	
	Private _dsb_mor_005 As System.Nullable(Of Decimal)
	
	Private _dsb_ven_001 As System.Nullable(Of Decimal)
	
	Private _dsb_ven_002 As System.Nullable(Of Decimal)
	
	Private _dsb_ven_003 As System.Nullable(Of Decimal)
	
	Private _dsb_ven_004 As System.Nullable(Of Decimal)
	
	Private _dsb_ven_005 As System.Nullable(Of Decimal)
	
	Private _dsb_mor_ddr_001 As System.Nullable(Of Decimal)
	
	Private _dsb_mor_ddr_002 As System.Nullable(Of Decimal)
	
	Private _dsb_mor_ddr_003 As System.Nullable(Of Decimal)
	
	Private _dsb_mor_ddr_004 As System.Nullable(Of Decimal)
	
	Private _dsb_mor_ddr_005 As System.Nullable(Of Decimal)
	
	Private _dsb_ven_ddr_001 As System.Nullable(Of Decimal)
	
	Private _dsb_ven_ddr_002 As System.Nullable(Of Decimal)
	
	Private _dsb_ven_ddr_003 As System.Nullable(Of Decimal)
	
	Private _dsb_ven_ddr_004 As System.Nullable(Of Decimal)
	
	Private _dsb_ven_ddr_005 As System.Nullable(Of Decimal)
	
	Private _dsb_ctd_mor_m60 As System.Nullable(Of Integer)
	
	Public Sub New()
		MyBase.New
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_cli_idc", DbType:="VarChar(12) NOT NULL", CanBeNull:=false)>  _
	Public Property cli_idc() As String
		Get
			Return Me._cli_idc
		End Get
		Set
			If (String.Equals(Me._cli_idc, value) = false) Then
				Me._cli_idc = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pnu_tip_doc", DbType:="Int NOT NULL")>  _
	Public Property pnu_tip_doc() As Integer
		Get
			Return Me._pnu_tip_doc
		End Get
		Set
			If ((Me._pnu_tip_doc = value)  _
						= false) Then
				Me._pnu_tip_doc = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_dsb_mor_001", DbType:="Money")>  _
	Public Property dsb_mor_001() As System.Nullable(Of Decimal)
		Get
			Return Me._dsb_mor_001
		End Get
		Set
			If (Me._dsb_mor_001.Equals(value) = false) Then
				Me._dsb_mor_001 = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_dsb_mor_002", DbType:="Money")>  _
	Public Property dsb_mor_002() As System.Nullable(Of Decimal)
		Get
			Return Me._dsb_mor_002
		End Get
		Set
			If (Me._dsb_mor_002.Equals(value) = false) Then
				Me._dsb_mor_002 = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_dsb_mor_003", DbType:="Money")>  _
	Public Property dsb_mor_003() As System.Nullable(Of Decimal)
		Get
			Return Me._dsb_mor_003
		End Get
		Set
			If (Me._dsb_mor_003.Equals(value) = false) Then
				Me._dsb_mor_003 = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_dsb_mor_004", DbType:="Money")>  _
	Public Property dsb_mor_004() As System.Nullable(Of Decimal)
		Get
			Return Me._dsb_mor_004
		End Get
		Set
			If (Me._dsb_mor_004.Equals(value) = false) Then
				Me._dsb_mor_004 = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_dsb_mor_005", DbType:="Money")>  _
	Public Property dsb_mor_005() As System.Nullable(Of Decimal)
		Get
			Return Me._dsb_mor_005
		End Get
		Set
			If (Me._dsb_mor_005.Equals(value) = false) Then
				Me._dsb_mor_005 = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_dsb_ven_001", DbType:="Money")>  _
	Public Property dsb_ven_001() As System.Nullable(Of Decimal)
		Get
			Return Me._dsb_ven_001
		End Get
		Set
			If (Me._dsb_ven_001.Equals(value) = false) Then
				Me._dsb_ven_001 = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_dsb_ven_002", DbType:="Money")>  _
	Public Property dsb_ven_002() As System.Nullable(Of Decimal)
		Get
			Return Me._dsb_ven_002
		End Get
		Set
			If (Me._dsb_ven_002.Equals(value) = false) Then
				Me._dsb_ven_002 = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_dsb_ven_003", DbType:="Money")>  _
	Public Property dsb_ven_003() As System.Nullable(Of Decimal)
		Get
			Return Me._dsb_ven_003
		End Get
		Set
			If (Me._dsb_ven_003.Equals(value) = false) Then
				Me._dsb_ven_003 = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_dsb_ven_004", DbType:="Money")>  _
	Public Property dsb_ven_004() As System.Nullable(Of Decimal)
		Get
			Return Me._dsb_ven_004
		End Get
		Set
			If (Me._dsb_ven_004.Equals(value) = false) Then
				Me._dsb_ven_004 = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_dsb_ven_005", DbType:="Money")>  _
	Public Property dsb_ven_005() As System.Nullable(Of Decimal)
		Get
			Return Me._dsb_ven_005
		End Get
		Set
			If (Me._dsb_ven_005.Equals(value) = false) Then
				Me._dsb_ven_005 = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_dsb_mor_ddr_001", DbType:="Money")>  _
	Public Property dsb_mor_ddr_001() As System.Nullable(Of Decimal)
		Get
			Return Me._dsb_mor_ddr_001
		End Get
		Set
			If (Me._dsb_mor_ddr_001.Equals(value) = false) Then
				Me._dsb_mor_ddr_001 = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_dsb_mor_ddr_002", DbType:="Money")>  _
	Public Property dsb_mor_ddr_002() As System.Nullable(Of Decimal)
		Get
			Return Me._dsb_mor_ddr_002
		End Get
		Set
			If (Me._dsb_mor_ddr_002.Equals(value) = false) Then
				Me._dsb_mor_ddr_002 = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_dsb_mor_ddr_003", DbType:="Money")>  _
	Public Property dsb_mor_ddr_003() As System.Nullable(Of Decimal)
		Get
			Return Me._dsb_mor_ddr_003
		End Get
		Set
			If (Me._dsb_mor_ddr_003.Equals(value) = false) Then
				Me._dsb_mor_ddr_003 = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_dsb_mor_ddr_004", DbType:="Money")>  _
	Public Property dsb_mor_ddr_004() As System.Nullable(Of Decimal)
		Get
			Return Me._dsb_mor_ddr_004
		End Get
		Set
			If (Me._dsb_mor_ddr_004.Equals(value) = false) Then
				Me._dsb_mor_ddr_004 = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_dsb_mor_ddr_005", DbType:="Money")>  _
	Public Property dsb_mor_ddr_005() As System.Nullable(Of Decimal)
		Get
			Return Me._dsb_mor_ddr_005
		End Get
		Set
			If (Me._dsb_mor_ddr_005.Equals(value) = false) Then
				Me._dsb_mor_ddr_005 = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_dsb_ven_ddr_001", DbType:="Money")>  _
	Public Property dsb_ven_ddr_001() As System.Nullable(Of Decimal)
		Get
			Return Me._dsb_ven_ddr_001
		End Get
		Set
			If (Me._dsb_ven_ddr_001.Equals(value) = false) Then
				Me._dsb_ven_ddr_001 = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_dsb_ven_ddr_002", DbType:="Money")>  _
	Public Property dsb_ven_ddr_002() As System.Nullable(Of Decimal)
		Get
			Return Me._dsb_ven_ddr_002
		End Get
		Set
			If (Me._dsb_ven_ddr_002.Equals(value) = false) Then
				Me._dsb_ven_ddr_002 = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_dsb_ven_ddr_003", DbType:="Money")>  _
	Public Property dsb_ven_ddr_003() As System.Nullable(Of Decimal)
		Get
			Return Me._dsb_ven_ddr_003
		End Get
		Set
			If (Me._dsb_ven_ddr_003.Equals(value) = false) Then
				Me._dsb_ven_ddr_003 = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_dsb_ven_ddr_004", DbType:="Money")>  _
	Public Property dsb_ven_ddr_004() As System.Nullable(Of Decimal)
		Get
			Return Me._dsb_ven_ddr_004
		End Get
		Set
			If (Me._dsb_ven_ddr_004.Equals(value) = false) Then
				Me._dsb_ven_ddr_004 = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_dsb_ven_ddr_005", DbType:="Money")>  _
	Public Property dsb_ven_ddr_005() As System.Nullable(Of Decimal)
		Get
			Return Me._dsb_ven_ddr_005
		End Get
		Set
			If (Me._dsb_ven_ddr_005.Equals(value) = false) Then
				Me._dsb_ven_ddr_005 = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_dsb_ctd_mor_m60", DbType:="Int")>  _
	Public Property dsb_ctd_mor_m60() As System.Nullable(Of Integer)
		Get
			Return Me._dsb_ctd_mor_m60
		End Get
		Set
			If (Me._dsb_ctd_mor_m60.Equals(value) = false) Then
				Me._dsb_ctd_mor_m60 = value
			End If
		End Set
	End Property
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.dvf")>  _
Partial Public Class dvf_cls
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _id_dvf As Decimal
	
	Private _id_dsi As System.Nullable(Of Decimal)
	
	Private _id_cnc As System.Nullable(Of Decimal)
	
	Private _id_P_0040 As System.Nullable(Of Integer)
	
	Private _dvf_fev As System.Nullable(Of Date)
	
	Private _dvf_obs As String
	
	Private _dvf_fec_lle As System.Nullable(Of Date)
	
	Private _dvf_hor_lle As System.Nullable(Of Date)
	
	Private _dvf_fec_vfc As System.Nullable(Of Date)
	
	Private _dvf_hor_vfc As System.Nullable(Of Date)
	
	Private _dvf_fec_pag As System.Nullable(Of Date)
	
	Private _dvf_fec_pri_gsn As System.Nullable(Of Date)
	
	Private _dvf_pro As String
	
	Private _dvf_fec_ing As System.Nullable(Of Date)
	
	Private _dvf_obs_001 As String
	
	Private _dvf_obs_cob As String
	
	Private _dvf_zon_rgo_rec As System.Nullable(Of Integer)
	
	Private _id_eje_dvf As System.Nullable(Of Integer)
	
	Private _cli_idc As String
	
	Private _deu_ide As String
	
	Private _id_P_0031 As System.Nullable(Of Integer)
	
	Private _id_P_0023 As System.Nullable(Of Integer)
	
	Private _dvf_num As String
	
	Private _dvf_fev_rea As System.Nullable(Of Date)
	
	Private _dvf_mto As System.Nullable(Of Decimal)
	
	Private _cli_cls As EntityRef(Of cli_cls)
	
	Private _cnc_cls As EntityRef(Of cnc_cls)
	
	Private _deu_cls As EntityRef(Of deu_cls)
	
	Private _dsi_cls As EntityRef(Of dsi_cls)
	
	Private _P_0023_cls As EntityRef(Of P_0023_cls)
	
	Private _P_0031_cls As EntityRef(Of P_0031_cls)
	
	Private _P_0040_cls As EntityRef(Of P_0040_cls)
	
	Private _eje_cls As EntityRef(Of eje_cls)
	
    #Region "Definiciones de métodos de extensibilidad"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub Onid_dvfChanging(value As Decimal)
    End Sub
    Partial Private Sub Onid_dvfChanged()
    End Sub
    Partial Private Sub Onid_dsiChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub Onid_dsiChanged()
    End Sub
    Partial Private Sub Onid_cncChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub Onid_cncChanged()
    End Sub
    Partial Private Sub Onid_P_0040Changing(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub Onid_P_0040Changed()
    End Sub
    Partial Private Sub Ondvf_fevChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub Ondvf_fevChanged()
    End Sub
    Partial Private Sub Ondvf_obsChanging(value As String)
    End Sub
    Partial Private Sub Ondvf_obsChanged()
    End Sub
    Partial Private Sub Ondvf_fec_lleChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub Ondvf_fec_lleChanged()
    End Sub
    Partial Private Sub Ondvf_hor_lleChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub Ondvf_hor_lleChanged()
    End Sub
    Partial Private Sub Ondvf_fec_vfcChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub Ondvf_fec_vfcChanged()
    End Sub
    Partial Private Sub Ondvf_hor_vfcChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub Ondvf_hor_vfcChanged()
    End Sub
    Partial Private Sub Ondvf_fec_pagChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub Ondvf_fec_pagChanged()
    End Sub
    Partial Private Sub Ondvf_fec_pri_gsnChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub Ondvf_fec_pri_gsnChanged()
    End Sub
    Partial Private Sub Ondvf_proChanging(value As String)
    End Sub
    Partial Private Sub Ondvf_proChanged()
    End Sub
    Partial Private Sub Ondvf_fec_ingChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub Ondvf_fec_ingChanged()
    End Sub
    Partial Private Sub Ondvf_obs_001Changing(value As String)
    End Sub
    Partial Private Sub Ondvf_obs_001Changed()
    End Sub
    Partial Private Sub Ondvf_obs_cobChanging(value As String)
    End Sub
    Partial Private Sub Ondvf_obs_cobChanged()
    End Sub
    Partial Private Sub Ondvf_zon_rgo_recChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub Ondvf_zon_rgo_recChanged()
    End Sub
    Partial Private Sub Onid_eje_dvfChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub Onid_eje_dvfChanged()
    End Sub
    Partial Private Sub Oncli_idcChanging(value As String)
    End Sub
    Partial Private Sub Oncli_idcChanged()
    End Sub
    Partial Private Sub Ondeu_ideChanging(value As String)
    End Sub
    Partial Private Sub Ondeu_ideChanged()
    End Sub
    Partial Private Sub Onid_P_0031Changing(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub Onid_P_0031Changed()
    End Sub
    Partial Private Sub Onid_P_0023Changing(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub Onid_P_0023Changed()
    End Sub
    Partial Private Sub Ondvf_numChanging(value As String)
    End Sub
    Partial Private Sub Ondvf_numChanged()
    End Sub
    Partial Private Sub Ondvf_fev_reaChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub Ondvf_fev_reaChanged()
    End Sub
    Partial Private Sub Ondvf_mtoChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub Ondvf_mtoChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		Me._cli_cls = CType(Nothing, EntityRef(Of cli_cls))
		Me._cnc_cls = CType(Nothing, EntityRef(Of cnc_cls))
		Me._deu_cls = CType(Nothing, EntityRef(Of deu_cls))
		Me._dsi_cls = CType(Nothing, EntityRef(Of dsi_cls))
		Me._P_0023_cls = CType(Nothing, EntityRef(Of P_0023_cls))
		Me._P_0031_cls = CType(Nothing, EntityRef(Of P_0031_cls))
		Me._P_0040_cls = CType(Nothing, EntityRef(Of P_0040_cls))
		Me._eje_cls = CType(Nothing, EntityRef(Of eje_cls))
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_id_dvf", AutoSync:=AutoSync.OnInsert, DbType:="Decimal(10,0) NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property id_dvf() As Decimal
		Get
			Return Me._id_dvf
		End Get
		Set
			If ((Me._id_dvf = value)  _
						= false) Then
				Me.Onid_dvfChanging(value)
				Me.SendPropertyChanging
				Me._id_dvf = value
				Me.SendPropertyChanged("id_dvf")
				Me.Onid_dvfChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_id_dsi", DbType:="Decimal(18,0)")>  _
	Public Property id_dsi() As System.Nullable(Of Decimal)
		Get
			Return Me._id_dsi
		End Get
		Set
			If (Me._id_dsi.Equals(value) = false) Then
				If Me._dsi_cls.HasLoadedOrAssignedValue Then
					Throw New System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException()
				End If
				Me.Onid_dsiChanging(value)
				Me.SendPropertyChanging
				Me._id_dsi = value
				Me.SendPropertyChanged("id_dsi")
				Me.Onid_dsiChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_id_cnc", DbType:="Decimal(10,0)")>  _
	Public Property id_cnc() As System.Nullable(Of Decimal)
		Get
			Return Me._id_cnc
		End Get
		Set
			If (Me._id_cnc.Equals(value) = false) Then
				If Me._cnc_cls.HasLoadedOrAssignedValue Then
					Throw New System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException()
				End If
				Me.Onid_cncChanging(value)
				Me.SendPropertyChanging
				Me._id_cnc = value
				Me.SendPropertyChanged("id_cnc")
				Me.Onid_cncChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_id_P_0040", DbType:="Int")>  _
	Public Property id_P_0040() As System.Nullable(Of Integer)
		Get
			Return Me._id_P_0040
		End Get
		Set
			If (Me._id_P_0040.Equals(value) = false) Then
				If Me._P_0040_cls.HasLoadedOrAssignedValue Then
					Throw New System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException()
				End If
				Me.Onid_P_0040Changing(value)
				Me.SendPropertyChanging
				Me._id_P_0040 = value
				Me.SendPropertyChanged("id_P_0040")
				Me.Onid_P_0040Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_dvf_fev", DbType:="DateTime")>  _
	Public Property dvf_fev() As System.Nullable(Of Date)
		Get
			Return Me._dvf_fev
		End Get
		Set
			If (Me._dvf_fev.Equals(value) = false) Then
				Me.Ondvf_fevChanging(value)
				Me.SendPropertyChanging
				Me._dvf_fev = value
				Me.SendPropertyChanged("dvf_fev")
				Me.Ondvf_fevChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_dvf_obs", DbType:="VarChar(255)")>  _
	Public Property dvf_obs() As String
		Get
			Return Me._dvf_obs
		End Get
		Set
			If (String.Equals(Me._dvf_obs, value) = false) Then
				Me.Ondvf_obsChanging(value)
				Me.SendPropertyChanging
				Me._dvf_obs = value
				Me.SendPropertyChanged("dvf_obs")
				Me.Ondvf_obsChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_dvf_fec_lle", DbType:="DateTime")>  _
	Public Property dvf_fec_lle() As System.Nullable(Of Date)
		Get
			Return Me._dvf_fec_lle
		End Get
		Set
			If (Me._dvf_fec_lle.Equals(value) = false) Then
				Me.Ondvf_fec_lleChanging(value)
				Me.SendPropertyChanging
				Me._dvf_fec_lle = value
				Me.SendPropertyChanged("dvf_fec_lle")
				Me.Ondvf_fec_lleChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_dvf_hor_lle", DbType:="DateTime")>  _
	Public Property dvf_hor_lle() As System.Nullable(Of Date)
		Get
			Return Me._dvf_hor_lle
		End Get
		Set
			If (Me._dvf_hor_lle.Equals(value) = false) Then
				Me.Ondvf_hor_lleChanging(value)
				Me.SendPropertyChanging
				Me._dvf_hor_lle = value
				Me.SendPropertyChanged("dvf_hor_lle")
				Me.Ondvf_hor_lleChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_dvf_fec_vfc", DbType:="DateTime")>  _
	Public Property dvf_fec_vfc() As System.Nullable(Of Date)
		Get
			Return Me._dvf_fec_vfc
		End Get
		Set
			If (Me._dvf_fec_vfc.Equals(value) = false) Then
				Me.Ondvf_fec_vfcChanging(value)
				Me.SendPropertyChanging
				Me._dvf_fec_vfc = value
				Me.SendPropertyChanged("dvf_fec_vfc")
				Me.Ondvf_fec_vfcChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_dvf_hor_vfc", DbType:="DateTime")>  _
	Public Property dvf_hor_vfc() As System.Nullable(Of Date)
		Get
			Return Me._dvf_hor_vfc
		End Get
		Set
			If (Me._dvf_hor_vfc.Equals(value) = false) Then
				Me.Ondvf_hor_vfcChanging(value)
				Me.SendPropertyChanging
				Me._dvf_hor_vfc = value
				Me.SendPropertyChanged("dvf_hor_vfc")
				Me.Ondvf_hor_vfcChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_dvf_fec_pag", DbType:="DateTime")>  _
	Public Property dvf_fec_pag() As System.Nullable(Of Date)
		Get
			Return Me._dvf_fec_pag
		End Get
		Set
			If (Me._dvf_fec_pag.Equals(value) = false) Then
				Me.Ondvf_fec_pagChanging(value)
				Me.SendPropertyChanging
				Me._dvf_fec_pag = value
				Me.SendPropertyChanged("dvf_fec_pag")
				Me.Ondvf_fec_pagChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_dvf_fec_pri_gsn", DbType:="DateTime")>  _
	Public Property dvf_fec_pri_gsn() As System.Nullable(Of Date)
		Get
			Return Me._dvf_fec_pri_gsn
		End Get
		Set
			If (Me._dvf_fec_pri_gsn.Equals(value) = false) Then
				Me.Ondvf_fec_pri_gsnChanging(value)
				Me.SendPropertyChanging
				Me._dvf_fec_pri_gsn = value
				Me.SendPropertyChanged("dvf_fec_pri_gsn")
				Me.Ondvf_fec_pri_gsnChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_dvf_pro", DbType:="VarChar(1)")>  _
	Public Property dvf_pro() As String
		Get
			Return Me._dvf_pro
		End Get
		Set
			If (String.Equals(Me._dvf_pro, value) = false) Then
				Me.Ondvf_proChanging(value)
				Me.SendPropertyChanging
				Me._dvf_pro = value
				Me.SendPropertyChanged("dvf_pro")
				Me.Ondvf_proChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_dvf_fec_ing", DbType:="DateTime")>  _
	Public Property dvf_fec_ing() As System.Nullable(Of Date)
		Get
			Return Me._dvf_fec_ing
		End Get
		Set
			If (Me._dvf_fec_ing.Equals(value) = false) Then
				Me.Ondvf_fec_ingChanging(value)
				Me.SendPropertyChanging
				Me._dvf_fec_ing = value
				Me.SendPropertyChanged("dvf_fec_ing")
				Me.Ondvf_fec_ingChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_dvf_obs_001", DbType:="VarChar(255)")>  _
	Public Property dvf_obs_001() As String
		Get
			Return Me._dvf_obs_001
		End Get
		Set
			If (String.Equals(Me._dvf_obs_001, value) = false) Then
				Me.Ondvf_obs_001Changing(value)
				Me.SendPropertyChanging
				Me._dvf_obs_001 = value
				Me.SendPropertyChanged("dvf_obs_001")
				Me.Ondvf_obs_001Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_dvf_obs_cob", DbType:="VarChar(80)")>  _
	Public Property dvf_obs_cob() As String
		Get
			Return Me._dvf_obs_cob
		End Get
		Set
			If (String.Equals(Me._dvf_obs_cob, value) = false) Then
				Me.Ondvf_obs_cobChanging(value)
				Me.SendPropertyChanging
				Me._dvf_obs_cob = value
				Me.SendPropertyChanged("dvf_obs_cob")
				Me.Ondvf_obs_cobChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_dvf_zon_rgo_rec", DbType:="Int")>  _
	Public Property dvf_zon_rgo_rec() As System.Nullable(Of Integer)
		Get
			Return Me._dvf_zon_rgo_rec
		End Get
		Set
			If (Me._dvf_zon_rgo_rec.Equals(value) = false) Then
				Me.Ondvf_zon_rgo_recChanging(value)
				Me.SendPropertyChanging
				Me._dvf_zon_rgo_rec = value
				Me.SendPropertyChanged("dvf_zon_rgo_rec")
				Me.Ondvf_zon_rgo_recChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_id_eje_dvf", DbType:="Int")>  _
	Public Property id_eje_dvf() As System.Nullable(Of Integer)
		Get
			Return Me._id_eje_dvf
		End Get
		Set
			If (Me._id_eje_dvf.Equals(value) = false) Then
				If Me._eje_cls.HasLoadedOrAssignedValue Then
					Throw New System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException()
				End If
				Me.Onid_eje_dvfChanging(value)
				Me.SendPropertyChanging
				Me._id_eje_dvf = value
				Me.SendPropertyChanged("id_eje_dvf")
				Me.Onid_eje_dvfChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_cli_idc", DbType:="Char(12)")>  _
	Public Property cli_idc() As String
		Get
			Return Me._cli_idc
		End Get
		Set
			If (String.Equals(Me._cli_idc, value) = false) Then
				If Me._cli_cls.HasLoadedOrAssignedValue Then
					Throw New System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException()
				End If
				Me.Oncli_idcChanging(value)
				Me.SendPropertyChanging
				Me._cli_idc = value
				Me.SendPropertyChanged("cli_idc")
				Me.Oncli_idcChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_deu_ide", DbType:="Char(12)")>  _
	Public Property deu_ide() As String
		Get
			Return Me._deu_ide
		End Get
		Set
			If (String.Equals(Me._deu_ide, value) = false) Then
				If Me._deu_cls.HasLoadedOrAssignedValue Then
					Throw New System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException()
				End If
				Me.Ondeu_ideChanging(value)
				Me.SendPropertyChanging
				Me._deu_ide = value
				Me.SendPropertyChanged("deu_ide")
				Me.Ondeu_ideChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_id_P_0031", DbType:="Int")>  _
	Public Property id_P_0031() As System.Nullable(Of Integer)
		Get
			Return Me._id_P_0031
		End Get
		Set
			If (Me._id_P_0031.Equals(value) = false) Then
				If Me._P_0031_cls.HasLoadedOrAssignedValue Then
					Throw New System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException()
				End If
				Me.Onid_P_0031Changing(value)
				Me.SendPropertyChanging
				Me._id_P_0031 = value
				Me.SendPropertyChanged("id_P_0031")
				Me.Onid_P_0031Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_id_P_0023", DbType:="Int")>  _
	Public Property id_P_0023() As System.Nullable(Of Integer)
		Get
			Return Me._id_P_0023
		End Get
		Set
			If (Me._id_P_0023.Equals(value) = false) Then
				If Me._P_0023_cls.HasLoadedOrAssignedValue Then
					Throw New System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException()
				End If
				Me.Onid_P_0023Changing(value)
				Me.SendPropertyChanging
				Me._id_P_0023 = value
				Me.SendPropertyChanged("id_P_0023")
				Me.Onid_P_0023Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_dvf_num", DbType:="VarChar(20)")>  _
	Public Property dvf_num() As String
		Get
			Return Me._dvf_num
		End Get
		Set
			If (String.Equals(Me._dvf_num, value) = false) Then
				Me.Ondvf_numChanging(value)
				Me.SendPropertyChanging
				Me._dvf_num = value
				Me.SendPropertyChanged("dvf_num")
				Me.Ondvf_numChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_dvf_fev_rea", DbType:="DateTime")>  _
	Public Property dvf_fev_rea() As System.Nullable(Of Date)
		Get
			Return Me._dvf_fev_rea
		End Get
		Set
			If (Me._dvf_fev_rea.Equals(value) = false) Then
				Me.Ondvf_fev_reaChanging(value)
				Me.SendPropertyChanging
				Me._dvf_fev_rea = value
				Me.SendPropertyChanged("dvf_fev_rea")
				Me.Ondvf_fev_reaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_dvf_mto", DbType:="Money")>  _
	Public Property dvf_mto() As System.Nullable(Of Decimal)
		Get
			Return Me._dvf_mto
		End Get
		Set
			If (Me._dvf_mto.Equals(value) = false) Then
				Me.Ondvf_mtoChanging(value)
				Me.SendPropertyChanging
				Me._dvf_mto = value
				Me.SendPropertyChanged("dvf_mto")
				Me.Ondvf_mtoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="cli_cls_dvf_cls", Storage:="_cli_cls", ThisKey:="cli_idc", OtherKey:="cli_idc", IsForeignKey:=true)>  _
	Public Property cli_cls() As cli_cls
		Get
			Return Me._cli_cls.Entity
		End Get
		Set
			Dim previousValue As cli_cls = Me._cli_cls.Entity
			If ((Object.Equals(previousValue, value) = false)  _
						OrElse (Me._cli_cls.HasLoadedOrAssignedValue = false)) Then
				Me.SendPropertyChanging
				If ((previousValue Is Nothing)  _
							= false) Then
					Me._cli_cls.Entity = Nothing
					previousValue.dvf_cls.Remove(Me)
				End If
				Me._cli_cls.Entity = value
				If ((value Is Nothing)  _
							= false) Then
					value.dvf_cls.Add(Me)
					Me._cli_idc = value.cli_idc
				Else
					Me._cli_idc = CType(Nothing, String)
				End If
				Me.SendPropertyChanged("cli_cls")
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="cnc_cls_dvf_cls", Storage:="_cnc_cls", ThisKey:="id_cnc", OtherKey:="id_cnc", IsForeignKey:=true)>  _
	Public Property cnc_cls() As cnc_cls
		Get
			Return Me._cnc_cls.Entity
		End Get
		Set
			Dim previousValue As cnc_cls = Me._cnc_cls.Entity
			If ((Object.Equals(previousValue, value) = false)  _
						OrElse (Me._cnc_cls.HasLoadedOrAssignedValue = false)) Then
				Me.SendPropertyChanging
				If ((previousValue Is Nothing)  _
							= false) Then
					Me._cnc_cls.Entity = Nothing
					previousValue.dvf_cls.Remove(Me)
				End If
				Me._cnc_cls.Entity = value
				If ((value Is Nothing)  _
							= false) Then
					value.dvf_cls.Add(Me)
					Me._id_cnc = value.id_cnc
				Else
					Me._id_cnc = CType(Nothing, Nullable(Of Decimal))
				End If
				Me.SendPropertyChanged("cnc_cls")
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="deu_cls_dvf_cls", Storage:="_deu_cls", ThisKey:="deu_ide", OtherKey:="deu_ide", IsForeignKey:=true)>  _
	Public Property deu_cls() As deu_cls
		Get
			Return Me._deu_cls.Entity
		End Get
		Set
			Dim previousValue As deu_cls = Me._deu_cls.Entity
			If ((Object.Equals(previousValue, value) = false)  _
						OrElse (Me._deu_cls.HasLoadedOrAssignedValue = false)) Then
				Me.SendPropertyChanging
				If ((previousValue Is Nothing)  _
							= false) Then
					Me._deu_cls.Entity = Nothing
					previousValue.dvf_cls.Remove(Me)
				End If
				Me._deu_cls.Entity = value
				If ((value Is Nothing)  _
							= false) Then
					value.dvf_cls.Add(Me)
					Me._deu_ide = value.deu_ide
				Else
					Me._deu_ide = CType(Nothing, String)
				End If
				Me.SendPropertyChanged("deu_cls")
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="dsi_cls_dvf_cls", Storage:="_dsi_cls", ThisKey:="id_dsi", OtherKey:="id_dsi", IsForeignKey:=true)>  _
	Public Property dsi_cls() As dsi_cls
		Get
			Return Me._dsi_cls.Entity
		End Get
		Set
			Dim previousValue As dsi_cls = Me._dsi_cls.Entity
			If ((Object.Equals(previousValue, value) = false)  _
						OrElse (Me._dsi_cls.HasLoadedOrAssignedValue = false)) Then
				Me.SendPropertyChanging
				If ((previousValue Is Nothing)  _
							= false) Then
					Me._dsi_cls.Entity = Nothing
					previousValue.dvf_cls.Remove(Me)
				End If
				Me._dsi_cls.Entity = value
				If ((value Is Nothing)  _
							= false) Then
					value.dvf_cls.Add(Me)
					Me._id_dsi = value.id_dsi
				Else
					Me._id_dsi = CType(Nothing, Nullable(Of Decimal))
				End If
				Me.SendPropertyChanged("dsi_cls")
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="P_0023_cls_dvf_cls", Storage:="_P_0023_cls", ThisKey:="id_P_0023", OtherKey:="id_P_0023", IsForeignKey:=true)>  _
	Public Property P_0023_cls() As P_0023_cls
		Get
			Return Me._P_0023_cls.Entity
		End Get
		Set
			Dim previousValue As P_0023_cls = Me._P_0023_cls.Entity
			If ((Object.Equals(previousValue, value) = false)  _
						OrElse (Me._P_0023_cls.HasLoadedOrAssignedValue = false)) Then
				Me.SendPropertyChanging
				If ((previousValue Is Nothing)  _
							= false) Then
					Me._P_0023_cls.Entity = Nothing
					previousValue.dvf_cls.Remove(Me)
				End If
				Me._P_0023_cls.Entity = value
				If ((value Is Nothing)  _
							= false) Then
					value.dvf_cls.Add(Me)
					Me._id_P_0023 = value.id_P_0023
				Else
					Me._id_P_0023 = CType(Nothing, Nullable(Of Integer))
				End If
				Me.SendPropertyChanged("P_0023_cls")
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="P_0031_cls_dvf_cls", Storage:="_P_0031_cls", ThisKey:="id_P_0031", OtherKey:="id_P_0031", IsForeignKey:=true)>  _
	Public Property P_0031_cls() As P_0031_cls
		Get
			Return Me._P_0031_cls.Entity
		End Get
		Set
			Dim previousValue As P_0031_cls = Me._P_0031_cls.Entity
			If ((Object.Equals(previousValue, value) = false)  _
						OrElse (Me._P_0031_cls.HasLoadedOrAssignedValue = false)) Then
				Me.SendPropertyChanging
				If ((previousValue Is Nothing)  _
							= false) Then
					Me._P_0031_cls.Entity = Nothing
					previousValue.dvf_cls.Remove(Me)
				End If
				Me._P_0031_cls.Entity = value
				If ((value Is Nothing)  _
							= false) Then
					value.dvf_cls.Add(Me)
					Me._id_P_0031 = value.id_P_0031
				Else
					Me._id_P_0031 = CType(Nothing, Nullable(Of Integer))
				End If
				Me.SendPropertyChanged("P_0031_cls")
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="P_0040_cls_dvf_cls", Storage:="_P_0040_cls", ThisKey:="id_P_0040", OtherKey:="id_P_0040", IsForeignKey:=true)>  _
	Public Property P_0040_cls() As P_0040_cls
		Get
			Return Me._P_0040_cls.Entity
		End Get
		Set
			Dim previousValue As P_0040_cls = Me._P_0040_cls.Entity
			If ((Object.Equals(previousValue, value) = false)  _
						OrElse (Me._P_0040_cls.HasLoadedOrAssignedValue = false)) Then
				Me.SendPropertyChanging
				If ((previousValue Is Nothing)  _
							= false) Then
					Me._P_0040_cls.Entity = Nothing
					previousValue.dvf_cls.Remove(Me)
				End If
				Me._P_0040_cls.Entity = value
				If ((value Is Nothing)  _
							= false) Then
					value.dvf_cls.Add(Me)
					Me._id_P_0040 = value.id_P_0040
				Else
					Me._id_P_0040 = CType(Nothing, Nullable(Of Integer))
				End If
				Me.SendPropertyChanged("P_0040_cls")
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="eje_cls_dvf_cls", Storage:="_eje_cls", ThisKey:="id_eje_dvf", OtherKey:="id_eje", IsForeignKey:=true)>  _
	Public Property eje_cls() As eje_cls
		Get
			Return Me._eje_cls.Entity
		End Get
		Set
			Dim previousValue As eje_cls = Me._eje_cls.Entity
			If ((Object.Equals(previousValue, value) = false)  _
						OrElse (Me._eje_cls.HasLoadedOrAssignedValue = false)) Then
				Me.SendPropertyChanging
				If ((previousValue Is Nothing)  _
							= false) Then
					Me._eje_cls.Entity = Nothing
					previousValue.dvf_cls.Remove(Me)
				End If
				Me._eje_cls.Entity = value
				If ((value Is Nothing)  _
							= false) Then
					value.dvf_cls.Add(Me)
					Me._id_eje_dvf = value.id_eje
				Else
					Me._id_eje_dvf = CType(Nothing, Nullable(Of Integer))
				End If
				Me.SendPropertyChanged("eje_cls")
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.dxd")>  _
Partial Public Class dxd_cls
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _id_dxd As Integer
	
	Private _id_doc_com As System.Nullable(Of Integer)
	
	Private _id_p_031 As System.Nullable(Of Integer)
	
	Private _dxn_cls As EntitySet(Of dxn_cls)
	
	Private _doc_com_cls As EntityRef(Of doc_com_cls)
	
	Private _P_0031_cls As EntityRef(Of P_0031_cls)
	
    #Region "Definiciones de métodos de extensibilidad"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub Onid_dxdChanging(value As Integer)
    End Sub
    Partial Private Sub Onid_dxdChanged()
    End Sub
    Partial Private Sub Onid_doc_comChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub Onid_doc_comChanged()
    End Sub
    Partial Private Sub Onid_p_031Changing(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub Onid_p_031Changed()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		Me._dxn_cls = New EntitySet(Of dxn_cls)(AddressOf Me.attach_dxn_cls, AddressOf Me.detach_dxn_cls)
		Me._doc_com_cls = CType(Nothing, EntityRef(Of doc_com_cls))
		Me._P_0031_cls = CType(Nothing, EntityRef(Of P_0031_cls))
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_id_dxd", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property id_dxd() As Integer
		Get
			Return Me._id_dxd
		End Get
		Set
			If ((Me._id_dxd = value)  _
						= false) Then
				Me.Onid_dxdChanging(value)
				Me.SendPropertyChanging
				Me._id_dxd = value
				Me.SendPropertyChanged("id_dxd")
				Me.Onid_dxdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_id_doc_com", DbType:="Int")>  _
	Public Property id_doc_com() As System.Nullable(Of Integer)
		Get
			Return Me._id_doc_com
		End Get
		Set
			If (Me._id_doc_com.Equals(value) = false) Then
				If Me._doc_com_cls.HasLoadedOrAssignedValue Then
					Throw New System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException()
				End If
				Me.Onid_doc_comChanging(value)
				Me.SendPropertyChanging
				Me._id_doc_com = value
				Me.SendPropertyChanged("id_doc_com")
				Me.Onid_doc_comChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_id_p_031", DbType:="Int")>  _
	Public Property id_p_031() As System.Nullable(Of Integer)
		Get
			Return Me._id_p_031
		End Get
		Set
			If (Me._id_p_031.Equals(value) = false) Then
				If Me._P_0031_cls.HasLoadedOrAssignedValue Then
					Throw New System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException()
				End If
				Me.Onid_p_031Changing(value)
				Me.SendPropertyChanging
				Me._id_p_031 = value
				Me.SendPropertyChanged("id_p_031")
				Me.Onid_p_031Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="dxd_cls_dxn_cls", Storage:="_dxn_cls", ThisKey:="id_dxd", OtherKey:="id_dxd")>  _
	Public Property dxn_cls() As EntitySet(Of dxn_cls)
		Get
			Return Me._dxn_cls
		End Get
		Set
			Me._dxn_cls.Assign(value)
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="doc_com_cls_dxd_cls", Storage:="_doc_com_cls", ThisKey:="id_doc_com", OtherKey:="id_doc_com", IsForeignKey:=true)>  _
	Public Property doc_com_cls() As doc_com_cls
		Get
			Return Me._doc_com_cls.Entity
		End Get
		Set
			Dim previousValue As doc_com_cls = Me._doc_com_cls.Entity
			If ((Object.Equals(previousValue, value) = false)  _
						OrElse (Me._doc_com_cls.HasLoadedOrAssignedValue = false)) Then
				Me.SendPropertyChanging
				If ((previousValue Is Nothing)  _
							= false) Then
					Me._doc_com_cls.Entity = Nothing
					previousValue.dxd_cls.Remove(Me)
				End If
				Me._doc_com_cls.Entity = value
				If ((value Is Nothing)  _
							= false) Then
					value.dxd_cls.Add(Me)
					Me._id_doc_com = value.id_doc_com
				Else
					Me._id_doc_com = CType(Nothing, Nullable(Of Integer))
				End If
				Me.SendPropertyChanged("doc_com_cls")
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="P_0031_cls_dxd_cls", Storage:="_P_0031_cls", ThisKey:="id_p_031", OtherKey:="id_P_0031", IsForeignKey:=true)>  _
	Public Property P_0031_cls() As P_0031_cls
		Get
			Return Me._P_0031_cls.Entity
		End Get
		Set
			Dim previousValue As P_0031_cls = Me._P_0031_cls.Entity
			If ((Object.Equals(previousValue, value) = false)  _
						OrElse (Me._P_0031_cls.HasLoadedOrAssignedValue = false)) Then
				Me.SendPropertyChanging
				If ((previousValue Is Nothing)  _
							= false) Then
					Me._P_0031_cls.Entity = Nothing
					previousValue.dxd_cls.Remove(Me)
				End If
				Me._P_0031_cls.Entity = value
				If ((value Is Nothing)  _
							= false) Then
					value.dxd_cls.Add(Me)
					Me._id_p_031 = value.id_P_0031
				Else
					Me._id_p_031 = CType(Nothing, Nullable(Of Integer))
				End If
				Me.SendPropertyChanged("P_0031_cls")
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
	
	Private Sub attach_dxn_cls(ByVal entity As dxn_cls)
		Me.SendPropertyChanging
		entity.dxd_cls = Me
	End Sub
	
	Private Sub detach_dxn_cls(ByVal entity As dxn_cls)
		Me.SendPropertyChanging
		entity.dxd_cls = Nothing
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.dxn")>  _
Partial Public Class dxn_cls
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _id_dxn As Integer
	
	Private _id_dxd As Integer
	
	Private _id_opn As Decimal
	
	Private _est_dxd As Char
	
	Private _id_eje As System.Nullable(Of Integer)
	
	Private _dxn_fec_apb As System.Nullable(Of Date)
	
	Private _dxd_cls As EntityRef(Of dxd_cls)
	
	Private _opn_cls As EntityRef(Of opn_cls)
	
	Private _eje_cls As EntityRef(Of eje_cls)
	
    #Region "Definiciones de métodos de extensibilidad"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub Onid_dxnChanging(value As Integer)
    End Sub
    Partial Private Sub Onid_dxnChanged()
    End Sub
    Partial Private Sub Onid_dxdChanging(value As Integer)
    End Sub
    Partial Private Sub Onid_dxdChanged()
    End Sub
    Partial Private Sub Onid_opnChanging(value As Decimal)
    End Sub
    Partial Private Sub Onid_opnChanged()
    End Sub
    Partial Private Sub Onest_dxdChanging(value As Char)
    End Sub
    Partial Private Sub Onest_dxdChanged()
    End Sub
    Partial Private Sub Onid_ejeChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub Onid_ejeChanged()
    End Sub
    Partial Private Sub Ondxn_fec_apbChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub Ondxn_fec_apbChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		Me._dxd_cls = CType(Nothing, EntityRef(Of dxd_cls))
		Me._opn_cls = CType(Nothing, EntityRef(Of opn_cls))
		Me._eje_cls = CType(Nothing, EntityRef(Of eje_cls))
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_id_dxn", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property id_dxn() As Integer
		Get
			Return Me._id_dxn
		End Get
		Set
			If ((Me._id_dxn = value)  _
						= false) Then
				Me.Onid_dxnChanging(value)
				Me.SendPropertyChanging
				Me._id_dxn = value
				Me.SendPropertyChanged("id_dxn")
				Me.Onid_dxnChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_id_dxd", DbType:="Int NOT NULL")>  _
	Public Property id_dxd() As Integer
		Get
			Return Me._id_dxd
		End Get
		Set
			If ((Me._id_dxd = value)  _
						= false) Then
				If Me._dxd_cls.HasLoadedOrAssignedValue Then
					Throw New System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException()
				End If
				Me.Onid_dxdChanging(value)
				Me.SendPropertyChanging
				Me._id_dxd = value
				Me.SendPropertyChanged("id_dxd")
				Me.Onid_dxdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_id_opn", DbType:="Decimal(10,0) NOT NULL")>  _
	Public Property id_opn() As Decimal
		Get
			Return Me._id_opn
		End Get
		Set
			If ((Me._id_opn = value)  _
						= false) Then
				If Me._opn_cls.HasLoadedOrAssignedValue Then
					Throw New System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException()
				End If
				Me.Onid_opnChanging(value)
				Me.SendPropertyChanging
				Me._id_opn = value
				Me.SendPropertyChanged("id_opn")
				Me.Onid_opnChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_est_dxd", DbType:="Char(1) NOT NULL")>  _
	Public Property est_dxd() As Char
		Get
			Return Me._est_dxd
		End Get
		Set
			If ((Me._est_dxd = value)  _
						= false) Then
				Me.Onest_dxdChanging(value)
				Me.SendPropertyChanging
				Me._est_dxd = value
				Me.SendPropertyChanged("est_dxd")
				Me.Onest_dxdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_id_eje", DbType:="Int")>  _
	Public Property id_eje() As System.Nullable(Of Integer)
		Get
			Return Me._id_eje
		End Get
		Set
			If (Me._id_eje.Equals(value) = false) Then
				If Me._eje_cls.HasLoadedOrAssignedValue Then
					Throw New System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException()
				End If
				Me.Onid_ejeChanging(value)
				Me.SendPropertyChanging
				Me._id_eje = value
				Me.SendPropertyChanged("id_eje")
				Me.Onid_ejeChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_dxn_fec_apb", DbType:="DateTime")>  _
	Public Property dxn_fec_apb() As System.Nullable(Of Date)
		Get
			Return Me._dxn_fec_apb
		End Get
		Set
			If (Me._dxn_fec_apb.Equals(value) = false) Then
				Me.Ondxn_fec_apbChanging(value)
				Me.SendPropertyChanging
				Me._dxn_fec_apb = value
				Me.SendPropertyChanged("dxn_fec_apb")
				Me.Ondxn_fec_apbChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="dxd_cls_dxn_cls", Storage:="_dxd_cls", ThisKey:="id_dxd", OtherKey:="id_dxd", IsForeignKey:=true)>  _
	Public Property dxd_cls() As dxd_cls
		Get
			Return Me._dxd_cls.Entity
		End Get
		Set
			Dim previousValue As dxd_cls = Me._dxd_cls.Entity
			If ((Object.Equals(previousValue, value) = false)  _
						OrElse (Me._dxd_cls.HasLoadedOrAssignedValue = false)) Then
				Me.SendPropertyChanging
				If ((previousValue Is Nothing)  _
							= false) Then
					Me._dxd_cls.Entity = Nothing
					previousValue.dxn_cls.Remove(Me)
				End If
				Me._dxd_cls.Entity = value
				If ((value Is Nothing)  _
							= false) Then
					value.dxn_cls.Add(Me)
					Me._id_dxd = value.id_dxd
				Else
					Me._id_dxd = CType(Nothing, Integer)
				End If
				Me.SendPropertyChanged("dxd_cls")
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="opn_cls_dxn_cls", Storage:="_opn_cls", ThisKey:="id_opn", OtherKey:="id_opn", IsForeignKey:=true)>  _
	Public Property opn_cls() As opn_cls
		Get
			Return Me._opn_cls.Entity
		End Get
		Set
			Dim previousValue As opn_cls = Me._opn_cls.Entity
			If ((Object.Equals(previousValue, value) = false)  _
						OrElse (Me._opn_cls.HasLoadedOrAssignedValue = false)) Then
				Me.SendPropertyChanging
				If ((previousValue Is Nothing)  _
							= false) Then
					Me._opn_cls.Entity = Nothing
					previousValue.dxn_cls.Remove(Me)
				End If
				Me._opn_cls.Entity = value
				If ((value Is Nothing)  _
							= false) Then
					value.dxn_cls.Add(Me)
					Me._id_opn = value.id_opn
				Else
					Me._id_opn = CType(Nothing, Decimal)
				End If
				Me.SendPropertyChanged("opn_cls")
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="eje_cls_dxn_cls", Storage:="_eje_cls", ThisKey:="id_eje", OtherKey:="id_eje", IsForeignKey:=true)>  _
	Public Property eje_cls() As eje_cls
		Get
			Return Me._eje_cls.Entity
		End Get
		Set
			Dim previousValue As eje_cls = Me._eje_cls.Entity
			If ((Object.Equals(previousValue, value) = false)  _
						OrElse (Me._eje_cls.HasLoadedOrAssignedValue = false)) Then
				Me.SendPropertyChanging
				If ((previousValue Is Nothing)  _
							= false) Then
					Me._eje_cls.Entity = Nothing
					previousValue.dxn_cls.Remove(Me)
				End If
				Me._eje_cls.Entity = value
				If ((value Is Nothing)  _
							= false) Then
					value.dxn_cls.Add(Me)
					Me._id_eje = value.id_eje
				Else
					Me._id_eje = CType(Nothing, Nullable(Of Integer))
				End If
				Me.SendPropertyChanged("eje_cls")
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.egr")>  _
Partial Public Class egr_cls
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _id_egr As Decimal
	
	Private _cli_idc As String
	
	Private _id_apl As System.Nullable(Of Decimal)
	
	Private _id_opo As System.Nullable(Of Decimal)
	
	Private _id_eje As System.Nullable(Of Integer)
	
	Private _egr_fec As System.Nullable(Of Date)
	
	Private _egr_obs As String
	
	Private _egr_sec_cls As EntitySet(Of egr_sec_cls)
	
	Private _sim_egr_cls As EntitySet(Of sim_egr_cls)
	
	Private _apl_cls As EntityRef(Of apl_cls)
	
	Private _cli_cls As EntityRef(Of cli_cls)
	
	Private _opo_cls As EntityRef(Of opo_cls)
	
	Private _eje_cls As EntityRef(Of eje_cls)
	
    #Region "Definiciones de métodos de extensibilidad"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub Onid_egrChanging(value As Decimal)
    End Sub
    Partial Private Sub Onid_egrChanged()
    End Sub
    Partial Private Sub Oncli_idcChanging(value As String)
    End Sub
    Partial Private Sub Oncli_idcChanged()
    End Sub
    Partial Private Sub Onid_aplChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub Onid_aplChanged()
    End Sub
    Partial Private Sub Onid_opoChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub Onid_opoChanged()
    End Sub
    Partial Private Sub Onid_ejeChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub Onid_ejeChanged()
    End Sub
    Partial Private Sub Onegr_fecChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub Onegr_fecChanged()
    End Sub
    Partial Private Sub Onegr_obsChanging(value As String)
    End Sub
    Partial Private Sub Onegr_obsChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		Me._egr_sec_cls = New EntitySet(Of egr_sec_cls)(AddressOf Me.attach_egr_sec_cls, AddressOf Me.detach_egr_sec_cls)
		Me._sim_egr_cls = New EntitySet(Of sim_egr_cls)(AddressOf Me.attach_sim_egr_cls, AddressOf Me.detach_sim_egr_cls)
		Me._apl_cls = CType(Nothing, EntityRef(Of apl_cls))
		Me._cli_cls = CType(Nothing, EntityRef(Of cli_cls))
		Me._opo_cls = CType(Nothing, EntityRef(Of opo_cls))
		Me._eje_cls = CType(Nothing, EntityRef(Of eje_cls))
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_id_egr", AutoSync:=AutoSync.OnInsert, DbType:="Decimal(10,0) NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property id_egr() As Decimal
		Get
			Return Me._id_egr
		End Get
		Set
			If ((Me._id_egr = value)  _
						= false) Then
				Me.Onid_egrChanging(value)
				Me.SendPropertyChanging
				Me._id_egr = value
				Me.SendPropertyChanged("id_egr")
				Me.Onid_egrChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_cli_idc", DbType:="Char(12) NOT NULL", CanBeNull:=false)>  _
	Public Property cli_idc() As String
		Get
			Return Me._cli_idc
		End Get
		Set
			If (String.Equals(Me._cli_idc, value) = false) Then
				If Me._cli_cls.HasLoadedOrAssignedValue Then
					Throw New System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException()
				End If
				Me.Oncli_idcChanging(value)
				Me.SendPropertyChanging
				Me._cli_idc = value
				Me.SendPropertyChanged("cli_idc")
				Me.Oncli_idcChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_id_apl", DbType:="Decimal(10,0)")>  _
	Public Property id_apl() As System.Nullable(Of Decimal)
		Get
			Return Me._id_apl
		End Get
		Set
			If (Me._id_apl.Equals(value) = false) Then
				If Me._apl_cls.HasLoadedOrAssignedValue Then
					Throw New System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException()
				End If
				Me.Onid_aplChanging(value)
				Me.SendPropertyChanging
				Me._id_apl = value
				Me.SendPropertyChanged("id_apl")
				Me.Onid_aplChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_id_opo", DbType:="Decimal(10,0)")>  _
	Public Property id_opo() As System.Nullable(Of Decimal)
		Get
			Return Me._id_opo
		End Get
		Set
			If (Me._id_opo.Equals(value) = false) Then
				If Me._opo_cls.HasLoadedOrAssignedValue Then
					Throw New System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException()
				End If
				Me.Onid_opoChanging(value)
				Me.SendPropertyChanging
				Me._id_opo = value
				Me.SendPropertyChanged("id_opo")
				Me.Onid_opoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_id_eje", DbType:="Int")>  _
	Public Property id_eje() As System.Nullable(Of Integer)
		Get
			Return Me._id_eje
		End Get
		Set
			If (Me._id_eje.Equals(value) = false) Then
				If Me._eje_cls.HasLoadedOrAssignedValue Then
					Throw New System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException()
				End If
				Me.Onid_ejeChanging(value)
				Me.SendPropertyChanging
				Me._id_eje = value
				Me.SendPropertyChanged("id_eje")
				Me.Onid_ejeChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_egr_fec", DbType:="DateTime")>  _
	Public Property egr_fec() As System.Nullable(Of Date)
		Get
			Return Me._egr_fec
		End Get
		Set
			If (Me._egr_fec.Equals(value) = false) Then
				Me.Onegr_fecChanging(value)
				Me.SendPropertyChanging
				Me._egr_fec = value
				Me.SendPropertyChanged("egr_fec")
				Me.Onegr_fecChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_egr_obs", DbType:="VarChar(255)")>  _
	Public Property egr_obs() As String
		Get
			Return Me._egr_obs
		End Get
		Set
			If (String.Equals(Me._egr_obs, value) = false) Then
				Me.Onegr_obsChanging(value)
				Me.SendPropertyChanging
				Me._egr_obs = value
				Me.SendPropertyChanged("egr_obs")
				Me.Onegr_obsChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="egr_cls_egr_sec_cls", Storage:="_egr_sec_cls", ThisKey:="id_egr", OtherKey:="id_egr")>  _
	Public Property egr_sec_cls() As EntitySet(Of egr_sec_cls)
		Get
			Return Me._egr_sec_cls
		End Get
		Set
			Me._egr_sec_cls.Assign(value)
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="egr_cls_sim_egr_cls", Storage:="_sim_egr_cls", ThisKey:="id_egr", OtherKey:="id_egr")>  _
	Public Property sim_egr_cls() As EntitySet(Of sim_egr_cls)
		Get
			Return Me._sim_egr_cls
		End Get
		Set
			Me._sim_egr_cls.Assign(value)
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="apl_cls_egr_cls", Storage:="_apl_cls", ThisKey:="id_apl", OtherKey:="id_apl", IsForeignKey:=true)>  _
	Public Property apl_cls() As apl_cls
		Get
			Return Me._apl_cls.Entity
		End Get
		Set
			Dim previousValue As apl_cls = Me._apl_cls.Entity
			If ((Object.Equals(previousValue, value) = false)  _
						OrElse (Me._apl_cls.HasLoadedOrAssignedValue = false)) Then
				Me.SendPropertyChanging
				If ((previousValue Is Nothing)  _
							= false) Then
					Me._apl_cls.Entity = Nothing
					previousValue.egr_cls.Remove(Me)
				End If
				Me._apl_cls.Entity = value
				If ((value Is Nothing)  _
							= false) Then
					value.egr_cls.Add(Me)
					Me._id_apl = value.id_apl
				Else
					Me._id_apl = CType(Nothing, Nullable(Of Decimal))
				End If
				Me.SendPropertyChanged("apl_cls")
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="cli_cls_egr_cls", Storage:="_cli_cls", ThisKey:="cli_idc", OtherKey:="cli_idc", IsForeignKey:=true)>  _
	Public Property cli_cls() As cli_cls
		Get
			Return Me._cli_cls.Entity
		End Get
		Set
			Dim previousValue As cli_cls = Me._cli_cls.Entity
			If ((Object.Equals(previousValue, value) = false)  _
						OrElse (Me._cli_cls.HasLoadedOrAssignedValue = false)) Then
				Me.SendPropertyChanging
				If ((previousValue Is Nothing)  _
							= false) Then
					Me._cli_cls.Entity = Nothing
					previousValue.egr_cls.Remove(Me)
				End If
				Me._cli_cls.Entity = value
				If ((value Is Nothing)  _
							= false) Then
					value.egr_cls.Add(Me)
					Me._cli_idc = value.cli_idc
				Else
					Me._cli_idc = CType(Nothing, String)
				End If
				Me.SendPropertyChanged("cli_cls")
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="opo_cls_egr_cls", Storage:="_opo_cls", ThisKey:="id_opo", OtherKey:="id_opo", IsForeignKey:=true)>  _
	Public Property opo_cls() As opo_cls
		Get
			Return Me._opo_cls.Entity
		End Get
		Set
			Dim previousValue As opo_cls = Me._opo_cls.Entity
			If ((Object.Equals(previousValue, value) = false)  _
						OrElse (Me._opo_cls.HasLoadedOrAssignedValue = false)) Then
				Me.SendPropertyChanging
				If ((previousValue Is Nothing)  _
							= false) Then
					Me._opo_cls.Entity = Nothing
					previousValue.egr_cls.Remove(Me)
				End If
				Me._opo_cls.Entity = value
				If ((value Is Nothing)  _
							= false) Then
					value.egr_cls.Add(Me)
					Me._id_opo = value.id_opo
				Else
					Me._id_opo = CType(Nothing, Nullable(Of Decimal))
				End If
				Me.SendPropertyChanged("opo_cls")
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="eje_cls_egr_cls", Storage:="_eje_cls", ThisKey:="id_eje", OtherKey:="id_eje", IsForeignKey:=true)>  _
	Public Property eje_cls() As eje_cls
		Get
			Return Me._eje_cls.Entity
		End Get
		Set
			Dim previousValue As eje_cls = Me._eje_cls.Entity
			If ((Object.Equals(previousValue, value) = false)  _
						OrElse (Me._eje_cls.HasLoadedOrAssignedValue = false)) Then
				Me.SendPropertyChanging
				If ((previousValue Is Nothing)  _
							= false) Then
					Me._eje_cls.Entity = Nothing
					previousValue.egr_cls.Remove(Me)
				End If
				Me._eje_cls.Entity = value
				If ((value Is Nothing)  _
							= false) Then
					value.egr_cls.Add(Me)
					Me._id_eje = value.id_eje
				Else
					Me._id_eje = CType(Nothing, Nullable(Of Integer))
				End If
				Me.SendPropertyChanged("eje_cls")
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
	
	Private Sub attach_egr_sec_cls(ByVal entity As egr_sec_cls)
		Me.SendPropertyChanging
		entity.egr_cls = Me
	End Sub
	
	Private Sub detach_egr_sec_cls(ByVal entity As egr_sec_cls)
		Me.SendPropertyChanging
		entity.egr_cls = Nothing
	End Sub
	
	Private Sub attach_sim_egr_cls(ByVal entity As sim_egr_cls)
		Me.SendPropertyChanging
		entity.egr_cls = Me
	End Sub
	
	Private Sub detach_sim_egr_cls(ByVal entity As sim_egr_cls)
		Me.SendPropertyChanging
		entity.egr_cls = Nothing
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.egr_sec")>  _
Partial Public Class egr_sec_cls
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _id_egr_sec As Decimal
	
	Private _id_egr As System.Nullable(Of Decimal)
	
	Private _id_doc As System.Nullable(Of Decimal)
	
	Private _id_cxp As System.Nullable(Of Decimal)
	
	Private _id_dpo As System.Nullable(Of Decimal)
	
	Private _id_bco As System.Nullable(Of Integer)
	
	Private _id_nce As System.Nullable(Of Decimal)
	
	Private _id_P_0053 As System.Nullable(Of Integer)
	
	Private _id_P_0055 As System.Nullable(Of Integer)
	
	Private _id_P_0056 As System.Nullable(Of Integer)
	
	Private _egr_mto As System.Nullable(Of Decimal)
	
	Private _egr_doc_nce As System.Nullable(Of Char)
	
	Private _egr_dep_ant As System.Nullable(Of Char)
	
	Private _egr_cta_cte As String
	
	Private _egr_rev_cxc As String
	
	Private _egr_abo_man_aut As System.Nullable(Of Char)
	
	Private _egr_est_tra As String
	
	Private _egr_vld_rcz As System.Nullable(Of Char)
	
	Private _egr_pro As System.Nullable(Of Char)
	
	Private _egr_ent As System.Nullable(Of Char)
	
	Private _egr_fec_ctb As System.Nullable(Of Date)
	
	Private _ing_sec_cls As EntitySet(Of ing_sec_cls)
	
	Private _cxp_cls As EntityRef(Of cxp_cls)
	
	Private _doc_cls As EntityRef(Of doc_cls)
	
	Private _dpo_cls As EntityRef(Of dpo_cls)
	
	Private _egr_cls As EntityRef(Of egr_cls)
	
	Private _nbc_cls As EntityRef(Of nbc_cls)
	
	Private _nce_cls As EntityRef(Of nce_cls)
	
	Private _P_0053_cls As EntityRef(Of P_0053_cls)
	
	Private _P_0055_cls As EntityRef(Of P_0055_cls)
	
	Private _P_0056_cls As EntityRef(Of P_0056_cls)
	
    #Region "Definiciones de métodos de extensibilidad"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub Onid_egr_secChanging(value As Decimal)
    End Sub
    Partial Private Sub Onid_egr_secChanged()
    End Sub
    Partial Private Sub Onid_egrChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub Onid_egrChanged()
    End Sub
    Partial Private Sub Onid_docChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub Onid_docChanged()
    End Sub
    Partial Private Sub Onid_cxpChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub Onid_cxpChanged()
    End Sub
    Partial Private Sub Onid_dpoChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub Onid_dpoChanged()
    End Sub
    Partial Private Sub Onid_bcoChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub Onid_bcoChanged()
    End Sub
    Partial Private Sub Onid_nceChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub Onid_nceChanged()
    End Sub
    Partial Private Sub Onid_P_0053Changing(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub Onid_P_0053Changed()
    End Sub
    Partial Private Sub Onid_P_0055Changing(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub Onid_P_0055Changed()
    End Sub
    Partial Private Sub Onid_P_0056Changing(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub Onid_P_0056Changed()
    End Sub
    Partial Private Sub Onegr_mtoChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub Onegr_mtoChanged()
    End Sub
    Partial Private Sub Onegr_doc_nceChanging(value As System.Nullable(Of Char))
    End Sub
    Partial Private Sub Onegr_doc_nceChanged()
    End Sub
    Partial Private Sub Onegr_dep_antChanging(value As System.Nullable(Of Char))
    End Sub
    Partial Private Sub Onegr_dep_antChanged()
    End Sub
    Partial Private Sub Onegr_cta_cteChanging(value As String)
    End Sub
    Partial Private Sub Onegr_cta_cteChanged()
    End Sub
    Partial Private Sub Onegr_rev_cxcChanging(value As String)
    End Sub
    Partial Private Sub Onegr_rev_cxcChanged()
    End Sub
    Partial Private Sub Onegr_abo_man_autChanging(value As System.Nullable(Of Char))
    End Sub
    Partial Private Sub Onegr_abo_man_autChanged()
    End Sub
    Partial Private Sub Onegr_est_traChanging(value As String)
    End Sub
    Partial Private Sub Onegr_est_traChanged()
    End Sub
    Partial Private Sub Onegr_vld_rczChanging(value As System.Nullable(Of Char))
    End Sub
    Partial Private Sub Onegr_vld_rczChanged()
    End Sub
    Partial Private Sub Onegr_proChanging(value As System.Nullable(Of Char))
    End Sub
    Partial Private Sub Onegr_proChanged()
    End Sub
    Partial Private Sub Onegr_entChanging(value As System.Nullable(Of Char))
    End Sub
    Partial Private Sub Onegr_entChanged()
    End Sub
    Partial Private Sub Onegr_fec_ctbChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub Onegr_fec_ctbChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		Me._ing_sec_cls = New EntitySet(Of ing_sec_cls)(AddressOf Me.attach_ing_sec_cls, AddressOf Me.detach_ing_sec_cls)
		Me._cxp_cls = CType(Nothing, EntityRef(Of cxp_cls))
		Me._doc_cls = CType(Nothing, EntityRef(Of doc_cls))
		Me._dpo_cls = CType(Nothing, EntityRef(Of dpo_cls))
		Me._egr_cls = CType(Nothing, EntityRef(Of egr_cls))
		Me._nbc_cls = CType(Nothing, EntityRef(Of nbc_cls))
		Me._nce_cls = CType(Nothing, EntityRef(Of nce_cls))
		Me._P_0053_cls = CType(Nothing, EntityRef(Of P_0053_cls))
		Me._P_0055_cls = CType(Nothing, EntityRef(Of P_0055_cls))
		Me._P_0056_cls = CType(Nothing, EntityRef(Of P_0056_cls))
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_id_egr_sec", AutoSync:=AutoSync.OnInsert, DbType:="Decimal(18,0) NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property id_egr_sec() As Decimal
		Get
			Return Me._id_egr_sec
		End Get
		Set
			If ((Me._id_egr_sec = value)  _
						= false) Then
				Me.Onid_egr_secChanging(value)
				Me.SendPropertyChanging
				Me._id_egr_sec = value
				Me.SendPropertyChanged("id_egr_sec")
				Me.Onid_egr_secChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_id_egr", DbType:="Decimal(10,0)")>  _
	Public Property id_egr() As System.Nullable(Of Decimal)
		Get
			Return Me._id_egr
		End Get
		Set
			If (Me._id_egr.Equals(value) = false) Then
				If Me._egr_cls.HasLoadedOrAssignedValue Then
					Throw New System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException()
				End If
				Me.Onid_egrChanging(value)
				Me.SendPropertyChanging
				Me._id_egr = value
				Me.SendPropertyChanged("id_egr")
				Me.Onid_egrChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_id_doc", DbType:="Decimal(18,0)")>  _
	Public Property id_doc() As System.Nullable(Of Decimal)
		Get
			Return Me._id_doc
		End Get
		Set
			If (Me._id_doc.Equals(value) = false) Then
				If Me._doc_cls.HasLoadedOrAssignedValue Then
					Throw New System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException()
				End If
				Me.Onid_docChanging(value)
				Me.SendPropertyChanging
				Me._id_doc = value
				Me.SendPropertyChanged("id_doc")
				Me.Onid_docChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_id_cxp", DbType:="Decimal(10,0)")>  _
	Public Property id_cxp() As System.Nullable(Of Decimal)
		Get
			Return Me._id_cxp
		End Get
		Set
			If (Me._id_cxp.Equals(value) = false) Then
				If Me._cxp_cls.HasLoadedOrAssignedValue Then
					Throw New System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException()
				End If
				Me.Onid_cxpChanging(value)
				Me.SendPropertyChanging
				Me._id_cxp = value
				Me.SendPropertyChanged("id_cxp")
				Me.Onid_cxpChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_id_dpo", DbType:="Decimal(10,0)")>  _
	Public Property id_dpo() As System.Nullable(Of Decimal)
		Get
			Return Me._id_dpo
		End Get
		Set
			If (Me._id_dpo.Equals(value) = false) Then
				If Me._dpo_cls.HasLoadedOrAssignedValue Then
					Throw New System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException()
				End If
				Me.Onid_dpoChanging(value)
				Me.SendPropertyChanging
				Me._id_dpo = value
				Me.SendPropertyChanged("id_dpo")
				Me.Onid_dpoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_id_bco", DbType:="Int")>  _
	Public Property id_bco() As System.Nullable(Of Integer)
		Get
			Return Me._id_bco
		End Get
		Set
			If (Me._id_bco.Equals(value) = false) Then
				If Me._nbc_cls.HasLoadedOrAssignedValue Then
					Throw New System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException()
				End If
				Me.Onid_bcoChanging(value)
				Me.SendPropertyChanging
				Me._id_bco = value
				Me.SendPropertyChanged("id_bco")
				Me.Onid_bcoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_id_nce", DbType:="Decimal(10,0)")>  _
	Public Property id_nce() As System.Nullable(Of Decimal)
		Get
			Return Me._id_nce
		End Get
		Set
			If (Me._id_nce.Equals(value) = false) Then
				If Me._nce_cls.HasLoadedOrAssignedValue Then
					Throw New System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException()
				End If
				Me.Onid_nceChanging(value)
				Me.SendPropertyChanging
				Me._id_nce = value
				Me.SendPropertyChanged("id_nce")
				Me.Onid_nceChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_id_P_0053", DbType:="Int")>  _
	Public Property id_P_0053() As System.Nullable(Of Integer)
		Get
			Return Me._id_P_0053
		End Get
		Set
			If (Me._id_P_0053.Equals(value) = false) Then
				If Me._P_0053_cls.HasLoadedOrAssignedValue Then
					Throw New System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException()
				End If
				Me.Onid_P_0053Changing(value)
				Me.SendPropertyChanging
				Me._id_P_0053 = value
				Me.SendPropertyChanged("id_P_0053")
				Me.Onid_P_0053Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_id_P_0055", DbType:="Int")>  _
	Public Property id_P_0055() As System.Nullable(Of Integer)
		Get
			Return Me._id_P_0055
		End Get
		Set
			If (Me._id_P_0055.Equals(value) = false) Then
				If Me._P_0055_cls.HasLoadedOrAssignedValue Then
					Throw New System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException()
				End If
				Me.Onid_P_0055Changing(value)
				Me.SendPropertyChanging
				Me._id_P_0055 = value
				Me.SendPropertyChanged("id_P_0055")
				Me.Onid_P_0055Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_id_P_0056", DbType:="Int")>  _
	Public Property id_P_0056() As System.Nullable(Of Integer)
		Get
			Return Me._id_P_0056
		End Get
		Set
			If (Me._id_P_0056.Equals(value) = false) Then
				If Me._P_0056_cls.HasLoadedOrAssignedValue Then
					Throw New System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException()
				End If
				Me.Onid_P_0056Changing(value)
				Me.SendPropertyChanging
				Me._id_P_0056 = value
				Me.SendPropertyChanged("id_P_0056")
				Me.Onid_P_0056Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_egr_mto", DbType:="Money")>  _
	Public Property egr_mto() As System.Nullable(Of Decimal)
		Get
			Return Me._egr_mto
		End Get
		Set
			If (Me._egr_mto.Equals(value) = false) Then
				Me.Onegr_mtoChanging(value)
				Me.SendPropertyChanging
				Me._egr_mto = value
				Me.SendPropertyChanged("egr_mto")
				Me.Onegr_mtoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_egr_doc_nce", DbType:="Char(1)")>  _
	Public Property egr_doc_nce() As System.Nullable(Of Char)
		Get
			Return Me._egr_doc_nce
		End Get
		Set
			If (Me._egr_doc_nce.Equals(value) = false) Then
				Me.Onegr_doc_nceChanging(value)
				Me.SendPropertyChanging
				Me._egr_doc_nce = value
				Me.SendPropertyChanged("egr_doc_nce")
				Me.Onegr_doc_nceChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_egr_dep_ant", DbType:="Char(1)")>  _
	Public Property egr_dep_ant() As System.Nullable(Of Char)
		Get
			Return Me._egr_dep_ant
		End Get
		Set
			If (Me._egr_dep_ant.Equals(value) = false) Then
				Me.Onegr_dep_antChanging(value)
				Me.SendPropertyChanging
				Me._egr_dep_ant = value
				Me.SendPropertyChanged("egr_dep_ant")
				Me.Onegr_dep_antChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_egr_cta_cte", DbType:="VarChar(50)")>  _
	Public Property egr_cta_cte() As String
		Get
			Return Me._egr_cta_cte
		End Get
		Set
			If (String.Equals(Me._egr_cta_cte, value) = false) Then
				Me.Onegr_cta_cteChanging(value)
				Me.SendPropertyChanging
				Me._egr_cta_cte = value
				Me.SendPropertyChanged("egr_cta_cte")
				Me.Onegr_cta_cteChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_egr_rev_cxc", DbType:="VarChar(2)")>  _
	Public Property egr_rev_cxc() As String
		Get
			Return Me._egr_rev_cxc
		End Get
		Set
			If (String.Equals(Me._egr_rev_cxc, value) = false) Then
				Me.Onegr_rev_cxcChanging(value)
				Me.SendPropertyChanging
				Me._egr_rev_cxc = value
				Me.SendPropertyChanged("egr_rev_cxc")
				Me.Onegr_rev_cxcChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_egr_abo_man_aut", DbType:="Char(1)")>  _
	Public Property egr_abo_man_aut() As System.Nullable(Of Char)
		Get
			Return Me._egr_abo_man_aut
		End Get
		Set
			If (Me._egr_abo_man_aut.Equals(value) = false) Then
				Me.Onegr_abo_man_autChanging(value)
				Me.SendPropertyChanging
				Me._egr_abo_man_aut = value
				Me.SendPropertyChanged("egr_abo_man_aut")
				Me.Onegr_abo_man_autChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_egr_est_tra", DbType:="VarChar(50)")>  _
	Public Property egr_est_tra() As String
		Get
			Return Me._egr_est_tra
		End Get
		Set
			If (String.Equals(Me._egr_est_tra, value) = false) Then
				Me.Onegr_est_traChanging(value)
				Me.SendPropertyChanging
				Me._egr_est_tra = value
				Me.SendPropertyChanged("egr_est_tra")
				Me.Onegr_est_traChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_egr_vld_rcz", DbType:="Char(1)")>  _
	Public Property egr_vld_rcz() As System.Nullable(Of Char)
		Get
			Return Me._egr_vld_rcz
		End Get
		Set
			If (Me._egr_vld_rcz.Equals(value) = false) Then
				Me.Onegr_vld_rczChanging(value)
				Me.SendPropertyChanging
				Me._egr_vld_rcz = value
				Me.SendPropertyChanged("egr_vld_rcz")
				Me.Onegr_vld_rczChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_egr_pro", DbType:="Char(1)")>  _
	Public Property egr_pro() As System.Nullable(Of Char)
		Get
			Return Me._egr_pro
		End Get
		Set
			If (Me._egr_pro.Equals(value) = false) Then
				Me.Onegr_proChanging(value)
				Me.SendPropertyChanging
				Me._egr_pro = value
				Me.SendPropertyChanged("egr_pro")
				Me.Onegr_proChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_egr_ent", DbType:="Char(1)")>  _
	Public Property egr_ent() As System.Nullable(Of Char)
		Get
			Return Me._egr_ent
		End Get
		Set
			If (Me._egr_ent.Equals(value) = false) Then
				Me.Onegr_entChanging(value)
				Me.SendPropertyChanging
				Me._egr_ent = value
				Me.SendPropertyChanged("egr_ent")
				Me.Onegr_entChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_egr_fec_ctb", DbType:="DateTime")>  _
	Public Property egr_fec_ctb() As System.Nullable(Of Date)
		Get
			Return Me._egr_fec_ctb
		End Get
		Set
			If (Me._egr_fec_ctb.Equals(value) = false) Then
				Me.Onegr_fec_ctbChanging(value)
				Me.SendPropertyChanging
				Me._egr_fec_ctb = value
				Me.SendPropertyChanged("egr_fec_ctb")
				Me.Onegr_fec_ctbChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="egr_sec_cls_ing_sec_cls", Storage:="_ing_sec_cls", ThisKey:="id_egr_sec", OtherKey:="id_egr_sec")>  _
	Public Property ing_sec_cls() As EntitySet(Of ing_sec_cls)
		Get
			Return Me._ing_sec_cls
		End Get
		Set
			Me._ing_sec_cls.Assign(value)
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="cxp_cls_egr_sec_cls", Storage:="_cxp_cls", ThisKey:="id_cxp", OtherKey:="id_cxp", IsForeignKey:=true)>  _
	Public Property cxp_cls() As cxp_cls
		Get
			Return Me._cxp_cls.Entity
		End Get
		Set
			Dim previousValue As cxp_cls = Me._cxp_cls.Entity
			If ((Object.Equals(previousValue, value) = false)  _
						OrElse (Me._cxp_cls.HasLoadedOrAssignedValue = false)) Then
				Me.SendPropertyChanging
				If ((previousValue Is Nothing)  _
							= false) Then
					Me._cxp_cls.Entity = Nothing
					previousValue.egr_sec_cls.Remove(Me)
				End If
				Me._cxp_cls.Entity = value
				If ((value Is Nothing)  _
							= false) Then
					value.egr_sec_cls.Add(Me)
					Me._id_cxp = value.id_cxp
				Else
					Me._id_cxp = CType(Nothing, Nullable(Of Decimal))
				End If
				Me.SendPropertyChanged("cxp_cls")
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="doc_cls_egr_sec_cls", Storage:="_doc_cls", ThisKey:="id_doc", OtherKey:="id_doc", IsForeignKey:=true)>  _
	Public Property doc_cls() As doc_cls
		Get
			Return Me._doc_cls.Entity
		End Get
		Set
			Dim previousValue As doc_cls = Me._doc_cls.Entity
			If ((Object.Equals(previousValue, value) = false)  _
						OrElse (Me._doc_cls.HasLoadedOrAssignedValue = false)) Then
				Me.SendPropertyChanging
				If ((previousValue Is Nothing)  _
							= false) Then
					Me._doc_cls.Entity = Nothing
					previousValue.egr_sec_cls.Remove(Me)
				End If
				Me._doc_cls.Entity = value
				If ((value Is Nothing)  _
							= false) Then
					value.egr_sec_cls.Add(Me)
					Me._id_doc = value.id_doc
				Else
					Me._id_doc = CType(Nothing, Nullable(Of Decimal))
				End If
				Me.SendPropertyChanged("doc_cls")
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="dpo_cls_egr_sec_cls", Storage:="_dpo_cls", ThisKey:="id_dpo", OtherKey:="id_dpo", IsForeignKey:=true)>  _
	Public Property dpo_cls() As dpo_cls
		Get
			Return Me._dpo_cls.Entity
		End Get
		Set
			Dim previousValue As dpo_cls = Me._dpo_cls.Entity
			If ((Object.Equals(previousValue, value) = false)  _
						OrElse (Me._dpo_cls.HasLoadedOrAssignedValue = false)) Then
				Me.SendPropertyChanging
				If ((previousValue Is Nothing)  _
							= false) Then
					Me._dpo_cls.Entity = Nothing
					previousValue.egr_sec_cls.Remove(Me)
				End If
				Me._dpo_cls.Entity = value
				If ((value Is Nothing)  _
							= false) Then
					value.egr_sec_cls.Add(Me)
					Me._id_dpo = value.id_dpo
				Else
					Me._id_dpo = CType(Nothing, Nullable(Of Decimal))
				End If
				Me.SendPropertyChanged("dpo_cls")
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="egr_cls_egr_sec_cls", Storage:="_egr_cls", ThisKey:="id_egr", OtherKey:="id_egr", IsForeignKey:=true)>  _
	Public Property egr_cls() As egr_cls
		Get
			Return Me._egr_cls.Entity
		End Get
		Set
			Dim previousValue As egr_cls = Me._egr_cls.Entity
			If ((Object.Equals(previousValue, value) = false)  _
						OrElse (Me._egr_cls.HasLoadedOrAssignedValue = false)) Then
				Me.SendPropertyChanging
				If ((previousValue Is Nothing)  _
							= false) Then
					Me._egr_cls.Entity = Nothing
					previousValue.egr_sec_cls.Remove(Me)
				End If
				Me._egr_cls.Entity = value
				If ((value Is Nothing)  _
							= false) Then
					value.egr_sec_cls.Add(Me)
					Me._id_egr = value.id_egr
				Else
					Me._id_egr = CType(Nothing, Nullable(Of Decimal))
				End If
				Me.SendPropertyChanged("egr_cls")
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="nbc_cls_egr_sec_cls", Storage:="_nbc_cls", ThisKey:="id_bco", OtherKey:="id_nbc", IsForeignKey:=true)>  _
	Public Property nbc_cls() As nbc_cls
		Get
			Return Me._nbc_cls.Entity
		End Get
		Set
			Dim previousValue As nbc_cls = Me._nbc_cls.Entity
			If ((Object.Equals(previousValue, value) = false)  _
						OrElse (Me._nbc_cls.HasLoadedOrAssignedValue = false)) Then
				Me.SendPropertyChanging
				If ((previousValue Is Nothing)  _
							= false) Then
					Me._nbc_cls.Entity = Nothing
					previousValue.egr_sec_cls.Remove(Me)
				End If
				Me._nbc_cls.Entity = value
				If ((value Is Nothing)  _
							= false) Then
					value.egr_sec_cls.Add(Me)
					Me._id_bco = value.id_nbc
				Else
					Me._id_bco = CType(Nothing, Nullable(Of Integer))
				End If
				Me.SendPropertyChanged("nbc_cls")
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="nce_cls_egr_sec_cls", Storage:="_nce_cls", ThisKey:="id_nce", OtherKey:="id_nce", IsForeignKey:=true)>  _
	Public Property nce_cls() As nce_cls
		Get
			Return Me._nce_cls.Entity
		End Get
		Set
			Dim previousValue As nce_cls = Me._nce_cls.Entity
			If ((Object.Equals(previousValue, value) = false)  _
						OrElse (Me._nce_cls.HasLoadedOrAssignedValue = false)) Then
				Me.SendPropertyChanging
				If ((previousValue Is Nothing)  _
							= false) Then
					Me._nce_cls.Entity = Nothing
					previousValue.egr_sec_cls.Remove(Me)
				End If
				Me._nce_cls.Entity = value
				If ((value Is Nothing)  _
							= false) Then
					value.egr_sec_cls.Add(Me)
					Me._id_nce = value.id_nce
				Else
					Me._id_nce = CType(Nothing, Nullable(Of Decimal))
				End If
				Me.SendPropertyChanged("nce_cls")
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="P_0053_cls_egr_sec_cls", Storage:="_P_0053_cls", ThisKey:="id_P_0053", OtherKey:="id_P_0053", IsForeignKey:=true)>  _
	Public Property P_0053_cls() As P_0053_cls
		Get
			Return Me._P_0053_cls.Entity
		End Get
		Set
			Dim previousValue As P_0053_cls = Me._P_0053_cls.Entity
			If ((Object.Equals(previousValue, value) = false)  _
						OrElse (Me._P_0053_cls.HasLoadedOrAssignedValue = false)) Then
				Me.SendPropertyChanging
				If ((previousValue Is Nothing)  _
							= false) Then
					Me._P_0053_cls.Entity = Nothing
					previousValue.egr_sec_cls.Remove(Me)
				End If
				Me._P_0053_cls.Entity = value
				If ((value Is Nothing)  _
							= false) Then
					value.egr_sec_cls.Add(Me)
					Me._id_P_0053 = value.id_P_0053
				Else
					Me._id_P_0053 = CType(Nothing, Nullable(Of Integer))
				End If
				Me.SendPropertyChanged("P_0053_cls")
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="P_0055_cls_egr_sec_cls", Storage:="_P_0055_cls", ThisKey:="id_P_0055", OtherKey:="id_P_0055", IsForeignKey:=true)>  _
	Public Property P_0055_cls() As P_0055_cls
		Get
			Return Me._P_0055_cls.Entity
		End Get
		Set
			Dim previousValue As P_0055_cls = Me._P_0055_cls.Entity
			If ((Object.Equals(previousValue, value) = false)  _
						OrElse (Me._P_0055_cls.HasLoadedOrAssignedValue = false)) Then
				Me.SendPropertyChanging
				If ((previousValue Is Nothing)  _
							= false) Then
					Me._P_0055_cls.Entity = Nothing
					previousValue.egr_sec_cls.Remove(Me)
				End If
				Me._P_0055_cls.Entity = value
				If ((value Is Nothing)  _
							= false) Then
					value.egr_sec_cls.Add(Me)
					Me._id_P_0055 = value.id_P_0055
				Else
					Me._id_P_0055 = CType(Nothing, Nullable(Of Integer))
				End If
				Me.SendPropertyChanged("P_0055_cls")
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="P_0056_cls_egr_sec_cls", Storage:="_P_0056_cls", ThisKey:="id_P_0056", OtherKey:="id_P_0056", IsForeignKey:=true)>  _
	Public Property P_0056_cls() As P_0056_cls
		Get
			Return Me._P_0056_cls.Entity
		End Get
		Set
			Dim previousValue As P_0056_cls = Me._P_0056_cls.Entity
			If ((Object.Equals(previousValue, value) = false)  _
						OrElse (Me._P_0056_cls.HasLoadedOrAssignedValue = false)) Then
				Me.SendPropertyChanging
				If ((previousValue Is Nothing)  _
							= false) Then
					Me._P_0056_cls.Entity = Nothing
					previousValue.egr_sec_cls.Remove(Me)
				End If
				Me._P_0056_cls.Entity = value
				If ((value Is Nothing)  _
							= false) Then
					value.egr_sec_cls.Add(Me)
					Me._id_P_0056 = value.id_P_0056
				Else
					Me._id_P_0056 = CType(Nothing, Nullable(Of Integer))
				End If
				Me.SendPropertyChanged("P_0056_cls")
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
	
	Private Sub attach_ing_sec_cls(ByVal entity As ing_sec_cls)
		Me.SendPropertyChanging
		entity.egr_sec_cls = Me
	End Sub
	
	Private Sub detach_ing_sec_cls(ByVal entity As ing_sec_cls)
		Me.SendPropertyChanging
		entity.egr_sec_cls = Nothing
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.emp")>  _
Partial Public Class emp_cls
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _id_emp As Integer
	
	Private _cli_idc As String
	
	Private _emp_rut As String
	
	Private _emp_des As String
	
	Private _cli_cls As EntityRef(Of cli_cls)
	
    #Region "Definiciones de métodos de extensibilidad"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub Onid_empChanging(value As Integer)
    End Sub
    Partial Private Sub Onid_empChanged()
    End Sub
    Partial Private Sub Oncli_idcChanging(value As String)
    End Sub
    Partial Private Sub Oncli_idcChanged()
    End Sub
    Partial Private Sub Onemp_rutChanging(value As String)
    End Sub
    Partial Private Sub Onemp_rutChanged()
    End Sub
    Partial Private Sub Onemp_desChanging(value As String)
    End Sub
    Partial Private Sub Onemp_desChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		Me._cli_cls = CType(Nothing, EntityRef(Of cli_cls))
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_id_emp", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property id_emp() As Integer
		Get
			Return Me._id_emp
		End Get
		Set
			If ((Me._id_emp = value)  _
						= false) Then
				Me.Onid_empChanging(value)
				Me.SendPropertyChanging
				Me._id_emp = value
				Me.SendPropertyChanged("id_emp")
				Me.Onid_empChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_cli_idc", DbType:="Char(12) NOT NULL", CanBeNull:=false)>  _
	Public Property cli_idc() As String
		Get
			Return Me._cli_idc
		End Get
		Set
			If (String.Equals(Me._cli_idc, value) = false) Then
				If Me._cli_cls.HasLoadedOrAssignedValue Then
					Throw New System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException()
				End If
				Me.Oncli_idcChanging(value)
				Me.SendPropertyChanging
				Me._cli_idc = value
				Me.SendPropertyChanged("cli_idc")
				Me.Oncli_idcChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_emp_rut", DbType:="VarChar(12) NOT NULL", CanBeNull:=false)>  _
	Public Property emp_rut() As String
		Get
			Return Me._emp_rut
		End Get
		Set
			If (String.Equals(Me._emp_rut, value) = false) Then
				Me.Onemp_rutChanging(value)
				Me.SendPropertyChanging
				Me._emp_rut = value
				Me.SendPropertyChanged("emp_rut")
				Me.Onemp_rutChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_emp_des", DbType:="VarChar(50)")>  _
	Public Property emp_des() As String
		Get
			Return Me._emp_des
		End Get
		Set
			If (String.Equals(Me._emp_des, value) = false) Then
				Me.Onemp_desChanging(value)
				Me.SendPropertyChanging
				Me._emp_des = value
				Me.SendPropertyChanged("emp_des")
				Me.Onemp_desChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="cli_cls_emp_cls", Storage:="_cli_cls", ThisKey:="cli_idc", OtherKey:="cli_idc", IsForeignKey:=true)>  _
	Public Property cli_cls() As cli_cls
		Get
			Return Me._cli_cls.Entity
		End Get
		Set
			Dim previousValue As cli_cls = Me._cli_cls.Entity
			If ((Object.Equals(previousValue, value) = false)  _
						OrElse (Me._cli_cls.HasLoadedOrAssignedValue = false)) Then
				Me.SendPropertyChanging
				If ((previousValue Is Nothing)  _
							= false) Then
					Me._cli_cls.Entity = Nothing
					previousValue.emp_cls.Remove(Me)
				End If
				Me._cli_cls.Entity = value
				If ((value Is Nothing)  _
							= false) Then
					value.emp_cls.Add(Me)
					Me._cli_idc = value.cli_idc
				Else
					Me._cli_idc = CType(Nothing, String)
				End If
				Me.SendPropertyChanged("cli_cls")
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.Error")>  _
Partial Public Class Error_cls
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _Id_Error As Integer
	
	Private _Cod_Error As String
	
	Private _Des_Error As String
	
	Private _Msj_Cliente As String
	
	Private _Msj_Ejecutivo As String
	
	Private _Estado As String
	
	Private _Usuario As String
	
	Private _Fech_Creacion As System.Nullable(Of Date)
	
	Private _Fech_Modificacion As System.Nullable(Of Date)
	
    #Region "Definiciones de métodos de extensibilidad"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnId_ErrorChanging(value As Integer)
    End Sub
    Partial Private Sub OnId_ErrorChanged()
    End Sub
    Partial Private Sub OnCod_ErrorChanging(value As String)
    End Sub
    Partial Private Sub OnCod_ErrorChanged()
    End Sub
    Partial Private Sub OnDes_ErrorChanging(value As String)
    End Sub
    Partial Private Sub OnDes_ErrorChanged()
    End Sub
    Partial Private Sub OnMsj_ClienteChanging(value As String)
    End Sub
    Partial Private Sub OnMsj_ClienteChanged()
    End Sub
    Partial Private Sub OnMsj_EjecutivoChanging(value As String)
    End Sub
    Partial Private Sub OnMsj_EjecutivoChanged()
    End Sub
    Partial Private Sub OnEstadoChanging(value As String)
    End Sub
    Partial Private Sub OnEstadoChanged()
    End Sub
    Partial Private Sub OnUsuarioChanging(value As String)
    End Sub
    Partial Private Sub OnUsuarioChanged()
    End Sub
    Partial Private Sub OnFech_CreacionChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnFech_CreacionChanged()
    End Sub
    Partial Private Sub OnFech_ModificacionChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnFech_ModificacionChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Id_Error", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property Id_Error() As Integer
		Get
			Return Me._Id_Error
		End Get
		Set
			If ((Me._Id_Error = value)  _
						= false) Then
				Me.OnId_ErrorChanging(value)
				Me.SendPropertyChanging
				Me._Id_Error = value
				Me.SendPropertyChanged("Id_Error")
				Me.OnId_ErrorChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Cod_Error", DbType:="VarChar(50)")>  _
	Public Property Cod_Error() As String
		Get
			Return Me._Cod_Error
		End Get
		Set
			If (String.Equals(Me._Cod_Error, value) = false) Then
				Me.OnCod_ErrorChanging(value)
				Me.SendPropertyChanging
				Me._Cod_Error = value
				Me.SendPropertyChanged("Cod_Error")
				Me.OnCod_ErrorChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Des_Error", DbType:="VarChar(50)")>  _
	Public Property Des_Error() As String
		Get
			Return Me._Des_Error
		End Get
		Set
			If (String.Equals(Me._Des_Error, value) = false) Then
				Me.OnDes_ErrorChanging(value)
				Me.SendPropertyChanging
				Me._Des_Error = value
				Me.SendPropertyChanged("Des_Error")
				Me.OnDes_ErrorChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Msj_Cliente", DbType:="VarChar(MAX)")>  _
	Public Property Msj_Cliente() As String
		Get
			Return Me._Msj_Cliente
		End Get
		Set
			If (String.Equals(Me._Msj_Cliente, value) = false) Then
				Me.OnMsj_ClienteChanging(value)
				Me.SendPropertyChanging
				Me._Msj_Cliente = value
				Me.SendPropertyChanged("Msj_Cliente")
				Me.OnMsj_ClienteChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Msj_Ejecutivo", DbType:="VarChar(MAX)")>  _
	Public Property Msj_Ejecutivo() As String
		Get
			Return Me._Msj_Ejecutivo
		End Get
		Set
			If (String.Equals(Me._Msj_Ejecutivo, value) = false) Then
				Me.OnMsj_EjecutivoChanging(value)
				Me.SendPropertyChanging
				Me._Msj_Ejecutivo = value
				Me.SendPropertyChanged("Msj_Ejecutivo")
				Me.OnMsj_EjecutivoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Estado", DbType:="VarChar(50)")>  _
	Public Property Estado() As String
		Get
			Return Me._Estado
		End Get
		Set
			If (String.Equals(Me._Estado, value) = false) Then
				Me.OnEstadoChanging(value)
				Me.SendPropertyChanging
				Me._Estado = value
				Me.SendPropertyChanged("Estado")
				Me.OnEstadoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Usuario", DbType:="VarChar(50)")>  _
	Public Property Usuario() As String
		Get
			Return Me._Usuario
		End Get
		Set
			If (String.Equals(Me._Usuario, value) = false) Then
				Me.OnUsuarioChanging(value)
				Me.SendPropertyChanging
				Me._Usuario = value
				Me.SendPropertyChanged("Usuario")
				Me.OnUsuarioChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Fech_Creacion", DbType:="SmallDateTime")>  _
	Public Property Fech_Creacion() As System.Nullable(Of Date)
		Get
			Return Me._Fech_Creacion
		End Get
		Set
			If (Me._Fech_Creacion.Equals(value) = false) Then
				Me.OnFech_CreacionChanging(value)
				Me.SendPropertyChanging
				Me._Fech_Creacion = value
				Me.SendPropertyChanged("Fech_Creacion")
				Me.OnFech_CreacionChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Fech_Modificacion", DbType:="SmallDateTime")>  _
	Public Property Fech_Modificacion() As System.Nullable(Of Date)
		Get
			Return Me._Fech_Modificacion
		End Get
		Set
			If (Me._Fech_Modificacion.Equals(value) = false) Then
				Me.OnFech_ModificacionChanging(value)
				Me.SendPropertyChanging
				Me._Fech_Modificacion = value
				Me.SendPropertyChanged("Fech_Modificacion")
				Me.OnFech_ModificacionChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.eva")>  _
Partial Public Class eva_cls
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _id_eva As Decimal
	
	Private _cli_idc As String
	
	Private _id_eje As Integer
	
	Private _id_P_0023 As System.Nullable(Of Integer)
	
	Private _id_P_0110 As System.Nullable(Of Integer)
	
	Private _eva_por As System.Nullable(Of Decimal)
	
	Private _eva_fec_cre As System.Nullable(Of Date)
	
	Private _eva_pdf As System.Data.Linq.Binary
	
	Private _eva_obs As String
	
	Private _exd_cls As EntitySet(Of exd_cls)
	
	Private _opn_cls As EntitySet(Of opn_cls)
	
	Private _cli_cls As EntityRef(Of cli_cls)
	
	Private _P_0023_cls As EntityRef(Of P_0023_cls)
	
	Private _P_0110_cls As EntityRef(Of P_0110_cls)
	
	Private _eje_cls As EntityRef(Of eje_cls)
	
    #Region "Definiciones de métodos de extensibilidad"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub Onid_evaChanging(value As Decimal)
    End Sub
    Partial Private Sub Onid_evaChanged()
    End Sub
    Partial Private Sub Oncli_idcChanging(value As String)
    End Sub
    Partial Private Sub Oncli_idcChanged()
    End Sub
    Partial Private Sub Onid_ejeChanging(value As Integer)
    End Sub
    Partial Private Sub Onid_ejeChanged()
    End Sub
    Partial Private Sub Onid_P_0023Changing(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub Onid_P_0023Changed()
    End Sub
    Partial Private Sub Onid_P_0110Changing(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub Onid_P_0110Changed()
    End Sub
    Partial Private Sub Oneva_porChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub Oneva_porChanged()
    End Sub
    Partial Private Sub Oneva_fec_creChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub Oneva_fec_creChanged()
    End Sub
    Partial Private Sub Oneva_pdfChanging(value As System.Data.Linq.Binary)
    End Sub
    Partial Private Sub Oneva_pdfChanged()
    End Sub
    Partial Private Sub Oneva_obsChanging(value As String)
    End Sub
    Partial Private Sub Oneva_obsChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		Me._exd_cls = New EntitySet(Of exd_cls)(AddressOf Me.attach_exd_cls, AddressOf Me.detach_exd_cls)
		Me._opn_cls = New EntitySet(Of opn_cls)(AddressOf Me.attach_opn_cls, AddressOf Me.detach_opn_cls)
		Me._cli_cls = CType(Nothing, EntityRef(Of cli_cls))
		Me._P_0023_cls = CType(Nothing, EntityRef(Of P_0023_cls))
		Me._P_0110_cls = CType(Nothing, EntityRef(Of P_0110_cls))
		Me._eje_cls = CType(Nothing, EntityRef(Of eje_cls))
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_id_eva", AutoSync:=AutoSync.OnInsert, DbType:="Decimal(10,0) NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property id_eva() As Decimal
		Get
			Return Me._id_eva
		End Get
		Set
			If ((Me._id_eva = value)  _
						= false) Then
				Me.Onid_evaChanging(value)
				Me.SendPropertyChanging
				Me._id_eva = value
				Me.SendPropertyChanged("id_eva")
				Me.Onid_evaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_cli_idc", DbType:="Char(12) NOT NULL", CanBeNull:=false)>  _
	Public Property cli_idc() As String
		Get
			Return Me._cli_idc
		End Get
		Set
			If (String.Equals(Me._cli_idc, value) = false) Then
				If Me._cli_cls.HasLoadedOrAssignedValue Then
					Throw New System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException()
				End If
				Me.Oncli_idcChanging(value)
				Me.SendPropertyChanging
				Me._cli_idc = value
				Me.SendPropertyChanged("cli_idc")
				Me.Oncli_idcChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_id_eje", DbType:="Int NOT NULL")>  _
	Public Property id_eje() As Integer
		Get
			Return Me._id_eje
		End Get
		Set
			If ((Me._id_eje = value)  _
						= false) Then
				If Me._eje_cls.HasLoadedOrAssignedValue Then
					Throw New System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException()
				End If
				Me.Onid_ejeChanging(value)
				Me.SendPropertyChanging
				Me._id_eje = value
				Me.SendPropertyChanged("id_eje")
				Me.Onid_ejeChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_id_P_0023", DbType:="Int")>  _
	Public Property id_P_0023() As System.Nullable(Of Integer)
		Get
			Return Me._id_P_0023
		End Get
		Set
			If (Me._id_P_0023.Equals(value) = false) Then
				If Me._P_0023_cls.HasLoadedOrAssignedValue Then
					Throw New System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException()
				End If
				Me.Onid_P_0023Changing(value)
				Me.SendPropertyChanging
				Me._id_P_0023 = value
				Me.SendPropertyChanged("id_P_0023")
				Me.Onid_P_0023Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_id_P_0110", DbType:="Int")>  _
	Public Property id_P_0110() As System.Nullable(Of Integer)
		Get
			Return Me._id_P_0110
		End Get
		Set
			If (Me._id_P_0110.Equals(value) = false) Then
				If Me._P_0110_cls.HasLoadedOrAssignedValue Then
					Throw New System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException()
				End If
				Me.Onid_P_0110Changing(value)
				Me.SendPropertyChanging
				Me._id_P_0110 = value
				Me.SendPropertyChanged("id_P_0110")
				Me.Onid_P_0110Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_eva_por", DbType:="Decimal(5,2)")>  _
	Public Property eva_por() As System.Nullable(Of Decimal)
		Get
			Return Me._eva_por
		End Get
		Set
			If (Me._eva_por.Equals(value) = false) Then
				Me.Oneva_porChanging(value)
				Me.SendPropertyChanging
				Me._eva_por = value
				Me.SendPropertyChanged("eva_por")
				Me.Oneva_porChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_eva_fec_cre", DbType:="DateTime")>  _
	Public Property eva_fec_cre() As System.Nullable(Of Date)
		Get
			Return Me._eva_fec_cre
		End Get
		Set
			If (Me._eva_fec_cre.Equals(value) = false) Then
				Me.Oneva_fec_creChanging(value)
				Me.SendPropertyChanging
				Me._eva_fec_cre = value
				Me.SendPropertyChanged("eva_fec_cre")
				Me.Oneva_fec_creChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_eva_pdf", DbType:="Image", CanBeNull:=true, UpdateCheck:=UpdateCheck.Never)>  _
	Public Property eva_pdf() As System.Data.Linq.Binary
		Get
			Return Me._eva_pdf
		End Get
		Set
			If (Object.Equals(Me._eva_pdf, value) = false) Then
				Me.Oneva_pdfChanging(value)
				Me.SendPropertyChanging
				Me._eva_pdf = value
				Me.SendPropertyChanged("eva_pdf")
				Me.Oneva_pdfChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_eva_obs", DbType:="VarChar(255)")>  _
	Public Property eva_obs() As String
		Get
			Return Me._eva_obs
		End Get
		Set
			If (String.Equals(Me._eva_obs, value) = false) Then
				Me.Oneva_obsChanging(value)
				Me.SendPropertyChanging
				Me._eva_obs = value
				Me.SendPropertyChanged("eva_obs")
				Me.Oneva_obsChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="eva_cls_exd_cls", Storage:="_exd_cls", ThisKey:="id_eva", OtherKey:="id_eva")>  _
	Public Property exd_cls() As EntitySet(Of exd_cls)
		Get
			Return Me._exd_cls
		End Get
		Set
			Me._exd_cls.Assign(value)
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="eva_cls_opn_cls", Storage:="_opn_cls", ThisKey:="id_eva", OtherKey:="id_eva")>  _
	Public Property opn_cls() As EntitySet(Of opn_cls)
		Get
			Return Me._opn_cls
		End Get
		Set
			Me._opn_cls.Assign(value)
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="cli_cls_eva_cls", Storage:="_cli_cls", ThisKey:="cli_idc", OtherKey:="cli_idc", IsForeignKey:=true)>  _
	Public Property cli_cls() As cli_cls
		Get
			Return Me._cli_cls.Entity
		End Get
		Set
			Dim previousValue As cli_cls = Me._cli_cls.Entity
			If ((Object.Equals(previousValue, value) = false)  _
						OrElse (Me._cli_cls.HasLoadedOrAssignedValue = false)) Then
				Me.SendPropertyChanging
				If ((previousValue Is Nothing)  _
							= false) Then
					Me._cli_cls.Entity = Nothing
					previousValue.eva_cls.Remove(Me)
				End If
				Me._cli_cls.Entity = value
				If ((value Is Nothing)  _
							= false) Then
					value.eva_cls.Add(Me)
					Me._cli_idc = value.cli_idc
				Else
					Me._cli_idc = CType(Nothing, String)
				End If
				Me.SendPropertyChanged("cli_cls")
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="P_0023_cls_eva_cls", Storage:="_P_0023_cls", ThisKey:="id_P_0023", OtherKey:="id_P_0023", IsForeignKey:=true)>  _
	Public Property P_0023_cls() As P_0023_cls
		Get
			Return Me._P_0023_cls.Entity
		End Get
		Set
			Dim previousValue As P_0023_cls = Me._P_0023_cls.Entity
			If ((Object.Equals(previousValue, value) = false)  _
						OrElse (Me._P_0023_cls.HasLoadedOrAssignedValue = false)) Then
				Me.SendPropertyChanging
				If ((previousValue Is Nothing)  _
							= false) Then
					Me._P_0023_cls.Entity = Nothing
					previousValue.eva_cls.Remove(Me)
				End If
				Me._P_0023_cls.Entity = value
				If ((value Is Nothing)  _
							= false) Then
					value.eva_cls.Add(Me)
					Me._id_P_0023 = value.id_P_0023
				Else
					Me._id_P_0023 = CType(Nothing, Nullable(Of Integer))
				End If
				Me.SendPropertyChanged("P_0023_cls")
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="P_0110_cls_eva_cls", Storage:="_P_0110_cls", ThisKey:="id_P_0110", OtherKey:="id_P_0110", IsForeignKey:=true)>  _
	Public Property P_0110_cls() As P_0110_cls
		Get
			Return Me._P_0110_cls.Entity
		End Get
		Set
			Dim previousValue As P_0110_cls = Me._P_0110_cls.Entity
			If ((Object.Equals(previousValue, value) = false)  _
						OrElse (Me._P_0110_cls.HasLoadedOrAssignedValue = false)) Then
				Me.SendPropertyChanging
				If ((previousValue Is Nothing)  _
							= false) Then
					Me._P_0110_cls.Entity = Nothing
					previousValue.eva_cls.Remove(Me)
				End If
				Me._P_0110_cls.Entity = value
				If ((value Is Nothing)  _
							= false) Then
					value.eva_cls.Add(Me)
					Me._id_P_0110 = value.id_P_0110
				Else
					Me._id_P_0110 = CType(Nothing, Nullable(Of Integer))
				End If
				Me.SendPropertyChanged("P_0110_cls")
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="eje_cls_eva_cls", Storage:="_eje_cls", ThisKey:="id_eje", OtherKey:="id_eje", IsForeignKey:=true)>  _
	Public Property eje_cls() As eje_cls
		Get
			Return Me._eje_cls.Entity
		End Get
		Set
			Dim previousValue As eje_cls = Me._eje_cls.Entity
			If ((Object.Equals(previousValue, value) = false)  _
						OrElse (Me._eje_cls.HasLoadedOrAssignedValue = false)) Then
				Me.SendPropertyChanging
				If ((previousValue Is Nothing)  _
							= false) Then
					Me._eje_cls.Entity = Nothing
					previousValue.eva_cls.Remove(Me)
				End If
				Me._eje_cls.Entity = value
				If ((value Is Nothing)  _
							= false) Then
					value.eva_cls.Add(Me)
					Me._id_eje = value.id_eje
				Else
					Me._id_eje = CType(Nothing, Integer)
				End If
				Me.SendPropertyChanged("eje_cls")
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
	
	Private Sub attach_exd_cls(ByVal entity As exd_cls)
		Me.SendPropertyChanging
		entity.eva_cls = Me
	End Sub
	
	Private Sub detach_exd_cls(ByVal entity As exd_cls)
		Me.SendPropertyChanging
		entity.eva_cls = Nothing
	End Sub
	
	Private Sub attach_opn_cls(ByVal entity As opn_cls)
		Me.SendPropertyChanging
		entity.eva_cls = Me
	End Sub
	
	Private Sub detach_opn_cls(ByVal entity As opn_cls)
		Me.SendPropertyChanging
		entity.eva_cls = Nothing
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.evf")>  _
Partial Public Class evf_cls
	
	Private _cli_idc As String
	
	Private _evf_fev_ing_06 As System.Nullable(Of Date)
	
	Private _evf_mto_deu_06 As System.Nullable(Of Decimal)
	
	Private _evf_mto_ant_06 As System.Nullable(Of Decimal)
	
	Private _evf_ctd_ope_06 As System.Nullable(Of Integer)
	
	Private _evf_fev_ing_05 As System.Nullable(Of Date)
	
	Private _evf_mto_deu_05 As System.Nullable(Of Decimal)
	
	Private _evf_mto_ant_05 As System.Nullable(Of Decimal)
	
	Private _evf_ctd_ope_05 As System.Nullable(Of Integer)
	
	Private _evf_fev_ing_04 As System.Nullable(Of Date)
	
	Private _evf_mto_deu_04 As System.Nullable(Of Decimal)
	
	Private _evf_mto_ant_04 As System.Nullable(Of Decimal)
	
	Private _evf_ctd_ope_04 As System.Nullable(Of Integer)
	
	Private _evf_fev_ing_03 As System.Nullable(Of Date)
	
	Private _evf_mto_deu_03 As System.Nullable(Of Decimal)
	
	Private _evf_mto_ant_03 As System.Nullable(Of Decimal)
	
	Private _evf_ctd_ope_03 As System.Nullable(Of Integer)
	
	Private _evf_fev_ing_02 As System.Nullable(Of Date)
	
	Private _evf_mto_deu_02 As System.Nullable(Of Decimal)
	
	Private _evf_mto_ant_02 As System.Nullable(Of Decimal)
	
	Private _evf_ctd_ope_02 As System.Nullable(Of Integer)
	
	Private _evf_fev_ing_01 As System.Nullable(Of Date)
	
	Private _evf_mto_deu_01 As System.Nullable(Of Decimal)
	
	Private _evf_mto_ant_01 As System.Nullable(Of Decimal)
	
	Private _evf_ctd_ope_01 As System.Nullable(Of Integer)
	
	Public Sub New()
		MyBase.New
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_cli_idc", DbType:="VarChar(12) NOT NULL", CanBeNull:=false)>  _
	Public Property cli_idc() As String
		Get
			Return Me._cli_idc
		End Get
		Set
			If (String.Equals(Me._cli_idc, value) = false) Then
				Me._cli_idc = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_evf_fev_ing_06", DbType:="DateTime")>  _
	Public Property evf_fev_ing_06() As System.Nullable(Of Date)
		Get
			Return Me._evf_fev_ing_06
		End Get
		Set
			If (Me._evf_fev_ing_06.Equals(value) = false) Then
				Me._evf_fev_ing_06 = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_evf_mto_deu_06", DbType:="Money")>  _
	Public Property evf_mto_deu_06() As System.Nullable(Of Decimal)
		Get
			Return Me._evf_mto_deu_06
		End Get
		Set
			If (Me._evf_mto_deu_06.Equals(value) = false) Then
				Me._evf_mto_deu_06 = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_evf_mto_ant_06", DbType:="Money")>  _
	Public Property evf_mto_ant_06() As System.Nullable(Of Decimal)
		Get
			Return Me._evf_mto_ant_06
		End Get
		Set
			If (Me._evf_mto_ant_06.Equals(value) = false) Then
				Me._evf_mto_ant_06 = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_evf_ctd_ope_06", DbType:="Int")>  _
	Public Property evf_ctd_ope_06() As System.Nullable(Of Integer)
		Get
			Return Me._evf_ctd_ope_06
		End Get
		Set
			If (Me._evf_ctd_ope_06.Equals(value) = false) Then
				Me._evf_ctd_ope_06 = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_evf_fev_ing_05", DbType:="DateTime")>  _
	Public Property evf_fev_ing_05() As System.Nullable(Of Date)
		Get
			Return Me._evf_fev_ing_05
		End Get
		Set
			If (Me._evf_fev_ing_05.Equals(value) = false) Then
				Me._evf_fev_ing_05 = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_evf_mto_deu_05", DbType:="Money")>  _
	Public Property evf_mto_deu_05() As System.Nullable(Of Decimal)
		Get
			Return Me._evf_mto_deu_05
		End Get
		Set
			If (Me._evf_mto_deu_05.Equals(value) = false) Then
				Me._evf_mto_deu_05 = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_evf_mto_ant_05", DbType:="Money")>  _
	Public Property evf_mto_ant_05() As System.Nullable(Of Decimal)
		Get
			Return Me._evf_mto_ant_05
		End Get
		Set
			If (Me._evf_mto_ant_05.Equals(value) = false) Then
				Me._evf_mto_ant_05 = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_evf_ctd_ope_05", DbType:="Int")>  _
	Public Property evf_ctd_ope_05() As System.Nullable(Of Integer)
		Get
			Return Me._evf_ctd_ope_05
		End Get
		Set
			If (Me._evf_ctd_ope_05.Equals(value) = false) Then
				Me._evf_ctd_ope_05 = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_evf_fev_ing_04", DbType:="DateTime")>  _
	Public Property evf_fev_ing_04() As System.Nullable(Of Date)
		Get
			Return Me._evf_fev_ing_04
		End Get
		Set
			If (Me._evf_fev_ing_04.Equals(value) = false) Then
				Me._evf_fev_ing_04 = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_evf_mto_deu_04", DbType:="Money")>  _
	Public Property evf_mto_deu_04() As System.Nullable(Of Decimal)
		Get
			Return Me._evf_mto_deu_04
		End Get
		Set
			If (Me._evf_mto_deu_04.Equals(value) = false) Then
				Me._evf_mto_deu_04 = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_evf_mto_ant_04", DbType:="Money")>  _
	Public Property evf_mto_ant_04() As System.Nullable(Of Decimal)
		Get
			Return Me._evf_mto_ant_04
		End Get
		Set
			If (Me._evf_mto_ant_04.Equals(value) = false) Then
				Me._evf_mto_ant_04 = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_evf_ctd_ope_04", DbType:="Int")>  _
	Public Property evf_ctd_ope_04() As System.Nullable(Of Integer)
		Get
			Return Me._evf_ctd_ope_04
		End Get
		Set
			If (Me._evf_ctd_ope_04.Equals(value) = false) Then
				Me._evf_ctd_ope_04 = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_evf_fev_ing_03", DbType:="DateTime")>  _
	Public Property evf_fev_ing_03() As System.Nullable(Of Date)
		Get
			Return Me._evf_fev_ing_03
		End Get
		Set
			If (Me._evf_fev_ing_03.Equals(value) = false) Then
				Me._evf_fev_ing_03 = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_evf_mto_deu_03", DbType:="Money")>  _
	Public Property evf_mto_deu_03() As System.Nullable(Of Decimal)
		Get
			Return Me._evf_mto_deu_03
		End Get
		Set
			If (Me._evf_mto_deu_03.Equals(value) = false) Then
				Me._evf_mto_deu_03 = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_evf_mto_ant_03", DbType:="Money")>  _
	Public Property evf_mto_ant_03() As System.Nullable(Of Decimal)
		Get
			Return Me._evf_mto_ant_03
		End Get
		Set
			If (Me._evf_mto_ant_03.Equals(value) = false) Then
				Me._evf_mto_ant_03 = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_evf_ctd_ope_03", DbType:="Int")>  _
	Public Property evf_ctd_ope_03() As System.Nullable(Of Integer)
		Get
			Return Me._evf_ctd_ope_03
		End Get
		Set
			If (Me._evf_ctd_ope_03.Equals(value) = false) Then
				Me._evf_ctd_ope_03 = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_evf_fev_ing_02", DbType:="DateTime")>  _
	Public Property evf_fev_ing_02() As System.Nullable(Of Date)
		Get
			Return Me._evf_fev_ing_02
		End Get
		Set
			If (Me._evf_fev_ing_02.Equals(value) = false) Then
				Me._evf_fev_ing_02 = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_evf_mto_deu_02", DbType:="Money")>  _
	Public Property evf_mto_deu_02() As System.Nullable(Of Decimal)
		Get
			Return Me._evf_mto_deu_02
		End Get
		Set
			If (Me._evf_mto_deu_02.Equals(value) = false) Then
				Me._evf_mto_deu_02 = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_evf_mto_ant_02", DbType:="Money")>  _
	Public Property evf_mto_ant_02() As System.Nullable(Of Decimal)
		Get
			Return Me._evf_mto_ant_02
		End Get
		Set
			If (Me._evf_mto_ant_02.Equals(value) = false) Then
				Me._evf_mto_ant_02 = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_evf_ctd_ope_02", DbType:="Int")>  _
	Public Property evf_ctd_ope_02() As System.Nullable(Of Integer)
		Get
			Return Me._evf_ctd_ope_02
		End Get
		Set
			If (Me._evf_ctd_ope_02.Equals(value) = false) Then
				Me._evf_ctd_ope_02 = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_evf_fev_ing_01", DbType:="DateTime")>  _
	Public Property evf_fev_ing_01() As System.Nullable(Of Date)
		Get
			Return Me._evf_fev_ing_01
		End Get
		Set
			If (Me._evf_fev_ing_01.Equals(value) = false) Then
				Me._evf_fev_ing_01 = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_evf_mto_deu_01", DbType:="Money")>  _
	Public Property evf_mto_deu_01() As System.Nullable(Of Decimal)
		Get
			Return Me._evf_mto_deu_01
		End Get
		Set
			If (Me._evf_mto_deu_01.Equals(value) = false) Then
				Me._evf_mto_deu_01 = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_evf_mto_ant_01", DbType:="Money")>  _
	Public Property evf_mto_ant_01() As System.Nullable(Of Decimal)
		Get
			Return Me._evf_mto_ant_01
		End Get
		Set
			If (Me._evf_mto_ant_01.Equals(value) = false) Then
				Me._evf_mto_ant_01 = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_evf_ctd_ope_01", DbType:="Int")>  _
	Public Property evf_ctd_ope_01() As System.Nullable(Of Integer)
		Get
			Return Me._evf_ctd_ope_01
		End Get
		Set
			If (Me._evf_ctd_ope_01.Equals(value) = false) Then
				Me._evf_ctd_ope_01 = value
			End If
		End Set
	End Property
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.exd")>  _
Partial Public Class exd_cls
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _id_exd As Decimal
	
	Private _id_eva As Decimal
	
	Private _deu_ide As String
	
	Private _deu_rut As String
	
	Private _deu_nom As String
	
	Private _mto_eva As Decimal
	
	Private _mto_eva_tot As Decimal
	
	Private _exd_por_cli As System.Nullable(Of Decimal)
	
	Private _deu_cls As EntityRef(Of deu_cls)
	
	Private _eva_cls As EntityRef(Of eva_cls)
	
    #Region "Definiciones de métodos de extensibilidad"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub Onid_exdChanging(value As Decimal)
    End Sub
    Partial Private Sub Onid_exdChanged()
    End Sub
    Partial Private Sub Onid_evaChanging(value As Decimal)
    End Sub
    Partial Private Sub Onid_evaChanged()
    End Sub
    Partial Private Sub Ondeu_ideChanging(value As String)
    End Sub
    Partial Private Sub Ondeu_ideChanged()
    End Sub
    Partial Private Sub Ondeu_rutChanging(value As String)
    End Sub
    Partial Private Sub Ondeu_rutChanged()
    End Sub
    Partial Private Sub Ondeu_nomChanging(value As String)
    End Sub
    Partial Private Sub Ondeu_nomChanged()
    End Sub
    Partial Private Sub Onmto_evaChanging(value As Decimal)
    End Sub
    Partial Private Sub Onmto_evaChanged()
    End Sub
    Partial Private Sub Onmto_eva_totChanging(value As Decimal)
    End Sub
    Partial Private Sub Onmto_eva_totChanged()
    End Sub
    Partial Private Sub Onexd_por_cliChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub Onexd_por_cliChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		Me._deu_cls = CType(Nothing, EntityRef(Of deu_cls))
		Me._eva_cls = CType(Nothing, EntityRef(Of eva_cls))
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_id_exd", AutoSync:=AutoSync.OnInsert, DbType:="Decimal(18,0) NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property id_exd() As Decimal
		Get
			Return Me._id_exd
		End Get
		Set
			If ((Me._id_exd = value)  _
						= false) Then
				Me.Onid_exdChanging(value)
				Me.SendPropertyChanging
				Me._id_exd = value
				Me.SendPropertyChanged("id_exd")
				Me.Onid_exdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_id_eva", DbType:="Decimal(10,0) NOT NULL")>  _
	Public Property id_eva() As Decimal
		Get
			Return Me._id_eva
		End Get
		Set
			If ((Me._id_eva = value)  _
						= false) Then
				If Me._eva_cls.HasLoadedOrAssignedValue Then
					Throw New System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException()
				End If
				Me.Onid_evaChanging(value)
				Me.SendPropertyChanging
				Me._id_eva = value
				Me.SendPropertyChanged("id_eva")
				Me.Onid_evaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_deu_ide", DbType:="Char(12)")>  _
	Public Property deu_ide() As String
		Get
			Return Me._deu_ide
		End Get
		Set
			If (String.Equals(Me._deu_ide, value) = false) Then
				If Me._deu_cls.HasLoadedOrAssignedValue Then
					Throw New System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException()
				End If
				Me.Ondeu_ideChanging(value)
				Me.SendPropertyChanging
				Me._deu_ide = value
				Me.SendPropertyChanged("deu_ide")
				Me.Ondeu_ideChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_deu_rut", DbType:="Char(12)")>  _
	Public Property deu_rut() As String
		Get
			Return Me._deu_rut
		End Get
		Set
			If (String.Equals(Me._deu_rut, value) = false) Then
				Me.Ondeu_rutChanging(value)
				Me.SendPropertyChanging
				Me._deu_rut = value
				Me.SendPropertyChanged("deu_rut")
				Me.Ondeu_rutChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_deu_nom", DbType:="VarChar(150)")>  _
	Public Property deu_nom() As String
		Get
			Return Me._deu_nom
		End Get
		Set
			If (String.Equals(Me._deu_nom, value) = false) Then
				Me.Ondeu_nomChanging(value)
				Me.SendPropertyChanging
				Me._deu_nom = value
				Me.SendPropertyChanged("deu_nom")
				Me.Ondeu_nomChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_mto_eva", DbType:="Money NOT NULL")>  _
	Public Property mto_eva() As Decimal
		Get
			Return Me._mto_eva
		End Get
		Set
			If ((Me._mto_eva = value)  _
						= false) Then
				Me.Onmto_evaChanging(value)
				Me.SendPropertyChanging
				Me._mto_eva = value
				Me.SendPropertyChanged("mto_eva")
				Me.Onmto_evaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_mto_eva_tot", DbType:="Money NOT NULL")>  _
	Public Property mto_eva_tot() As Decimal
		Get
			Return Me._mto_eva_tot
		End Get
		Set
			If ((Me._mto_eva_tot = value)  _
						= false) Then
				Me.Onmto_eva_totChanging(value)
				Me.SendPropertyChanging
				Me._mto_eva_tot = value
				Me.SendPropertyChanged("mto_eva_tot")
				Me.Onmto_eva_totChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_exd_por_cli", DbType:="Decimal(5,2)")>  _
	Public Property exd_por_cli() As System.Nullable(Of Decimal)
		Get
			Return Me._exd_por_cli
		End Get
		Set
			If (Me._exd_por_cli.Equals(value) = false) Then
				Me.Onexd_por_cliChanging(value)
				Me.SendPropertyChanging
				Me._exd_por_cli = value
				Me.SendPropertyChanged("exd_por_cli")
				Me.Onexd_por_cliChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="deu_cls_exd_cls", Storage:="_deu_cls", ThisKey:="deu_ide", OtherKey:="deu_ide", IsForeignKey:=true)>  _
	Public Property deu_cls() As deu_cls
		Get
			Return Me._deu_cls.Entity
		End Get
		Set
			Dim previousValue As deu_cls = Me._deu_cls.Entity
			If ((Object.Equals(previousValue, value) = false)  _
						OrElse (Me._deu_cls.HasLoadedOrAssignedValue = false)) Then
				Me.SendPropertyChanging
				If ((previousValue Is Nothing)  _
							= false) Then
					Me._deu_cls.Entity = Nothing
					previousValue.exd_cls.Remove(Me)
				End If
				Me._deu_cls.Entity = value
				If ((value Is Nothing)  _
							= false) Then
					value.exd_cls.Add(Me)
					Me._deu_ide = value.deu_ide
				Else
					Me._deu_ide = CType(Nothing, String)
				End If
				Me.SendPropertyChanged("deu_cls")
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="eva_cls_exd_cls", Storage:="_eva_cls", ThisKey:="id_eva", OtherKey:="id_eva", IsForeignKey:=true)>  _
	Public Property eva_cls() As eva_cls
		Get
			Return Me._eva_cls.Entity
		End Get
		Set
			Dim previousValue As eva_cls = Me._eva_cls.Entity
			If ((Object.Equals(previousValue, value) = false)  _
						OrElse (Me._eva_cls.HasLoadedOrAssignedValue = false)) Then
				Me.SendPropertyChanging
				If ((previousValue Is Nothing)  _
							= false) Then
					Me._eva_cls.Entity = Nothing
					previousValue.exd_cls.Remove(Me)
				End If
				Me._eva_cls.Entity = value
				If ((value Is Nothing)  _
							= false) Then
					value.exd_cls.Add(Me)
					Me._id_eva = value.id_eva
				Else
					Me._id_eva = CType(Nothing, Decimal)
				End If
				Me.SendPropertyChanged("eva_cls")
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.exh")>  _
Partial Public Class exh_cls
	
	Private _cli_idc As String
	
	Private _ddr_ide As String
	
	Private _pnu_tip_doc As Integer
	
	Private _ope_num As Decimal
	
	Private _doc_num As Decimal
	
	Private _doc_cod_flj As Decimal
	
	Private _doc_flj_num As Integer
	
	Private _ing_mto_abo As System.Nullable(Of Decimal)
	
	Private _exh_mto As System.Nullable(Of Decimal)
	
	Private _exh_fecha As String
	
	Private _exh_tipS As String
	
	Public Sub New()
		MyBase.New
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_cli_idc", DbType:="Char(12) NOT NULL", CanBeNull:=false)>  _
	Public Property cli_idc() As String
		Get
			Return Me._cli_idc
		End Get
		Set
			If (String.Equals(Me._cli_idc, value) = false) Then
				Me._cli_idc = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ddr_ide", DbType:="Char(12) NOT NULL", CanBeNull:=false)>  _
	Public Property ddr_ide() As String
		Get
			Return Me._ddr_ide
		End Get
		Set
			If (String.Equals(Me._ddr_ide, value) = false) Then
				Me._ddr_ide = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pnu_tip_doc", DbType:="Int NOT NULL")>  _
	Public Property pnu_tip_doc() As Integer
		Get
			Return Me._pnu_tip_doc
		End Get
		Set
			If ((Me._pnu_tip_doc = value)  _
						= false) Then
				Me._pnu_tip_doc = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ope_num", DbType:="Decimal(10,0) NOT NULL")>  _
	Public Property ope_num() As Decimal
		Get
			Return Me._ope_num
		End Get
		Set
			If ((Me._ope_num = value)  _
						= false) Then
				Me._ope_num = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_doc_num", DbType:="Decimal(10,0) NOT NULL")>  _
	Public Property doc_num() As Decimal
		Get
			Return Me._doc_num
		End Get
		Set
			If ((Me._doc_num = value)  _
						= false) Then
				Me._doc_num = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_doc_cod_flj", DbType:="Decimal(10,0) NOT NULL")>  _
	Public Property doc_cod_flj() As Decimal
		Get
			Return Me._doc_cod_flj
		End Get
		Set
			If ((Me._doc_cod_flj = value)  _
						= false) Then
				Me._doc_cod_flj = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_doc_flj_num", DbType:="Int NOT NULL")>  _
	Public Property doc_flj_num() As Integer
		Get
			Return Me._doc_flj_num
		End Get
		Set
			If ((Me._doc_flj_num = value)  _
						= false) Then
				Me._doc_flj_num = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ing_mto_abo", DbType:="Money")>  _
	Public Property ing_mto_abo() As System.Nullable(Of Decimal)
		Get
			Return Me._ing_mto_abo
		End Get
		Set
			If (Me._ing_mto_abo.Equals(value) = false) Then
				Me._ing_mto_abo = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_exh_mto", DbType:="Money")>  _
	Public Property exh_mto() As System.Nullable(Of Decimal)
		Get
			Return Me._exh_mto
		End Get
		Set
			If (Me._exh_mto.Equals(value) = false) Then
				Me._exh_mto = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_exh_fecha", DbType:="VarChar(10) NOT NULL", CanBeNull:=false)>  _
	Public Property exh_fecha() As String
		Get
			Return Me._exh_fecha
		End Get
		Set
			If (String.Equals(Me._exh_fecha, value) = false) Then
				Me._exh_fecha = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_exh_tipS", DbType:="VarChar(2) NOT NULL", CanBeNull:=false)>  _
	Public Property exh_tipS() As String
		Get
			Return Me._exh_tipS
		End Get
		Set
			If (String.Equals(Me._exh_tipS, value) = false) Then
				Me._exh_tipS = value
			End If
		End Set
	End Property
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.fct")>  _
Partial Public Class fct_cls
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _id_fct As Decimal
	
	Private _id_cft As Decimal
	
	Private _fct_num As Decimal
	
	Private _fct_tip As System.Nullable(Of Char)
	
	Private _fct_fec_dde As System.Nullable(Of Date)
	
	Private _fct_fec_hta As System.Nullable(Of Date)
	
	Private _fct_mto_nto As System.Nullable(Of Decimal)
	
	Private _fct_iva As System.Nullable(Of Decimal)
	
	Private _fct_mto_bto As System.Nullable(Of Decimal)
	
	Private _fct_dif_iva As System.Nullable(Of Decimal)
	
	Private _cxc_cls As EntitySet(Of cxc_cls)
	
	Private _ope_cls As EntitySet(Of ope_cls)
	
	Private _cft_cls As EntityRef(Of cft_cls)
	
    #Region "Definiciones de métodos de extensibilidad"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub Onid_fctChanging(value As Decimal)
    End Sub
    Partial Private Sub Onid_fctChanged()
    End Sub
    Partial Private Sub Onid_cftChanging(value As Decimal)
    End Sub
    Partial Private Sub Onid_cftChanged()
    End Sub
    Partial Private Sub Onfct_numChanging(value As Decimal)
    End Sub
    Partial Private Sub Onfct_numChanged()
    End Sub
    Partial Private Sub Onfct_tipChanging(value As System.Nullable(Of Char))
    End Sub
    Partial Private Sub Onfct_tipChanged()
    End Sub
    Partial Private Sub Onfct_fec_ddeChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub Onfct_fec_ddeChanged()
    End Sub
    Partial Private Sub Onfct_fec_htaChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub Onfct_fec_htaChanged()
    End Sub
    Partial Private Sub Onfct_mto_ntoChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub Onfct_mto_ntoChanged()
    End Sub
    Partial Private Sub Onfct_ivaChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub Onfct_ivaChanged()
    End Sub
    Partial Private Sub Onfct_mto_btoChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub Onfct_mto_btoChanged()
    End Sub
    Partial Private Sub Onfct_dif_ivaChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub Onfct_dif_ivaChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		Me._cxc_cls = New EntitySet(Of cxc_cls)(AddressOf Me.attach_cxc_cls, AddressOf Me.detach_cxc_cls)
		Me._ope_cls = New EntitySet(Of ope_cls)(AddressOf Me.attach_ope_cls, AddressOf Me.detach_ope_cls)
		Me._cft_cls = CType(Nothing, EntityRef(Of cft_cls))
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_id_fct", AutoSync:=AutoSync.OnInsert, DbType:="Decimal(10,0) NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property id_fct() As Decimal
		Get
			Return Me._id_fct
		End Get
		Set
			If ((Me._id_fct = value)  _
						= false) Then
				Me.Onid_fctChanging(value)
				Me.SendPropertyChanging
				Me._id_fct = value
				Me.SendPropertyChanged("id_fct")
				Me.Onid_fctChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_id_cft", DbType:="Decimal(10,0) NOT NULL")>  _
	Public Property id_cft() As Decimal
		Get
			Return Me._id_cft
		End Get
		Set
			If ((Me._id_cft = value)  _
						= false) Then
				If Me._cft_cls.HasLoadedOrAssignedValue Then
					Throw New System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException()
				End If
				Me.Onid_cftChanging(value)
				Me.SendPropertyChanging
				Me._id_cft = value
				Me.SendPropertyChanged("id_cft")
				Me.Onid_cftChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_fct_num", DbType:="Decimal(10,0) NOT NULL")>  _
	Public Property fct_num() As Decimal
		Get
			Return Me._fct_num
		End Get
		Set
			If ((Me._fct_num = value)  _
						= false) Then
				Me.Onfct_numChanging(value)
				Me.SendPropertyChanging
				Me._fct_num = value
				Me.SendPropertyChanged("fct_num")
				Me.Onfct_numChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_fct_tip", DbType:="Char(1)")>  _
	Public Property fct_tip() As System.Nullable(Of Char)
		Get
			Return Me._fct_tip
		End Get
		Set
			If (Me._fct_tip.Equals(value) = false) Then
				Me.Onfct_tipChanging(value)
				Me.SendPropertyChanging
				Me._fct_tip = value
				Me.SendPropertyChanged("fct_tip")
				Me.Onfct_tipChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_fct_fec_dde", DbType:="DateTime")>  _
	Public Property fct_fec_dde() As System.Nullable(Of Date)
		Get
			Return Me._fct_fec_dde
		End Get
		Set
			If (Me._fct_fec_dde.Equals(value) = false) Then
				Me.Onfct_fec_ddeChanging(value)
				Me.SendPropertyChanging
				Me._fct_fec_dde = value
				Me.SendPropertyChanged("fct_fec_dde")
				Me.Onfct_fec_ddeChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_fct_fec_hta", DbType:="DateTime")>  _
	Public Property fct_fec_hta() As System.Nullable(Of Date)
		Get
			Return Me._fct_fec_hta
		End Get
		Set
			If (Me._fct_fec_hta.Equals(value) = false) Then
				Me.Onfct_fec_htaChanging(value)
				Me.SendPropertyChanging
				Me._fct_fec_hta = value
				Me.SendPropertyChanged("fct_fec_hta")
				Me.Onfct_fec_htaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_fct_mto_nto", DbType:="Money")>  _
	Public Property fct_mto_nto() As System.Nullable(Of Decimal)
		Get
			Return Me._fct_mto_nto
		End Get
		Set
			If (Me._fct_mto_nto.Equals(value) = false) Then
				Me.Onfct_mto_ntoChanging(value)
				Me.SendPropertyChanging
				Me._fct_mto_nto = value
				Me.SendPropertyChanged("fct_mto_nto")
				Me.Onfct_mto_ntoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_fct_iva", DbType:="Money")>  _
	Public Property fct_iva() As System.Nullable(Of Decimal)
		Get
			Return Me._fct_iva
		End Get
		Set
			If (Me._fct_iva.Equals(value) = false) Then
				Me.Onfct_ivaChanging(value)
				Me.SendPropertyChanging
				Me._fct_iva = value
				Me.SendPropertyChanged("fct_iva")
				Me.Onfct_ivaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_fct_mto_bto", DbType:="Money")>  _
	Public Property fct_mto_bto() As System.Nullable(Of Decimal)
		Get
			Return Me._fct_mto_bto
		End Get
		Set
			If (Me._fct_mto_bto.Equals(value) = false) Then
				Me.Onfct_mto_btoChanging(value)
				Me.SendPropertyChanging
				Me._fct_mto_bto = value
				Me.SendPropertyChanged("fct_mto_bto")
				Me.Onfct_mto_btoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_fct_dif_iva", DbType:="Money")>  _
	Public Property fct_dif_iva() As System.Nullable(Of Decimal)
		Get
			Return Me._fct_dif_iva
		End Get
		Set
			If (Me._fct_dif_iva.Equals(value) = false) Then
				Me.Onfct_dif_ivaChanging(value)
				Me.SendPropertyChanging
				Me._fct_dif_iva = value
				Me.SendPropertyChanged("fct_dif_iva")
				Me.Onfct_dif_ivaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="fct_cls_cxc_cls", Storage:="_cxc_cls", ThisKey:="id_fct", OtherKey:="id_fct")>  _
	Public Property cxc_cls() As EntitySet(Of cxc_cls)
		Get
			Return Me._cxc_cls
		End Get
		Set
			Me._cxc_cls.Assign(value)
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="fct_cls_ope_cls", Storage:="_ope_cls", ThisKey:="id_fct", OtherKey:="id_fct")>  _
	Public Property ope_cls() As EntitySet(Of ope_cls)
		Get
			Return Me._ope_cls
		End Get
		Set
			Me._ope_cls.Assign(value)
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="cft_cls_fct_cls", Storage:="_cft_cls", ThisKey:="id_cft", OtherKey:="id_cft", IsForeignKey:=true)>  _
	Public Property cft_cls() As cft_cls
		Get
			Return Me._cft_cls.Entity
		End Get
		Set
			Dim previousValue As cft_cls = Me._cft_cls.Entity
			If ((Object.Equals(previousValue, value) = false)  _
						OrElse (Me._cft_cls.HasLoadedOrAssignedValue = false)) Then
				Me.SendPropertyChanging
				If ((previousValue Is Nothing)  _
							= false) Then
					Me._cft_cls.Entity = Nothing
					previousValue.fct_cls.Remove(Me)
				End If
				Me._cft_cls.Entity = value
				If ((value Is Nothing)  _
							= false) Then
					value.fct_cls.Add(Me)
					Me._id_cft = value.id_cft
				Else
					Me._id_cft = CType(Nothing, Decimal)
				End If
				Me.SendPropertyChanged("cft_cls")
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
	
	Private Sub attach_cxc_cls(ByVal entity As cxc_cls)
		Me.SendPropertyChanging
		entity.fct_cls = Me
	End Sub
	
	Private Sub detach_cxc_cls(ByVal entity As cxc_cls)
		Me.SendPropertyChanging
		entity.fct_cls = Nothing
	End Sub
	
	Private Sub attach_ope_cls(ByVal entity As ope_cls)
		Me.SendPropertyChanging
		entity.fct_cls = Me
	End Sub
	
	Private Sub detach_ope_cls(ByVal entity As ope_cls)
		Me.SendPropertyChanging
		entity.fct_cls = Nothing
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.fdd")>  _
Partial Public Class fdd_cls
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _id_fdd As Decimal
	
	Private _cli_idc As String
	
	Private _deu_ide As String
	
	Private _id_opo As System.Nullable(Of Decimal)
	
	Private _fdd_cre As Date
	
	Private _fdd_dev_cli As String
	
	Private _fdd_fec_dev As System.Nullable(Of Date)
	
	Private _fdd_tip_dev As System.Nullable(Of Integer)
	
	Private _cli_cls As EntityRef(Of cli_cls)
	
	Private _deu_cls As EntityRef(Of deu_cls)
	
    #Region "Definiciones de métodos de extensibilidad"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub Onid_fddChanging(value As Decimal)
    End Sub
    Partial Private Sub Onid_fddChanged()
    End Sub
    Partial Private Sub Oncli_idcChanging(value As String)
    End Sub
    Partial Private Sub Oncli_idcChanged()
    End Sub
    Partial Private Sub Ondeu_ideChanging(value As String)
    End Sub
    Partial Private Sub Ondeu_ideChanged()
    End Sub
    Partial Private Sub Onid_opoChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub Onid_opoChanged()
    End Sub
    Partial Private Sub Onfdd_creChanging(value As Date)
    End Sub
    Partial Private Sub Onfdd_creChanged()
    End Sub
    Partial Private Sub Onfdd_dev_cliChanging(value As String)
    End Sub
    Partial Private Sub Onfdd_dev_cliChanged()
    End Sub
    Partial Private Sub Onfdd_fec_devChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub Onfdd_fec_devChanged()
    End Sub
    Partial Private Sub Onfdd_tip_devChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub Onfdd_tip_devChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		Me._cli_cls = CType(Nothing, EntityRef(Of cli_cls))
		Me._deu_cls = CType(Nothing, EntityRef(Of deu_cls))
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_id_fdd", AutoSync:=AutoSync.OnInsert, DbType:="Decimal(10,0) NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property id_fdd() As Decimal
		Get
			Return Me._id_fdd
		End Get
		Set
			If ((Me._id_fdd = value)  _
						= false) Then
				Me.Onid_fddChanging(value)
				Me.SendPropertyChanging
				Me._id_fdd = value
				Me.SendPropertyChanged("id_fdd")
				Me.Onid_fddChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_cli_idc", DbType:="Char(12) NOT NULL", CanBeNull:=false)>  _
	Public Property cli_idc() As String
		Get
			Return Me._cli_idc
		End Get
		Set
			If (String.Equals(Me._cli_idc, value) = false) Then
				If Me._cli_cls.HasLoadedOrAssignedValue Then
					Throw New System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException()
				End If
				Me.Oncli_idcChanging(value)
				Me.SendPropertyChanging
				Me._cli_idc = value
				Me.SendPropertyChanged("cli_idc")
				Me.Oncli_idcChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_deu_ide", DbType:="Char(12)")>  _
	Public Property deu_ide() As String
		Get
			Return Me._deu_ide
		End Get
		Set
			If (String.Equals(Me._deu_ide, value) = false) Then
				If Me._deu_cls.HasLoadedOrAssignedValue Then
					Throw New System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException()
				End If
				Me.Ondeu_ideChanging(value)
				Me.SendPropertyChanging
				Me._deu_ide = value
				Me.SendPropertyChanged("deu_ide")
				Me.Ondeu_ideChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_id_opo", DbType:="Decimal(10,0)")>  _
	Public Property id_opo() As System.Nullable(Of Decimal)
		Get
			Return Me._id_opo
		End Get
		Set
			If (Me._id_opo.Equals(value) = false) Then
				Me.Onid_opoChanging(value)
				Me.SendPropertyChanging
				Me._id_opo = value
				Me.SendPropertyChanged("id_opo")
				Me.Onid_opoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_fdd_cre", DbType:="DateTime NOT NULL")>  _
	Public Property fdd_cre() As Date
		Get
			Return Me._fdd_cre
		End Get
		Set
			If ((Me._fdd_cre = value)  _
						= false) Then
				Me.Onfdd_creChanging(value)
				Me.SendPropertyChanging
				Me._fdd_cre = value
				Me.SendPropertyChanged("fdd_cre")
				Me.Onfdd_creChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_fdd_dev_cli", DbType:="Char(2)")>  _
	Public Property fdd_dev_cli() As String
		Get
			Return Me._fdd_dev_cli
		End Get
		Set
			If (String.Equals(Me._fdd_dev_cli, value) = false) Then
				Me.Onfdd_dev_cliChanging(value)
				Me.SendPropertyChanging
				Me._fdd_dev_cli = value
				Me.SendPropertyChanged("fdd_dev_cli")
				Me.Onfdd_dev_cliChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_fdd_fec_dev", DbType:="DateTime")>  _
	Public Property fdd_fec_dev() As System.Nullable(Of Date)
		Get
			Return Me._fdd_fec_dev
		End Get
		Set
			If (Me._fdd_fec_dev.Equals(value) = false) Then
				Me.Onfdd_fec_devChanging(value)
				Me.SendPropertyChanging
				Me._fdd_fec_dev = value
				Me.SendPropertyChanged("fdd_fec_dev")
				Me.Onfdd_fec_devChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_fdd_tip_dev", DbType:="Int")>  _
	Public Property fdd_tip_dev() As System.Nullable(Of Integer)
		Get
			Return Me._fdd_tip_dev
		End Get
		Set
			If (Me._fdd_tip_dev.Equals(value) = false) Then
				Me.Onfdd_tip_devChanging(value)
				Me.SendPropertyChanging
				Me._fdd_tip_dev = value
				Me.SendPropertyChanged("fdd_tip_dev")
				Me.Onfdd_tip_devChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="cli_cls_fdd_cls", Storage:="_cli_cls", ThisKey:="cli_idc", OtherKey:="cli_idc", IsForeignKey:=true)>  _
	Public Property cli_cls() As cli_cls
		Get
			Return Me._cli_cls.Entity
		End Get
		Set
			Dim previousValue As cli_cls = Me._cli_cls.Entity
			If ((Object.Equals(previousValue, value) = false)  _
						OrElse (Me._cli_cls.HasLoadedOrAssignedValue = false)) Then
				Me.SendPropertyChanging
				If ((previousValue Is Nothing)  _
							= false) Then
					Me._cli_cls.Entity = Nothing
					previousValue.fdd_cls.Remove(Me)
				End If
				Me._cli_cls.Entity = value
				If ((value Is Nothing)  _
							= false) Then
					value.fdd_cls.Add(Me)
					Me._cli_idc = value.cli_idc
				Else
					Me._cli_idc = CType(Nothing, String)
				End If
				Me.SendPropertyChanged("cli_cls")
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="deu_cls_fdd_cls", Storage:="_deu_cls", ThisKey:="deu_ide", OtherKey:="deu_ide", IsForeignKey:=true)>  _
	Public Property deu_cls() As deu_cls
		Get
			Return Me._deu_cls.Entity
		End Get
		Set
			Dim previousValue As deu_cls = Me._deu_cls.Entity
			If ((Object.Equals(previousValue, value) = false)  _
						OrElse (Me._deu_cls.HasLoadedOrAssignedValue = false)) Then
				Me.SendPropertyChanging
				If ((previousValue Is Nothing)  _
							= false) Then
					Me._deu_cls.Entity = Nothing
					previousValue.fdd_cls.Remove(Me)
				End If
				Me._deu_cls.Entity = value
				If ((value Is Nothing)  _
							= false) Then
					value.fdd_cls.Add(Me)
					Me._deu_ide = value.deu_ide
				Else
					Me._deu_ide = CType(Nothing, String)
				End If
				Me.SendPropertyChanged("deu_cls")
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.fer")>  _
Partial Public Class fer_cls
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _id_fer As Integer
	
	Private _fer_fec As Date
	
    #Region "Definiciones de métodos de extensibilidad"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub Onid_ferChanging(value As Integer)
    End Sub
    Partial Private Sub Onid_ferChanged()
    End Sub
    Partial Private Sub Onfer_fecChanging(value As Date)
    End Sub
    Partial Private Sub Onfer_fecChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_id_fer", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property id_fer() As Integer
		Get
			Return Me._id_fer
		End Get
		Set
			If ((Me._id_fer = value)  _
						= false) Then
				Me.Onid_ferChanging(value)
				Me.SendPropertyChanging
				Me._id_fer = value
				Me.SendPropertyChanged("id_fer")
				Me.Onid_ferChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_fer_fec", DbType:="DateTime NOT NULL")>  _
	Public Property fer_fec() As Date
		Get
			Return Me._fer_fec
		End Get
		Set
			If ((Me._fer_fec = value)  _
						= false) Then
				Me.Onfer_fecChanging(value)
				Me.SendPropertyChanging
				Me._fer_fec = value
				Me.SendPropertyChanged("fer_fec")
				Me.Onfer_fecChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.GDC")>  _
Partial Public Class GDC_cls
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _id_gdc As Integer
	
	Private _id_gto As Decimal
	
	Private _cli_idc As String
	
	Private _cli_cls As EntityRef(Of cli_cls)
	
	Private _gto_cls As EntityRef(Of gto_cls)
	
    #Region "Definiciones de métodos de extensibilidad"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub Onid_gdcChanging(value As Integer)
    End Sub
    Partial Private Sub Onid_gdcChanged()
    End Sub
    Partial Private Sub Onid_gtoChanging(value As Decimal)
    End Sub
    Partial Private Sub Onid_gtoChanged()
    End Sub
    Partial Private Sub Oncli_idcChanging(value As String)
    End Sub
    Partial Private Sub Oncli_idcChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		Me._cli_cls = CType(Nothing, EntityRef(Of cli_cls))
		Me._gto_cls = CType(Nothing, EntityRef(Of gto_cls))
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_id_gdc", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property id_gdc() As Integer
		Get
			Return Me._id_gdc
		End Get
		Set
			If ((Me._id_gdc = value)  _
						= false) Then
				Me.Onid_gdcChanging(value)
				Me.SendPropertyChanging
				Me._id_gdc = value
				Me.SendPropertyChanged("id_gdc")
				Me.Onid_gdcChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_id_gto", DbType:="Decimal(5,0) NOT NULL")>  _
	Public Property id_gto() As Decimal
		Get
			Return Me._id_gto
		End Get
		Set
			If ((Me._id_gto = value)  _
						= false) Then
				If Me._gto_cls.HasLoadedOrAssignedValue Then
					Throw New System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException()
				End If
				Me.Onid_gtoChanging(value)
				Me.SendPropertyChanging
				Me._id_gto = value
				Me.SendPropertyChanged("id_gto")
				Me.Onid_gtoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_cli_idc", DbType:="Char(12) NOT NULL", CanBeNull:=false)>  _
	Public Property cli_idc() As String
		Get
			Return Me._cli_idc
		End Get
		Set
			If (String.Equals(Me._cli_idc, value) = false) Then
				If Me._cli_cls.HasLoadedOrAssignedValue Then
					Throw New System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException()
				End If
				Me.Oncli_idcChanging(value)
				Me.SendPropertyChanging
				Me._cli_idc = value
				Me.SendPropertyChanged("cli_idc")
				Me.Oncli_idcChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="cli_cls_GDC_cls", Storage:="_cli_cls", ThisKey:="cli_idc", OtherKey:="cli_idc", IsForeignKey:=true)>  _
	Public Property cli_cls() As cli_cls
		Get
			Return Me._cli_cls.Entity
		End Get
		Set
			Dim previousValue As cli_cls = Me._cli_cls.Entity
			If ((Object.Equals(previousValue, value) = false)  _
						OrElse (Me._cli_cls.HasLoadedOrAssignedValue = false)) Then
				Me.SendPropertyChanging
				If ((previousValue Is Nothing)  _
							= false) Then
					Me._cli_cls.Entity = Nothing
					previousValue.GDC_cls.Remove(Me)
				End If
				Me._cli_cls.Entity = value
				If ((value Is Nothing)  _
							= false) Then
					value.GDC_cls.Add(Me)
					Me._cli_idc = value.cli_idc
				Else
					Me._cli_idc = CType(Nothing, String)
				End If
				Me.SendPropertyChanged("cli_cls")
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="gto_cls_GDC_cls", Storage:="_gto_cls", ThisKey:="id_gto", OtherKey:="id_gto", IsForeignKey:=true)>  _
	Public Property gto_cls() As gto_cls
		Get
			Return Me._gto_cls.Entity
		End Get
		Set
			Dim previousValue As gto_cls = Me._gto_cls.Entity
			If ((Object.Equals(previousValue, value) = false)  _
						OrElse (Me._gto_cls.HasLoadedOrAssignedValue = false)) Then
				Me.SendPropertyChanging
				If ((previousValue Is Nothing)  _
							= false) Then
					Me._gto_cls.Entity = Nothing
					previousValue.GDC_cls.Remove(Me)
				End If
				Me._gto_cls.Entity = value
				If ((value Is Nothing)  _
							= false) Then
					value.GDC_cls.Add(Me)
					Me._id_gto = value.id_gto
				Else
					Me._id_gto = CType(Nothing, Decimal)
				End If
				Me.SendPropertyChanged("gto_cls")
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.gdn")>  _
Partial Public Class gdn_cls
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _id_gdn As Decimal
	
	Private _id_opn As Decimal
	
	Private _id_gto As Decimal
	
	Private _gos_cls As EntitySet(Of gos_cls)
	
	Private _gto_cls As EntityRef(Of gto_cls)
	
	Private _opn_cls As EntityRef(Of opn_cls)
	
    #Region "Definiciones de métodos de extensibilidad"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub Onid_gdnChanging(value As Decimal)
    End Sub
    Partial Private Sub Onid_gdnChanged()
    End Sub
    Partial Private Sub Onid_opnChanging(value As Decimal)
    End Sub
    Partial Private Sub Onid_opnChanged()
    End Sub
    Partial Private Sub Onid_gtoChanging(value As Decimal)
    End Sub
    Partial Private Sub Onid_gtoChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		Me._gos_cls = New EntitySet(Of gos_cls)(AddressOf Me.attach_gos_cls, AddressOf Me.detach_gos_cls)
		Me._gto_cls = CType(Nothing, EntityRef(Of gto_cls))
		Me._opn_cls = CType(Nothing, EntityRef(Of opn_cls))
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_id_gdn", AutoSync:=AutoSync.OnInsert, DbType:="Decimal(10,0) NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property id_gdn() As Decimal
		Get
			Return Me._id_gdn
		End Get
		Set
			If ((Me._id_gdn = value)  _
						= false) Then
				Me.Onid_gdnChanging(value)
				Me.SendPropertyChanging
				Me._id_gdn = value
				Me.SendPropertyChanged("id_gdn")
				Me.Onid_gdnChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_id_opn", DbType:="Decimal(10,0) NOT NULL")>  _
	Public Property id_opn() As Decimal
		Get
			Return Me._id_opn
		End Get
		Set
			If ((Me._id_opn = value)  _
						= false) Then
				If Me._opn_cls.HasLoadedOrAssignedValue Then
					Throw New System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException()
				End If
				Me.Onid_opnChanging(value)
				Me.SendPropertyChanging
				Me._id_opn = value
				Me.SendPropertyChanged("id_opn")
				Me.Onid_opnChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_id_gto", DbType:="Decimal(5,0) NOT NULL")>  _
	Public Property id_gto() As Decimal
		Get
			Return Me._id_gto
		End Get
		Set
			If ((Me._id_gto = value)  _
						= false) Then
				If Me._gto_cls.HasLoadedOrAssignedValue Then
					Throw New System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException()
				End If
				Me.Onid_gtoChanging(value)
				Me.SendPropertyChanging
				Me._id_gto = value
				Me.SendPropertyChanged("id_gto")
				Me.Onid_gtoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="gdn_cls_gos_cls", Storage:="_gos_cls", ThisKey:="id_gdn", OtherKey:="id_gdn")>  _
	Public Property gos_cls() As EntitySet(Of gos_cls)
		Get
			Return Me._gos_cls
		End Get
		Set
			Me._gos_cls.Assign(value)
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="gto_cls_gdn_cls", Storage:="_gto_cls", ThisKey:="id_gto", OtherKey:="id_gto", IsForeignKey:=true)>  _
	Public Property gto_cls() As gto_cls
		Get
			Return Me._gto_cls.Entity
		End Get
		Set
			Dim previousValue As gto_cls = Me._gto_cls.Entity
			If ((Object.Equals(previousValue, value) = false)  _
						OrElse (Me._gto_cls.HasLoadedOrAssignedValue = false)) Then
				Me.SendPropertyChanging
				If ((previousValue Is Nothing)  _
							= false) Then
					Me._gto_cls.Entity = Nothing
					previousValue.gdn_cls.Remove(Me)
				End If
				Me._gto_cls.Entity = value
				If ((value Is Nothing)  _
							= false) Then
					value.gdn_cls.Add(Me)
					Me._id_gto = value.id_gto
				Else
					Me._id_gto = CType(Nothing, Decimal)
				End If
				Me.SendPropertyChanged("gto_cls")
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="opn_cls_gdn_cls", Storage:="_opn_cls", ThisKey:="id_opn", OtherKey:="id_opn", IsForeignKey:=true)>  _
	Public Property opn_cls() As opn_cls
		Get
			Return Me._opn_cls.Entity
		End Get
		Set
			Dim previousValue As opn_cls = Me._opn_cls.Entity
			If ((Object.Equals(previousValue, value) = false)  _
						OrElse (Me._opn_cls.HasLoadedOrAssignedValue = false)) Then
				Me.SendPropertyChanging
				If ((previousValue Is Nothing)  _
							= false) Then
					Me._opn_cls.Entity = Nothing
					previousValue.gdn_cls.Remove(Me)
				End If
				Me._opn_cls.Entity = value
				If ((value Is Nothing)  _
							= false) Then
					value.gdn_cls.Add(Me)
					Me._id_opn = value.id_opn
				Else
					Me._id_opn = CType(Nothing, Decimal)
				End If
				Me.SendPropertyChanged("opn_cls")
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
	
	Private Sub attach_gos_cls(ByVal entity As gos_cls)
		Me.SendPropertyChanging
		entity.gdn_cls = Me
	End Sub
	
	Private Sub detach_gos_cls(ByVal entity As gos_cls)
		Me.SendPropertyChanging
		entity.gdn_cls = Nothing
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.gfn")>  _
Partial Public Class gfn_cls
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _id_gfn As Decimal
	
	Private _id_opn As Decimal
	
	Private _gfn_des As String
	
	Private _gfn_mto As Decimal
	
	Private _gos_num_temporal As System.Nullable(Of Integer)
	
	Private _gos_cls As EntitySet(Of gos_cls)
	
	Private _opn_cls As EntityRef(Of opn_cls)
	
    #Region "Definiciones de métodos de extensibilidad"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub Onid_gfnChanging(value As Decimal)
    End Sub
    Partial Private Sub Onid_gfnChanged()
    End Sub
    Partial Private Sub Onid_opnChanging(value As Decimal)
    End Sub
    Partial Private Sub Onid_opnChanged()
    End Sub
    Partial Private Sub Ongfn_desChanging(value As String)
    End Sub
    Partial Private Sub Ongfn_desChanged()
    End Sub
    Partial Private Sub Ongfn_mtoChanging(value As Decimal)
    End Sub
    Partial Private Sub Ongfn_mtoChanged()
    End Sub
    Partial Private Sub Ongos_num_temporalChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub Ongos_num_temporalChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		Me._gos_cls = New EntitySet(Of gos_cls)(AddressOf Me.attach_gos_cls, AddressOf Me.detach_gos_cls)
		Me._opn_cls = CType(Nothing, EntityRef(Of opn_cls))
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_id_gfn", AutoSync:=AutoSync.OnInsert, DbType:="Decimal(10,0) NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property id_gfn() As Decimal
		Get
			Return Me._id_gfn
		End Get
		Set
			If ((Me._id_gfn = value)  _
						= false) Then
				Me.Onid_gfnChanging(value)
				Me.SendPropertyChanging
				Me._id_gfn = value
				Me.SendPropertyChanged("id_gfn")
				Me.Onid_gfnChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_id_opn", DbType:="Decimal(10,0) NOT NULL")>  _
	Public Property id_opn() As Decimal
		Get
			Return Me._id_opn
		End Get
		Set
			If ((Me._id_opn = value)  _
						= false) Then
				If Me._opn_cls.HasLoadedOrAssignedValue Then
					Throw New System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException()
				End If
				Me.Onid_opnChanging(value)
				Me.SendPropertyChanging
				Me._id_opn = value
				Me.SendPropertyChanged("id_opn")
				Me.Onid_opnChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_gfn_des", DbType:="VarChar(255) NOT NULL", CanBeNull:=false)>  _
	Public Property gfn_des() As String
		Get
			Return Me._gfn_des
		End Get
		Set
			If (String.Equals(Me._gfn_des, value) = false) Then
				Me.Ongfn_desChanging(value)
				Me.SendPropertyChanging
				Me._gfn_des = value
				Me.SendPropertyChanged("gfn_des")
				Me.Ongfn_desChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_gfn_mto", DbType:="Money NOT NULL")>  _
	Public Property gfn_mto() As Decimal
		Get
			Return Me._gfn_mto
		End Get
		Set
			If ((Me._gfn_mto = value)  _
						= false) Then
				Me.Ongfn_mtoChanging(value)
				Me.SendPropertyChanging
				Me._gfn_mto = value
				Me.SendPropertyChanged("gfn_mto")
				Me.Ongfn_mtoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_gos_num_temporal", DbType:="Int")>  _
	Public Property gos_num_temporal() As System.Nullable(Of Integer)
		Get
			Return Me._gos_num_temporal
		End Get
		Set
			If (Me._gos_num_temporal.Equals(value) = false) Then
				Me.Ongos_num_temporalChanging(value)
				Me.SendPropertyChanging
				Me._gos_num_temporal = value
				Me.SendPropertyChanged("gos_num_temporal")
				Me.Ongos_num_temporalChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="gfn_cls_gos_cls", Storage:="_gos_cls", ThisKey:="id_gfn", OtherKey:="id_gfn")>  _
	Public Property gos_cls() As EntitySet(Of gos_cls)
		Get
			Return Me._gos_cls
		End Get
		Set
			Me._gos_cls.Assign(value)
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="opn_cls_gfn_cls", Storage:="_opn_cls", ThisKey:="id_opn", OtherKey:="id_opn", IsForeignKey:=true)>  _
	Public Property opn_cls() As opn_cls
		Get
			Return Me._opn_cls.Entity
		End Get
		Set
			Dim previousValue As opn_cls = Me._opn_cls.Entity
			If ((Object.Equals(previousValue, value) = false)  _
						OrElse (Me._opn_cls.HasLoadedOrAssignedValue = false)) Then
				Me.SendPropertyChanging
				If ((previousValue Is Nothing)  _
							= false) Then
					Me._opn_cls.Entity = Nothing
					previousValue.gfn_cls.Remove(Me)
				End If
				Me._opn_cls.Entity = value
				If ((value Is Nothing)  _
							= false) Then
					value.gfn_cls.Add(Me)
					Me._id_opn = value.id_opn
				Else
					Me._id_opn = CType(Nothing, Decimal)
				End If
				Me.SendPropertyChanged("opn_cls")
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
	
	Private Sub attach_gos_cls(ByVal entity As gos_cls)
		Me.SendPropertyChanging
		entity.gfn_cls = Me
	End Sub
	
	Private Sub detach_gos_cls(ByVal entity As gos_cls)
		Me.SendPropertyChanging
		entity.gfn_cls = Nothing
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.gga")>  _
Partial Public Class gga_cls
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _id_gga As Integer
	
	Private _deu_ide As String
	
	Private _id_p_0051 As System.Nullable(Of Integer)
	
	Private _id_hre As System.Nullable(Of Decimal)
	
	Private _gga_fec As System.Nullable(Of Date)
	
	Private _gga_mto As System.Nullable(Of Decimal)
	
	Private _gga_vld As System.Nullable(Of Char)
	
	Private _gga_rec_ext As System.Nullable(Of Char)
	
	Private _deu_cls As EntityRef(Of deu_cls)
	
	Private _hre_cls As EntityRef(Of hre_cls)
	
	Private _P_0051_cls As EntityRef(Of P_0051_cls)
	
    #Region "Definiciones de métodos de extensibilidad"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub Onid_ggaChanging(value As Integer)
    End Sub
    Partial Private Sub Onid_ggaChanged()
    End Sub
    Partial Private Sub Ondeu_ideChanging(value As String)
    End Sub
    Partial Private Sub Ondeu_ideChanged()
    End Sub
    Partial Private Sub Onid_p_0051Changing(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub Onid_p_0051Changed()
    End Sub
    Partial Private Sub Onid_hreChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub Onid_hreChanged()
    End Sub
    Partial Private Sub Ongga_fecChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub Ongga_fecChanged()
    End Sub
    Partial Private Sub Ongga_mtoChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub Ongga_mtoChanged()
    End Sub
    Partial Private Sub Ongga_vldChanging(value As System.Nullable(Of Char))
    End Sub
    Partial Private Sub Ongga_vldChanged()
    End Sub
    Partial Private Sub Ongga_rec_extChanging(value As System.Nullable(Of Char))
    End Sub
    Partial Private Sub Ongga_rec_extChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		Me._deu_cls = CType(Nothing, EntityRef(Of deu_cls))
		Me._hre_cls = CType(Nothing, EntityRef(Of hre_cls))
		Me._P_0051_cls = CType(Nothing, EntityRef(Of P_0051_cls))
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_id_gga", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property id_gga() As Integer
		Get
			Return Me._id_gga
		End Get
		Set
			If ((Me._id_gga = value)  _
						= false) Then
				Me.Onid_ggaChanging(value)
				Me.SendPropertyChanging
				Me._id_gga = value
				Me.SendPropertyChanged("id_gga")
				Me.Onid_ggaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_deu_ide", DbType:="Char(12)")>  _
	Public Property deu_ide() As String
		Get
			Return Me._deu_ide
		End Get
		Set
			If (String.Equals(Me._deu_ide, value) = false) Then
				If Me._deu_cls.HasLoadedOrAssignedValue Then
					Throw New System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException()
				End If
				Me.Ondeu_ideChanging(value)
				Me.SendPropertyChanging
				Me._deu_ide = value
				Me.SendPropertyChanged("deu_ide")
				Me.Ondeu_ideChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_id_p_0051", DbType:="Int")>  _
	Public Property id_p_0051() As System.Nullable(Of Integer)
		Get
			Return Me._id_p_0051
		End Get
		Set
			If (Me._id_p_0051.Equals(value) = false) Then
				If Me._P_0051_cls.HasLoadedOrAssignedValue Then
					Throw New System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException()
				End If
				Me.Onid_p_0051Changing(value)
				Me.SendPropertyChanging
				Me._id_p_0051 = value
				Me.SendPropertyChanged("id_p_0051")
				Me.Onid_p_0051Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_id_hre", DbType:="Decimal(5,0)")>  _
	Public Property id_hre() As System.Nullable(Of Decimal)
		Get
			Return Me._id_hre
		End Get
		Set
			If (Me._id_hre.Equals(value) = false) Then
				If Me._hre_cls.HasLoadedOrAssignedValue Then
					Throw New System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException()
				End If
				Me.Onid_hreChanging(value)
				Me.SendPropertyChanging
				Me._id_hre = value
				Me.SendPropertyChanged("id_hre")
				Me.Onid_hreChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_gga_fec", DbType:="DateTime")>  _
	Public Property gga_fec() As System.Nullable(Of Date)
		Get
			Return Me._gga_fec
		End Get
		Set
			If (Me._gga_fec.Equals(value) = false) Then
				Me.Ongga_fecChanging(value)
				Me.SendPropertyChanging
				Me._gga_fec = value
				Me.SendPropertyChanged("gga_fec")
				Me.Ongga_fecChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_gga_mto", DbType:="Money")>  _
	Public Property gga_mto() As System.Nullable(Of Decimal)
		Get
			Return Me._gga_mto
		End Get
		Set
			If (Me._gga_mto.Equals(value) = false) Then
				Me.Ongga_mtoChanging(value)
				Me.SendPropertyChanging
				Me._gga_mto = value
				Me.SendPropertyChanged("gga_mto")
				Me.Ongga_mtoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_gga_vld", DbType:="Char(1)")>  _
	Public Property gga_vld() As System.Nullable(Of Char)
		Get
			Return Me._gga_vld
		End Get
		Set
			If (Me._gga_vld.Equals(value) = false) Then
				Me.Ongga_vldChanging(value)
				Me.SendPropertyChanging
				Me._gga_vld = value
				Me.SendPropertyChanged("gga_vld")
				Me.Ongga_vldChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_gga_rec_ext", DbType:="Char(1)")>  _
	Public Property gga_rec_ext() As System.Nullable(Of Char)
		Get
			Return Me._gga_rec_ext
		End Get
		Set
			If (Me._gga_rec_ext.Equals(value) = false) Then
				Me.Ongga_rec_extChanging(value)
				Me.SendPropertyChanging
				Me._gga_rec_ext = value
				Me.SendPropertyChanged("gga_rec_ext")
				Me.Ongga_rec_extChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="deu_cls_gga_cls", Storage:="_deu_cls", ThisKey:="deu_ide", OtherKey:="deu_ide", IsForeignKey:=true)>  _
	Public Property deu_cls() As deu_cls
		Get
			Return Me._deu_cls.Entity
		End Get
		Set
			Dim previousValue As deu_cls = Me._deu_cls.Entity
			If ((Object.Equals(previousValue, value) = false)  _
						OrElse (Me._deu_cls.HasLoadedOrAssignedValue = false)) Then
				Me.SendPropertyChanging
				If ((previousValue Is Nothing)  _
							= false) Then
					Me._deu_cls.Entity = Nothing
					previousValue.gga_cls.Remove(Me)
				End If
				Me._deu_cls.Entity = value
				If ((value Is Nothing)  _
							= false) Then
					value.gga_cls.Add(Me)
					Me._deu_ide = value.deu_ide
				Else
					Me._deu_ide = CType(Nothing, String)
				End If
				Me.SendPropertyChanged("deu_cls")
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="hre_cls_gga_cls", Storage:="_hre_cls", ThisKey:="id_hre", OtherKey:="id_hre", IsForeignKey:=true)>  _
	Public Property hre_cls() As hre_cls
		Get
			Return Me._hre_cls.Entity
		End Get
		Set
			Dim previousValue As hre_cls = Me._hre_cls.Entity
			If ((Object.Equals(previousValue, value) = false)  _
						OrElse (Me._hre_cls.HasLoadedOrAssignedValue = false)) Then
				Me.SendPropertyChanging
				If ((previousValue Is Nothing)  _
							= false) Then
					Me._hre_cls.Entity = Nothing
					previousValue.gga_cls.Remove(Me)
				End If
				Me._hre_cls.Entity = value
				If ((value Is Nothing)  _
							= false) Then
					value.gga_cls.Add(Me)
					Me._id_hre = value.id_hre
				Else
					Me._id_hre = CType(Nothing, Nullable(Of Decimal))
				End If
				Me.SendPropertyChanged("hre_cls")
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="P_0051_cls_gga_cls", Storage:="_P_0051_cls", ThisKey:="id_p_0051", OtherKey:="id_P_0051", IsForeignKey:=true)>  _
	Public Property P_0051_cls() As P_0051_cls
		Get
			Return Me._P_0051_cls.Entity
		End Get
		Set
			Dim previousValue As P_0051_cls = Me._P_0051_cls.Entity
			If ((Object.Equals(previousValue, value) = false)  _
						OrElse (Me._P_0051_cls.HasLoadedOrAssignedValue = false)) Then
				Me.SendPropertyChanging
				If ((previousValue Is Nothing)  _
							= false) Then
					Me._P_0051_cls.Entity = Nothing
					previousValue.gga_cls.Remove(Me)
				End If
				Me._P_0051_cls.Entity = value
				If ((value Is Nothing)  _
							= false) Then
					value.gga_cls.Add(Me)
					Me._id_p_0051 = value.id_P_0051
				Else
					Me._id_p_0051 = CType(Nothing, Nullable(Of Integer))
				End If
				Me.SendPropertyChanged("P_0051_cls")
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.gnr")>  _
Partial Public Class gnr_cls
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _id_gnr As Decimal
	
	Private _id_doc As Decimal
	
	Private _gnr_fev_ult As Date
	
	Private _gnr_fec_prx As Date
	
    #Region "Definiciones de métodos de extensibilidad"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub Onid_gnrChanging(value As Decimal)
    End Sub
    Partial Private Sub Onid_gnrChanged()
    End Sub
    Partial Private Sub Onid_docChanging(value As Decimal)
    End Sub
    Partial Private Sub Onid_docChanged()
    End Sub
    Partial Private Sub Ongnr_fev_ultChanging(value As Date)
    End Sub
    Partial Private Sub Ongnr_fev_ultChanged()
    End Sub
    Partial Private Sub Ongnr_fec_prxChanging(value As Date)
    End Sub
    Partial Private Sub Ongnr_fec_prxChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_id_gnr", AutoSync:=AutoSync.OnInsert, DbType:="Decimal(10,0) NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property id_gnr() As Decimal
		Get
			Return Me._id_gnr
		End Get
		Set
			If ((Me._id_gnr = value)  _
						= false) Then
				Me.Onid_gnrChanging(value)
				Me.SendPropertyChanging
				Me._id_gnr = value
				Me.SendPropertyChanged("id_gnr")
				Me.Onid_gnrChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_id_doc", DbType:="Decimal(10,0) NOT NULL")>  _
	Public Property id_doc() As Decimal
		Get
			Return Me._id_doc
		End Get
		Set
			If ((Me._id_doc = value)  _
						= false) Then
				Me.Onid_docChanging(value)
				Me.SendPropertyChanging
				Me._id_doc = value
				Me.SendPropertyChanged("id_doc")
				Me.Onid_docChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_gnr_fev_ult", DbType:="DateTime NOT NULL")>  _
	Public Property gnr_fev_ult() As Date
		Get
			Return Me._gnr_fev_ult
		End Get
		Set
			If ((Me._gnr_fev_ult = value)  _
						= false) Then
				Me.Ongnr_fev_ultChanging(value)
				Me.SendPropertyChanging
				Me._gnr_fev_ult = value
				Me.SendPropertyChanged("gnr_fev_ult")
				Me.Ongnr_fev_ultChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_gnr_fec_prx", DbType:="DateTime NOT NULL")>  _
	Public Property gnr_fec_prx() As Date
		Get
			Return Me._gnr_fec_prx
		End Get
		Set
			If ((Me._gnr_fec_prx = value)  _
						= false) Then
				Me.Ongnr_fec_prxChanging(value)
				Me.SendPropertyChanging
				Me._gnr_fec_prx = value
				Me.SendPropertyChanged("gnr_fec_prx")
				Me.Ongnr_fec_prxChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.gos")>  _
Partial Public Class gos_cls
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _id_gos As Decimal
	
	Private _id_ope As System.Nullable(Of Decimal)
	
	Private _id_gdn As System.Nullable(Of Decimal)
	
	Private _id_gfn As System.Nullable(Of Decimal)
	
	Private _gos_fec As System.Nullable(Of Date)
	
	Private _gos_fij As System.Nullable(Of Char)
	
	Private _gdn_cls As EntityRef(Of gdn_cls)
	
	Private _gfn_cls As EntityRef(Of gfn_cls)
	
	Private _ope_cls As EntityRef(Of ope_cls)
	
    #Region "Definiciones de métodos de extensibilidad"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub Onid_gosChanging(value As Decimal)
    End Sub
    Partial Private Sub Onid_gosChanged()
    End Sub
    Partial Private Sub Onid_opeChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub Onid_opeChanged()
    End Sub
    Partial Private Sub Onid_gdnChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub Onid_gdnChanged()
    End Sub
    Partial Private Sub Onid_gfnChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub Onid_gfnChanged()
    End Sub
    Partial Private Sub Ongos_fecChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub Ongos_fecChanged()
    End Sub
    Partial Private Sub Ongos_fijChanging(value As System.Nullable(Of Char))
    End Sub
    Partial Private Sub Ongos_fijChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		Me._gdn_cls = CType(Nothing, EntityRef(Of gdn_cls))
		Me._gfn_cls = CType(Nothing, EntityRef(Of gfn_cls))
		Me._ope_cls = CType(Nothing, EntityRef(Of ope_cls))
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_id_gos", AutoSync:=AutoSync.OnInsert, DbType:="Decimal(10,0) NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property id_gos() As Decimal
		Get
			Return Me._id_gos
		End Get
		Set
			If ((Me._id_gos = value)  _
						= false) Then
				Me.Onid_gosChanging(value)
				Me.SendPropertyChanging
				Me._id_gos = value
				Me.SendPropertyChanged("id_gos")
				Me.Onid_gosChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_id_ope", DbType:="Decimal(10,0)")>  _
	Public Property id_ope() As System.Nullable(Of Decimal)
		Get
			Return Me._id_ope
		End Get
		Set
			If (Me._id_ope.Equals(value) = false) Then
				If Me._ope_cls.HasLoadedOrAssignedValue Then
					Throw New System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException()
				End If
				Me.Onid_opeChanging(value)
				Me.SendPropertyChanging
				Me._id_ope = value
				Me.SendPropertyChanged("id_ope")
				Me.Onid_opeChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_id_gdn", DbType:="Decimal(10,0)")>  _
	Public Property id_gdn() As System.Nullable(Of Decimal)
		Get
			Return Me._id_gdn
		End Get
		Set
			If (Me._id_gdn.Equals(value) = false) Then
				If Me._gdn_cls.HasLoadedOrAssignedValue Then
					Throw New System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException()
				End If
				Me.Onid_gdnChanging(value)
				Me.SendPropertyChanging
				Me._id_gdn = value
				Me.SendPropertyChanged("id_gdn")
				Me.Onid_gdnChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_id_gfn", DbType:="Decimal(10,0)")>  _
	Public Property id_gfn() As System.Nullable(Of Decimal)
		Get
			Return Me._id_gfn
		End Get
		Set
			If (Me._id_gfn.Equals(value) = false) Then
				If Me._gfn_cls.HasLoadedOrAssignedValue Then
					Throw New System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException()
				End If
				Me.Onid_gfnChanging(value)
				Me.SendPropertyChanging
				Me._id_gfn = value
				Me.SendPropertyChanged("id_gfn")
				Me.Onid_gfnChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_gos_fec", DbType:="DateTime")>  _
	Public Property gos_fec() As System.Nullable(Of Date)
		Get
			Return Me._gos_fec
		End Get
		Set
			If (Me._gos_fec.Equals(value) = false) Then
				Me.Ongos_fecChanging(value)
				Me.SendPropertyChanging
				Me._gos_fec = value
				Me.SendPropertyChanged("gos_fec")
				Me.Ongos_fecChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_gos_fij", DbType:="Char(1)")>  _
	Public Property gos_fij() As System.Nullable(Of Char)
		Get
			Return Me._gos_fij
		End Get
		Set
			If (Me._gos_fij.Equals(value) = false) Then
				Me.Ongos_fijChanging(value)
				Me.SendPropertyChanging
				Me._gos_fij = value
				Me.SendPropertyChanged("gos_fij")
				Me.Ongos_fijChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="gdn_cls_gos_cls", Storage:="_gdn_cls", ThisKey:="id_gdn", OtherKey:="id_gdn", IsForeignKey:=true)>  _
	Public Property gdn_cls() As gdn_cls
		Get
			Return Me._gdn_cls.Entity
		End Get
		Set
			Dim previousValue As gdn_cls = Me._gdn_cls.Entity
			If ((Object.Equals(previousValue, value) = false)  _
						OrElse (Me._gdn_cls.HasLoadedOrAssignedValue = false)) Then
				Me.SendPropertyChanging
				If ((previousValue Is Nothing)  _
							= false) Then
					Me._gdn_cls.Entity = Nothing
					previousValue.gos_cls.Remove(Me)
				End If
				Me._gdn_cls.Entity = value
				If ((value Is Nothing)  _
							= false) Then
					value.gos_cls.Add(Me)
					Me._id_gdn = value.id_gdn
				Else
					Me._id_gdn = CType(Nothing, Nullable(Of Decimal))
				End If
				Me.SendPropertyChanged("gdn_cls")
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="gfn_cls_gos_cls", Storage:="_gfn_cls", ThisKey:="id_gfn", OtherKey:="id_gfn", IsForeignKey:=true)>  _
	Public Property gfn_cls() As gfn_cls
		Get
			Return Me._gfn_cls.Entity
		End Get
		Set
			Dim previousValue As gfn_cls = Me._gfn_cls.Entity
			If ((Object.Equals(previousValue, value) = false)  _
						OrElse (Me._gfn_cls.HasLoadedOrAssignedValue = false)) Then
				Me.SendPropertyChanging
				If ((previousValue Is Nothing)  _
							= false) Then
					Me._gfn_cls.Entity = Nothing
					previousValue.gos_cls.Remove(Me)
				End If
				Me._gfn_cls.Entity = value
				If ((value Is Nothing)  _
							= false) Then
					value.gos_cls.Add(Me)
					Me._id_gfn = value.id_gfn
				Else
					Me._id_gfn = CType(Nothing, Nullable(Of Decimal))
				End If
				Me.SendPropertyChanged("gfn_cls")
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="ope_cls_gos_cls", Storage:="_ope_cls", ThisKey:="id_ope", OtherKey:="id_ope", IsForeignKey:=true)>  _
	Public Property ope_cls() As ope_cls
		Get
			Return Me._ope_cls.Entity
		End Get
		Set
			Dim previousValue As ope_cls = Me._ope_cls.Entity
			If ((Object.Equals(previousValue, value) = false)  _
						OrElse (Me._ope_cls.HasLoadedOrAssignedValue = false)) Then
				Me.SendPropertyChanging
				If ((previousValue Is Nothing)  _
							= false) Then
					Me._ope_cls.Entity = Nothing
					previousValue.gos_cls.Remove(Me)
				End If
				Me._ope_cls.Entity = value
				If ((value Is Nothing)  _
							= false) Then
					value.gos_cls.Add(Me)
					Me._id_ope = value.id_ope
				Else
					Me._id_ope = CType(Nothing, Nullable(Of Decimal))
				End If
				Me.SendPropertyChanged("ope_cls")
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.grc")>  _
Partial Public Class grc_cls
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _id_grc As Decimal
	
	Private _id_gsn As Decimal
	
    #Region "Definiciones de métodos de extensibilidad"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub Onid_grcChanging(value As Decimal)
    End Sub
    Partial Private Sub Onid_grcChanged()
    End Sub
    Partial Private Sub Onid_gsnChanging(value As Decimal)
    End Sub
    Partial Private Sub Onid_gsnChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_id_grc", AutoSync:=AutoSync.OnInsert, DbType:="Decimal(10,0) NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property id_grc() As Decimal
		Get
			Return Me._id_grc
		End Get
		Set
			If ((Me._id_grc = value)  _
						= false) Then
				Me.Onid_grcChanging(value)
				Me.SendPropertyChanging
				Me._id_grc = value
				Me.SendPropertyChanged("id_grc")
				Me.Onid_grcChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_id_gsn", DbType:="Decimal(10,0) NOT NULL")>  _
	Public Property id_gsn() As Decimal
		Get
			Return Me._id_gsn
		End Get
		Set
			If ((Me._id_gsn = value)  _
						= false) Then
				Me.Onid_gsnChanging(value)
				Me.SendPropertyChanging
				Me._id_gsn = value
				Me.SendPropertyChanged("id_gsn")
				Me.Onid_gsnChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.gsn")>  _
Partial Public Class gsn_cls
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _id_gsn As Decimal
	
	Private _id_doc As Decimal
	
	Private _id_eje_cob As System.Nullable(Of Integer)
	
	Private _id_cnc As System.Nullable(Of Decimal)
	
	Private _id_P_0011 As Integer
	
	Private _id_cco As System.Nullable(Of Integer)
	
	Private _id_ddi As System.Nullable(Of Decimal)
	
	Private _gsn_fec As System.Nullable(Of Date)
	
	Private _gsn_hor As System.Nullable(Of Date)
	
	Private _gsn_fec_pag As System.Nullable(Of Date)
	
	Private _gsn_hor_pag As System.Nullable(Of Date)
	
	Private _gsn_tlf As String
	
	Private _gsn_fax As String
	
	Private _gsn_obs As String
	
	Private _gsn_obs_1 As String
	
	Private _gsn_obs_2 As String
	
	Private _gsn_doc_rtr_pag As String
	
	Private _gsn_fec_prx As System.Nullable(Of Date)
	
	Private _gsn_hor_prx As System.Nullable(Of Date)
	
	Private _gsn_dir_cbz As String
	
	Private _gsn_alo As System.Nullable(Of Char)
	
	Private _gsn_alo_obs As String
	
	Private _gsn_hor_pag_dde As System.Nullable(Of Date)
	
	Private _gsn_con_hor As String
	
	Private _doc_fev_rea As System.Nullable(Of Date)
	
	Private _doc_sdo_cli As System.Nullable(Of Decimal)
	
	Private _doc_sdo_ddr As System.Nullable(Of Decimal)
	
	Private _drc_cls As EntitySet(Of drc_cls)
	
	Private _cco_cls As EntityRef(Of cco_cls)
	
	Private _cnc_cls As EntityRef(Of cnc_cls)
	
	Private _ddi_cls As EntityRef(Of ddi_cls)
	
	Private _doc_cls As EntityRef(Of doc_cls)
	
	Private _P_0011_cls As EntityRef(Of P_0011_cls)
	
	Private _eje_cls As EntityRef(Of eje_cls)
	
    #Region "Definiciones de métodos de extensibilidad"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub Onid_gsnChanging(value As Decimal)
    End Sub
    Partial Private Sub Onid_gsnChanged()
    End Sub
    Partial Private Sub Onid_docChanging(value As Decimal)
    End Sub
    Partial Private Sub Onid_docChanged()
    End Sub
    Partial Private Sub Onid_eje_cobChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub Onid_eje_cobChanged()
    End Sub
    Partial Private Sub Onid_cncChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub Onid_cncChanged()
    End Sub
    Partial Private Sub Onid_P_0011Changing(value As Integer)
    End Sub
    Partial Private Sub Onid_P_0011Changed()
    End Sub
    Partial Private Sub Onid_ccoChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub Onid_ccoChanged()
    End Sub
    Partial Private Sub Onid_ddiChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub Onid_ddiChanged()
    End Sub
    Partial Private Sub Ongsn_fecChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub Ongsn_fecChanged()
    End Sub
    Partial Private Sub Ongsn_horChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub Ongsn_horChanged()
    End Sub
    Partial Private Sub Ongsn_fec_pagChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub Ongsn_fec_pagChanged()
    End Sub
    Partial Private Sub Ongsn_hor_pagChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub Ongsn_hor_pagChanged()
    End Sub
    Partial Private Sub Ongsn_tlfChanging(value As String)
    End Sub
    Partial Private Sub Ongsn_tlfChanged()
    End Sub
    Partial Private Sub Ongsn_faxChanging(value As String)
    End Sub
    Partial Private Sub Ongsn_faxChanged()
    End Sub
    Partial Private Sub Ongsn_obsChanging(value As String)
    End Sub
    Partial Private Sub Ongsn_obsChanged()
    End Sub
    Partial Private Sub Ongsn_obs_1Changing(value As String)
    End Sub
    Partial Private Sub Ongsn_obs_1Changed()
    End Sub
    Partial Private Sub Ongsn_obs_2Changing(value As String)
    End Sub
    Partial Private Sub Ongsn_obs_2Changed()
    End Sub
    Partial Private Sub Ongsn_doc_rtr_pagChanging(value As String)
    End Sub
    Partial Private Sub Ongsn_doc_rtr_pagChanged()
    End Sub
    Partial Private Sub Ongsn_fec_prxChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub Ongsn_fec_prxChanged()
    End Sub
    Partial Private Sub Ongsn_hor_prxChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub Ongsn_hor_prxChanged()
    End Sub
    Partial Private Sub Ongsn_dir_cbzChanging(value As String)
    End Sub
    Partial Private Sub Ongsn_dir_cbzChanged()
    End Sub
    Partial Private Sub Ongsn_aloChanging(value As System.Nullable(Of Char))
    End Sub
    Partial Private Sub Ongsn_aloChanged()
    End Sub
    Partial Private Sub Ongsn_alo_obsChanging(value As String)
    End Sub
    Partial Private Sub Ongsn_alo_obsChanged()
    End Sub
    Partial Private Sub Ongsn_hor_pag_ddeChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub Ongsn_hor_pag_ddeChanged()
    End Sub
    Partial Private Sub Ongsn_con_horChanging(value As String)
    End Sub
    Partial Private Sub Ongsn_con_horChanged()
    End Sub
    Partial Private Sub Ondoc_fev_reaChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub Ondoc_fev_reaChanged()
    End Sub
    Partial Private Sub Ondoc_sdo_cliChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub Ondoc_sdo_cliChanged()
    End Sub
    Partial Private Sub Ondoc_sdo_ddrChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub Ondoc_sdo_ddrChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		Me._drc_cls = New EntitySet(Of drc_cls)(AddressOf Me.attach_drc_cls, AddressOf Me.detach_drc_cls)
		Me._cco_cls = CType(Nothing, EntityRef(Of cco_cls))
		Me._cnc_cls = CType(Nothing, EntityRef(Of cnc_cls))
		Me._ddi_cls = CType(Nothing, EntityRef(Of ddi_cls))
		Me._doc_cls = CType(Nothing, EntityRef(Of doc_cls))
		Me._P_0011_cls = CType(Nothing, EntityRef(Of P_0011_cls))
		Me._eje_cls = CType(Nothing, EntityRef(Of eje_cls))
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_id_gsn", AutoSync:=AutoSync.OnInsert, DbType:="Decimal(18,0) NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property id_gsn() As Decimal
		Get
			Return Me._id_gsn
		End Get
		Set
			If ((Me._id_gsn = value)  _
						= false) Then
				Me.Onid_gsnChanging(value)
				Me.SendPropertyChanging
				Me._id_gsn = value
				Me.SendPropertyChanged("id_gsn")
				Me.Onid_gsnChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_id_doc", DbType:="Decimal(18,0) NOT NULL")>  _
	Public Property id_doc() As Decimal
		Get
			Return Me._id_doc
		End Get
		Set
			If ((Me._id_doc = value)  _
						= false) Then
				If Me._doc_cls.HasLoadedOrAssignedValue Then
					Throw New System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException()
				End If
				Me.Onid_docChanging(value)
				Me.SendPropertyChanging
				Me._id_doc = value
				Me.SendPropertyChanged("id_doc")
				Me.Onid_docChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_id_eje_cob", DbType:="Int")>  _
	Public Property id_eje_cob() As System.Nullable(Of Integer)
		Get
			Return Me._id_eje_cob
		End Get
		Set
			If (Me._id_eje_cob.Equals(value) = false) Then
				If Me._eje_cls.HasLoadedOrAssignedValue Then
					Throw New System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException()
				End If
				Me.Onid_eje_cobChanging(value)
				Me.SendPropertyChanging
				Me._id_eje_cob = value
				Me.SendPropertyChanged("id_eje_cob")
				Me.Onid_eje_cobChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_id_cnc", DbType:="Decimal(10,0)")>  _
	Public Property id_cnc() As System.Nullable(Of Decimal)
		Get
			Return Me._id_cnc
		End Get
		Set
			If (Me._id_cnc.Equals(value) = false) Then
				If Me._cnc_cls.HasLoadedOrAssignedValue Then
					Throw New System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException()
				End If
				Me.Onid_cncChanging(value)
				Me.SendPropertyChanging
				Me._id_cnc = value
				Me.SendPropertyChanged("id_cnc")
				Me.Onid_cncChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_id_P_0011", DbType:="Int NOT NULL")>  _
	Public Property id_P_0011() As Integer
		Get
			Return Me._id_P_0011
		End Get
		Set
			If ((Me._id_P_0011 = value)  _
						= false) Then
				If Me._P_0011_cls.HasLoadedOrAssignedValue Then
					Throw New System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException()
				End If
				Me.Onid_P_0011Changing(value)
				Me.SendPropertyChanging
				Me._id_P_0011 = value
				Me.SendPropertyChanged("id_P_0011")
				Me.Onid_P_0011Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_id_cco", DbType:="Int")>  _
	Public Property id_cco() As System.Nullable(Of Integer)
		Get
			Return Me._id_cco
		End Get
		Set
			If (Me._id_cco.Equals(value) = false) Then
				If Me._cco_cls.HasLoadedOrAssignedValue Then
					Throw New System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException()
				End If
				Me.Onid_ccoChanging(value)
				Me.SendPropertyChanging
				Me._id_cco = value
				Me.SendPropertyChanged("id_cco")
				Me.Onid_ccoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_id_ddi", DbType:="Decimal(10,0)")>  _
	Public Property id_ddi() As System.Nullable(Of Decimal)
		Get
			Return Me._id_ddi
		End Get
		Set
			If (Me._id_ddi.Equals(value) = false) Then
				If Me._ddi_cls.HasLoadedOrAssignedValue Then
					Throw New System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException()
				End If
				Me.Onid_ddiChanging(value)
				Me.SendPropertyChanging
				Me._id_ddi = value
				Me.SendPropertyChanged("id_ddi")
				Me.Onid_ddiChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_gsn_fec", DbType:="DateTime")>  _
	Public Property gsn_fec() As System.Nullable(Of Date)
		Get
			Return Me._gsn_fec
		End Get
		Set
			If (Me._gsn_fec.Equals(value) = false) Then
				Me.Ongsn_fecChanging(value)
				Me.SendPropertyChanging
				Me._gsn_fec = value
				Me.SendPropertyChanged("gsn_fec")
				Me.Ongsn_fecChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_gsn_hor", DbType:="DateTime")>  _
	Public Property gsn_hor() As System.Nullable(Of Date)
		Get
			Return Me._gsn_hor
		End Get
		Set
			If (Me._gsn_hor.Equals(value) = false) Then
				Me.Ongsn_horChanging(value)
				Me.SendPropertyChanging
				Me._gsn_hor = value
				Me.SendPropertyChanged("gsn_hor")
				Me.Ongsn_horChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_gsn_fec_pag", DbType:="DateTime")>  _
	Public Property gsn_fec_pag() As System.Nullable(Of Date)
		Get
			Return Me._gsn_fec_pag
		End Get
		Set
			If (Me._gsn_fec_pag.Equals(value) = false) Then
				Me.Ongsn_fec_pagChanging(value)
				Me.SendPropertyChanging
				Me._gsn_fec_pag = value
				Me.SendPropertyChanged("gsn_fec_pag")
				Me.Ongsn_fec_pagChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_gsn_hor_pag", DbType:="DateTime")>  _
	Public Property gsn_hor_pag() As System.Nullable(Of Date)
		Get
			Return Me._gsn_hor_pag
		End Get
		Set
			If (Me._gsn_hor_pag.Equals(value) = false) Then
				Me.Ongsn_hor_pagChanging(value)
				Me.SendPropertyChanging
				Me._gsn_hor_pag = value
				Me.SendPropertyChanged("gsn_hor_pag")
				Me.Ongsn_hor_pagChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_gsn_tlf", DbType:="Char(10)")>  _
	Public Property gsn_tlf() As String
		Get
			Return Me._gsn_tlf
		End Get
		Set
			If (String.Equals(Me._gsn_tlf, value) = false) Then
				Me.Ongsn_tlfChanging(value)
				Me.SendPropertyChanging
				Me._gsn_tlf = value
				Me.SendPropertyChanged("gsn_tlf")
				Me.Ongsn_tlfChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_gsn_fax", DbType:="Char(10)")>  _
	Public Property gsn_fax() As String
		Get
			Return Me._gsn_fax
		End Get
		Set
			If (String.Equals(Me._gsn_fax, value) = false) Then
				Me.Ongsn_faxChanging(value)
				Me.SendPropertyChanging
				Me._gsn_fax = value
				Me.SendPropertyChanged("gsn_fax")
				Me.Ongsn_faxChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_gsn_obs", DbType:="VarChar(255)")>  _
	Public Property gsn_obs() As String
		Get
			Return Me._gsn_obs
		End Get
		Set
			If (String.Equals(Me._gsn_obs, value) = false) Then
				Me.Ongsn_obsChanging(value)
				Me.SendPropertyChanging
				Me._gsn_obs = value
				Me.SendPropertyChanged("gsn_obs")
				Me.Ongsn_obsChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_gsn_obs_1", DbType:="VarChar(255)")>  _
	Public Property gsn_obs_1() As String
		Get
			Return Me._gsn_obs_1
		End Get
		Set
			If (String.Equals(Me._gsn_obs_1, value) = false) Then
				Me.Ongsn_obs_1Changing(value)
				Me.SendPropertyChanging
				Me._gsn_obs_1 = value
				Me.SendPropertyChanged("gsn_obs_1")
				Me.Ongsn_obs_1Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_gsn_obs_2", DbType:="VarChar(255)")>  _
	Public Property gsn_obs_2() As String
		Get
			Return Me._gsn_obs_2
		End Get
		Set
			If (String.Equals(Me._gsn_obs_2, value) = false) Then
				Me.Ongsn_obs_2Changing(value)
				Me.SendPropertyChanging
				Me._gsn_obs_2 = value
				Me.SendPropertyChanged("gsn_obs_2")
				Me.Ongsn_obs_2Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_gsn_doc_rtr_pag", DbType:="VarChar(255)")>  _
	Public Property gsn_doc_rtr_pag() As String
		Get
			Return Me._gsn_doc_rtr_pag
		End Get
		Set
			If (String.Equals(Me._gsn_doc_rtr_pag, value) = false) Then
				Me.Ongsn_doc_rtr_pagChanging(value)
				Me.SendPropertyChanging
				Me._gsn_doc_rtr_pag = value
				Me.SendPropertyChanged("gsn_doc_rtr_pag")
				Me.Ongsn_doc_rtr_pagChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_gsn_fec_prx", DbType:="DateTime")>  _
	Public Property gsn_fec_prx() As System.Nullable(Of Date)
		Get
			Return Me._gsn_fec_prx
		End Get
		Set
			If (Me._gsn_fec_prx.Equals(value) = false) Then
				Me.Ongsn_fec_prxChanging(value)
				Me.SendPropertyChanging
				Me._gsn_fec_prx = value
				Me.SendPropertyChanged("gsn_fec_prx")
				Me.Ongsn_fec_prxChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_gsn_hor_prx", DbType:="DateTime")>  _
	Public Property gsn_hor_prx() As System.Nullable(Of Date)
		Get
			Return Me._gsn_hor_prx
		End Get
		Set
			If (Me._gsn_hor_prx.Equals(value) = false) Then
				Me.Ongsn_hor_prxChanging(value)
				Me.SendPropertyChanging
				Me._gsn_hor_prx = value
				Me.SendPropertyChanged("gsn_hor_prx")
				Me.Ongsn_hor_prxChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_gsn_dir_cbz", DbType:="VarChar(255)")>  _
	Public Property gsn_dir_cbz() As String
		Get
			Return Me._gsn_dir_cbz
		End Get
		Set
			If (String.Equals(Me._gsn_dir_cbz, value) = false) Then
				Me.Ongsn_dir_cbzChanging(value)
				Me.SendPropertyChanging
				Me._gsn_dir_cbz = value
				Me.SendPropertyChanged("gsn_dir_cbz")
				Me.Ongsn_dir_cbzChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_gsn_alo", DbType:="Char(1)")>  _
	Public Property gsn_alo() As System.Nullable(Of Char)
		Get
			Return Me._gsn_alo
		End Get
		Set
			If (Me._gsn_alo.Equals(value) = false) Then
				Me.Ongsn_aloChanging(value)
				Me.SendPropertyChanging
				Me._gsn_alo = value
				Me.SendPropertyChanged("gsn_alo")
				Me.Ongsn_aloChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_gsn_alo_obs", DbType:="VarChar(255)")>  _
	Public Property gsn_alo_obs() As String
		Get
			Return Me._gsn_alo_obs
		End Get
		Set
			If (String.Equals(Me._gsn_alo_obs, value) = false) Then
				Me.Ongsn_alo_obsChanging(value)
				Me.SendPropertyChanging
				Me._gsn_alo_obs = value
				Me.SendPropertyChanged("gsn_alo_obs")
				Me.Ongsn_alo_obsChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_gsn_hor_pag_dde", DbType:="DateTime")>  _
	Public Property gsn_hor_pag_dde() As System.Nullable(Of Date)
		Get
			Return Me._gsn_hor_pag_dde
		End Get
		Set
			If (Me._gsn_hor_pag_dde.Equals(value) = false) Then
				Me.Ongsn_hor_pag_ddeChanging(value)
				Me.SendPropertyChanging
				Me._gsn_hor_pag_dde = value
				Me.SendPropertyChanged("gsn_hor_pag_dde")
				Me.Ongsn_hor_pag_ddeChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_gsn_con_hor", DbType:="VarChar(1)")>  _
	Public Property gsn_con_hor() As String
		Get
			Return Me._gsn_con_hor
		End Get
		Set
			If (String.Equals(Me._gsn_con_hor, value) = false) Then
				Me.Ongsn_con_horChanging(value)
				Me.SendPropertyChanging
				Me._gsn_con_hor = value
				Me.SendPropertyChanged("gsn_con_hor")
				Me.Ongsn_con_horChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_doc_fev_rea", DbType:="DateTime")>  _
	Public Property doc_fev_rea() As System.Nullable(Of Date)
		Get
			Return Me._doc_fev_rea
		End Get
		Set
			If (Me._doc_fev_rea.Equals(value) = false) Then
				Me.Ondoc_fev_reaChanging(value)
				Me.SendPropertyChanging
				Me._doc_fev_rea = value
				Me.SendPropertyChanged("doc_fev_rea")
				Me.Ondoc_fev_reaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_doc_sdo_cli", DbType:="Money")>  _
	Public Property doc_sdo_cli() As System.Nullable(Of Decimal)
		Get
			Return Me._doc_sdo_cli
		End Get
		Set
			If (Me._doc_sdo_cli.Equals(value) = false) Then
				Me.Ondoc_sdo_cliChanging(value)
				Me.SendPropertyChanging
				Me._doc_sdo_cli = value
				Me.SendPropertyChanged("doc_sdo_cli")
				Me.Ondoc_sdo_cliChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_doc_sdo_ddr", DbType:="Money")>  _
	Public Property doc_sdo_ddr() As System.Nullable(Of Decimal)
		Get
			Return Me._doc_sdo_ddr
		End Get
		Set
			If (Me._doc_sdo_ddr.Equals(value) = false) Then
				Me.Ondoc_sdo_ddrChanging(value)
				Me.SendPropertyChanging
				Me._doc_sdo_ddr = value
				Me.SendPropertyChanged("doc_sdo_ddr")
				Me.Ondoc_sdo_ddrChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="gsn_cls_drc_cls", Storage:="_drc_cls", ThisKey:="id_gsn", OtherKey:="id_gsn")>  _
	Public Property drc_cls() As EntitySet(Of drc_cls)
		Get
			Return Me._drc_cls
		End Get
		Set
			Me._drc_cls.Assign(value)
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="cco_cls_gsn_cls", Storage:="_cco_cls", ThisKey:="id_cco", OtherKey:="id_cco", IsForeignKey:=true)>  _
	Public Property cco_cls() As cco_cls
		Get
			Return Me._cco_cls.Entity
		End Get
		Set
			Dim previousValue As cco_cls = Me._cco_cls.Entity
			If ((Object.Equals(previousValue, value) = false)  _
						OrElse (Me._cco_cls.HasLoadedOrAssignedValue = false)) Then
				Me.SendPropertyChanging
				If ((previousValue Is Nothing)  _
							= false) Then
					Me._cco_cls.Entity = Nothing
					previousValue.gsn_cls.Remove(Me)
				End If
				Me._cco_cls.Entity = value
				If ((value Is Nothing)  _
							= false) Then
					value.gsn_cls.Add(Me)
					Me._id_cco = value.id_cco
				Else
					Me._id_cco = CType(Nothing, Nullable(Of Integer))
				End If
				Me.SendPropertyChanged("cco_cls")
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="cnc_cls_gsn_cls", Storage:="_cnc_cls", ThisKey:="id_cnc", OtherKey:="id_cnc", IsForeignKey:=true)>  _
	Public Property cnc_cls() As cnc_cls
		Get
			Return Me._cnc_cls.Entity
		End Get
		Set
			Dim previousValue As cnc_cls = Me._cnc_cls.Entity
			If ((Object.Equals(previousValue, value) = false)  _
						OrElse (Me._cnc_cls.HasLoadedOrAssignedValue = false)) Then
				Me.SendPropertyChanging
				If ((previousValue Is Nothing)  _
							= false) Then
					Me._cnc_cls.Entity = Nothing
					previousValue.gsn_cls.Remove(Me)
				End If
				Me._cnc_cls.Entity = value
				If ((value Is Nothing)  _
							= false) Then
					value.gsn_cls.Add(Me)
					Me._id_cnc = value.id_cnc
				Else
					Me._id_cnc = CType(Nothing, Nullable(Of Decimal))
				End If
				Me.SendPropertyChanged("cnc_cls")
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="ddi_cls_gsn_cls", Storage:="_ddi_cls", ThisKey:="id_ddi", OtherKey:="id_ddi", IsForeignKey:=true)>  _
	Public Property ddi_cls() As ddi_cls
		Get
			Return Me._ddi_cls.Entity
		End Get
		Set
			Dim previousValue As ddi_cls = Me._ddi_cls.Entity
			If ((Object.Equals(previousValue, value) = false)  _
						OrElse (Me._ddi_cls.HasLoadedOrAssignedValue = false)) Then
				Me.SendPropertyChanging
				If ((previousValue Is Nothing)  _
							= false) Then
					Me._ddi_cls.Entity = Nothing
					previousValue.gsn_cls.Remove(Me)
				End If
				Me._ddi_cls.Entity = value
				If ((value Is Nothing)  _
							= false) Then
					value.gsn_cls.Add(Me)
					Me._id_ddi = value.id_ddi
				Else
					Me._id_ddi = CType(Nothing, Nullable(Of Decimal))
				End If
				Me.SendPropertyChanged("ddi_cls")
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="doc_cls_gsn_cls", Storage:="_doc_cls", ThisKey:="id_doc", OtherKey:="id_doc", IsForeignKey:=true)>  _
	Public Property doc_cls() As doc_cls
		Get
			Return Me._doc_cls.Entity
		End Get
		Set
			Dim previousValue As doc_cls = Me._doc_cls.Entity
			If ((Object.Equals(previousValue, value) = false)  _
						OrElse (Me._doc_cls.HasLoadedOrAssignedValue = false)) Then
				Me.SendPropertyChanging
				If ((previousValue Is Nothing)  _
							= false) Then
					Me._doc_cls.Entity = Nothing
					previousValue.gsn_cls.Remove(Me)
				End If
				Me._doc_cls.Entity = value
				If ((value Is Nothing)  _
							= false) Then
					value.gsn_cls.Add(Me)
					Me._id_doc = value.id_doc
				Else
					Me._id_doc = CType(Nothing, Decimal)
				End If
				Me.SendPropertyChanged("doc_cls")
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="P_0011_cls_gsn_cls", Storage:="_P_0011_cls", ThisKey:="id_P_0011", OtherKey:="id_P_0011", IsForeignKey:=true)>  _
	Public Property P_0011_cls() As P_0011_cls
		Get
			Return Me._P_0011_cls.Entity
		End Get
		Set
			Dim previousValue As P_0011_cls = Me._P_0011_cls.Entity
			If ((Object.Equals(previousValue, value) = false)  _
						OrElse (Me._P_0011_cls.HasLoadedOrAssignedValue = false)) Then
				Me.SendPropertyChanging
				If ((previousValue Is Nothing)  _
							= false) Then
					Me._P_0011_cls.Entity = Nothing
					previousValue.gsn_cls.Remove(Me)
				End If
				Me._P_0011_cls.Entity = value
				If ((value Is Nothing)  _
							= false) Then
					value.gsn_cls.Add(Me)
					Me._id_P_0011 = value.id_P_0011
				Else
					Me._id_P_0011 = CType(Nothing, Integer)
				End If
				Me.SendPropertyChanged("P_0011_cls")
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="eje_cls_gsn_cls", Storage:="_eje_cls", ThisKey:="id_eje_cob", OtherKey:="id_eje", IsForeignKey:=true)>  _
	Public Property eje_cls() As eje_cls
		Get
			Return Me._eje_cls.Entity
		End Get
		Set
			Dim previousValue As eje_cls = Me._eje_cls.Entity
			If ((Object.Equals(previousValue, value) = false)  _
						OrElse (Me._eje_cls.HasLoadedOrAssignedValue = false)) Then
				Me.SendPropertyChanging
				If ((previousValue Is Nothing)  _
							= false) Then
					Me._eje_cls.Entity = Nothing
					previousValue.gsn_cls.Remove(Me)
				End If
				Me._eje_cls.Entity = value
				If ((value Is Nothing)  _
							= false) Then
					value.gsn_cls.Add(Me)
					Me._id_eje_cob = value.id_eje
				Else
					Me._id_eje_cob = CType(Nothing, Nullable(Of Integer))
				End If
				Me.SendPropertyChanged("eje_cls")
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
	
	Private Sub attach_drc_cls(ByVal entity As drc_cls)
		Me.SendPropertyChanging
		entity.gsn_cls = Me
	End Sub
	
	Private Sub detach_drc_cls(ByVal entity As drc_cls)
		Me.SendPropertyChanging
		entity.gsn_cls = Nothing
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.gto")>  _
Partial Public Class gto_cls
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _id_gto As Decimal
	
	Private _id_suc As Integer
	
	Private _id_P_0036 As Integer
	
	Private _gto_mto As System.Nullable(Of Decimal)
	
	Private _gto_des As String
	
	Private _gto_est As System.Nullable(Of Char)
	
	Private _gto_cod_temporal As System.Nullable(Of Integer)
	
	Private _val_con As String
	
	Private _gto_iva As String
	
	Private _GDC_cls As EntitySet(Of GDC_cls)
	
	Private _gdn_cls As EntitySet(Of gdn_cls)
	
	Private _P_0036_cls As EntityRef(Of P_0036_cls)
	
	Private _suc_cls As EntityRef(Of suc_cls)
	
    #Region "Definiciones de métodos de extensibilidad"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub Onid_gtoChanging(value As Decimal)
    End Sub
    Partial Private Sub Onid_gtoChanged()
    End Sub
    Partial Private Sub Onid_sucChanging(value As Integer)
    End Sub
    Partial Private Sub Onid_sucChanged()
    End Sub
    Partial Private Sub Onid_P_0036Changing(value As Integer)
    End Sub
    Partial Private Sub Onid_P_0036Changed()
    End Sub
    Partial Private Sub Ongto_mtoChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub Ongto_mtoChanged()
    End Sub
    Partial Private Sub Ongto_desChanging(value As String)
    End Sub
    Partial Private Sub Ongto_desChanged()
    End Sub
    Partial Private Sub Ongto_estChanging(value As System.Nullable(Of Char))
    End Sub
    Partial Private Sub Ongto_estChanged()
    End Sub
    Partial Private Sub Ongto_cod_temporalChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub Ongto_cod_temporalChanged()
    End Sub
    Partial Private Sub Onval_conChanging(value As String)
    End Sub
    Partial Private Sub Onval_conChanged()
    End Sub
    Partial Private Sub Ongto_ivaChanging(value As String)
    End Sub
    Partial Private Sub Ongto_ivaChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		Me._GDC_cls = New EntitySet(Of GDC_cls)(AddressOf Me.attach_GDC_cls, AddressOf Me.detach_GDC_cls)
		Me._gdn_cls = New EntitySet(Of gdn_cls)(AddressOf Me.attach_gdn_cls, AddressOf Me.detach_gdn_cls)
		Me._P_0036_cls = CType(Nothing, EntityRef(Of P_0036_cls))
		Me._suc_cls = CType(Nothing, EntityRef(Of suc_cls))
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_id_gto", AutoSync:=AutoSync.OnInsert, DbType:="Decimal(5,0) NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property id_gto() As Decimal
		Get
			Return Me._id_gto
		End Get
		Set
			If ((Me._id_gto = value)  _
						= false) Then
				Me.Onid_gtoChanging(value)
				Me.SendPropertyChanging
				Me._id_gto = value
				Me.SendPropertyChanged("id_gto")
				Me.Onid_gtoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_id_suc", DbType:="Int NOT NULL")>  _
	Public Property id_suc() As Integer
		Get
			Return Me._id_suc
		End Get
		Set
			If ((Me._id_suc = value)  _
						= false) Then
				If Me._suc_cls.HasLoadedOrAssignedValue Then
					Throw New System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException()
				End If
				Me.Onid_sucChanging(value)
				Me.SendPropertyChanging
				Me._id_suc = value
				Me.SendPropertyChanged("id_suc")
				Me.Onid_sucChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_id_P_0036", DbType:="Int NOT NULL")>  _
	Public Property id_P_0036() As Integer
		Get
			Return Me._id_P_0036
		End Get
		Set
			If ((Me._id_P_0036 = value)  _
						= false) Then
				If Me._P_0036_cls.HasLoadedOrAssignedValue Then
					Throw New System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException()
				End If
				Me.Onid_P_0036Changing(value)
				Me.SendPropertyChanging
				Me._id_P_0036 = value
				Me.SendPropertyChanged("id_P_0036")
				Me.Onid_P_0036Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_gto_mto", DbType:="Decimal(10,0)")>  _
	Public Property gto_mto() As System.Nullable(Of Decimal)
		Get
			Return Me._gto_mto
		End Get
		Set
			If (Me._gto_mto.Equals(value) = false) Then
				Me.Ongto_mtoChanging(value)
				Me.SendPropertyChanging
				Me._gto_mto = value
				Me.SendPropertyChanged("gto_mto")
				Me.Ongto_mtoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_gto_des", DbType:="VarChar(50)")>  _
	Public Property gto_des() As String
		Get
			Return Me._gto_des
		End Get
		Set
			If (String.Equals(Me._gto_des, value) = false) Then
				Me.Ongto_desChanging(value)
				Me.SendPropertyChanging
				Me._gto_des = value
				Me.SendPropertyChanged("gto_des")
				Me.Ongto_desChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_gto_est", DbType:="Char(1)")>  _
	Public Property gto_est() As System.Nullable(Of Char)
		Get
			Return Me._gto_est
		End Get
		Set
			If (Me._gto_est.Equals(value) = false) Then
				Me.Ongto_estChanging(value)
				Me.SendPropertyChanging
				Me._gto_est = value
				Me.SendPropertyChanged("gto_est")
				Me.Ongto_estChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_gto_cod_temporal", DbType:="Int")>  _
	Public Property gto_cod_temporal() As System.Nullable(Of Integer)
		Get
			Return Me._gto_cod_temporal
		End Get
		Set
			If (Me._gto_cod_temporal.Equals(value) = false) Then
				Me.Ongto_cod_temporalChanging(value)
				Me.SendPropertyChanging
				Me._gto_cod_temporal = value
				Me.SendPropertyChanged("gto_cod_temporal")
				Me.Ongto_cod_temporalChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_val_con", DbType:="VarChar(2)")>  _
	Public Property val_con() As String
		Get
			Return Me._val_con
		End Get
		Set
			If (String.Equals(Me._val_con, value) = false) Then
				Me.Onval_conChanging(value)
				Me.SendPropertyChanging
				Me._val_con = value
				Me.SendPropertyChanged("val_con")
				Me.Onval_conChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_gto_iva", DbType:="Char(2)")>  _
	Public Property gto_iva() As String
		Get
			Return Me._gto_iva
		End Get
		Set
			If (String.Equals(Me._gto_iva, value) = false) Then
				Me.Ongto_ivaChanging(value)
				Me.SendPropertyChanging
				Me._gto_iva = value
				Me.SendPropertyChanged("gto_iva")
				Me.Ongto_ivaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="gto_cls_GDC_cls", Storage:="_GDC_cls", ThisKey:="id_gto", OtherKey:="id_gto")>  _
	Public Property GDC_cls() As EntitySet(Of GDC_cls)
		Get
			Return Me._GDC_cls
		End Get
		Set
			Me._GDC_cls.Assign(value)
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="gto_cls_gdn_cls", Storage:="_gdn_cls", ThisKey:="id_gto", OtherKey:="id_gto")>  _
	Public Property gdn_cls() As EntitySet(Of gdn_cls)
		Get
			Return Me._gdn_cls
		End Get
		Set
			Me._gdn_cls.Assign(value)
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="P_0036_cls_gto_cls", Storage:="_P_0036_cls", ThisKey:="id_P_0036", OtherKey:="id_P_0036", IsForeignKey:=true)>  _
	Public Property P_0036_cls() As P_0036_cls
		Get
			Return Me._P_0036_cls.Entity
		End Get
		Set
			Dim previousValue As P_0036_cls = Me._P_0036_cls.Entity
			If ((Object.Equals(previousValue, value) = false)  _
						OrElse (Me._P_0036_cls.HasLoadedOrAssignedValue = false)) Then
				Me.SendPropertyChanging
				If ((previousValue Is Nothing)  _
							= false) Then
					Me._P_0036_cls.Entity = Nothing
					previousValue.gto_cls.Remove(Me)
				End If
				Me._P_0036_cls.Entity = value
				If ((value Is Nothing)  _
							= false) Then
					value.gto_cls.Add(Me)
					Me._id_P_0036 = value.id_P_0036
				Else
					Me._id_P_0036 = CType(Nothing, Integer)
				End If
				Me.SendPropertyChanged("P_0036_cls")
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="suc_cls_gto_cls", Storage:="_suc_cls", ThisKey:="id_suc", OtherKey:="id_suc", IsForeignKey:=true)>  _
	Public Property suc_cls() As suc_cls
		Get
			Return Me._suc_cls.Entity
		End Get
		Set
			Dim previousValue As suc_cls = Me._suc_cls.Entity
			If ((Object.Equals(previousValue, value) = false)  _
						OrElse (Me._suc_cls.HasLoadedOrAssignedValue = false)) Then
				Me.SendPropertyChanging
				If ((previousValue Is Nothing)  _
							= false) Then
					Me._suc_cls.Entity = Nothing
					previousValue.gto_cls.Remove(Me)
				End If
				Me._suc_cls.Entity = value
				If ((value Is Nothing)  _
							= false) Then
					value.gto_cls.Add(Me)
					Me._id_suc = value.id_suc
				Else
					Me._id_suc = CType(Nothing, Integer)
				End If
				Me.SendPropertyChanged("suc_cls")
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
	
	Private Sub attach_GDC_cls(ByVal entity As GDC_cls)
		Me.SendPropertyChanging
		entity.gto_cls = Me
	End Sub
	
	Private Sub detach_GDC_cls(ByVal entity As GDC_cls)
		Me.SendPropertyChanging
		entity.gto_cls = Nothing
	End Sub
	
	Private Sub attach_gdn_cls(ByVal entity As gdn_cls)
		Me.SendPropertyChanging
		entity.gto_cls = Me
	End Sub
	
	Private Sub detach_gdn_cls(ByVal entity As gdn_cls)
		Me.SendPropertyChanging
		entity.gto_cls = Nothing
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.has")>  _
Partial Public Class has_cls
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _id_has As Decimal
	
	Private _deu_ide As String
	
	Private _id_eje_nue As System.Nullable(Of Integer)
	
	Private _id_eje_ant As System.Nullable(Of Integer)
	
	Private _fec_asi_rea As Date
	
	Private _id_eje As Integer
	
	Private _deu_cls As EntityRef(Of deu_cls)
	
	Private _eje As EntityRef(Of eje_cls)
	
	Private _eje1 As EntityRef(Of eje_cls)
	
	Private _eje_cls As EntityRef(Of eje_cls)
	
    #Region "Definiciones de métodos de extensibilidad"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub Onid_hasChanging(value As Decimal)
    End Sub
    Partial Private Sub Onid_hasChanged()
    End Sub
    Partial Private Sub Ondeu_ideChanging(value As String)
    End Sub
    Partial Private Sub Ondeu_ideChanged()
    End Sub
    Partial Private Sub Onid_eje_nueChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub Onid_eje_nueChanged()
    End Sub
    Partial Private Sub Onid_eje_antChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub Onid_eje_antChanged()
    End Sub
    Partial Private Sub Onfec_asi_reaChanging(value As Date)
    End Sub
    Partial Private Sub Onfec_asi_reaChanged()
    End Sub
    Partial Private Sub Onid_ejeChanging(value As Integer)
    End Sub
    Partial Private Sub Onid_ejeChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		Me._deu_cls = CType(Nothing, EntityRef(Of deu_cls))
		Me._eje = CType(Nothing, EntityRef(Of eje_cls))
		Me._eje1 = CType(Nothing, EntityRef(Of eje_cls))
		Me._eje_cls = CType(Nothing, EntityRef(Of eje_cls))
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_id_has", AutoSync:=AutoSync.OnInsert, DbType:="Decimal(18,0) NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property id_has() As Decimal
		Get
			Return Me._id_has
		End Get
		Set
			If ((Me._id_has = value)  _
						= false) Then
				Me.Onid_hasChanging(value)
				Me.SendPropertyChanging
				Me._id_has = value
				Me.SendPropertyChanged("id_has")
				Me.Onid_hasChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_deu_ide", DbType:="Char(12) NOT NULL", CanBeNull:=false)>  _
	Public Property deu_ide() As String
		Get
			Return Me._deu_ide
		End Get
		Set
			If (String.Equals(Me._deu_ide, value) = false) Then
				If Me._deu_cls.HasLoadedOrAssignedValue Then
					Throw New System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException()
				End If
				Me.Ondeu_ideChanging(value)
				Me.SendPropertyChanging
				Me._deu_ide = value
				Me.SendPropertyChanged("deu_ide")
				Me.Ondeu_ideChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_id_eje_nue", DbType:="Int")>  _
	Public Property id_eje_nue() As System.Nullable(Of Integer)
		Get
			Return Me._id_eje_nue
		End Get
		Set
			If (Me._id_eje_nue.Equals(value) = false) Then
				If Me._eje_cls.HasLoadedOrAssignedValue Then
					Throw New System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException()
				End If
				Me.Onid_eje_nueChanging(value)
				Me.SendPropertyChanging
				Me._id_eje_nue = value
				Me.SendPropertyChanged("id_eje_nue")
				Me.Onid_eje_nueChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_id_eje_ant", DbType:="Int")>  _
	Public Property id_eje_ant() As System.Nullable(Of Integer)
		Get
			Return Me._id_eje_ant
		End Get
		Set
			If (Me._id_eje_ant.Equals(value) = false) Then
				If Me._eje1.HasLoadedOrAssignedValue Then
					Throw New System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException()
				End If
				Me.Onid_eje_antChanging(value)
				Me.SendPropertyChanging
				Me._id_eje_ant = value
				Me.SendPropertyChanged("id_eje_ant")
				Me.Onid_eje_antChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_fec_asi_rea", DbType:="DateTime NOT NULL")>  _
	Public Property fec_asi_rea() As Date
		Get
			Return Me._fec_asi_rea
		End Get
		Set
			If ((Me._fec_asi_rea = value)  _
						= false) Then
				Me.Onfec_asi_reaChanging(value)
				Me.SendPropertyChanging
				Me._fec_asi_rea = value
				Me.SendPropertyChanged("fec_asi_rea")
				Me.Onfec_asi_reaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_id_eje", DbType:="Int NOT NULL")>  _
	Public Property id_eje() As Integer
		Get
			Return Me._id_eje
		End Get
		Set
			If ((Me._id_eje = value)  _
						= false) Then
				If Me._eje.HasLoadedOrAssignedValue Then
					Throw New System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException()
				End If
				Me.Onid_ejeChanging(value)
				Me.SendPropertyChanging
				Me._id_eje = value
				Me.SendPropertyChanged("id_eje")
				Me.Onid_ejeChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="deu_cls_has_cls", Storage:="_deu_cls", ThisKey:="deu_ide", OtherKey:="deu_ide", IsForeignKey:=true)>  _
	Public Property deu_cls() As deu_cls
		Get
			Return Me._deu_cls.Entity
		End Get
		Set
			Dim previousValue As deu_cls = Me._deu_cls.Entity
			If ((Object.Equals(previousValue, value) = false)  _
						OrElse (Me._deu_cls.HasLoadedOrAssignedValue = false)) Then
				Me.SendPropertyChanging
				If ((previousValue Is Nothing)  _
							= false) Then
					Me._deu_cls.Entity = Nothing
					previousValue.has_cls.Remove(Me)
				End If
				Me._deu_cls.Entity = value
				If ((value Is Nothing)  _
							= false) Then
					value.has_cls.Add(Me)
					Me._deu_ide = value.deu_ide
				Else
					Me._deu_ide = CType(Nothing, String)
				End If
				Me.SendPropertyChanged("deu_cls")
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="eje_cls_has_cls", Storage:="_eje", ThisKey:="id_eje", OtherKey:="id_eje", IsForeignKey:=true)>  _
	Public Property eje() As eje_cls
		Get
			Return Me._eje.Entity
		End Get
		Set
			Dim previousValue As eje_cls = Me._eje.Entity
			If ((Object.Equals(previousValue, value) = false)  _
						OrElse (Me._eje.HasLoadedOrAssignedValue = false)) Then
				Me.SendPropertyChanging
				If ((previousValue Is Nothing)  _
							= false) Then
					Me._eje.Entity = Nothing
					previousValue.has_cls.Remove(Me)
				End If
				Me._eje.Entity = value
				If ((value Is Nothing)  _
							= false) Then
					value.has_cls.Add(Me)
					Me._id_eje = value.id_eje
				Else
					Me._id_eje = CType(Nothing, Integer)
				End If
				Me.SendPropertyChanged("eje")
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="eje_cls_has_cls1", Storage:="_eje1", ThisKey:="id_eje_ant", OtherKey:="id_eje", IsForeignKey:=true)>  _
	Public Property eje1() As eje_cls
		Get
			Return Me._eje1.Entity
		End Get
		Set
			Dim previousValue As eje_cls = Me._eje1.Entity
			If ((Object.Equals(previousValue, value) = false)  _
						OrElse (Me._eje1.HasLoadedOrAssignedValue = false)) Then
				Me.SendPropertyChanging
				If ((previousValue Is Nothing)  _
							= false) Then
					Me._eje1.Entity = Nothing
					previousValue.has_cls1.Remove(Me)
				End If
				Me._eje1.Entity = value
				If ((value Is Nothing)  _
							= false) Then
					value.has_cls1.Add(Me)
					Me._id_eje_ant = value.id_eje
				Else
					Me._id_eje_ant = CType(Nothing, Nullable(Of Integer))
				End If
				Me.SendPropertyChanged("eje1")
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="eje_cls_has_cls2", Storage:="_eje_cls", ThisKey:="id_eje_nue", OtherKey:="id_eje", IsForeignKey:=true)>  _
	Public Property eje_cls() As eje_cls
		Get
			Return Me._eje_cls.Entity
		End Get
		Set
			Dim previousValue As eje_cls = Me._eje_cls.Entity
			If ((Object.Equals(previousValue, value) = false)  _
						OrElse (Me._eje_cls.HasLoadedOrAssignedValue = false)) Then
				Me.SendPropertyChanging
				If ((previousValue Is Nothing)  _
							= false) Then
					Me._eje_cls.Entity = Nothing
					previousValue.has_cls2.Remove(Me)
				End If
				Me._eje_cls.Entity = value
				If ((value Is Nothing)  _
							= false) Then
					value.has_cls2.Add(Me)
					Me._id_eje_nue = value.id_eje
				Else
					Me._id_eje_nue = CType(Nothing, Nullable(Of Integer))
				End If
				Me.SendPropertyChanged("eje_cls")
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.HIS_ERR")>  _
Partial Public Class HIS_ERR_cls
	
	Private _Date_Time As Date
	
	Private _ErrorNumber As System.Nullable(Of Integer)
	
	Private _ErrorSeverity As System.Nullable(Of Integer)
	
	Private _ErrorState As System.Nullable(Of Integer)
	
	Private _ErrorProcedure As String
	
	Private _ErrorLine As System.Nullable(Of Integer)
	
	Private _ErrorMessage As String
	
	Public Sub New()
		MyBase.New
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="[Date-Time]", Storage:="_Date_Time", DbType:="DateTime NOT NULL")>  _
	Public Property Date_Time() As Date
		Get
			Return Me._Date_Time
		End Get
		Set
			If ((Me._Date_Time = value)  _
						= false) Then
				Me._Date_Time = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ErrorNumber", DbType:="Int")>  _
	Public Property ErrorNumber() As System.Nullable(Of Integer)
		Get
			Return Me._ErrorNumber
		End Get
		Set
			If (Me._ErrorNumber.Equals(value) = false) Then
				Me._ErrorNumber = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ErrorSeverity", DbType:="Int")>  _
	Public Property ErrorSeverity() As System.Nullable(Of Integer)
		Get
			Return Me._ErrorSeverity
		End Get
		Set
			If (Me._ErrorSeverity.Equals(value) = false) Then
				Me._ErrorSeverity = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ErrorState", DbType:="Int")>  _
	Public Property ErrorState() As System.Nullable(Of Integer)
		Get
			Return Me._ErrorState
		End Get
		Set
			If (Me._ErrorState.Equals(value) = false) Then
				Me._ErrorState = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ErrorProcedure", DbType:="NVarChar(128)")>  _
	Public Property ErrorProcedure() As String
		Get
			Return Me._ErrorProcedure
		End Get
		Set
			If (String.Equals(Me._ErrorProcedure, value) = false) Then
				Me._ErrorProcedure = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ErrorLine", DbType:="Int")>  _
	Public Property ErrorLine() As System.Nullable(Of Integer)
		Get
			Return Me._ErrorLine
		End Get
		Set
			If (Me._ErrorLine.Equals(value) = false) Then
				Me._ErrorLine = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ErrorMessage", DbType:="NVarChar(4000)")>  _
	Public Property ErrorMessage() As String
		Get
			Return Me._ErrorMessage
		End Get
		Set
			If (String.Equals(Me._ErrorMessage, value) = false) Then
				Me._ErrorMessage = value
			End If
		End Set
	End Property
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.hre")>  _
Partial Public Class hre_cls
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _id_hre As Decimal
	
	Private _id_eje As Integer
	
	Private _hre_fec As Date
	
	Private _hre_mna_tde As Char
	
	Private _hre_fec_ges As System.Nullable(Of Date)
	
	Private _hre_hor_ges As System.Nullable(Of Date)
	
	Private _cxp_cls As EntitySet(Of cxp_cls)
	
	Private _drc_cls As EntitySet(Of drc_cls)
	
	Private _gga_cls As EntitySet(Of gga_cls)
	
	Private _ing_cls As EntitySet(Of ing_cls)
	
	Private _nce_cls As EntitySet(Of nce_cls)
	
	Private _eje_cls As EntityRef(Of eje_cls)
	
    #Region "Definiciones de métodos de extensibilidad"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub Onid_hreChanging(value As Decimal)
    End Sub
    Partial Private Sub Onid_hreChanged()
    End Sub
    Partial Private Sub Onid_ejeChanging(value As Integer)
    End Sub
    Partial Private Sub Onid_ejeChanged()
    End Sub
    Partial Private Sub Onhre_fecChanging(value As Date)
    End Sub
    Partial Private Sub Onhre_fecChanged()
    End Sub
    Partial Private Sub Onhre_mna_tdeChanging(value As Char)
    End Sub
    Partial Private Sub Onhre_mna_tdeChanged()
    End Sub
    Partial Private Sub Onhre_fec_gesChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub Onhre_fec_gesChanged()
    End Sub
    Partial Private Sub Onhre_hor_gesChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub Onhre_hor_gesChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		Me._cxp_cls = New EntitySet(Of cxp_cls)(AddressOf Me.attach_cxp_cls, AddressOf Me.detach_cxp_cls)
		Me._drc_cls = New EntitySet(Of drc_cls)(AddressOf Me.attach_drc_cls, AddressOf Me.detach_drc_cls)
		Me._gga_cls = New EntitySet(Of gga_cls)(AddressOf Me.attach_gga_cls, AddressOf Me.detach_gga_cls)
		Me._ing_cls = New EntitySet(Of ing_cls)(AddressOf Me.attach_ing_cls, AddressOf Me.detach_ing_cls)
		Me._nce_cls = New EntitySet(Of nce_cls)(AddressOf Me.attach_nce_cls, AddressOf Me.detach_nce_cls)
		Me._eje_cls = CType(Nothing, EntityRef(Of eje_cls))
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_id_hre", AutoSync:=AutoSync.OnInsert, DbType:="Decimal(5,0) NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property id_hre() As Decimal
		Get
			Return Me._id_hre
		End Get
		Set
			If ((Me._id_hre = value)  _
						= false) Then
				Me.Onid_hreChanging(value)
				Me.SendPropertyChanging
				Me._id_hre = value
				Me.SendPropertyChanged("id_hre")
				Me.Onid_hreChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_id_eje", DbType:="Int NOT NULL")>  _
	Public Property id_eje() As Integer
		Get
			Return Me._id_eje
		End Get
		Set
			If ((Me._id_eje = value)  _
						= false) Then
				If Me._eje_cls.HasLoadedOrAssignedValue Then
					Throw New System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException()
				End If
				Me.Onid_ejeChanging(value)
				Me.SendPropertyChanging
				Me._id_eje = value
				Me.SendPropertyChanged("id_eje")
				Me.Onid_ejeChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_hre_fec", DbType:="DateTime NOT NULL")>  _
	Public Property hre_fec() As Date
		Get
			Return Me._hre_fec
		End Get
		Set
			If ((Me._hre_fec = value)  _
						= false) Then
				Me.Onhre_fecChanging(value)
				Me.SendPropertyChanging
				Me._hre_fec = value
				Me.SendPropertyChanged("hre_fec")
				Me.Onhre_fecChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_hre_mna_tde", DbType:="Char(1) NOT NULL")>  _
	Public Property hre_mna_tde() As Char
		Get
			Return Me._hre_mna_tde
		End Get
		Set
			If ((Me._hre_mna_tde = value)  _
						= false) Then
				Me.Onhre_mna_tdeChanging(value)
				Me.SendPropertyChanging
				Me._hre_mna_tde = value
				Me.SendPropertyChanged("hre_mna_tde")
				Me.Onhre_mna_tdeChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_hre_fec_ges", DbType:="DateTime")>  _
	Public Property hre_fec_ges() As System.Nullable(Of Date)
		Get
			Return Me._hre_fec_ges
		End Get
		Set
			If (Me._hre_fec_ges.Equals(value) = false) Then
				Me.Onhre_fec_gesChanging(value)
				Me.SendPropertyChanging
				Me._hre_fec_ges = value
				Me.SendPropertyChanged("hre_fec_ges")
				Me.Onhre_fec_gesChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_hre_hor_ges", DbType:="DateTime")>  _
	Public Property hre_hor_ges() As System.Nullable(Of Date)
		Get
			Return Me._hre_hor_ges
		End Get
		Set
			If (Me._hre_hor_ges.Equals(value) = false) Then
				Me.Onhre_hor_gesChanging(value)
				Me.SendPropertyChanging
				Me._hre_hor_ges = value
				Me.SendPropertyChanged("hre_hor_ges")
				Me.Onhre_hor_gesChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="hre_cls_cxp_cls", Storage:="_cxp_cls", ThisKey:="id_hre", OtherKey:="id_hre")>  _
	Public Property cxp_cls() As EntitySet(Of cxp_cls)
		Get
			Return Me._cxp_cls
		End Get
		Set
			Me._cxp_cls.Assign(value)
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="hre_cls_drc_cls", Storage:="_drc_cls", ThisKey:="id_hre", OtherKey:="id_hre")>  _
	Public Property drc_cls() As EntitySet(Of drc_cls)
		Get
			Return Me._drc_cls
		End Get
		Set
			Me._drc_cls.Assign(value)
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="hre_cls_gga_cls", Storage:="_gga_cls", ThisKey:="id_hre", OtherKey:="id_hre")>  _
	Public Property gga_cls() As EntitySet(Of gga_cls)
		Get
			Return Me._gga_cls
		End Get
		Set
			Me._gga_cls.Assign(value)
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="hre_cls_ing_cls", Storage:="_ing_cls", ThisKey:="id_hre", OtherKey:="id_hre")>  _
	Public Property ing_cls() As EntitySet(Of ing_cls)
		Get
			Return Me._ing_cls
		End Get
		Set
			Me._ing_cls.Assign(value)
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="hre_cls_nce_cls", Storage:="_nce_cls", ThisKey:="id_hre", OtherKey:="id_hre")>  _
	Public Property nce_cls() As EntitySet(Of nce_cls)
		Get
			Return Me._nce_cls
		End Get
		Set
			Me._nce_cls.Assign(value)
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="eje_cls_hre_cls", Storage:="_eje_cls", ThisKey:="id_eje", OtherKey:="id_eje", IsForeignKey:=true)>  _
	Public Property eje_cls() As eje_cls
		Get
			Return Me._eje_cls.Entity
		End Get
		Set
			Dim previousValue As eje_cls = Me._eje_cls.Entity
			If ((Object.Equals(previousValue, value) = false)  _
						OrElse (Me._eje_cls.HasLoadedOrAssignedValue = false)) Then
				Me.SendPropertyChanging
				If ((previousValue Is Nothing)  _
							= false) Then
					Me._eje_cls.Entity = Nothing
					previousValue.hre_cls.Remove(Me)
				End If
				Me._eje_cls.Entity = value
				If ((value Is Nothing)  _
							= false) Then
					value.hre_cls.Add(Me)
					Me._id_eje = value.id_eje
				Else
					Me._id_eje = CType(Nothing, Integer)
				End If
				Me.SendPropertyChanged("eje_cls")
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
	
	Private Sub attach_cxp_cls(ByVal entity As cxp_cls)
		Me.SendPropertyChanging
		entity.hre_cls = Me
	End Sub
	
	Private Sub detach_cxp_cls(ByVal entity As cxp_cls)
		Me.SendPropertyChanging
		entity.hre_cls = Nothing
	End Sub
	
	Private Sub attach_drc_cls(ByVal entity As drc_cls)
		Me.SendPropertyChanging
		entity.hre_cls = Me
	End Sub
	
	Private Sub detach_drc_cls(ByVal entity As drc_cls)
		Me.SendPropertyChanging
		entity.hre_cls = Nothing
	End Sub
	
	Private Sub attach_gga_cls(ByVal entity As gga_cls)
		Me.SendPropertyChanging
		entity.hre_cls = Me
	End Sub
	
	Private Sub detach_gga_cls(ByVal entity As gga_cls)
		Me.SendPropertyChanging
		entity.hre_cls = Nothing
	End Sub
	
	Private Sub attach_ing_cls(ByVal entity As ing_cls)
		Me.SendPropertyChanging
		entity.hre_cls = Me
	End Sub
	
	Private Sub detach_ing_cls(ByVal entity As ing_cls)
		Me.SendPropertyChanging
		entity.hre_cls = Nothing
	End Sub
	
	Private Sub attach_nce_cls(ByVal entity As nce_cls)
		Me.SendPropertyChanging
		entity.hre_cls = Me
	End Sub
	
	Private Sub detach_nce_cls(ByVal entity As nce_cls)
		Me.SendPropertyChanging
		entity.hre_cls = Nothing
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.icv")>  _
Partial Public Class icv_cls
	
	Private _id_suc As Integer
	
	Private _can_cli As Decimal
	
	Private _can_ddr As Decimal
	
	Private _opo_mto_tra As Decimal
	
	Private _opo_mto_no_tra As Decimal
	
	Private _por_cen As Decimal
	
	Private _tot_col As Decimal
	
	Private _car_vig As Decimal
	
	Private _can_car_vig As Decimal
	
	Private _can_car_can As Decimal
	
	Private _car_can As Decimal
	
	Private _can_car_mor As Decimal
	
	Private _car_mor As Decimal
	
	Private _can_car_mor_sup As Decimal
	
	Private _car_mor_sup As Decimal
	
	Private _can_car_prt As Decimal
	
	Private _car_prt As Decimal
	
	Private _can_car_cob_jud As Decimal
	
	Private _car_cob_jud As Decimal
	
	Private _car_mor_no_tra As Decimal
	
	Private _tot_ope As Decimal
	
	Private _fec_prc As Date
	
	Public Sub New()
		MyBase.New
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_id_suc", DbType:="Int NOT NULL")>  _
	Public Property id_suc() As Integer
		Get
			Return Me._id_suc
		End Get
		Set
			If ((Me._id_suc = value)  _
						= false) Then
				Me._id_suc = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_can_cli", DbType:="Decimal(10,0) NOT NULL")>  _
	Public Property can_cli() As Decimal
		Get
			Return Me._can_cli
		End Get
		Set
			If ((Me._can_cli = value)  _
						= false) Then
				Me._can_cli = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_can_ddr", DbType:="Decimal(10,0) NOT NULL")>  _
	Public Property can_ddr() As Decimal
		Get
			Return Me._can_ddr
		End Get
		Set
			If ((Me._can_ddr = value)  _
						= false) Then
				Me._can_ddr = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_opo_mto_tra", DbType:="Money NOT NULL")>  _
	Public Property opo_mto_tra() As Decimal
		Get
			Return Me._opo_mto_tra
		End Get
		Set
			If ((Me._opo_mto_tra = value)  _
						= false) Then
				Me._opo_mto_tra = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_opo_mto_no_tra", DbType:="Money NOT NULL")>  _
	Public Property opo_mto_no_tra() As Decimal
		Get
			Return Me._opo_mto_no_tra
		End Get
		Set
			If ((Me._opo_mto_no_tra = value)  _
						= false) Then
				Me._opo_mto_no_tra = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_por_cen", DbType:="Decimal(5,2) NOT NULL")>  _
	Public Property por_cen() As Decimal
		Get
			Return Me._por_cen
		End Get
		Set
			If ((Me._por_cen = value)  _
						= false) Then
				Me._por_cen = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_tot_col", DbType:="Money NOT NULL")>  _
	Public Property tot_col() As Decimal
		Get
			Return Me._tot_col
		End Get
		Set
			If ((Me._tot_col = value)  _
						= false) Then
				Me._tot_col = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_car_vig", DbType:="Money NOT NULL")>  _
	Public Property car_vig() As Decimal
		Get
			Return Me._car_vig
		End Get
		Set
			If ((Me._car_vig = value)  _
						= false) Then
				Me._car_vig = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_can_car_vig", DbType:="Decimal(10,0) NOT NULL")>  _
	Public Property can_car_vig() As Decimal
		Get
			Return Me._can_car_vig
		End Get
		Set
			If ((Me._can_car_vig = value)  _
						= false) Then
				Me._can_car_vig = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_can_car_can", DbType:="Decimal(10,0) NOT NULL")>  _
	Public Property can_car_can() As Decimal
		Get
			Return Me._can_car_can
		End Get
		Set
			If ((Me._can_car_can = value)  _
						= false) Then
				Me._can_car_can = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_car_can", DbType:="Money NOT NULL")>  _
	Public Property car_can() As Decimal
		Get
			Return Me._car_can
		End Get
		Set
			If ((Me._car_can = value)  _
						= false) Then
				Me._car_can = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_can_car_mor", DbType:="Decimal(10,0) NOT NULL")>  _
	Public Property can_car_mor() As Decimal
		Get
			Return Me._can_car_mor
		End Get
		Set
			If ((Me._can_car_mor = value)  _
						= false) Then
				Me._can_car_mor = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_car_mor", DbType:="Money NOT NULL")>  _
	Public Property car_mor() As Decimal
		Get
			Return Me._car_mor
		End Get
		Set
			If ((Me._car_mor = value)  _
						= false) Then
				Me._car_mor = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_can_car_mor_sup", DbType:="Decimal(10,0) NOT NULL")>  _
	Public Property can_car_mor_sup() As Decimal
		Get
			Return Me._can_car_mor_sup
		End Get
		Set
			If ((Me._can_car_mor_sup = value)  _
						= false) Then
				Me._can_car_mor_sup = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_car_mor_sup", DbType:="Money NOT NULL")>  _
	Public Property car_mor_sup() As Decimal
		Get
			Return Me._car_mor_sup
		End Get
		Set
			If ((Me._car_mor_sup = value)  _
						= false) Then
				Me._car_mor_sup = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_can_car_prt", DbType:="Decimal(10,0) NOT NULL")>  _
	Public Property can_car_prt() As Decimal
		Get
			Return Me._can_car_prt
		End Get
		Set
			If ((Me._can_car_prt = value)  _
						= false) Then
				Me._can_car_prt = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_car_prt", DbType:="Money NOT NULL")>  _
	Public Property car_prt() As Decimal
		Get
			Return Me._car_prt
		End Get
		Set
			If ((Me._car_prt = value)  _
						= false) Then
				Me._car_prt = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_can_car_cob_jud", DbType:="Decimal(10,0) NOT NULL")>  _
	Public Property can_car_cob_jud() As Decimal
		Get
			Return Me._can_car_cob_jud
		End Get
		Set
			If ((Me._can_car_cob_jud = value)  _
						= false) Then
				Me._can_car_cob_jud = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_car_cob_jud", DbType:="Money NOT NULL")>  _
	Public Property car_cob_jud() As Decimal
		Get
			Return Me._car_cob_jud
		End Get
		Set
			If ((Me._car_cob_jud = value)  _
						= false) Then
				Me._car_cob_jud = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_car_mor_no_tra", DbType:="Money NOT NULL")>  _
	Public Property car_mor_no_tra() As Decimal
		Get
			Return Me._car_mor_no_tra
		End Get
		Set
			If ((Me._car_mor_no_tra = value)  _
						= false) Then
				Me._car_mor_no_tra = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_tot_ope", DbType:="Decimal(10,0) NOT NULL")>  _
	Public Property tot_ope() As Decimal
		Get
			Return Me._tot_ope
		End Get
		Set
			If ((Me._tot_ope = value)  _
						= false) Then
				Me._tot_ope = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_fec_prc", DbType:="DateTime NOT NULL")>  _
	Public Property fec_prc() As Date
		Get
			Return Me._fec_prc
		End Get
		Set
			If ((Me._fec_prc = value)  _
						= false) Then
				Me._fec_prc = value
			End If
		End Set
	End Property
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.ing")>  _
Partial Public Class ing_cls
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _id_ing As Decimal
	
	Private _id_eje As System.Nullable(Of Integer)
	
	Private _id_hre As System.Nullable(Of Decimal)
	
	Private _ing_fec As System.Nullable(Of Date)
	
	Private _ing_obs As String
	
	Private _ing_pgo_hre As System.Nullable(Of Char)
	
	Private _ing_sis_fec As System.Nullable(Of Date)
	
	Private _id_cdp As System.Nullable(Of Decimal)
	
	Private _ing_sec_cls As EntitySet(Of ing_sec_cls)
	
	Private _cdp_cls As EntityRef(Of cdp_cls)
	
	Private _hre_cls As EntityRef(Of hre_cls)
	
	Private _eje_cls As EntityRef(Of eje_cls)
	
    #Region "Definiciones de métodos de extensibilidad"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub Onid_ingChanging(value As Decimal)
    End Sub
    Partial Private Sub Onid_ingChanged()
    End Sub
    Partial Private Sub Onid_ejeChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub Onid_ejeChanged()
    End Sub
    Partial Private Sub Onid_hreChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub Onid_hreChanged()
    End Sub
    Partial Private Sub Oning_fecChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub Oning_fecChanged()
    End Sub
    Partial Private Sub Oning_obsChanging(value As String)
    End Sub
    Partial Private Sub Oning_obsChanged()
    End Sub
    Partial Private Sub Oning_pgo_hreChanging(value As System.Nullable(Of Char))
    End Sub
    Partial Private Sub Oning_pgo_hreChanged()
    End Sub
    Partial Private Sub Oning_sis_fecChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub Oning_sis_fecChanged()
    End Sub
    Partial Private Sub Onid_cdpChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub Onid_cdpChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		Me._ing_sec_cls = New EntitySet(Of ing_sec_cls)(AddressOf Me.attach_ing_sec_cls, AddressOf Me.detach_ing_sec_cls)
		Me._cdp_cls = CType(Nothing, EntityRef(Of cdp_cls))
		Me._hre_cls = CType(Nothing, EntityRef(Of hre_cls))
		Me._eje_cls = CType(Nothing, EntityRef(Of eje_cls))
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_id_ing", AutoSync:=AutoSync.OnInsert, DbType:="Decimal(10,0) NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property id_ing() As Decimal
		Get
			Return Me._id_ing
		End Get
		Set
			If ((Me._id_ing = value)  _
						= false) Then
				Me.Onid_ingChanging(value)
				Me.SendPropertyChanging
				Me._id_ing = value
				Me.SendPropertyChanged("id_ing")
				Me.Onid_ingChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_id_eje", DbType:="Int")>  _
	Public Property id_eje() As System.Nullable(Of Integer)
		Get
			Return Me._id_eje
		End Get
		Set
			If (Me._id_eje.Equals(value) = false) Then
				If Me._eje_cls.HasLoadedOrAssignedValue Then
					Throw New System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException()
				End If
				Me.Onid_ejeChanging(value)
				Me.SendPropertyChanging
				Me._id_eje = value
				Me.SendPropertyChanged("id_eje")
				Me.Onid_ejeChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_id_hre", DbType:="Decimal(5,0)")>  _
	Public Property id_hre() As System.Nullable(Of Decimal)
		Get
			Return Me._id_hre
		End Get
		Set
			If (Me._id_hre.Equals(value) = false) Then
				If Me._hre_cls.HasLoadedOrAssignedValue Then
					Throw New System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException()
				End If
				Me.Onid_hreChanging(value)
				Me.SendPropertyChanging
				Me._id_hre = value
				Me.SendPropertyChanged("id_hre")
				Me.Onid_hreChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ing_fec", DbType:="DateTime")>  _
	Public Property ing_fec() As System.Nullable(Of Date)
		Get
			Return Me._ing_fec
		End Get
		Set
			If (Me._ing_fec.Equals(value) = false) Then
				Me.Oning_fecChanging(value)
				Me.SendPropertyChanging
				Me._ing_fec = value
				Me.SendPropertyChanged("ing_fec")
				Me.Oning_fecChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ing_obs", DbType:="VarChar(255)")>  _
	Public Property ing_obs() As String
		Get
			Return Me._ing_obs
		End Get
		Set
			If (String.Equals(Me._ing_obs, value) = false) Then
				Me.Oning_obsChanging(value)
				Me.SendPropertyChanging
				Me._ing_obs = value
				Me.SendPropertyChanged("ing_obs")
				Me.Oning_obsChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ing_pgo_hre", DbType:="Char(1)")>  _
	Public Property ing_pgo_hre() As System.Nullable(Of Char)
		Get
			Return Me._ing_pgo_hre
		End Get
		Set
			If (Me._ing_pgo_hre.Equals(value) = false) Then
				Me.Oning_pgo_hreChanging(value)
				Me.SendPropertyChanging
				Me._ing_pgo_hre = value
				Me.SendPropertyChanged("ing_pgo_hre")
				Me.Oning_pgo_hreChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ing_sis_fec", DbType:="DateTime")>  _
	Public Property ing_sis_fec() As System.Nullable(Of Date)
		Get
			Return Me._ing_sis_fec
		End Get
		Set
			If (Me._ing_sis_fec.Equals(value) = false) Then
				Me.Oning_sis_fecChanging(value)
				Me.SendPropertyChanging
				Me._ing_sis_fec = value
				Me.SendPropertyChanged("ing_sis_fec")
				Me.Oning_sis_fecChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_id_cdp", DbType:="Decimal(10,0)")>  _
	Public Property id_cdp() As System.Nullable(Of Decimal)
		Get
			Return Me._id_cdp
		End Get
		Set
			If (Me._id_cdp.Equals(value) = false) Then
				If Me._cdp_cls.HasLoadedOrAssignedValue Then
					Throw New System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException()
				End If
				Me.Onid_cdpChanging(value)
				Me.SendPropertyChanging
				Me._id_cdp = value
				Me.SendPropertyChanged("id_cdp")
				Me.Onid_cdpChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="ing_cls_ing_sec_cls", Storage:="_ing_sec_cls", ThisKey:="id_ing", OtherKey:="id_ing")>  _
	Public Property ing_sec_cls() As EntitySet(Of ing_sec_cls)
		Get
			Return Me._ing_sec_cls
		End Get
		Set
			Me._ing_sec_cls.Assign(value)
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="cdp_cls_ing_cls", Storage:="_cdp_cls", ThisKey:="id_cdp", OtherKey:="id_cdp", IsForeignKey:=true)>  _
	Public Property cdp_cls() As cdp_cls
		Get
			Return Me._cdp_cls.Entity
		End Get
		Set
			Dim previousValue As cdp_cls = Me._cdp_cls.Entity
			If ((Object.Equals(previousValue, value) = false)  _
						OrElse (Me._cdp_cls.HasLoadedOrAssignedValue = false)) Then
				Me.SendPropertyChanging
				If ((previousValue Is Nothing)  _
							= false) Then
					Me._cdp_cls.Entity = Nothing
					previousValue.ing_cls.Remove(Me)
				End If
				Me._cdp_cls.Entity = value
				If ((value Is Nothing)  _
							= false) Then
					value.ing_cls.Add(Me)
					Me._id_cdp = value.id_cdp
				Else
					Me._id_cdp = CType(Nothing, Nullable(Of Decimal))
				End If
				Me.SendPropertyChanged("cdp_cls")
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="hre_cls_ing_cls", Storage:="_hre_cls", ThisKey:="id_hre", OtherKey:="id_hre", IsForeignKey:=true)>  _
	Public Property hre_cls() As hre_cls
		Get
			Return Me._hre_cls.Entity
		End Get
		Set
			Dim previousValue As hre_cls = Me._hre_cls.Entity
			If ((Object.Equals(previousValue, value) = false)  _
						OrElse (Me._hre_cls.HasLoadedOrAssignedValue = false)) Then
				Me.SendPropertyChanging
				If ((previousValue Is Nothing)  _
							= false) Then
					Me._hre_cls.Entity = Nothing
					previousValue.ing_cls.Remove(Me)
				End If
				Me._hre_cls.Entity = value
				If ((value Is Nothing)  _
							= false) Then
					value.ing_cls.Add(Me)
					Me._id_hre = value.id_hre
				Else
					Me._id_hre = CType(Nothing, Nullable(Of Decimal))
				End If
				Me.SendPropertyChanged("hre_cls")
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="eje_cls_ing_cls", Storage:="_eje_cls", ThisKey:="id_eje", OtherKey:="id_eje", IsForeignKey:=true)>  _
	Public Property eje_cls() As eje_cls
		Get
			Return Me._eje_cls.Entity
		End Get
		Set
			Dim previousValue As eje_cls = Me._eje_cls.Entity
			If ((Object.Equals(previousValue, value) = false)  _
						OrElse (Me._eje_cls.HasLoadedOrAssignedValue = false)) Then
				Me.SendPropertyChanging
				If ((previousValue Is Nothing)  _
							= false) Then
					Me._eje_cls.Entity = Nothing
					previousValue.ing_cls.Remove(Me)
				End If
				Me._eje_cls.Entity = value
				If ((value Is Nothing)  _
							= false) Then
					value.ing_cls.Add(Me)
					Me._id_eje = value.id_eje
				Else
					Me._id_eje = CType(Nothing, Nullable(Of Integer))
				End If
				Me.SendPropertyChanged("eje_cls")
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
	
	Private Sub attach_ing_sec_cls(ByVal entity As ing_sec_cls)
		Me.SendPropertyChanging
		entity.ing_cls = Me
	End Sub
	
	Private Sub detach_ing_sec_cls(ByVal entity As ing_sec_cls)
		Me.SendPropertyChanging
		entity.ing_cls = Nothing
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.ing_sec")>  _
Partial Public Class ing_sec_cls
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _id_ing_sec As Decimal
	
	Private _cli_idc As String
	
	Private _id_ing As Decimal
	
	Private _id_doc As System.Nullable(Of Decimal)
	
	Private _id_cxc As System.Nullable(Of Decimal)
	
	Private _id_dpo As System.Nullable(Of Decimal)
	
	Private _id_nce As System.Nullable(Of Decimal)
	
	Private _id_egr_sec As System.Nullable(Of Decimal)
	
	Private _id_P_0053 As System.Nullable(Of Integer)
	
	Private _ing_mto_tot As System.Nullable(Of Decimal)
	
	Private _ing_mto_abo As System.Nullable(Of Decimal)
	
	Private _ing_mto_int As System.Nullable(Of Decimal)
	
	Private _ing_qpa As System.Nullable(Of Char)
	
	Private _ing_tot_par As System.Nullable(Of Char)
	
	Private _ing_rea_mon As System.Nullable(Of Decimal)
	
	Private _ing_fac_cam As System.Nullable(Of Decimal)
	
	Private _doc_sdo_cli As System.Nullable(Of Decimal)
	
	Private _doc_sdo_ddr As System.Nullable(Of Decimal)
	
	Private _ing_gen_exc As System.Nullable(Of Char)
	
	Private _ing_rev_cxc As String
	
	Private _ing_fac_cam_obs As System.Nullable(Of Decimal)
	
	Private _ing_pag_deu As System.Nullable(Of Char)
	
	Private _ing_vld_rcz As System.Nullable(Of Char)
	
	Private _ing_fec_prt_anl As System.Nullable(Of Date)
	
	Private _ing_pro As System.Nullable(Of Char)
	
	Private _ing_fec_ctb As System.Nullable(Of Date)
	
	Private _ing_tas_apl As System.Nullable(Of Decimal)
	
	Private _ing_int_dev As System.Nullable(Of Decimal)
	
	Private _doc_sdo_exc As System.Nullable(Of Decimal)
	
	Private _cli_cls As EntityRef(Of cli_cls)
	
	Private _cxc_cls As EntityRef(Of cxc_cls)
	
	Private _doc_cls As EntityRef(Of doc_cls)
	
	Private _dpo_cls As EntityRef(Of dpo_cls)
	
	Private _egr_sec_cls As EntityRef(Of egr_sec_cls)
	
	Private _ing_cls As EntityRef(Of ing_cls)
	
	Private _nce_cls As EntityRef(Of nce_cls)
	
	Private _P_0053_cls As EntityRef(Of P_0053_cls)
	
    #Region "Definiciones de métodos de extensibilidad"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub Onid_ing_secChanging(value As Decimal)
    End Sub
    Partial Private Sub Onid_ing_secChanged()
    End Sub
    Partial Private Sub Oncli_idcChanging(value As String)
    End Sub
    Partial Private Sub Oncli_idcChanged()
    End Sub
    Partial Private Sub Onid_ingChanging(value As Decimal)
    End Sub
    Partial Private Sub Onid_ingChanged()
    End Sub
    Partial Private Sub Onid_docChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub Onid_docChanged()
    End Sub
    Partial Private Sub Onid_cxcChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub Onid_cxcChanged()
    End Sub
    Partial Private Sub Onid_dpoChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub Onid_dpoChanged()
    End Sub
    Partial Private Sub Onid_nceChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub Onid_nceChanged()
    End Sub
    Partial Private Sub Onid_egr_secChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub Onid_egr_secChanged()
    End Sub
    Partial Private Sub Onid_P_0053Changing(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub Onid_P_0053Changed()
    End Sub
    Partial Private Sub Oning_mto_totChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub Oning_mto_totChanged()
    End Sub
    Partial Private Sub Oning_mto_aboChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub Oning_mto_aboChanged()
    End Sub
    Partial Private Sub Oning_mto_intChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub Oning_mto_intChanged()
    End Sub
    Partial Private Sub Oning_qpaChanging(value As System.Nullable(Of Char))
    End Sub
    Partial Private Sub Oning_qpaChanged()
    End Sub
    Partial Private Sub Oning_tot_parChanging(value As System.Nullable(Of Char))
    End Sub
    Partial Private Sub Oning_tot_parChanged()
    End Sub
    Partial Private Sub Oning_rea_monChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub Oning_rea_monChanged()
    End Sub
    Partial Private Sub Oning_fac_camChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub Oning_fac_camChanged()
    End Sub
    Partial Private Sub Ondoc_sdo_cliChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub Ondoc_sdo_cliChanged()
    End Sub
    Partial Private Sub Ondoc_sdo_ddrChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub Ondoc_sdo_ddrChanged()
    End Sub
    Partial Private Sub Oning_gen_excChanging(value As System.Nullable(Of Char))
    End Sub
    Partial Private Sub Oning_gen_excChanged()
    End Sub
    Partial Private Sub Oning_rev_cxcChanging(value As String)
    End Sub
    Partial Private Sub Oning_rev_cxcChanged()
    End Sub
    Partial Private Sub Oning_fac_cam_obsChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub Oning_fac_cam_obsChanged()
    End Sub
    Partial Private Sub Oning_pag_deuChanging(value As System.Nullable(Of Char))
    End Sub
    Partial Private Sub Oning_pag_deuChanged()
    End Sub
    Partial Private Sub Oning_vld_rczChanging(value As System.Nullable(Of Char))
    End Sub
    Partial Private Sub Oning_vld_rczChanged()
    End Sub
    Partial Private Sub Oning_fec_prt_anlChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub Oning_fec_prt_anlChanged()
    End Sub
    Partial Private Sub Oning_proChanging(value As System.Nullable(Of Char))
    End Sub
    Partial Private Sub Oning_proChanged()
    End Sub
    Partial Private Sub Oning_fec_ctbChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub Oning_fec_ctbChanged()
    End Sub
    Partial Private Sub Oning_tas_aplChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub Oning_tas_aplChanged()
    End Sub
    Partial Private Sub Oning_int_devChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub Oning_int_devChanged()
    End Sub
    Partial Private Sub Ondoc_sdo_excChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub Ondoc_sdo_excChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		Me._cli_cls = CType(Nothing, EntityRef(Of cli_cls))
		Me._cxc_cls = CType(Nothing, EntityRef(Of cxc_cls))
		Me._doc_cls = CType(Nothing, EntityRef(Of doc_cls))
		Me._dpo_cls = CType(Nothing, EntityRef(Of dpo_cls))
		Me._egr_sec_cls = CType(Nothing, EntityRef(Of egr_sec_cls))
		Me._ing_cls = CType(Nothing, EntityRef(Of ing_cls))
		Me._nce_cls = CType(Nothing, EntityRef(Of nce_cls))
		Me._P_0053_cls = CType(Nothing, EntityRef(Of P_0053_cls))
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_id_ing_sec", AutoSync:=AutoSync.OnInsert, DbType:="Decimal(10,0) NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property id_ing_sec() As Decimal
		Get
			Return Me._id_ing_sec
		End Get
		Set
			If ((Me._id_ing_sec = value)  _
						= false) Then
				Me.Onid_ing_secChanging(value)
				Me.SendPropertyChanging
				Me._id_ing_sec = value
				Me.SendPropertyChanged("id_ing_sec")
				Me.Onid_ing_secChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_cli_idc", DbType:="Char(12) NOT NULL", CanBeNull:=false)>  _
	Public Property cli_idc() As String
		Get
			Return Me._cli_idc
		End Get
		Set
			If (String.Equals(Me._cli_idc, value) = false) Then
				If Me._cli_cls.HasLoadedOrAssignedValue Then
					Throw New System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException()
				End If
				Me.Oncli_idcChanging(value)
				Me.SendPropertyChanging
				Me._cli_idc = value
				Me.SendPropertyChanged("cli_idc")
				Me.Oncli_idcChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_id_ing", DbType:="Decimal(10,0) NOT NULL")>  _
	Public Property id_ing() As Decimal
		Get
			Return Me._id_ing
		End Get
		Set
			If ((Me._id_ing = value)  _
						= false) Then
				If Me._ing_cls.HasLoadedOrAssignedValue Then
					Throw New System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException()
				End If
				Me.Onid_ingChanging(value)
				Me.SendPropertyChanging
				Me._id_ing = value
				Me.SendPropertyChanged("id_ing")
				Me.Onid_ingChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_id_doc", DbType:="Decimal(18,0)")>  _
	Public Property id_doc() As System.Nullable(Of Decimal)
		Get
			Return Me._id_doc
		End Get
		Set
			If (Me._id_doc.Equals(value) = false) Then
				If Me._doc_cls.HasLoadedOrAssignedValue Then
					Throw New System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException()
				End If
				Me.Onid_docChanging(value)
				Me.SendPropertyChanging
				Me._id_doc = value
				Me.SendPropertyChanged("id_doc")
				Me.Onid_docChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_id_cxc", DbType:="Decimal(10,0)")>  _
	Public Property id_cxc() As System.Nullable(Of Decimal)
		Get
			Return Me._id_cxc
		End Get
		Set
			If (Me._id_cxc.Equals(value) = false) Then
				If Me._cxc_cls.HasLoadedOrAssignedValue Then
					Throw New System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException()
				End If
				Me.Onid_cxcChanging(value)
				Me.SendPropertyChanging
				Me._id_cxc = value
				Me.SendPropertyChanged("id_cxc")
				Me.Onid_cxcChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_id_dpo", DbType:="Decimal(10,0)")>  _
	Public Property id_dpo() As System.Nullable(Of Decimal)
		Get
			Return Me._id_dpo
		End Get
		Set
			If (Me._id_dpo.Equals(value) = false) Then
				If Me._dpo_cls.HasLoadedOrAssignedValue Then
					Throw New System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException()
				End If
				Me.Onid_dpoChanging(value)
				Me.SendPropertyChanging
				Me._id_dpo = value
				Me.SendPropertyChanged("id_dpo")
				Me.Onid_dpoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_id_nce", DbType:="Decimal(10,0)")>  _
	Public Property id_nce() As System.Nullable(Of Decimal)
		Get
			Return Me._id_nce
		End Get
		Set
			If (Me._id_nce.Equals(value) = false) Then
				If Me._nce_cls.HasLoadedOrAssignedValue Then
					Throw New System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException()
				End If
				Me.Onid_nceChanging(value)
				Me.SendPropertyChanging
				Me._id_nce = value
				Me.SendPropertyChanged("id_nce")
				Me.Onid_nceChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_id_egr_sec", DbType:="Decimal(18,0)")>  _
	Public Property id_egr_sec() As System.Nullable(Of Decimal)
		Get
			Return Me._id_egr_sec
		End Get
		Set
			If (Me._id_egr_sec.Equals(value) = false) Then
				If Me._egr_sec_cls.HasLoadedOrAssignedValue Then
					Throw New System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException()
				End If
				Me.Onid_egr_secChanging(value)
				Me.SendPropertyChanging
				Me._id_egr_sec = value
				Me.SendPropertyChanged("id_egr_sec")
				Me.Onid_egr_secChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_id_P_0053", DbType:="Int")>  _
	Public Property id_P_0053() As System.Nullable(Of Integer)
		Get
			Return Me._id_P_0053
		End Get
		Set
			If (Me._id_P_0053.Equals(value) = false) Then
				If Me._P_0053_cls.HasLoadedOrAssignedValue Then
					Throw New System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException()
				End If
				Me.Onid_P_0053Changing(value)
				Me.SendPropertyChanging
				Me._id_P_0053 = value
				Me.SendPropertyChanged("id_P_0053")
				Me.Onid_P_0053Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ing_mto_tot", DbType:="Money")>  _
	Public Property ing_mto_tot() As System.Nullable(Of Decimal)
		Get
			Return Me._ing_mto_tot
		End Get
		Set
			If (Me._ing_mto_tot.Equals(value) = false) Then
				Me.Oning_mto_totChanging(value)
				Me.SendPropertyChanging
				Me._ing_mto_tot = value
				Me.SendPropertyChanged("ing_mto_tot")
				Me.Oning_mto_totChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ing_mto_abo", DbType:="Money")>  _
	Public Property ing_mto_abo() As System.Nullable(Of Decimal)
		Get
			Return Me._ing_mto_abo
		End Get
		Set
			If (Me._ing_mto_abo.Equals(value) = false) Then
				Me.Oning_mto_aboChanging(value)
				Me.SendPropertyChanging
				Me._ing_mto_abo = value
				Me.SendPropertyChanged("ing_mto_abo")
				Me.Oning_mto_aboChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ing_mto_int", DbType:="Money")>  _
	Public Property ing_mto_int() As System.Nullable(Of Decimal)
		Get
			Return Me._ing_mto_int
		End Get
		Set
			If (Me._ing_mto_int.Equals(value) = false) Then
				Me.Oning_mto_intChanging(value)
				Me.SendPropertyChanging
				Me._ing_mto_int = value
				Me.SendPropertyChanged("ing_mto_int")
				Me.Oning_mto_intChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ing_qpa", DbType:="Char(1)")>  _
	Public Property ing_qpa() As System.Nullable(Of Char)
		Get
			Return Me._ing_qpa
		End Get
		Set
			If (Me._ing_qpa.Equals(value) = false) Then
				Me.Oning_qpaChanging(value)
				Me.SendPropertyChanging
				Me._ing_qpa = value
				Me.SendPropertyChanged("ing_qpa")
				Me.Oning_qpaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ing_tot_par", DbType:="Char(1)")>  _
	Public Property ing_tot_par() As System.Nullable(Of Char)
		Get
			Return Me._ing_tot_par
		End Get
		Set
			If (Me._ing_tot_par.Equals(value) = false) Then
				Me.Oning_tot_parChanging(value)
				Me.SendPropertyChanging
				Me._ing_tot_par = value
				Me.SendPropertyChanged("ing_tot_par")
				Me.Oning_tot_parChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ing_rea_mon", DbType:="Money")>  _
	Public Property ing_rea_mon() As System.Nullable(Of Decimal)
		Get
			Return Me._ing_rea_mon
		End Get
		Set
			If (Me._ing_rea_mon.Equals(value) = false) Then
				Me.Oning_rea_monChanging(value)
				Me.SendPropertyChanging
				Me._ing_rea_mon = value
				Me.SendPropertyChanged("ing_rea_mon")
				Me.Oning_rea_monChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ing_fac_cam", DbType:="Money")>  _
	Public Property ing_fac_cam() As System.Nullable(Of Decimal)
		Get
			Return Me._ing_fac_cam
		End Get
		Set
			If (Me._ing_fac_cam.Equals(value) = false) Then
				Me.Oning_fac_camChanging(value)
				Me.SendPropertyChanging
				Me._ing_fac_cam = value
				Me.SendPropertyChanged("ing_fac_cam")
				Me.Oning_fac_camChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_doc_sdo_cli", DbType:="Money")>  _
	Public Property doc_sdo_cli() As System.Nullable(Of Decimal)
		Get
			Return Me._doc_sdo_cli
		End Get
		Set
			If (Me._doc_sdo_cli.Equals(value) = false) Then
				Me.Ondoc_sdo_cliChanging(value)
				Me.SendPropertyChanging
				Me._doc_sdo_cli = value
				Me.SendPropertyChanged("doc_sdo_cli")
				Me.Ondoc_sdo_cliChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_doc_sdo_ddr", DbType:="Money")>  _
	Public Property doc_sdo_ddr() As System.Nullable(Of Decimal)
		Get
			Return Me._doc_sdo_ddr
		End Get
		Set
			If (Me._doc_sdo_ddr.Equals(value) = false) Then
				Me.Ondoc_sdo_ddrChanging(value)
				Me.SendPropertyChanging
				Me._doc_sdo_ddr = value
				Me.SendPropertyChanged("doc_sdo_ddr")
				Me.Ondoc_sdo_ddrChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ing_gen_exc", DbType:="Char(1)")>  _
	Public Property ing_gen_exc() As System.Nullable(Of Char)
		Get
			Return Me._ing_gen_exc
		End Get
		Set
			If (Me._ing_gen_exc.Equals(value) = false) Then
				Me.Oning_gen_excChanging(value)
				Me.SendPropertyChanging
				Me._ing_gen_exc = value
				Me.SendPropertyChanged("ing_gen_exc")
				Me.Oning_gen_excChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ing_rev_cxc", DbType:="VarChar(2)")>  _
	Public Property ing_rev_cxc() As String
		Get
			Return Me._ing_rev_cxc
		End Get
		Set
			If (String.Equals(Me._ing_rev_cxc, value) = false) Then
				Me.Oning_rev_cxcChanging(value)
				Me.SendPropertyChanging
				Me._ing_rev_cxc = value
				Me.SendPropertyChanged("ing_rev_cxc")
				Me.Oning_rev_cxcChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ing_fac_cam_obs", DbType:="Money")>  _
	Public Property ing_fac_cam_obs() As System.Nullable(Of Decimal)
		Get
			Return Me._ing_fac_cam_obs
		End Get
		Set
			If (Me._ing_fac_cam_obs.Equals(value) = false) Then
				Me.Oning_fac_cam_obsChanging(value)
				Me.SendPropertyChanging
				Me._ing_fac_cam_obs = value
				Me.SendPropertyChanged("ing_fac_cam_obs")
				Me.Oning_fac_cam_obsChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ing_pag_deu", DbType:="Char(1)")>  _
	Public Property ing_pag_deu() As System.Nullable(Of Char)
		Get
			Return Me._ing_pag_deu
		End Get
		Set
			If (Me._ing_pag_deu.Equals(value) = false) Then
				Me.Oning_pag_deuChanging(value)
				Me.SendPropertyChanging
				Me._ing_pag_deu = value
				Me.SendPropertyChanged("ing_pag_deu")
				Me.Oning_pag_deuChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ing_vld_rcz", DbType:="Char(1)")>  _
	Public Property ing_vld_rcz() As System.Nullable(Of Char)
		Get
			Return Me._ing_vld_rcz
		End Get
		Set
			If (Me._ing_vld_rcz.Equals(value) = false) Then
				Me.Oning_vld_rczChanging(value)
				Me.SendPropertyChanging
				Me._ing_vld_rcz = value
				Me.SendPropertyChanged("ing_vld_rcz")
				Me.Oning_vld_rczChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ing_fec_prt_anl", DbType:="DateTime")>  _
	Public Property ing_fec_prt_anl() As System.Nullable(Of Date)
		Get
			Return Me._ing_fec_prt_anl
		End Get
		Set
			If (Me._ing_fec_prt_anl.Equals(value) = false) Then
				Me.Oning_fec_prt_anlChanging(value)
				Me.SendPropertyChanging
				Me._ing_fec_prt_anl = value
				Me.SendPropertyChanged("ing_fec_prt_anl")
				Me.Oning_fec_prt_anlChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ing_pro", DbType:="Char(1)")>  _
	Public Property ing_pro() As System.Nullable(Of Char)
		Get
			Return Me._ing_pro
		End Get
		Set
			If (Me._ing_pro.Equals(value) = false) Then
				Me.Oning_proChanging(value)
				Me.SendPropertyChanging
				Me._ing_pro = value
				Me.SendPropertyChanged("ing_pro")
				Me.Oning_proChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ing_fec_ctb", DbType:="DateTime")>  _
	Public Property ing_fec_ctb() As System.Nullable(Of Date)
		Get
			Return Me._ing_fec_ctb
		End Get
		Set
			If (Me._ing_fec_ctb.Equals(value) = false) Then
				Me.Oning_fec_ctbChanging(value)
				Me.SendPropertyChanging
				Me._ing_fec_ctb = value
				Me.SendPropertyChanged("ing_fec_ctb")
				Me.Oning_fec_ctbChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ing_tas_apl", DbType:="Decimal(5,2)")>  _
	Public Property ing_tas_apl() As System.Nullable(Of Decimal)
		Get
			Return Me._ing_tas_apl
		End Get
		Set
			If (Me._ing_tas_apl.Equals(value) = false) Then
				Me.Oning_tas_aplChanging(value)
				Me.SendPropertyChanging
				Me._ing_tas_apl = value
				Me.SendPropertyChanged("ing_tas_apl")
				Me.Oning_tas_aplChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ing_int_dev", DbType:="Money")>  _
	Public Property ing_int_dev() As System.Nullable(Of Decimal)
		Get
			Return Me._ing_int_dev
		End Get
		Set
			If (Me._ing_int_dev.Equals(value) = false) Then
				Me.Oning_int_devChanging(value)
				Me.SendPropertyChanging
				Me._ing_int_dev = value
				Me.SendPropertyChanged("ing_int_dev")
				Me.Oning_int_devChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_doc_sdo_exc", DbType:="Money")>  _
	Public Property doc_sdo_exc() As System.Nullable(Of Decimal)
		Get
			Return Me._doc_sdo_exc
		End Get
		Set
			If (Me._doc_sdo_exc.Equals(value) = false) Then
				Me.Ondoc_sdo_excChanging(value)
				Me.SendPropertyChanging
				Me._doc_sdo_exc = value
				Me.SendPropertyChanged("doc_sdo_exc")
				Me.Ondoc_sdo_excChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="cli_cls_ing_sec_cls", Storage:="_cli_cls", ThisKey:="cli_idc", OtherKey:="cli_idc", IsForeignKey:=true)>  _
	Public Property cli_cls() As cli_cls
		Get
			Return Me._cli_cls.Entity
		End Get
		Set
			Dim previousValue As cli_cls = Me._cli_cls.Entity
			If ((Object.Equals(previousValue, value) = false)  _
						OrElse (Me._cli_cls.HasLoadedOrAssignedValue = false)) Then
				Me.SendPropertyChanging
				If ((previousValue Is Nothing)  _
							= false) Then
					Me._cli_cls.Entity = Nothing
					previousValue.ing_sec_cls.Remove(Me)
				End If
				Me._cli_cls.Entity = value
				If ((value Is Nothing)  _
							= false) Then
					value.ing_sec_cls.Add(Me)
					Me._cli_idc = value.cli_idc
				Else
					Me._cli_idc = CType(Nothing, String)
				End If
				Me.SendPropertyChanged("cli_cls")
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="cxc_cls_ing_sec_cls", Storage:="_cxc_cls", ThisKey:="id_cxc", OtherKey:="id_cxc", IsForeignKey:=true)>  _
	Public Property cxc_cls() As cxc_cls
		Get
			Return Me._cxc_cls.Entity
		End Get
		Set
			Dim previousValue As cxc_cls = Me._cxc_cls.Entity
			If ((Object.Equals(previousValue, value) = false)  _
						OrElse (Me._cxc_cls.HasLoadedOrAssignedValue = false)) Then
				Me.SendPropertyChanging
				If ((previousValue Is Nothing)  _
							= false) Then
					Me._cxc_cls.Entity = Nothing
					previousValue.ing_sec_cls.Remove(Me)
				End If
				Me._cxc_cls.Entity = value
				If ((value Is Nothing)  _
							= false) Then
					value.ing_sec_cls.Add(Me)
					Me._id_cxc = value.id_cxc
				Else
					Me._id_cxc = CType(Nothing, Nullable(Of Decimal))
				End If
				Me.SendPropertyChanged("cxc_cls")
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="doc_cls_ing_sec_cls", Storage:="_doc_cls", ThisKey:="id_doc", OtherKey:="id_doc", IsForeignKey:=true)>  _
	Public Property doc_cls() As doc_cls
		Get
			Return Me._doc_cls.Entity
		End Get
		Set
			Dim previousValue As doc_cls = Me._doc_cls.Entity
			If ((Object.Equals(previousValue, value) = false)  _
						OrElse (Me._doc_cls.HasLoadedOrAssignedValue = false)) Then
				Me.SendPropertyChanging
				If ((previousValue Is Nothing)  _
							= false) Then
					Me._doc_cls.Entity = Nothing
					previousValue.ing_sec_cls.Remove(Me)
				End If
				Me._doc_cls.Entity = value
				If ((value Is Nothing)  _
							= false) Then
					value.ing_sec_cls.Add(Me)
					Me._id_doc = value.id_doc
				Else
					Me._id_doc = CType(Nothing, Nullable(Of Decimal))
				End If
				Me.SendPropertyChanged("doc_cls")
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="dpo_cls_ing_sec_cls", Storage:="_dpo_cls", ThisKey:="id_dpo", OtherKey:="id_dpo", IsForeignKey:=true)>  _
	Public Property dpo_cls() As dpo_cls
		Get
			Return Me._dpo_cls.Entity
		End Get
		Set
			Dim previousValue As dpo_cls = Me._dpo_cls.Entity
			If ((Object.Equals(previousValue, value) = false)  _
						OrElse (Me._dpo_cls.HasLoadedOrAssignedValue = false)) Then
				Me.SendPropertyChanging
				If ((previousValue Is Nothing)  _
							= false) Then
					Me._dpo_cls.Entity = Nothing
					previousValue.ing_sec_cls.Remove(Me)
				End If
				Me._dpo_cls.Entity = value
				If ((value Is Nothing)  _
							= false) Then
					value.ing_sec_cls.Add(Me)
					Me._id_dpo = value.id_dpo
				Else
					Me._id_dpo = CType(Nothing, Nullable(Of Decimal))
				End If
				Me.SendPropertyChanged("dpo_cls")
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="egr_sec_cls_ing_sec_cls", Storage:="_egr_sec_cls", ThisKey:="id_egr_sec", OtherKey:="id_egr_sec", IsForeignKey:=true)>  _
	Public Property egr_sec_cls() As egr_sec_cls
		Get
			Return Me._egr_sec_cls.Entity
		End Get
		Set
			Dim previousValue As egr_sec_cls = Me._egr_sec_cls.Entity
			If ((Object.Equals(previousValue, value) = false)  _
						OrElse (Me._egr_sec_cls.HasLoadedOrAssignedValue = false)) Then
				Me.SendPropertyChanging
				If ((previousValue Is Nothing)  _
							= false) Then
					Me._egr_sec_cls.Entity = Nothing
					previousValue.ing_sec_cls.Remove(Me)
				End If
				Me._egr_sec_cls.Entity = value
				If ((value Is Nothing)  _
							= false) Then
					value.ing_sec_cls.Add(Me)
					Me._id_egr_sec = value.id_egr_sec
				Else
					Me._id_egr_sec = CType(Nothing, Nullable(Of Decimal))
				End If
				Me.SendPropertyChanged("egr_sec_cls")
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="ing_cls_ing_sec_cls", Storage:="_ing_cls", ThisKey:="id_ing", OtherKey:="id_ing", IsForeignKey:=true)>  _
	Public Property ing_cls() As ing_cls
		Get
			Return Me._ing_cls.Entity
		End Get
		Set
			Dim previousValue As ing_cls = Me._ing_cls.Entity
			If ((Object.Equals(previousValue, value) = false)  _
						OrElse (Me._ing_cls.HasLoadedOrAssignedValue = false)) Then
				Me.SendPropertyChanging
				If ((previousValue Is Nothing)  _
							= false) Then
					Me._ing_cls.Entity = Nothing
					previousValue.ing_sec_cls.Remove(Me)
				End If
				Me._ing_cls.Entity = value
				If ((value Is Nothing)  _
							= false) Then
					value.ing_sec_cls.Add(Me)
					Me._id_ing = value.id_ing
				Else
					Me._id_ing = CType(Nothing, Decimal)
				End If
				Me.SendPropertyChanged("ing_cls")
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="nce_cls_ing_sec_cls", Storage:="_nce_cls", ThisKey:="id_nce", OtherKey:="id_nce", IsForeignKey:=true)>  _
	Public Property nce_cls() As nce_cls
		Get
			Return Me._nce_cls.Entity
		End Get
		Set
			Dim previousValue As nce_cls = Me._nce_cls.Entity
			If ((Object.Equals(previousValue, value) = false)  _
						OrElse (Me._nce_cls.HasLoadedOrAssignedValue = false)) Then
				Me.SendPropertyChanging
				If ((previousValue Is Nothing)  _
							= false) Then
					Me._nce_cls.Entity = Nothing
					previousValue.ing_sec_cls.Remove(Me)
				End If
				Me._nce_cls.Entity = value
				If ((value Is Nothing)  _
							= false) Then
					value.ing_sec_cls.Add(Me)
					Me._id_nce = value.id_nce
				Else
					Me._id_nce = CType(Nothing, Nullable(Of Decimal))
				End If
				Me.SendPropertyChanged("nce_cls")
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="P_0053_cls_ing_sec_cls", Storage:="_P_0053_cls", ThisKey:="id_P_0053", OtherKey:="id_P_0053", IsForeignKey:=true)>  _
	Public Property P_0053_cls() As P_0053_cls
		Get
			Return Me._P_0053_cls.Entity
		End Get
		Set
			Dim previousValue As P_0053_cls = Me._P_0053_cls.Entity
			If ((Object.Equals(previousValue, value) = false)  _
						OrElse (Me._P_0053_cls.HasLoadedOrAssignedValue = false)) Then
				Me.SendPropertyChanging
				If ((previousValue Is Nothing)  _
							= false) Then
					Me._P_0053_cls.Entity = Nothing
					previousValue.ing_sec_cls.Remove(Me)
				End If
				Me._P_0053_cls.Entity = value
				If ((value Is Nothing)  _
							= false) Then
					value.ing_sec_cls.Add(Me)
					Me._id_P_0053 = value.id_P_0053
				Else
					Me._id_P_0053 = CType(Nothing, Nullable(Of Integer))
				End If
				Me.SendPropertyChanged("P_0053_cls")
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.ldc")>  _
Partial Public Class ldc_cls
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _id_ldc As Decimal
	
	Private _cli_idc As String
	
	Private _ldc_fec_sol As System.Nullable(Of Date)
	
	Private _ldc_fec_rsn As System.Nullable(Of Date)
	
	Private _ldc_fec_vig_dde As System.Nullable(Of Date)
	
	Private _ldc_fec_vig_hta As System.Nullable(Of Date)
	
	Private _ldc_adm_mor As String
	
	Private _ldc_spr_col As System.Nullable(Of Decimal)
	
	Private _ldc_pto_spr As System.Nullable(Of Integer)
	
	Private _ldc_mto_sol As System.Nullable(Of Decimal)
	
	Private _ldc_mto_apb As System.Nullable(Of Decimal)
	
	Private _ldc_mto_ocp As System.Nullable(Of Decimal)
	
	Private _id_P_0029 As System.Nullable(Of Integer)
	
	Private _ldc_fec_rvn As System.Nullable(Of Date)
	
	Private _ldc_tip_com As System.Nullable(Of Char)
	
	Private _ldc_des_com As String
	
	Private _ldc_obs As String
	
	Private _ldc_por_exc As System.Nullable(Of Decimal)
	
	Private _id_p_0023 As System.Nullable(Of Integer)
	
	Private _ldc_tip_exc As System.Nullable(Of Char)
	
	Private _ldc_por_eec As System.Nullable(Of Decimal)
	
	Private _ldc_tip_eec As System.Nullable(Of Char)
	
	Private _ldc_fec_exc As System.Nullable(Of Date)
	
	Private _ldc_fec_eec As System.Nullable(Of Date)
	
	Private _LDC_ID_GPG As System.Nullable(Of Integer)
	
	Private _LDC_TIP_IDE_CLI As System.Nullable(Of Integer)
	
	Private _ACT_IMG_cls As EntitySet(Of ACT_IMG_cls)
	
	Private _apc_cls As EntitySet(Of apc_cls)
	
	Private _ope_cls As EntitySet(Of ope_cls)
	
	Private _sbl_cls As EntitySet(Of sbl_cls)
	
	Private _cli_cls As EntityRef(Of cli_cls)
	
	Private _P_0029_cls As EntityRef(Of P_0029_cls)
	
    #Region "Definiciones de métodos de extensibilidad"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub Onid_ldcChanging(value As Decimal)
    End Sub
    Partial Private Sub Onid_ldcChanged()
    End Sub
    Partial Private Sub Oncli_idcChanging(value As String)
    End Sub
    Partial Private Sub Oncli_idcChanged()
    End Sub
    Partial Private Sub Onldc_fec_solChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub Onldc_fec_solChanged()
    End Sub
    Partial Private Sub Onldc_fec_rsnChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub Onldc_fec_rsnChanged()
    End Sub
    Partial Private Sub Onldc_fec_vig_ddeChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub Onldc_fec_vig_ddeChanged()
    End Sub
    Partial Private Sub Onldc_fec_vig_htaChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub Onldc_fec_vig_htaChanged()
    End Sub
    Partial Private Sub Onldc_adm_morChanging(value As String)
    End Sub
    Partial Private Sub Onldc_adm_morChanged()
    End Sub
    Partial Private Sub Onldc_spr_colChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub Onldc_spr_colChanged()
    End Sub
    Partial Private Sub Onldc_pto_sprChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub Onldc_pto_sprChanged()
    End Sub
    Partial Private Sub Onldc_mto_solChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub Onldc_mto_solChanged()
    End Sub
    Partial Private Sub Onldc_mto_apbChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub Onldc_mto_apbChanged()
    End Sub
    Partial Private Sub Onldc_mto_ocpChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub Onldc_mto_ocpChanged()
    End Sub
    Partial Private Sub Onid_P_0029Changing(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub Onid_P_0029Changed()
    End Sub
    Partial Private Sub Onldc_fec_rvnChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub Onldc_fec_rvnChanged()
    End Sub
    Partial Private Sub Onldc_tip_comChanging(value As System.Nullable(Of Char))
    End Sub
    Partial Private Sub Onldc_tip_comChanged()
    End Sub
    Partial Private Sub Onldc_des_comChanging(value As String)
    End Sub
    Partial Private Sub Onldc_des_comChanged()
    End Sub
    Partial Private Sub Onldc_obsChanging(value As String)
    End Sub
    Partial Private Sub Onldc_obsChanged()
    End Sub
    Partial Private Sub Onldc_por_excChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub Onldc_por_excChanged()
    End Sub
    Partial Private Sub Onid_p_0023Changing(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub Onid_p_0023Changed()
    End Sub
    Partial Private Sub Onldc_tip_excChanging(value As System.Nullable(Of Char))
    End Sub
    Partial Private Sub Onldc_tip_excChanged()
    End Sub
    Partial Private Sub Onldc_por_eecChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub Onldc_por_eecChanged()
    End Sub
    Partial Private Sub Onldc_tip_eecChanging(value As System.Nullable(Of Char))
    End Sub
    Partial Private Sub Onldc_tip_eecChanged()
    End Sub
    Partial Private Sub Onldc_fec_excChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub Onldc_fec_excChanged()
    End Sub
    Partial Private Sub Onldc_fec_eecChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub Onldc_fec_eecChanged()
    End Sub
    Partial Private Sub OnLDC_ID_GPGChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnLDC_ID_GPGChanged()
    End Sub
    Partial Private Sub OnLDC_TIP_IDE_CLIChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnLDC_TIP_IDE_CLIChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		Me._ACT_IMG_cls = New EntitySet(Of ACT_IMG_cls)(AddressOf Me.attach_ACT_IMG_cls, AddressOf Me.detach_ACT_IMG_cls)
		Me._apc_cls = New EntitySet(Of apc_cls)(AddressOf Me.attach_apc_cls, AddressOf Me.detach_apc_cls)
		Me._ope_cls = New EntitySet(Of ope_cls)(AddressOf Me.attach_ope_cls, AddressOf Me.detach_ope_cls)
		Me._sbl_cls = New EntitySet(Of sbl_cls)(AddressOf Me.attach_sbl_cls, AddressOf Me.detach_sbl_cls)
		Me._cli_cls = CType(Nothing, EntityRef(Of cli_cls))
		Me._P_0029_cls = CType(Nothing, EntityRef(Of P_0029_cls))
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_id_ldc", AutoSync:=AutoSync.OnInsert, DbType:="Decimal(18,0) NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property id_ldc() As Decimal
		Get
			Return Me._id_ldc
		End Get
		Set
			If ((Me._id_ldc = value)  _
						= false) Then
				Me.Onid_ldcChanging(value)
				Me.SendPropertyChanging
				Me._id_ldc = value
				Me.SendPropertyChanged("id_ldc")
				Me.Onid_ldcChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_cli_idc", DbType:="Char(12) NOT NULL", CanBeNull:=false)>  _
	Public Property cli_idc() As String
		Get
			Return Me._cli_idc
		End Get
		Set
			If (String.Equals(Me._cli_idc, value) = false) Then
				If Me._cli_cls.HasLoadedOrAssignedValue Then
					Throw New System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException()
				End If
				Me.Oncli_idcChanging(value)
				Me.SendPropertyChanging
				Me._cli_idc = value
				Me.SendPropertyChanged("cli_idc")
				Me.Oncli_idcChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ldc_fec_sol", DbType:="DateTime")>  _
	Public Property ldc_fec_sol() As System.Nullable(Of Date)
		Get
			Return Me._ldc_fec_sol
		End Get
		Set
			If (Me._ldc_fec_sol.Equals(value) = false) Then
				Me.Onldc_fec_solChanging(value)
				Me.SendPropertyChanging
				Me._ldc_fec_sol = value
				Me.SendPropertyChanged("ldc_fec_sol")
				Me.Onldc_fec_solChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ldc_fec_rsn", DbType:="DateTime")>  _
	Public Property ldc_fec_rsn() As System.Nullable(Of Date)
		Get
			Return Me._ldc_fec_rsn
		End Get
		Set
			If (Me._ldc_fec_rsn.Equals(value) = false) Then
				Me.Onldc_fec_rsnChanging(value)
				Me.SendPropertyChanging
				Me._ldc_fec_rsn = value
				Me.SendPropertyChanged("ldc_fec_rsn")
				Me.Onldc_fec_rsnChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ldc_fec_vig_dde", DbType:="DateTime")>  _
	Public Property ldc_fec_vig_dde() As System.Nullable(Of Date)
		Get
			Return Me._ldc_fec_vig_dde
		End Get
		Set
			If (Me._ldc_fec_vig_dde.Equals(value) = false) Then
				Me.Onldc_fec_vig_ddeChanging(value)
				Me.SendPropertyChanging
				Me._ldc_fec_vig_dde = value
				Me.SendPropertyChanged("ldc_fec_vig_dde")
				Me.Onldc_fec_vig_ddeChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ldc_fec_vig_hta", DbType:="DateTime")>  _
	Public Property ldc_fec_vig_hta() As System.Nullable(Of Date)
		Get
			Return Me._ldc_fec_vig_hta
		End Get
		Set
			If (Me._ldc_fec_vig_hta.Equals(value) = false) Then
				Me.Onldc_fec_vig_htaChanging(value)
				Me.SendPropertyChanging
				Me._ldc_fec_vig_hta = value
				Me.SendPropertyChanged("ldc_fec_vig_hta")
				Me.Onldc_fec_vig_htaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ldc_adm_mor", DbType:="VarChar(1)")>  _
	Public Property ldc_adm_mor() As String
		Get
			Return Me._ldc_adm_mor
		End Get
		Set
			If (String.Equals(Me._ldc_adm_mor, value) = false) Then
				Me.Onldc_adm_morChanging(value)
				Me.SendPropertyChanging
				Me._ldc_adm_mor = value
				Me.SendPropertyChanged("ldc_adm_mor")
				Me.Onldc_adm_morChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ldc_spr_col", DbType:="Decimal(5,2)")>  _
	Public Property ldc_spr_col() As System.Nullable(Of Decimal)
		Get
			Return Me._ldc_spr_col
		End Get
		Set
			If (Me._ldc_spr_col.Equals(value) = false) Then
				Me.Onldc_spr_colChanging(value)
				Me.SendPropertyChanging
				Me._ldc_spr_col = value
				Me.SendPropertyChanged("ldc_spr_col")
				Me.Onldc_spr_colChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ldc_pto_spr", DbType:="Int")>  _
	Public Property ldc_pto_spr() As System.Nullable(Of Integer)
		Get
			Return Me._ldc_pto_spr
		End Get
		Set
			If (Me._ldc_pto_spr.Equals(value) = false) Then
				Me.Onldc_pto_sprChanging(value)
				Me.SendPropertyChanging
				Me._ldc_pto_spr = value
				Me.SendPropertyChanged("ldc_pto_spr")
				Me.Onldc_pto_sprChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ldc_mto_sol", DbType:="Money")>  _
	Public Property ldc_mto_sol() As System.Nullable(Of Decimal)
		Get
			Return Me._ldc_mto_sol
		End Get
		Set
			If (Me._ldc_mto_sol.Equals(value) = false) Then
				Me.Onldc_mto_solChanging(value)
				Me.SendPropertyChanging
				Me._ldc_mto_sol = value
				Me.SendPropertyChanged("ldc_mto_sol")
				Me.Onldc_mto_solChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ldc_mto_apb", DbType:="Money")>  _
	Public Property ldc_mto_apb() As System.Nullable(Of Decimal)
		Get
			Return Me._ldc_mto_apb
		End Get
		Set
			If (Me._ldc_mto_apb.Equals(value) = false) Then
				Me.Onldc_mto_apbChanging(value)
				Me.SendPropertyChanging
				Me._ldc_mto_apb = value
				Me.SendPropertyChanged("ldc_mto_apb")
				Me.Onldc_mto_apbChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ldc_mto_ocp", DbType:="Money")>  _
	Public Property ldc_mto_ocp() As System.Nullable(Of Decimal)
		Get
			Return Me._ldc_mto_ocp
		End Get
		Set
			If (Me._ldc_mto_ocp.Equals(value) = false) Then
				Me.Onldc_mto_ocpChanging(value)
				Me.SendPropertyChanging
				Me._ldc_mto_ocp = value
				Me.SendPropertyChanged("ldc_mto_ocp")
				Me.Onldc_mto_ocpChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_id_P_0029", DbType:="Int")>  _
	Public Property id_P_0029() As System.Nullable(Of Integer)
		Get
			Return Me._id_P_0029
		End Get
		Set
			If (Me._id_P_0029.Equals(value) = false) Then
				If Me._P_0029_cls.HasLoadedOrAssignedValue Then
					Throw New System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException()
				End If
				Me.Onid_P_0029Changing(value)
				Me.SendPropertyChanging
				Me._id_P_0029 = value
				Me.SendPropertyChanged("id_P_0029")
				Me.Onid_P_0029Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ldc_fec_rvn", DbType:="DateTime")>  _
	Public Property ldc_fec_rvn() As System.Nullable(Of Date)
		Get
			Return Me._ldc_fec_rvn
		End Get
		Set
			If (Me._ldc_fec_rvn.Equals(value) = false) Then
				Me.Onldc_fec_rvnChanging(value)
				Me.SendPropertyChanging
				Me._ldc_fec_rvn = value
				Me.SendPropertyChanged("ldc_fec_rvn")
				Me.Onldc_fec_rvnChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ldc_tip_com", DbType:="Char(1)")>  _
	Public Property ldc_tip_com() As System.Nullable(Of Char)
		Get
			Return Me._ldc_tip_com
		End Get
		Set
			If (Me._ldc_tip_com.Equals(value) = false) Then
				Me.Onldc_tip_comChanging(value)
				Me.SendPropertyChanging
				Me._ldc_tip_com = value
				Me.SendPropertyChanged("ldc_tip_com")
				Me.Onldc_tip_comChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ldc_des_com", DbType:="VarChar(255)")>  _
	Public Property ldc_des_com() As String
		Get
			Return Me._ldc_des_com
		End Get
		Set
			If (String.Equals(Me._ldc_des_com, value) = false) Then
				Me.Onldc_des_comChanging(value)
				Me.SendPropertyChanging
				Me._ldc_des_com = value
				Me.SendPropertyChanged("ldc_des_com")
				Me.Onldc_des_comChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ldc_obs", DbType:="VarChar(255)")>  _
	Public Property ldc_obs() As String
		Get
			Return Me._ldc_obs
		End Get
		Set
			If (String.Equals(Me._ldc_obs, value) = false) Then
				Me.Onldc_obsChanging(value)
				Me.SendPropertyChanging
				Me._ldc_obs = value
				Me.SendPropertyChanged("ldc_obs")
				Me.Onldc_obsChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ldc_por_exc", DbType:="Decimal(18,2)")>  _
	Public Property ldc_por_exc() As System.Nullable(Of Decimal)
		Get
			Return Me._ldc_por_exc
		End Get
		Set
			If (Me._ldc_por_exc.Equals(value) = false) Then
				Me.Onldc_por_excChanging(value)
				Me.SendPropertyChanging
				Me._ldc_por_exc = value
				Me.SendPropertyChanged("ldc_por_exc")
				Me.Onldc_por_excChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_id_p_0023", DbType:="Int")>  _
	Public Property id_p_0023() As System.Nullable(Of Integer)
		Get
			Return Me._id_p_0023
		End Get
		Set
			If (Me._id_p_0023.Equals(value) = false) Then
				Me.Onid_p_0023Changing(value)
				Me.SendPropertyChanging
				Me._id_p_0023 = value
				Me.SendPropertyChanged("id_p_0023")
				Me.Onid_p_0023Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ldc_tip_exc", DbType:="Char(1)")>  _
	Public Property ldc_tip_exc() As System.Nullable(Of Char)
		Get
			Return Me._ldc_tip_exc
		End Get
		Set
			If (Me._ldc_tip_exc.Equals(value) = false) Then
				Me.Onldc_tip_excChanging(value)
				Me.SendPropertyChanging
				Me._ldc_tip_exc = value
				Me.SendPropertyChanged("ldc_tip_exc")
				Me.Onldc_tip_excChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ldc_por_eec", DbType:="Decimal(18,2)")>  _
	Public Property ldc_por_eec() As System.Nullable(Of Decimal)
		Get
			Return Me._ldc_por_eec
		End Get
		Set
			If (Me._ldc_por_eec.Equals(value) = false) Then
				Me.Onldc_por_eecChanging(value)
				Me.SendPropertyChanging
				Me._ldc_por_eec = value
				Me.SendPropertyChanged("ldc_por_eec")
				Me.Onldc_por_eecChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ldc_tip_eec", DbType:="Char(1)")>  _
	Public Property ldc_tip_eec() As System.Nullable(Of Char)
		Get
			Return Me._ldc_tip_eec
		End Get
		Set
			If (Me._ldc_tip_eec.Equals(value) = false) Then
				Me.Onldc_tip_eecChanging(value)
				Me.SendPropertyChanging
				Me._ldc_tip_eec = value
				Me.SendPropertyChanged("ldc_tip_eec")
				Me.Onldc_tip_eecChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ldc_fec_exc", DbType:="DateTime")>  _
	Public Property ldc_fec_exc() As System.Nullable(Of Date)
		Get
			Return Me._ldc_fec_exc
		End Get
		Set
			If (Me._ldc_fec_exc.Equals(value) = false) Then
				Me.Onldc_fec_excChanging(value)
				Me.SendPropertyChanging
				Me._ldc_fec_exc = value
				Me.SendPropertyChanged("ldc_fec_exc")
				Me.Onldc_fec_excChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ldc_fec_eec", DbType:="DateTime")>  _
	Public Property ldc_fec_eec() As System.Nullable(Of Date)
		Get
			Return Me._ldc_fec_eec
		End Get
		Set
			If (Me._ldc_fec_eec.Equals(value) = false) Then
				Me.Onldc_fec_eecChanging(value)
				Me.SendPropertyChanging
				Me._ldc_fec_eec = value
				Me.SendPropertyChanged("ldc_fec_eec")
				Me.Onldc_fec_eecChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LDC_ID_GPG", DbType:="Int")>  _
	Public Property LDC_ID_GPG() As System.Nullable(Of Integer)
		Get
			Return Me._LDC_ID_GPG
		End Get
		Set
			If (Me._LDC_ID_GPG.Equals(value) = false) Then
				Me.OnLDC_ID_GPGChanging(value)
				Me.SendPropertyChanging
				Me._LDC_ID_GPG = value
				Me.SendPropertyChanged("LDC_ID_GPG")
				Me.OnLDC_ID_GPGChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LDC_TIP_IDE_CLI", DbType:="Int")>  _
	Public Property LDC_TIP_IDE_CLI() As System.Nullable(Of Integer)
		Get
			Return Me._LDC_TIP_IDE_CLI
		End Get
		Set
			If (Me._LDC_TIP_IDE_CLI.Equals(value) = false) Then
				Me.OnLDC_TIP_IDE_CLIChanging(value)
				Me.SendPropertyChanging
				Me._LDC_TIP_IDE_CLI = value
				Me.SendPropertyChanged("LDC_TIP_IDE_CLI")
				Me.OnLDC_TIP_IDE_CLIChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="ldc_cls_ACT_IMG_cls", Storage:="_ACT_IMG_cls", ThisKey:="id_ldc", OtherKey:="id_ldc")>  _
	Public Property ACT_IMG_cls() As EntitySet(Of ACT_IMG_cls)
		Get
			Return Me._ACT_IMG_cls
		End Get
		Set
			Me._ACT_IMG_cls.Assign(value)
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="ldc_cls_apc_cls", Storage:="_apc_cls", ThisKey:="id_ldc", OtherKey:="id_ldc")>  _
	Public Property apc_cls() As EntitySet(Of apc_cls)
		Get
			Return Me._apc_cls
		End Get
		Set
			Me._apc_cls.Assign(value)
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="ldc_cls_ope_cls", Storage:="_ope_cls", ThisKey:="id_ldc", OtherKey:="id_ldc")>  _
	Public Property ope_cls() As EntitySet(Of ope_cls)
		Get
			Return Me._ope_cls
		End Get
		Set
			Me._ope_cls.Assign(value)
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="ldc_cls_sbl_cls", Storage:="_sbl_cls", ThisKey:="id_ldc", OtherKey:="id_ldc")>  _
	Public Property sbl_cls() As EntitySet(Of sbl_cls)
		Get
			Return Me._sbl_cls
		End Get
		Set
			Me._sbl_cls.Assign(value)
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="cli_cls_ldc_cls", Storage:="_cli_cls", ThisKey:="cli_idc", OtherKey:="cli_idc", IsForeignKey:=true)>  _
	Public Property cli_cls() As cli_cls
		Get
			Return Me._cli_cls.Entity
		End Get
		Set
			Dim previousValue As cli_cls = Me._cli_cls.Entity
			If ((Object.Equals(previousValue, value) = false)  _
						OrElse (Me._cli_cls.HasLoadedOrAssignedValue = false)) Then
				Me.SendPropertyChanging
				If ((previousValue Is Nothing)  _
							= false) Then
					Me._cli_cls.Entity = Nothing
					previousValue.ldc_cls.Remove(Me)
				End If
				Me._cli_cls.Entity = value
				If ((value Is Nothing)  _
							= false) Then
					value.ldc_cls.Add(Me)
					Me._cli_idc = value.cli_idc
				Else
					Me._cli_idc = CType(Nothing, String)
				End If
				Me.SendPropertyChanged("cli_cls")
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="P_0029_cls_ldc_cls", Storage:="_P_0029_cls", ThisKey:="id_P_0029", OtherKey:="id_P_0029", IsForeignKey:=true)>  _
	Public Property P_0029_cls() As P_0029_cls
		Get
			Return Me._P_0029_cls.Entity
		End Get
		Set
			Dim previousValue As P_0029_cls = Me._P_0029_cls.Entity
			If ((Object.Equals(previousValue, value) = false)  _
						OrElse (Me._P_0029_cls.HasLoadedOrAssignedValue = false)) Then
				Me.SendPropertyChanging
				If ((previousValue Is Nothing)  _
							= false) Then
					Me._P_0029_cls.Entity = Nothing
					previousValue.ldc_cls.Remove(Me)
				End If
				Me._P_0029_cls.Entity = value
				If ((value Is Nothing)  _
							= false) Then
					value.ldc_cls.Add(Me)
					Me._id_P_0029 = value.id_P_0029
				Else
					Me._id_P_0029 = CType(Nothing, Nullable(Of Integer))
				End If
				Me.SendPropertyChanged("P_0029_cls")
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
	
	Private Sub attach_ACT_IMG_cls(ByVal entity As ACT_IMG_cls)
		Me.SendPropertyChanging
		entity.ldc_cls = Me
	End Sub
	
	Private Sub detach_ACT_IMG_cls(ByVal entity As ACT_IMG_cls)
		Me.SendPropertyChanging
		entity.ldc_cls = Nothing
	End Sub
	
	Private Sub attach_apc_cls(ByVal entity As apc_cls)
		Me.SendPropertyChanging
		entity.ldc_cls = Me
	End Sub
	
	Private Sub detach_apc_cls(ByVal entity As apc_cls)
		Me.SendPropertyChanging
		entity.ldc_cls = Nothing
	End Sub
	
	Private Sub attach_ope_cls(ByVal entity As ope_cls)
		Me.SendPropertyChanging
		entity.ldc_cls = Me
	End Sub
	
	Private Sub detach_ope_cls(ByVal entity As ope_cls)
		Me.SendPropertyChanging
		entity.ldc_cls = Nothing
	End Sub
	
	Private Sub attach_sbl_cls(ByVal entity As sbl_cls)
		Me.SendPropertyChanging
		entity.ldc_cls = Me
	End Sub
	
	Private Sub detach_sbl_cls(ByVal entity As sbl_cls)
		Me.SendPropertyChanging
		entity.ldc_cls = Nothing
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.mpar")>  _
Partial Public Class mpar_cls
	
	Private _id As System.Nullable(Of Integer)
	
	Private _Descripcion As String
	
	Private _tipo As String
	
	Public Sub New()
		MyBase.New
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_id", DbType:="Int")>  _
	Public Property id() As System.Nullable(Of Integer)
		Get
			Return Me._id
		End Get
		Set
			If (Me._id.Equals(value) = false) Then
				Me._id = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Descripcion", DbType:="Char(50)")>  _
	Public Property Descripcion() As String
		Get
			Return Me._Descripcion
		End Get
		Set
			If (String.Equals(Me._Descripcion, value) = false) Then
				Me._Descripcion = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_tipo", DbType:="Char(5)")>  _
	Public Property tipo() As String
		Get
			Return Me._tipo
		End Get
		Set
			If (String.Equals(Me._tipo, value) = false) Then
				Me._tipo = value
			End If
		End Set
	End Property
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.nap")>  _
Partial Public Class nap_cls
	
	Private _avl_ida As String
	
	Private _pgr_num As String
	
	Public Sub New()
		MyBase.New
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_avl_ida", DbType:="VarChar(12) NOT NULL", CanBeNull:=false)>  _
	Public Property avl_ida() As String
		Get
			Return Me._avl_ida
		End Get
		Set
			If (String.Equals(Me._avl_ida, value) = false) Then
				Me._avl_ida = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pgr_num", DbType:="VarChar(20) NOT NULL", CanBeNull:=false)>  _
	Public Property pgr_num() As String
		Get
			Return Me._pgr_num
		End Get
		Set
			If (String.Equals(Me._pgr_num, value) = false) Then
				Me._pgr_num = value
			End If
		End Set
	End Property
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.nbc")>  _
Partial Public Class nbc_cls
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _id_nbc As Integer
	
	Private _cli_idc As String
	
	Private _id_sbc As Integer
	
	Private _nbc_cct As String
	
	Private _nbc_dep As System.Nullable(Of Char)
	
	Private _id_P_0312 As System.Nullable(Of Integer)
	
	Private _egr_sec_cls As EntitySet(Of egr_sec_cls)
	
	Private _opn_cls As EntitySet(Of opn_cls)
	
	Private _cli_cls As EntityRef(Of cli_cls)
	
	Private _P_0312_cls As EntityRef(Of P_0312_cls)
	
	Private _sbc_cls As EntityRef(Of sbc_cls)
	
    #Region "Definiciones de métodos de extensibilidad"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub Onid_nbcChanging(value As Integer)
    End Sub
    Partial Private Sub Onid_nbcChanged()
    End Sub
    Partial Private Sub Oncli_idcChanging(value As String)
    End Sub
    Partial Private Sub Oncli_idcChanged()
    End Sub
    Partial Private Sub Onid_sbcChanging(value As Integer)
    End Sub
    Partial Private Sub Onid_sbcChanged()
    End Sub
    Partial Private Sub Onnbc_cctChanging(value As String)
    End Sub
    Partial Private Sub Onnbc_cctChanged()
    End Sub
    Partial Private Sub Onnbc_depChanging(value As System.Nullable(Of Char))
    End Sub
    Partial Private Sub Onnbc_depChanged()
    End Sub
    Partial Private Sub Onid_P_0312Changing(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub Onid_P_0312Changed()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		Me._egr_sec_cls = New EntitySet(Of egr_sec_cls)(AddressOf Me.attach_egr_sec_cls, AddressOf Me.detach_egr_sec_cls)
		Me._opn_cls = New EntitySet(Of opn_cls)(AddressOf Me.attach_opn_cls, AddressOf Me.detach_opn_cls)
		Me._cli_cls = CType(Nothing, EntityRef(Of cli_cls))
		Me._P_0312_cls = CType(Nothing, EntityRef(Of P_0312_cls))
		Me._sbc_cls = CType(Nothing, EntityRef(Of sbc_cls))
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_id_nbc", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property id_nbc() As Integer
		Get
			Return Me._id_nbc
		End Get
		Set
			If ((Me._id_nbc = value)  _
						= false) Then
				Me.Onid_nbcChanging(value)
				Me.SendPropertyChanging
				Me._id_nbc = value
				Me.SendPropertyChanged("id_nbc")
				Me.Onid_nbcChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_cli_idc", DbType:="Char(12) NOT NULL", CanBeNull:=false)>  _
	Public Property cli_idc() As String
		Get
			Return Me._cli_idc
		End Get
		Set
			If (String.Equals(Me._cli_idc, value) = false) Then
				If Me._cli_cls.HasLoadedOrAssignedValue Then
					Throw New System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException()
				End If
				Me.Oncli_idcChanging(value)
				Me.SendPropertyChanging
				Me._cli_idc = value
				Me.SendPropertyChanged("cli_idc")
				Me.Oncli_idcChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_id_sbc", DbType:="Int NOT NULL")>  _
	Public Property id_sbc() As Integer
		Get
			Return Me._id_sbc
		End Get
		Set
			If ((Me._id_sbc = value)  _
						= false) Then
				If Me._sbc_cls.HasLoadedOrAssignedValue Then
					Throw New System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException()
				End If
				Me.Onid_sbcChanging(value)
				Me.SendPropertyChanging
				Me._id_sbc = value
				Me.SendPropertyChanged("id_sbc")
				Me.Onid_sbcChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_nbc_cct", DbType:="VarChar(50) NOT NULL", CanBeNull:=false)>  _
	Public Property nbc_cct() As String
		Get
			Return Me._nbc_cct
		End Get
		Set
			If (String.Equals(Me._nbc_cct, value) = false) Then
				Me.Onnbc_cctChanging(value)
				Me.SendPropertyChanging
				Me._nbc_cct = value
				Me.SendPropertyChanged("nbc_cct")
				Me.Onnbc_cctChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_nbc_dep", DbType:="Char(1)")>  _
	Public Property nbc_dep() As System.Nullable(Of Char)
		Get
			Return Me._nbc_dep
		End Get
		Set
			If (Me._nbc_dep.Equals(value) = false) Then
				Me.Onnbc_depChanging(value)
				Me.SendPropertyChanging
				Me._nbc_dep = value
				Me.SendPropertyChanged("nbc_dep")
				Me.Onnbc_depChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_id_P_0312", DbType:="Int")>  _
	Public Property id_P_0312() As System.Nullable(Of Integer)
		Get
			Return Me._id_P_0312
		End Get
		Set
			If (Me._id_P_0312.Equals(value) = false) Then
				If Me._P_0312_cls.HasLoadedOrAssignedValue Then
					Throw New System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException()
				End If
				Me.Onid_P_0312Changing(value)
				Me.SendPropertyChanging
				Me._id_P_0312 = value
				Me.SendPropertyChanged("id_P_0312")
				Me.Onid_P_0312Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="nbc_cls_egr_sec_cls", Storage:="_egr_sec_cls", ThisKey:="id_nbc", OtherKey:="id_bco")>  _
	Public Property egr_sec_cls() As EntitySet(Of egr_sec_cls)
		Get
			Return Me._egr_sec_cls
		End Get
		Set
			Me._egr_sec_cls.Assign(value)
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="nbc_cls_opn_cls", Storage:="_opn_cls", ThisKey:="id_nbc", OtherKey:="id_bco")>  _
	Public Property opn_cls() As EntitySet(Of opn_cls)
		Get
			Return Me._opn_cls
		End Get
		Set
			Me._opn_cls.Assign(value)
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="cli_cls_nbc_cls", Storage:="_cli_cls", ThisKey:="cli_idc", OtherKey:="cli_idc", IsForeignKey:=true)>  _
	Public Property cli_cls() As cli_cls
		Get
			Return Me._cli_cls.Entity
		End Get
		Set
			Dim previousValue As cli_cls = Me._cli_cls.Entity
			If ((Object.Equals(previousValue, value) = false)  _
						OrElse (Me._cli_cls.HasLoadedOrAssignedValue = false)) Then
				Me.SendPropertyChanging
				If ((previousValue Is Nothing)  _
							= false) Then
					Me._cli_cls.Entity = Nothing
					previousValue.nbc_cls.Remove(Me)
				End If
				Me._cli_cls.Entity = value
				If ((value Is Nothing)  _
							= false) Then
					value.nbc_cls.Add(Me)
					Me._cli_idc = value.cli_idc
				Else
					Me._cli_idc = CType(Nothing, String)
				End If
				Me.SendPropertyChanged("cli_cls")
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="P_0312_cls_nbc_cls", Storage:="_P_0312_cls", ThisKey:="id_P_0312", OtherKey:="id_P_0312", IsForeignKey:=true)>  _
	Public Property P_0312_cls() As P_0312_cls
		Get
			Return Me._P_0312_cls.Entity
		End Get
		Set
			Dim previousValue As P_0312_cls = Me._P_0312_cls.Entity
			If ((Object.Equals(previousValue, value) = false)  _
						OrElse (Me._P_0312_cls.HasLoadedOrAssignedValue = false)) Then
				Me.SendPropertyChanging
				If ((previousValue Is Nothing)  _
							= false) Then
					Me._P_0312_cls.Entity = Nothing
					previousValue.nbc_cls.Remove(Me)
				End If
				Me._P_0312_cls.Entity = value
				If ((value Is Nothing)  _
							= false) Then
					value.nbc_cls.Add(Me)
					Me._id_P_0312 = value.id_P_0312
				Else
					Me._id_P_0312 = CType(Nothing, Nullable(Of Integer))
				End If
				Me.SendPropertyChanged("P_0312_cls")
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="sbc_cls_nbc_cls", Storage:="_sbc_cls", ThisKey:="id_sbc", OtherKey:="id_sbc", IsForeignKey:=true)>  _
	Public Property sbc_cls() As sbc_cls
		Get
			Return Me._sbc_cls.Entity
		End Get
		Set
			Dim previousValue As sbc_cls = Me._sbc_cls.Entity
			If ((Object.Equals(previousValue, value) = false)  _
						OrElse (Me._sbc_cls.HasLoadedOrAssignedValue = false)) Then
				Me.SendPropertyChanging
				If ((previousValue Is Nothing)  _
							= false) Then
					Me._sbc_cls.Entity = Nothing
					previousValue.nbc_cls.Remove(Me)
				End If
				Me._sbc_cls.Entity = value
				If ((value Is Nothing)  _
							= false) Then
					value.nbc_cls.Add(Me)
					Me._id_sbc = value.id_sbc
				Else
					Me._id_sbc = CType(Nothing, Integer)
				End If
				Me.SendPropertyChanged("sbc_cls")
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
	
	Private Sub attach_egr_sec_cls(ByVal entity As egr_sec_cls)
		Me.SendPropertyChanging
		entity.nbc_cls = Me
	End Sub
	
	Private Sub detach_egr_sec_cls(ByVal entity As egr_sec_cls)
		Me.SendPropertyChanging
		entity.nbc_cls = Nothing
	End Sub
	
	Private Sub attach_opn_cls(ByVal entity As opn_cls)
		Me.SendPropertyChanging
		entity.nbc_cls = Me
	End Sub
	
	Private Sub detach_opn_cls(ByVal entity As opn_cls)
		Me.SendPropertyChanging
		entity.nbc_cls = Nothing
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.nce")>  _
Partial Public Class nce_cls
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _id_nce As Decimal
	
	Private _cli_idc As String
	
	Private _deu_ide As String
	
	Private _nce_num_doc As String
	
	Private _id_hre As System.Nullable(Of Decimal)
	
	Private _id_p_0023 As Integer
	
	Private _id_PL_000069 As String
	
	Private _id_p_0031 As Integer
	
	Private _nce_pro As System.Nullable(Of Char)
	
	Private _nce_fec_pft As System.Nullable(Of Date)
	
	Private _nce_est_nom As String
	
	Private _nce_fec_gen As System.Nullable(Of Date)
	
	Private _nce_fec_ing As System.Nullable(Of Date)
	
	Private _nce_obs As String
	
	Private _nce_fec_ctb As System.Nullable(Of Date)
	
	Private _nce_mto As System.Nullable(Of Decimal)
	
	Private _fac_cam As System.Nullable(Of Decimal)
	
	Private _nce_fec_vcto As System.Nullable(Of Date)
	
	Private _id_doc As System.Nullable(Of Decimal)
	
	Private _egr_sec_cls As EntitySet(Of egr_sec_cls)
	
	Private _ing_sec_cls As EntitySet(Of ing_sec_cls)
	
	Private _doc_cls As EntityRef(Of doc_cls)
	
	Private _cli_cls As EntityRef(Of cli_cls)
	
	Private _deu_cls As EntityRef(Of deu_cls)
	
	Private _hre_cls As EntityRef(Of hre_cls)
	
	Private _P_0023_cls As EntityRef(Of P_0023_cls)
	
	Private _P_0031_cls As EntityRef(Of P_0031_cls)
	
	Private _PL_000069_cls As EntityRef(Of PL_000069_cls)
	
    #Region "Definiciones de métodos de extensibilidad"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub Onid_nceChanging(value As Decimal)
    End Sub
    Partial Private Sub Onid_nceChanged()
    End Sub
    Partial Private Sub Oncli_idcChanging(value As String)
    End Sub
    Partial Private Sub Oncli_idcChanged()
    End Sub
    Partial Private Sub Ondeu_ideChanging(value As String)
    End Sub
    Partial Private Sub Ondeu_ideChanged()
    End Sub
    Partial Private Sub Onnce_num_docChanging(value As String)
    End Sub
    Partial Private Sub Onnce_num_docChanged()
    End Sub
    Partial Private Sub Onid_hreChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub Onid_hreChanged()
    End Sub
    Partial Private Sub Onid_p_0023Changing(value As Integer)
    End Sub
    Partial Private Sub Onid_p_0023Changed()
    End Sub
    Partial Private Sub Onid_PL_000069Changing(value As String)
    End Sub
    Partial Private Sub Onid_PL_000069Changed()
    End Sub
    Partial Private Sub Onid_p_0031Changing(value As Integer)
    End Sub
    Partial Private Sub Onid_p_0031Changed()
    End Sub
    Partial Private Sub Onnce_proChanging(value As System.Nullable(Of Char))
    End Sub
    Partial Private Sub Onnce_proChanged()
    End Sub
    Partial Private Sub Onnce_fec_pftChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub Onnce_fec_pftChanged()
    End Sub
    Partial Private Sub Onnce_est_nomChanging(value As String)
    End Sub
    Partial Private Sub Onnce_est_nomChanged()
    End Sub
    Partial Private Sub Onnce_fec_genChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub Onnce_fec_genChanged()
    End Sub
    Partial Private Sub Onnce_fec_ingChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub Onnce_fec_ingChanged()
    End Sub
    Partial Private Sub Onnce_obsChanging(value As String)
    End Sub
    Partial Private Sub Onnce_obsChanged()
    End Sub
    Partial Private Sub Onnce_fec_ctbChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub Onnce_fec_ctbChanged()
    End Sub
    Partial Private Sub Onnce_mtoChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub Onnce_mtoChanged()
    End Sub
    Partial Private Sub Onfac_camChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub Onfac_camChanged()
    End Sub
    Partial Private Sub Onnce_fec_vctoChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub Onnce_fec_vctoChanged()
    End Sub
    Partial Private Sub Onid_docChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub Onid_docChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		Me._egr_sec_cls = New EntitySet(Of egr_sec_cls)(AddressOf Me.attach_egr_sec_cls, AddressOf Me.detach_egr_sec_cls)
		Me._ing_sec_cls = New EntitySet(Of ing_sec_cls)(AddressOf Me.attach_ing_sec_cls, AddressOf Me.detach_ing_sec_cls)
		Me._doc_cls = CType(Nothing, EntityRef(Of doc_cls))
		Me._cli_cls = CType(Nothing, EntityRef(Of cli_cls))
		Me._deu_cls = CType(Nothing, EntityRef(Of deu_cls))
		Me._hre_cls = CType(Nothing, EntityRef(Of hre_cls))
		Me._P_0023_cls = CType(Nothing, EntityRef(Of P_0023_cls))
		Me._P_0031_cls = CType(Nothing, EntityRef(Of P_0031_cls))
		Me._PL_000069_cls = CType(Nothing, EntityRef(Of PL_000069_cls))
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_id_nce", AutoSync:=AutoSync.OnInsert, DbType:="Decimal(10,0) NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property id_nce() As Decimal
		Get
			Return Me._id_nce
		End Get
		Set
			If ((Me._id_nce = value)  _
						= false) Then
				Me.Onid_nceChanging(value)
				Me.SendPropertyChanging
				Me._id_nce = value
				Me.SendPropertyChanged("id_nce")
				Me.Onid_nceChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_cli_idc", DbType:="Char(12) NOT NULL", CanBeNull:=false)>  _
	Public Property cli_idc() As String
		Get
			Return Me._cli_idc
		End Get
		Set
			If (String.Equals(Me._cli_idc, value) = false) Then
				If Me._cli_cls.HasLoadedOrAssignedValue Then
					Throw New System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException()
				End If
				Me.Oncli_idcChanging(value)
				Me.SendPropertyChanging
				Me._cli_idc = value
				Me.SendPropertyChanged("cli_idc")
				Me.Oncli_idcChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_deu_ide", DbType:="Char(12) NOT NULL", CanBeNull:=false)>  _
	Public Property deu_ide() As String
		Get
			Return Me._deu_ide
		End Get
		Set
			If (String.Equals(Me._deu_ide, value) = false) Then
				If Me._deu_cls.HasLoadedOrAssignedValue Then
					Throw New System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException()
				End If
				Me.Ondeu_ideChanging(value)
				Me.SendPropertyChanging
				Me._deu_ide = value
				Me.SendPropertyChanged("deu_ide")
				Me.Ondeu_ideChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_nce_num_doc", DbType:="VarChar(20)")>  _
	Public Property nce_num_doc() As String
		Get
			Return Me._nce_num_doc
		End Get
		Set
			If (String.Equals(Me._nce_num_doc, value) = false) Then
				Me.Onnce_num_docChanging(value)
				Me.SendPropertyChanging
				Me._nce_num_doc = value
				Me.SendPropertyChanged("nce_num_doc")
				Me.Onnce_num_docChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_id_hre", DbType:="Decimal(5,0)")>  _
	Public Property id_hre() As System.Nullable(Of Decimal)
		Get
			Return Me._id_hre
		End Get
		Set
			If (Me._id_hre.Equals(value) = false) Then
				If Me._hre_cls.HasLoadedOrAssignedValue Then
					Throw New System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException()
				End If
				Me.Onid_hreChanging(value)
				Me.SendPropertyChanging
				Me._id_hre = value
				Me.SendPropertyChanged("id_hre")
				Me.Onid_hreChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_id_p_0023", DbType:="Int NOT NULL")>  _
	Public Property id_p_0023() As Integer
		Get
			Return Me._id_p_0023
		End Get
		Set
			If ((Me._id_p_0023 = value)  _
						= false) Then
				If Me._P_0023_cls.HasLoadedOrAssignedValue Then
					Throw New System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException()
				End If
				Me.Onid_p_0023Changing(value)
				Me.SendPropertyChanging
				Me._id_p_0023 = value
				Me.SendPropertyChanged("id_p_0023")
				Me.Onid_p_0023Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_id_PL_000069", DbType:="Char(6)")>  _
	Public Property id_PL_000069() As String
		Get
			Return Me._id_PL_000069
		End Get
		Set
			If (String.Equals(Me._id_PL_000069, value) = false) Then
				If Me._PL_000069_cls.HasLoadedOrAssignedValue Then
					Throw New System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException()
				End If
				Me.Onid_PL_000069Changing(value)
				Me.SendPropertyChanging
				Me._id_PL_000069 = value
				Me.SendPropertyChanged("id_PL_000069")
				Me.Onid_PL_000069Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_id_p_0031", DbType:="Int NOT NULL")>  _
	Public Property id_p_0031() As Integer
		Get
			Return Me._id_p_0031
		End Get
		Set
			If ((Me._id_p_0031 = value)  _
						= false) Then
				If Me._P_0031_cls.HasLoadedOrAssignedValue Then
					Throw New System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException()
				End If
				Me.Onid_p_0031Changing(value)
				Me.SendPropertyChanging
				Me._id_p_0031 = value
				Me.SendPropertyChanged("id_p_0031")
				Me.Onid_p_0031Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_nce_pro", DbType:="Char(1)")>  _
	Public Property nce_pro() As System.Nullable(Of Char)
		Get
			Return Me._nce_pro
		End Get
		Set
			If (Me._nce_pro.Equals(value) = false) Then
				Me.Onnce_proChanging(value)
				Me.SendPropertyChanging
				Me._nce_pro = value
				Me.SendPropertyChanged("nce_pro")
				Me.Onnce_proChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_nce_fec_pft", DbType:="DateTime")>  _
	Public Property nce_fec_pft() As System.Nullable(Of Date)
		Get
			Return Me._nce_fec_pft
		End Get
		Set
			If (Me._nce_fec_pft.Equals(value) = false) Then
				Me.Onnce_fec_pftChanging(value)
				Me.SendPropertyChanging
				Me._nce_fec_pft = value
				Me.SendPropertyChanged("nce_fec_pft")
				Me.Onnce_fec_pftChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_nce_est_nom", DbType:="VarChar(1)")>  _
	Public Property nce_est_nom() As String
		Get
			Return Me._nce_est_nom
		End Get
		Set
			If (String.Equals(Me._nce_est_nom, value) = false) Then
				Me.Onnce_est_nomChanging(value)
				Me.SendPropertyChanging
				Me._nce_est_nom = value
				Me.SendPropertyChanged("nce_est_nom")
				Me.Onnce_est_nomChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_nce_fec_gen", DbType:="DateTime")>  _
	Public Property nce_fec_gen() As System.Nullable(Of Date)
		Get
			Return Me._nce_fec_gen
		End Get
		Set
			If (Me._nce_fec_gen.Equals(value) = false) Then
				Me.Onnce_fec_genChanging(value)
				Me.SendPropertyChanging
				Me._nce_fec_gen = value
				Me.SendPropertyChanged("nce_fec_gen")
				Me.Onnce_fec_genChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_nce_fec_ing", DbType:="DateTime")>  _
	Public Property nce_fec_ing() As System.Nullable(Of Date)
		Get
			Return Me._nce_fec_ing
		End Get
		Set
			If (Me._nce_fec_ing.Equals(value) = false) Then
				Me.Onnce_fec_ingChanging(value)
				Me.SendPropertyChanging
				Me._nce_fec_ing = value
				Me.SendPropertyChanged("nce_fec_ing")
				Me.Onnce_fec_ingChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_nce_obs", DbType:="VarChar(255)")>  _
	Public Property nce_obs() As String
		Get
			Return Me._nce_obs
		End Get
		Set
			If (String.Equals(Me._nce_obs, value) = false) Then
				Me.Onnce_obsChanging(value)
				Me.SendPropertyChanging
				Me._nce_obs = value
				Me.SendPropertyChanged("nce_obs")
				Me.Onnce_obsChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_nce_fec_ctb", DbType:="DateTime")>  _
	Public Property nce_fec_ctb() As System.Nullable(Of Date)
		Get
			Return Me._nce_fec_ctb
		End Get
		Set
			If (Me._nce_fec_ctb.Equals(value) = false) Then
				Me.Onnce_fec_ctbChanging(value)
				Me.SendPropertyChanging
				Me._nce_fec_ctb = value
				Me.SendPropertyChanged("nce_fec_ctb")
				Me.Onnce_fec_ctbChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_nce_mto", DbType:="Money")>  _
	Public Property nce_mto() As System.Nullable(Of Decimal)
		Get
			Return Me._nce_mto
		End Get
		Set
			If (Me._nce_mto.Equals(value) = false) Then
				Me.Onnce_mtoChanging(value)
				Me.SendPropertyChanging
				Me._nce_mto = value
				Me.SendPropertyChanged("nce_mto")
				Me.Onnce_mtoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_fac_cam", DbType:="Money")>  _
	Public Property fac_cam() As System.Nullable(Of Decimal)
		Get
			Return Me._fac_cam
		End Get
		Set
			If (Me._fac_cam.Equals(value) = false) Then
				Me.Onfac_camChanging(value)
				Me.SendPropertyChanging
				Me._fac_cam = value
				Me.SendPropertyChanged("fac_cam")
				Me.Onfac_camChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_nce_fec_vcto", DbType:="DateTime")>  _
	Public Property nce_fec_vcto() As System.Nullable(Of Date)
		Get
			Return Me._nce_fec_vcto
		End Get
		Set
			If (Me._nce_fec_vcto.Equals(value) = false) Then
				Me.Onnce_fec_vctoChanging(value)
				Me.SendPropertyChanging
				Me._nce_fec_vcto = value
				Me.SendPropertyChanged("nce_fec_vcto")
				Me.Onnce_fec_vctoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_id_doc", DbType:="Decimal(18,0)")>  _
	Public Property id_doc() As System.Nullable(Of Decimal)
		Get
			Return Me._id_doc
		End Get
		Set
			If (Me._id_doc.Equals(value) = false) Then
				If Me._doc_cls.HasLoadedOrAssignedValue Then
					Throw New System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException()
				End If
				Me.Onid_docChanging(value)
				Me.SendPropertyChanging
				Me._id_doc = value
				Me.SendPropertyChanged("id_doc")
				Me.Onid_docChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="nce_cls_egr_sec_cls", Storage:="_egr_sec_cls", ThisKey:="id_nce", OtherKey:="id_nce")>  _
	Public Property egr_sec_cls() As EntitySet(Of egr_sec_cls)
		Get
			Return Me._egr_sec_cls
		End Get
		Set
			Me._egr_sec_cls.Assign(value)
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="nce_cls_ing_sec_cls", Storage:="_ing_sec_cls", ThisKey:="id_nce", OtherKey:="id_nce")>  _
	Public Property ing_sec_cls() As EntitySet(Of ing_sec_cls)
		Get
			Return Me._ing_sec_cls
		End Get
		Set
			Me._ing_sec_cls.Assign(value)
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="doc_cls_nce_cls", Storage:="_doc_cls", ThisKey:="id_doc", OtherKey:="id_doc", IsForeignKey:=true)>  _
	Public Property doc_cls() As doc_cls
		Get
			Return Me._doc_cls.Entity
		End Get
		Set
			Dim previousValue As doc_cls = Me._doc_cls.Entity
			If ((Object.Equals(previousValue, value) = false)  _
						OrElse (Me._doc_cls.HasLoadedOrAssignedValue = false)) Then
				Me.SendPropertyChanging
				If ((previousValue Is Nothing)  _
							= false) Then
					Me._doc_cls.Entity = Nothing
					previousValue.nce_cls.Remove(Me)
				End If
				Me._doc_cls.Entity = value
				If ((value Is Nothing)  _
							= false) Then
					value.nce_cls.Add(Me)
					Me._id_doc = value.id_doc
				Else
					Me._id_doc = CType(Nothing, Nullable(Of Decimal))
				End If
				Me.SendPropertyChanged("doc_cls")
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="cli_cls_nce_cls", Storage:="_cli_cls", ThisKey:="cli_idc", OtherKey:="cli_idc", IsForeignKey:=true)>  _
	Public Property cli_cls() As cli_cls
		Get
			Return Me._cli_cls.Entity
		End Get
		Set
			Dim previousValue As cli_cls = Me._cli_cls.Entity
			If ((Object.Equals(previousValue, value) = false)  _
						OrElse (Me._cli_cls.HasLoadedOrAssignedValue = false)) Then
				Me.SendPropertyChanging
				If ((previousValue Is Nothing)  _
							= false) Then
					Me._cli_cls.Entity = Nothing
					previousValue.nce_cls.Remove(Me)
				End If
				Me._cli_cls.Entity = value
				If ((value Is Nothing)  _
							= false) Then
					value.nce_cls.Add(Me)
					Me._cli_idc = value.cli_idc
				Else
					Me._cli_idc = CType(Nothing, String)
				End If
				Me.SendPropertyChanged("cli_cls")
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="deu_cls_nce_cls", Storage:="_deu_cls", ThisKey:="deu_ide", OtherKey:="deu_ide", IsForeignKey:=true)>  _
	Public Property deu_cls() As deu_cls
		Get
			Return Me._deu_cls.Entity
		End Get
		Set
			Dim previousValue As deu_cls = Me._deu_cls.Entity
			If ((Object.Equals(previousValue, value) = false)  _
						OrElse (Me._deu_cls.HasLoadedOrAssignedValue = false)) Then
				Me.SendPropertyChanging
				If ((previousValue Is Nothing)  _
							= false) Then
					Me._deu_cls.Entity = Nothing
					previousValue.nce_cls.Remove(Me)
				End If
				Me._deu_cls.Entity = value
				If ((value Is Nothing)  _
							= false) Then
					value.nce_cls.Add(Me)
					Me._deu_ide = value.deu_ide
				Else
					Me._deu_ide = CType(Nothing, String)
				End If
				Me.SendPropertyChanged("deu_cls")
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="hre_cls_nce_cls", Storage:="_hre_cls", ThisKey:="id_hre", OtherKey:="id_hre", IsForeignKey:=true)>  _
	Public Property hre_cls() As hre_cls
		Get
			Return Me._hre_cls.Entity
		End Get
		Set
			Dim previousValue As hre_cls = Me._hre_cls.Entity
			If ((Object.Equals(previousValue, value) = false)  _
						OrElse (Me._hre_cls.HasLoadedOrAssignedValue = false)) Then
				Me.SendPropertyChanging
				If ((previousValue Is Nothing)  _
							= false) Then
					Me._hre_cls.Entity = Nothing
					previousValue.nce_cls.Remove(Me)
				End If
				Me._hre_cls.Entity = value
				If ((value Is Nothing)  _
							= false) Then
					value.nce_cls.Add(Me)
					Me._id_hre = value.id_hre
				Else
					Me._id_hre = CType(Nothing, Nullable(Of Decimal))
				End If
				Me.SendPropertyChanged("hre_cls")
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="P_0023_cls_nce_cls", Storage:="_P_0023_cls", ThisKey:="id_p_0023", OtherKey:="id_P_0023", IsForeignKey:=true)>  _
	Public Property P_0023_cls() As P_0023_cls
		Get
			Return Me._P_0023_cls.Entity
		End Get
		Set
			Dim previousValue As P_0023_cls = Me._P_0023_cls.Entity
			If ((Object.Equals(previousValue, value) = false)  _
						OrElse (Me._P_0023_cls.HasLoadedOrAssignedValue = false)) Then
				Me.SendPropertyChanging
				If ((previousValue Is Nothing)  _
							= false) Then
					Me._P_0023_cls.Entity = Nothing
					previousValue.nce_cls.Remove(Me)
				End If
				Me._P_0023_cls.Entity = value
				If ((value Is Nothing)  _
							= false) Then
					value.nce_cls.Add(Me)
					Me._id_p_0023 = value.id_P_0023
				Else
					Me._id_p_0023 = CType(Nothing, Integer)
				End If
				Me.SendPropertyChanged("P_0023_cls")
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="P_0031_cls_nce_cls", Storage:="_P_0031_cls", ThisKey:="id_p_0031", OtherKey:="id_P_0031", IsForeignKey:=true)>  _
	Public Property P_0031_cls() As P_0031_cls
		Get
			Return Me._P_0031_cls.Entity
		End Get
		Set
			Dim previousValue As P_0031_cls = Me._P_0031_cls.Entity
			If ((Object.Equals(previousValue, value) = false)  _
						OrElse (Me._P_0031_cls.HasLoadedOrAssignedValue = false)) Then
				Me.SendPropertyChanging
				If ((previousValue Is Nothing)  _
							= false) Then
					Me._P_0031_cls.Entity = Nothing
					previousValue.nce_cls.Remove(Me)
				End If
				Me._P_0031_cls.Entity = value
				If ((value Is Nothing)  _
							= false) Then
					value.nce_cls.Add(Me)
					Me._id_p_0031 = value.id_P_0031
				Else
					Me._id_p_0031 = CType(Nothing, Integer)
				End If
				Me.SendPropertyChanged("P_0031_cls")
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="PL_000069_cls_nce_cls", Storage:="_PL_000069_cls", ThisKey:="id_PL_000069", OtherKey:="id_PL_000069", IsForeignKey:=true)>  _
	Public Property PL_000069_cls() As PL_000069_cls
		Get
			Return Me._PL_000069_cls.Entity
		End Get
		Set
			Dim previousValue As PL_000069_cls = Me._PL_000069_cls.Entity
			If ((Object.Equals(previousValue, value) = false)  _
						OrElse (Me._PL_000069_cls.HasLoadedOrAssignedValue = false)) Then
				Me.SendPropertyChanging
				If ((previousValue Is Nothing)  _
							= false) Then
					Me._PL_000069_cls.Entity = Nothing
					previousValue.nce_cls.Remove(Me)
				End If
				Me._PL_000069_cls.Entity = value
				If ((value Is Nothing)  _
							= false) Then
					value.nce_cls.Add(Me)
					Me._id_PL_000069 = value.id_PL_000069
				Else
					Me._id_PL_000069 = CType(Nothing, String)
				End If
				Me.SendPropertyChanged("PL_000069_cls")
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
	
	Private Sub attach_egr_sec_cls(ByVal entity As egr_sec_cls)
		Me.SendPropertyChanging
		entity.nce_cls = Me
	End Sub
	
	Private Sub detach_egr_sec_cls(ByVal entity As egr_sec_cls)
		Me.SendPropertyChanging
		entity.nce_cls = Nothing
	End Sub
	
	Private Sub attach_ing_sec_cls(ByVal entity As ing_sec_cls)
		Me.SendPropertyChanging
		entity.nce_cls = Me
	End Sub
	
	Private Sub detach_ing_sec_cls(ByVal entity As ing_sec_cls)
		Me.SendPropertyChanging
		entity.nce_cls = Nothing
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.Nchr_pld")>  _
Partial Public Class Nchr_pld
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _id_chr As Decimal
	
	Private _id_pld As Integer
	
	Private _chr_cls As EntityRef(Of chr_cls)
	
	Private _pld_cls As EntityRef(Of pld_cls)
	
    #Region "Definiciones de métodos de extensibilidad"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub Onid_chrChanging(value As Decimal)
    End Sub
    Partial Private Sub Onid_chrChanged()
    End Sub
    Partial Private Sub Onid_pldChanging(value As Integer)
    End Sub
    Partial Private Sub Onid_pldChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		Me._chr_cls = CType(Nothing, EntityRef(Of chr_cls))
		Me._pld_cls = CType(Nothing, EntityRef(Of pld_cls))
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_id_chr", DbType:="Decimal(18,0) NOT NULL", IsPrimaryKey:=true)>  _
	Public Property id_chr() As Decimal
		Get
			Return Me._id_chr
		End Get
		Set
			If ((Me._id_chr = value)  _
						= false) Then
				If Me._chr_cls.HasLoadedOrAssignedValue Then
					Throw New System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException()
				End If
				Me.Onid_chrChanging(value)
				Me.SendPropertyChanging
				Me._id_chr = value
				Me.SendPropertyChanged("id_chr")
				Me.Onid_chrChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_id_pld", DbType:="Int NOT NULL", IsPrimaryKey:=true)>  _
	Public Property id_pld() As Integer
		Get
			Return Me._id_pld
		End Get
		Set
			If ((Me._id_pld = value)  _
						= false) Then
				If Me._pld_cls.HasLoadedOrAssignedValue Then
					Throw New System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException()
				End If
				Me.Onid_pldChanging(value)
				Me.SendPropertyChanging
				Me._id_pld = value
				Me.SendPropertyChanged("id_pld")
				Me.Onid_pldChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="chr_cls_Nchr_pld", Storage:="_chr_cls", ThisKey:="id_chr", OtherKey:="id_chr", IsForeignKey:=true)>  _
	Public Property chr_cls() As chr_cls
		Get
			Return Me._chr_cls.Entity
		End Get
		Set
			Dim previousValue As chr_cls = Me._chr_cls.Entity
			If ((Object.Equals(previousValue, value) = false)  _
						OrElse (Me._chr_cls.HasLoadedOrAssignedValue = false)) Then
				Me.SendPropertyChanging
				If ((previousValue Is Nothing)  _
							= false) Then
					Me._chr_cls.Entity = Nothing
					previousValue.Nchr_pld.Remove(Me)
				End If
				Me._chr_cls.Entity = value
				If ((value Is Nothing)  _
							= false) Then
					value.Nchr_pld.Add(Me)
					Me._id_chr = value.id_chr
				Else
					Me._id_chr = CType(Nothing, Decimal)
				End If
				Me.SendPropertyChanged("chr_cls")
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="pld_cls_Nchr_pld", Storage:="_pld_cls", ThisKey:="id_pld", OtherKey:="id_pld", IsForeignKey:=true)>  _
	Public Property pld_cls() As pld_cls
		Get
			Return Me._pld_cls.Entity
		End Get
		Set
			Dim previousValue As pld_cls = Me._pld_cls.Entity
			If ((Object.Equals(previousValue, value) = false)  _
						OrElse (Me._pld_cls.HasLoadedOrAssignedValue = false)) Then
				Me.SendPropertyChanging
				If ((previousValue Is Nothing)  _
							= false) Then
					Me._pld_cls.Entity = Nothing
					previousValue.Nchr_pld.Remove(Me)
				End If
				Me._pld_cls.Entity = value
				If ((value Is Nothing)  _
							= false) Then
					value.Nchr_pld.Add(Me)
					Me._id_pld = value.id_pld
				Else
					Me._id_pld = CType(Nothing, Integer)
				End If
				Me.SendPropertyChanged("pld_cls")
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.ncr")>  _
Partial Public Class ncr_cls
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _id_eje As Integer
	
	Private _id_eje_rpz As Integer
	
	Private _eje As EntityRef(Of eje_cls)
	
	Private _eje_cls As EntityRef(Of eje_cls)
	
    #Region "Definiciones de métodos de extensibilidad"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub Onid_ejeChanging(value As Integer)
    End Sub
    Partial Private Sub Onid_ejeChanged()
    End Sub
    Partial Private Sub Onid_eje_rpzChanging(value As Integer)
    End Sub
    Partial Private Sub Onid_eje_rpzChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		Me._eje = CType(Nothing, EntityRef(Of eje_cls))
		Me._eje_cls = CType(Nothing, EntityRef(Of eje_cls))
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_id_eje", DbType:="Int NOT NULL", IsPrimaryKey:=true)>  _
	Public Property id_eje() As Integer
		Get
			Return Me._id_eje
		End Get
		Set
			If ((Me._id_eje = value)  _
						= false) Then
				If Me._eje.HasLoadedOrAssignedValue Then
					Throw New System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException()
				End If
				Me.Onid_ejeChanging(value)
				Me.SendPropertyChanging
				Me._id_eje = value
				Me.SendPropertyChanged("id_eje")
				Me.Onid_ejeChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_id_eje_rpz", DbType:="Int NOT NULL", IsPrimaryKey:=true)>  _
	Public Property id_eje_rpz() As Integer
		Get
			Return Me._id_eje_rpz
		End Get
		Set
			If ((Me._id_eje_rpz = value)  _
						= false) Then
				If Me._eje_cls.HasLoadedOrAssignedValue Then
					Throw New System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException()
				End If
				Me.Onid_eje_rpzChanging(value)
				Me.SendPropertyChanging
				Me._id_eje_rpz = value
				Me.SendPropertyChanged("id_eje_rpz")
				Me.Onid_eje_rpzChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="eje_cls_ncr_cls", Storage:="_eje", ThisKey:="id_eje", OtherKey:="id_eje", IsForeignKey:=true)>  _
	Public Property eje() As eje_cls
		Get
			Return Me._eje.Entity
		End Get
		Set
			Dim previousValue As eje_cls = Me._eje.Entity
			If ((Object.Equals(previousValue, value) = false)  _
						OrElse (Me._eje.HasLoadedOrAssignedValue = false)) Then
				Me.SendPropertyChanging
				If ((previousValue Is Nothing)  _
							= false) Then
					Me._eje.Entity = Nothing
					previousValue.ncr_cls.Remove(Me)
				End If
				Me._eje.Entity = value
				If ((value Is Nothing)  _
							= false) Then
					value.ncr_cls.Add(Me)
					Me._id_eje = value.id_eje
				Else
					Me._id_eje = CType(Nothing, Integer)
				End If
				Me.SendPropertyChanged("eje")
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="eje_cls_ncr_cls1", Storage:="_eje_cls", ThisKey:="id_eje_rpz", OtherKey:="id_eje", IsForeignKey:=true)>  _
	Public Property eje_cls() As eje_cls
		Get
			Return Me._eje_cls.Entity
		End Get
		Set
			Dim previousValue As eje_cls = Me._eje_cls.Entity
			If ((Object.Equals(previousValue, value) = false)  _
						OrElse (Me._eje_cls.HasLoadedOrAssignedValue = false)) Then
				Me.SendPropertyChanging
				If ((previousValue Is Nothing)  _
							= false) Then
					Me._eje_cls.Entity = Nothing
					previousValue.ncr_cls1.Remove(Me)
				End If
				Me._eje_cls.Entity = value
				If ((value Is Nothing)  _
							= false) Then
					value.ncr_cls1.Add(Me)
					Me._id_eje_rpz = value.id_eje
				Else
					Me._id_eje_rpz = CType(Nothing, Integer)
				End If
				Me.SendPropertyChanged("eje_cls")
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.nef")>  _
Partial Public Class nef_cls
	
	Private _id_eje As Integer
	
	Private _id_P0045 As Integer
	
	Private _nef_eje_aux As String
	
	Public Sub New()
		MyBase.New
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_id_eje", DbType:="Int NOT NULL")>  _
	Public Property id_eje() As Integer
		Get
			Return Me._id_eje
		End Get
		Set
			If ((Me._id_eje = value)  _
						= false) Then
				Me._id_eje = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_id_P0045", DbType:="Int NOT NULL")>  _
	Public Property id_P0045() As Integer
		Get
			Return Me._id_P0045
		End Get
		Set
			If ((Me._id_P0045 = value)  _
						= false) Then
				Me._id_P0045 = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_nef_eje_aux", DbType:="VarChar(1)")>  _
	Public Property nef_eje_aux() As String
		Get
			Return Me._nef_eje_aux
		End Get
		Set
			If (String.Equals(Me._nef_eje_aux, value) = false) Then
				Me._nef_eje_aux = value
			End If
		End Set
	End Property
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.nes")>  _
Partial Public Class nes_cls
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _id_eje As Integer
	
	Private _id_suc As Integer
	
	Private _suc_cls As EntityRef(Of suc_cls)
	
	Private _eje_cls As EntityRef(Of eje_cls)
	
    #Region "Definiciones de métodos de extensibilidad"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub Onid_ejeChanging(value As Integer)
    End Sub
    Partial Private Sub Onid_ejeChanged()
    End Sub
    Partial Private Sub Onid_sucChanging(value As Integer)
    End Sub
    Partial Private Sub Onid_sucChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		Me._suc_cls = CType(Nothing, EntityRef(Of suc_cls))
		Me._eje_cls = CType(Nothing, EntityRef(Of eje_cls))
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_id_eje", DbType:="Int NOT NULL", IsPrimaryKey:=true)>  _
	Public Property id_eje() As Integer
		Get
			Return Me._id_eje
		End Get
		Set
			If ((Me._id_eje = value)  _
						= false) Then
				If Me._eje_cls.HasLoadedOrAssignedValue Then
					Throw New System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException()
				End If
				Me.Onid_ejeChanging(value)
				Me.SendPropertyChanging
				Me._id_eje = value
				Me.SendPropertyChanged("id_eje")
				Me.Onid_ejeChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_id_suc", DbType:="Int NOT NULL", IsPrimaryKey:=true)>  _
	Public Property id_suc() As Integer
		Get
			Return Me._id_suc
		End Get
		Set
			If ((Me._id_suc = value)  _
						= false) Then
				If Me._suc_cls.HasLoadedOrAssignedValue Then
					Throw New System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException()
				End If
				Me.Onid_sucChanging(value)
				Me.SendPropertyChanging
				Me._id_suc = value
				Me.SendPropertyChanged("id_suc")
				Me.Onid_sucChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="suc_cls_nes_cls", Storage:="_suc_cls", ThisKey:="id_suc", OtherKey:="id_suc", IsForeignKey:=true)>  _
	Public Property suc_cls() As suc_cls
		Get
			Return Me._suc_cls.Entity
		End Get
		Set
			Dim previousValue As suc_cls = Me._suc_cls.Entity
			If ((Object.Equals(previousValue, value) = false)  _
						OrElse (Me._suc_cls.HasLoadedOrAssignedValue = false)) Then
				Me.SendPropertyChanging
				If ((previousValue Is Nothing)  _
							= false) Then
					Me._suc_cls.Entity = Nothing
					previousValue.nes_cls.Remove(Me)
				End If
				Me._suc_cls.Entity = value
				If ((value Is Nothing)  _
							= false) Then
					value.nes_cls.Add(Me)
					Me._id_suc = value.id_suc
				Else
					Me._id_suc = CType(Nothing, Integer)
				End If
				Me.SendPropertyChanged("suc_cls")
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="eje_cls_nes_cls", Storage:="_eje_cls", ThisKey:="id_eje", OtherKey:="id_eje", IsForeignKey:=true)>  _
	Public Property eje_cls() As eje_cls
		Get
			Return Me._eje_cls.Entity
		End Get
		Set
			Dim previousValue As eje_cls = Me._eje_cls.Entity
			If ((Object.Equals(previousValue, value) = false)  _
						OrElse (Me._eje_cls.HasLoadedOrAssignedValue = false)) Then
				Me.SendPropertyChanging
				If ((previousValue Is Nothing)  _
							= false) Then
					Me._eje_cls.Entity = Nothing
					previousValue.nes_cls.Remove(Me)
				End If
				Me._eje_cls.Entity = value
				If ((value Is Nothing)  _
							= false) Then
					value.nes_cls.Add(Me)
					Me._id_eje = value.id_eje
				Else
					Me._id_eje = CType(Nothing, Integer)
				End If
				Me.SendPropertyChanged("eje_cls")
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.NEZ")>  _
Partial Public Class NEZ_cls
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _id_zon As Integer
	
	Private _id_eje As Integer
	
	Private _zon_cls As EntityRef(Of zon_cls)
	
	Private _eje_cls As EntityRef(Of eje_cls)
	
    #Region "Definiciones de métodos de extensibilidad"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub Onid_zonChanging(value As Integer)
    End Sub
    Partial Private Sub Onid_zonChanged()
    End Sub
    Partial Private Sub Onid_ejeChanging(value As Integer)
    End Sub
    Partial Private Sub Onid_ejeChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		Me._zon_cls = CType(Nothing, EntityRef(Of zon_cls))
		Me._eje_cls = CType(Nothing, EntityRef(Of eje_cls))
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_id_zon", DbType:="Int NOT NULL", IsPrimaryKey:=true)>  _
	Public Property id_zon() As Integer
		Get
			Return Me._id_zon
		End Get
		Set
			If ((Me._id_zon = value)  _
						= false) Then
				If Me._zon_cls.HasLoadedOrAssignedValue Then
					Throw New System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException()
				End If
				Me.Onid_zonChanging(value)
				Me.SendPropertyChanging
				Me._id_zon = value
				Me.SendPropertyChanged("id_zon")
				Me.Onid_zonChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_id_eje", DbType:="Int NOT NULL", IsPrimaryKey:=true)>  _
	Public Property id_eje() As Integer
		Get
			Return Me._id_eje
		End Get
		Set
			If ((Me._id_eje = value)  _
						= false) Then
				If Me._eje_cls.HasLoadedOrAssignedValue Then
					Throw New System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException()
				End If
				Me.Onid_ejeChanging(value)
				Me.SendPropertyChanging
				Me._id_eje = value
				Me.SendPropertyChanged("id_eje")
				Me.Onid_ejeChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="zon_cls_NEZ_cls", Storage:="_zon_cls", ThisKey:="id_zon", OtherKey:="id_zon", IsForeignKey:=true)>  _
	Public Property zon_cls() As zon_cls
		Get
			Return Me._zon_cls.Entity
		End Get
		Set
			Dim previousValue As zon_cls = Me._zon_cls.Entity
			If ((Object.Equals(previousValue, value) = false)  _
						OrElse (Me._zon_cls.HasLoadedOrAssignedValue = false)) Then
				Me.SendPropertyChanging
				If ((previousValue Is Nothing)  _
							= false) Then
					Me._zon_cls.Entity = Nothing
					previousValue.NEZ_cls.Remove(Me)
				End If
				Me._zon_cls.Entity = value
				If ((value Is Nothing)  _
							= false) Then
					value.NEZ_cls.Add(Me)
					Me._id_zon = value.id_zon
				Else
					Me._id_zon = CType(Nothing, Integer)
				End If
				Me.SendPropertyChanged("zon_cls")
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="eje_cls_NEZ_cls", Storage:="_eje_cls", ThisKey:="id_eje", OtherKey:="id_eje", IsForeignKey:=true)>  _
	Public Property eje_cls() As eje_cls
		Get
			Return Me._eje_cls.Entity
		End Get
		Set
			Dim previousValue As eje_cls = Me._eje_cls.Entity
			If ((Object.Equals(previousValue, value) = false)  _
						OrElse (Me._eje_cls.HasLoadedOrAssignedValue = false)) Then
				Me.SendPropertyChanging
				If ((previousValue Is Nothing)  _
							= false) Then
					Me._eje_cls.Entity = Nothing
					previousValue.NEZ_cls.Remove(Me)
				End If
				Me._eje_cls.Entity = value
				If ((value Is Nothing)  _
							= false) Then
					value.NEZ_cls.Add(Me)
					Me._id_eje = value.id_eje
				Else
					Me._id_eje = CType(Nothing, Integer)
				End If
				Me.SendPropertyChanged("eje_cls")
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.nma")>  _
Partial Public Class nma_cls
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _id_nma As Decimal
	
	Private _id_eje_rpb As System.Nullable(Of Integer)
	
	Private _id_eje_dep As System.Nullable(Of Integer)
	
	Private _id_bco As System.Nullable(Of Integer)
	
	Private _nma_fec As Date
	
	Private _nma_ioe As System.Nullable(Of Char)
	
	Private _nma_fec_dep As System.Nullable(Of Date)
	
	Private _nma_tot_dpo As System.Nullable(Of Decimal)
	
	Private _nma_mto As System.Nullable(Of Decimal)
	
	Private _dpo_cls As EntitySet(Of dpo_cls)
	
	Private _bco_cls As EntityRef(Of bco_cls)
	
	Private _eje As EntityRef(Of eje_cls)
	
	Private _eje_cls As EntityRef(Of eje_cls)
	
    #Region "Definiciones de métodos de extensibilidad"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub Onid_nmaChanging(value As Decimal)
    End Sub
    Partial Private Sub Onid_nmaChanged()
    End Sub
    Partial Private Sub Onid_eje_rpbChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub Onid_eje_rpbChanged()
    End Sub
    Partial Private Sub Onid_eje_depChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub Onid_eje_depChanged()
    End Sub
    Partial Private Sub Onid_bcoChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub Onid_bcoChanged()
    End Sub
    Partial Private Sub Onnma_fecChanging(value As Date)
    End Sub
    Partial Private Sub Onnma_fecChanged()
    End Sub
    Partial Private Sub Onnma_ioeChanging(value As System.Nullable(Of Char))
    End Sub
    Partial Private Sub Onnma_ioeChanged()
    End Sub
    Partial Private Sub Onnma_fec_depChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub Onnma_fec_depChanged()
    End Sub
    Partial Private Sub Onnma_tot_dpoChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub Onnma_tot_dpoChanged()
    End Sub
    Partial Private Sub Onnma_mtoChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub Onnma_mtoChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		Me._dpo_cls = New EntitySet(Of dpo_cls)(AddressOf Me.attach_dpo_cls, AddressOf Me.detach_dpo_cls)
		Me._bco_cls = CType(Nothing, EntityRef(Of bco_cls))
		Me._eje = CType(Nothing, EntityRef(Of eje_cls))
		Me._eje_cls = CType(Nothing, EntityRef(Of eje_cls))
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_id_nma", AutoSync:=AutoSync.OnInsert, DbType:="Decimal(10,0) NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property id_nma() As Decimal
		Get
			Return Me._id_nma
		End Get
		Set
			If ((Me._id_nma = value)  _
						= false) Then
				Me.Onid_nmaChanging(value)
				Me.SendPropertyChanging
				Me._id_nma = value
				Me.SendPropertyChanged("id_nma")
				Me.Onid_nmaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_id_eje_rpb", DbType:="Int")>  _
	Public Property id_eje_rpb() As System.Nullable(Of Integer)
		Get
			Return Me._id_eje_rpb
		End Get
		Set
			If (Me._id_eje_rpb.Equals(value) = false) Then
				If Me._eje_cls.HasLoadedOrAssignedValue Then
					Throw New System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException()
				End If
				Me.Onid_eje_rpbChanging(value)
				Me.SendPropertyChanging
				Me._id_eje_rpb = value
				Me.SendPropertyChanged("id_eje_rpb")
				Me.Onid_eje_rpbChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_id_eje_dep", DbType:="Int")>  _
	Public Property id_eje_dep() As System.Nullable(Of Integer)
		Get
			Return Me._id_eje_dep
		End Get
		Set
			If (Me._id_eje_dep.Equals(value) = false) Then
				If Me._eje.HasLoadedOrAssignedValue Then
					Throw New System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException()
				End If
				Me.Onid_eje_depChanging(value)
				Me.SendPropertyChanging
				Me._id_eje_dep = value
				Me.SendPropertyChanged("id_eje_dep")
				Me.Onid_eje_depChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_id_bco", DbType:="Int")>  _
	Public Property id_bco() As System.Nullable(Of Integer)
		Get
			Return Me._id_bco
		End Get
		Set
			If (Me._id_bco.Equals(value) = false) Then
				If Me._bco_cls.HasLoadedOrAssignedValue Then
					Throw New System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException()
				End If
				Me.Onid_bcoChanging(value)
				Me.SendPropertyChanging
				Me._id_bco = value
				Me.SendPropertyChanged("id_bco")
				Me.Onid_bcoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_nma_fec", DbType:="DateTime NOT NULL")>  _
	Public Property nma_fec() As Date
		Get
			Return Me._nma_fec
		End Get
		Set
			If ((Me._nma_fec = value)  _
						= false) Then
				Me.Onnma_fecChanging(value)
				Me.SendPropertyChanging
				Me._nma_fec = value
				Me.SendPropertyChanged("nma_fec")
				Me.Onnma_fecChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_nma_ioe", DbType:="Char(1)")>  _
	Public Property nma_ioe() As System.Nullable(Of Char)
		Get
			Return Me._nma_ioe
		End Get
		Set
			If (Me._nma_ioe.Equals(value) = false) Then
				Me.Onnma_ioeChanging(value)
				Me.SendPropertyChanging
				Me._nma_ioe = value
				Me.SendPropertyChanged("nma_ioe")
				Me.Onnma_ioeChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_nma_fec_dep", DbType:="DateTime")>  _
	Public Property nma_fec_dep() As System.Nullable(Of Date)
		Get
			Return Me._nma_fec_dep
		End Get
		Set
			If (Me._nma_fec_dep.Equals(value) = false) Then
				Me.Onnma_fec_depChanging(value)
				Me.SendPropertyChanging
				Me._nma_fec_dep = value
				Me.SendPropertyChanged("nma_fec_dep")
				Me.Onnma_fec_depChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_nma_tot_dpo", DbType:="Decimal(4,0)")>  _
	Public Property nma_tot_dpo() As System.Nullable(Of Decimal)
		Get
			Return Me._nma_tot_dpo
		End Get
		Set
			If (Me._nma_tot_dpo.Equals(value) = false) Then
				Me.Onnma_tot_dpoChanging(value)
				Me.SendPropertyChanging
				Me._nma_tot_dpo = value
				Me.SendPropertyChanged("nma_tot_dpo")
				Me.Onnma_tot_dpoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_nma_mto", DbType:="Money")>  _
	Public Property nma_mto() As System.Nullable(Of Decimal)
		Get
			Return Me._nma_mto
		End Get
		Set
			If (Me._nma_mto.Equals(value) = false) Then
				Me.Onnma_mtoChanging(value)
				Me.SendPropertyChanging
				Me._nma_mto = value
				Me.SendPropertyChanged("nma_mto")
				Me.Onnma_mtoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="nma_cls_dpo_cls", Storage:="_dpo_cls", ThisKey:="id_nma", OtherKey:="id_nma")>  _
	Public Property dpo_cls() As EntitySet(Of dpo_cls)
		Get
			Return Me._dpo_cls
		End Get
		Set
			Me._dpo_cls.Assign(value)
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="bco_cls_nma_cls", Storage:="_bco_cls", ThisKey:="id_bco", OtherKey:="id_bco", IsForeignKey:=true)>  _
	Public Property bco_cls() As bco_cls
		Get
			Return Me._bco_cls.Entity
		End Get
		Set
			Dim previousValue As bco_cls = Me._bco_cls.Entity
			If ((Object.Equals(previousValue, value) = false)  _
						OrElse (Me._bco_cls.HasLoadedOrAssignedValue = false)) Then
				Me.SendPropertyChanging
				If ((previousValue Is Nothing)  _
							= false) Then
					Me._bco_cls.Entity = Nothing
					previousValue.nma_cls.Remove(Me)
				End If
				Me._bco_cls.Entity = value
				If ((value Is Nothing)  _
							= false) Then
					value.nma_cls.Add(Me)
					Me._id_bco = value.id_bco
				Else
					Me._id_bco = CType(Nothing, Nullable(Of Integer))
				End If
				Me.SendPropertyChanged("bco_cls")
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="eje_cls_nma_cls", Storage:="_eje", ThisKey:="id_eje_dep", OtherKey:="id_eje", IsForeignKey:=true)>  _
	Public Property eje() As eje_cls
		Get
			Return Me._eje.Entity
		End Get
		Set
			Dim previousValue As eje_cls = Me._eje.Entity
			If ((Object.Equals(previousValue, value) = false)  _
						OrElse (Me._eje.HasLoadedOrAssignedValue = false)) Then
				Me.SendPropertyChanging
				If ((previousValue Is Nothing)  _
							= false) Then
					Me._eje.Entity = Nothing
					previousValue.nma_cls.Remove(Me)
				End If
				Me._eje.Entity = value
				If ((value Is Nothing)  _
							= false) Then
					value.nma_cls.Add(Me)
					Me._id_eje_dep = value.id_eje
				Else
					Me._id_eje_dep = CType(Nothing, Nullable(Of Integer))
				End If
				Me.SendPropertyChanged("eje")
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="eje_cls_nma_cls1", Storage:="_eje_cls", ThisKey:="id_eje_rpb", OtherKey:="id_eje", IsForeignKey:=true)>  _
	Public Property eje_cls() As eje_cls
		Get
			Return Me._eje_cls.Entity
		End Get
		Set
			Dim previousValue As eje_cls = Me._eje_cls.Entity
			If ((Object.Equals(previousValue, value) = false)  _
						OrElse (Me._eje_cls.HasLoadedOrAssignedValue = false)) Then
				Me.SendPropertyChanging
				If ((previousValue Is Nothing)  _
							= false) Then
					Me._eje_cls.Entity = Nothing
					previousValue.nma_cls1.Remove(Me)
				End If
				Me._eje_cls.Entity = value
				If ((value Is Nothing)  _
							= false) Then
					value.nma_cls1.Add(Me)
					Me._id_eje_rpb = value.id_eje
				Else
					Me._id_eje_rpb = CType(Nothing, Nullable(Of Integer))
				End If
				Me.SendPropertyChanged("eje_cls")
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
	
	Private Sub attach_dpo_cls(ByVal entity As dpo_cls)
		Me.SendPropertyChanging
		entity.nma_cls = Me
	End Sub
	
	Private Sub detach_dpo_cls(ByVal entity As dpo_cls)
		Me.SendPropertyChanging
		entity.nma_cls = Nothing
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.nmn")>  _
Partial Public Class nmn_cls
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _id_opn As Decimal
	
	Private _id_p_0023 As Integer
	
	Private _par_val As System.Nullable(Of Decimal)
	
	Private _par_val_cob As System.Nullable(Of Decimal)
	
	Private _opn_cls As EntityRef(Of opn_cls)
	
	Private _P_0023_cls As EntityRef(Of P_0023_cls)
	
    #Region "Definiciones de métodos de extensibilidad"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub Onid_opnChanging(value As Decimal)
    End Sub
    Partial Private Sub Onid_opnChanged()
    End Sub
    Partial Private Sub Onid_p_0023Changing(value As Integer)
    End Sub
    Partial Private Sub Onid_p_0023Changed()
    End Sub
    Partial Private Sub Onpar_valChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub Onpar_valChanged()
    End Sub
    Partial Private Sub Onpar_val_cobChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub Onpar_val_cobChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		Me._opn_cls = CType(Nothing, EntityRef(Of opn_cls))
		Me._P_0023_cls = CType(Nothing, EntityRef(Of P_0023_cls))
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_id_opn", DbType:="Decimal(10,0) NOT NULL", IsPrimaryKey:=true)>  _
	Public Property id_opn() As Decimal
		Get
			Return Me._id_opn
		End Get
		Set
			If ((Me._id_opn = value)  _
						= false) Then
				If Me._opn_cls.HasLoadedOrAssignedValue Then
					Throw New System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException()
				End If
				Me.Onid_opnChanging(value)
				Me.SendPropertyChanging
				Me._id_opn = value
				Me.SendPropertyChanged("id_opn")
				Me.Onid_opnChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_id_p_0023", DbType:="Int NOT NULL", IsPrimaryKey:=true)>  _
	Public Property id_p_0023() As Integer
		Get
			Return Me._id_p_0023
		End Get
		Set
			If ((Me._id_p_0023 = value)  _
						= false) Then
				If Me._P_0023_cls.HasLoadedOrAssignedValue Then
					Throw New System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException()
				End If
				Me.Onid_p_0023Changing(value)
				Me.SendPropertyChanging
				Me._id_p_0023 = value
				Me.SendPropertyChanged("id_p_0023")
				Me.Onid_p_0023Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_par_val", DbType:="Money")>  _
	Public Property par_val() As System.Nullable(Of Decimal)
		Get
			Return Me._par_val
		End Get
		Set
			If (Me._par_val.Equals(value) = false) Then
				Me.Onpar_valChanging(value)
				Me.SendPropertyChanging
				Me._par_val = value
				Me.SendPropertyChanged("par_val")
				Me.Onpar_valChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_par_val_cob", DbType:="Money")>  _
	Public Property par_val_cob() As System.Nullable(Of Decimal)
		Get
			Return Me._par_val_cob
		End Get
		Set
			If (Me._par_val_cob.Equals(value) = false) Then
				Me.Onpar_val_cobChanging(value)
				Me.SendPropertyChanging
				Me._par_val_cob = value
				Me.SendPropertyChanged("par_val_cob")
				Me.Onpar_val_cobChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="opn_cls_nmn_cls", Storage:="_opn_cls", ThisKey:="id_opn", OtherKey:="id_opn", IsForeignKey:=true)>  _
	Public Property opn_cls() As opn_cls
		Get
			Return Me._opn_cls.Entity
		End Get
		Set
			Dim previousValue As opn_cls = Me._opn_cls.Entity
			If ((Object.Equals(previousValue, value) = false)  _
						OrElse (Me._opn_cls.HasLoadedOrAssignedValue = false)) Then
				Me.SendPropertyChanging
				If ((previousValue Is Nothing)  _
							= false) Then
					Me._opn_cls.Entity = Nothing
					previousValue.nmn_cls.Remove(Me)
				End If
				Me._opn_cls.Entity = value
				If ((value Is Nothing)  _
							= false) Then
					value.nmn_cls.Add(Me)
					Me._id_opn = value.id_opn
				Else
					Me._id_opn = CType(Nothing, Decimal)
				End If
				Me.SendPropertyChanged("opn_cls")
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="P_0023_cls_nmn_cls", Storage:="_P_0023_cls", ThisKey:="id_p_0023", OtherKey:="id_P_0023", IsForeignKey:=true)>  _
	Public Property P_0023_cls() As P_0023_cls
		Get
			Return Me._P_0023_cls.Entity
		End Get
		Set
			Dim previousValue As P_0023_cls = Me._P_0023_cls.Entity
			If ((Object.Equals(previousValue, value) = false)  _
						OrElse (Me._P_0023_cls.HasLoadedOrAssignedValue = false)) Then
				Me.SendPropertyChanging
				If ((previousValue Is Nothing)  _
							= false) Then
					Me._P_0023_cls.Entity = Nothing
					previousValue.nmn_cls.Remove(Me)
				End If
				Me._P_0023_cls.Entity = value
				If ((value Is Nothing)  _
							= false) Then
					value.nmn_cls.Add(Me)
					Me._id_p_0023 = value.id_P_0023
				Else
					Me._id_p_0023 = CType(Nothing, Integer)
				End If
				Me.SendPropertyChanged("P_0023_cls")
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.nnc")>  _
Partial Public Class nnc_cls
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _id_nnc As Decimal
	
	Private _id_ccf As Integer
	
	Private _id_opn As Decimal
	
	Private _id_suc As Integer
	
	Private _apb_cls As EntitySet(Of apb_cls)
	
	Private _ccf_cls As EntityRef(Of ccf_cls)
	
	Private _opn_cls As EntityRef(Of opn_cls)
	
	Private _suc_cls As EntityRef(Of suc_cls)
	
    #Region "Definiciones de métodos de extensibilidad"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub Onid_nncChanging(value As Decimal)
    End Sub
    Partial Private Sub Onid_nncChanged()
    End Sub
    Partial Private Sub Onid_ccfChanging(value As Integer)
    End Sub
    Partial Private Sub Onid_ccfChanged()
    End Sub
    Partial Private Sub Onid_opnChanging(value As Decimal)
    End Sub
    Partial Private Sub Onid_opnChanged()
    End Sub
    Partial Private Sub Onid_sucChanging(value As Integer)
    End Sub
    Partial Private Sub Onid_sucChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		Me._apb_cls = New EntitySet(Of apb_cls)(AddressOf Me.attach_apb_cls, AddressOf Me.detach_apb_cls)
		Me._ccf_cls = CType(Nothing, EntityRef(Of ccf_cls))
		Me._opn_cls = CType(Nothing, EntityRef(Of opn_cls))
		Me._suc_cls = CType(Nothing, EntityRef(Of suc_cls))
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_id_nnc", AutoSync:=AutoSync.OnInsert, DbType:="Decimal(18,0) NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property id_nnc() As Decimal
		Get
			Return Me._id_nnc
		End Get
		Set
			If ((Me._id_nnc = value)  _
						= false) Then
				Me.Onid_nncChanging(value)
				Me.SendPropertyChanging
				Me._id_nnc = value
				Me.SendPropertyChanged("id_nnc")
				Me.Onid_nncChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_id_ccf", DbType:="Int NOT NULL")>  _
	Public Property id_ccf() As Integer
		Get
			Return Me._id_ccf
		End Get
		Set
			If ((Me._id_ccf = value)  _
						= false) Then
				If Me._ccf_cls.HasLoadedOrAssignedValue Then
					Throw New System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException()
				End If
				Me.Onid_ccfChanging(value)
				Me.SendPropertyChanging
				Me._id_ccf = value
				Me.SendPropertyChanged("id_ccf")
				Me.Onid_ccfChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_id_opn", DbType:="Decimal(10,0) NOT NULL")>  _
	Public Property id_opn() As Decimal
		Get
			Return Me._id_opn
		End Get
		Set
			If ((Me._id_opn = value)  _
						= false) Then
				If Me._opn_cls.HasLoadedOrAssignedValue Then
					Throw New System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException()
				End If
				Me.Onid_opnChanging(value)
				Me.SendPropertyChanging
				Me._id_opn = value
				Me.SendPropertyChanged("id_opn")
				Me.Onid_opnChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_id_suc", DbType:="Int NOT NULL")>  _
	Public Property id_suc() As Integer
		Get
			Return Me._id_suc
		End Get
		Set
			If ((Me._id_suc = value)  _
						= false) Then
				If Me._suc_cls.HasLoadedOrAssignedValue Then
					Throw New System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException()
				End If
				Me.Onid_sucChanging(value)
				Me.SendPropertyChanging
				Me._id_suc = value
				Me.SendPropertyChanged("id_suc")
				Me.Onid_sucChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="nnc_cls_apb_cls", Storage:="_apb_cls", ThisKey:="id_nnc", OtherKey:="id_nnc")>  _
	Public Property apb_cls() As EntitySet(Of apb_cls)
		Get
			Return Me._apb_cls
		End Get
		Set
			Me._apb_cls.Assign(value)
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="ccf_cls_nnc_cls", Storage:="_ccf_cls", ThisKey:="id_ccf", OtherKey:="id_ccf", IsForeignKey:=true)>  _
	Public Property ccf_cls() As ccf_cls
		Get
			Return Me._ccf_cls.Entity
		End Get
		Set
			Dim previousValue As ccf_cls = Me._ccf_cls.Entity
			If ((Object.Equals(previousValue, value) = false)  _
						OrElse (Me._ccf_cls.HasLoadedOrAssignedValue = false)) Then
				Me.SendPropertyChanging
				If ((previousValue Is Nothing)  _
							= false) Then
					Me._ccf_cls.Entity = Nothing
					previousValue.nnc_cls.Remove(Me)
				End If
				Me._ccf_cls.Entity = value
				If ((value Is Nothing)  _
							= false) Then
					value.nnc_cls.Add(Me)
					Me._id_ccf = value.id_ccf
				Else
					Me._id_ccf = CType(Nothing, Integer)
				End If
				Me.SendPropertyChanged("ccf_cls")
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="opn_cls_nnc_cls", Storage:="_opn_cls", ThisKey:="id_opn", OtherKey:="id_opn", IsForeignKey:=true)>  _
	Public Property opn_cls() As opn_cls
		Get
			Return Me._opn_cls.Entity
		End Get
		Set
			Dim previousValue As opn_cls = Me._opn_cls.Entity
			If ((Object.Equals(previousValue, value) = false)  _
						OrElse (Me._opn_cls.HasLoadedOrAssignedValue = false)) Then
				Me.SendPropertyChanging
				If ((previousValue Is Nothing)  _
							= false) Then
					Me._opn_cls.Entity = Nothing
					previousValue.nnc_cls.Remove(Me)
				End If
				Me._opn_cls.Entity = value
				If ((value Is Nothing)  _
							= false) Then
					value.nnc_cls.Add(Me)
					Me._id_opn = value.id_opn
				Else
					Me._id_opn = CType(Nothing, Decimal)
				End If
				Me.SendPropertyChanged("opn_cls")
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="suc_cls_nnc_cls", Storage:="_suc_cls", ThisKey:="id_suc", OtherKey:="id_suc", IsForeignKey:=true)>  _
	Public Property suc_cls() As suc_cls
		Get
			Return Me._suc_cls.Entity
		End Get
		Set
			Dim previousValue As suc_cls = Me._suc_cls.Entity
			If ((Object.Equals(previousValue, value) = false)  _
						OrElse (Me._suc_cls.HasLoadedOrAssignedValue = false)) Then
				Me.SendPropertyChanging
				If ((previousValue Is Nothing)  _
							= false) Then
					Me._suc_cls.Entity = Nothing
					previousValue.nnc_cls.Remove(Me)
				End If
				Me._suc_cls.Entity = value
				If ((value Is Nothing)  _
							= false) Then
					value.nnc_cls.Add(Me)
					Me._id_suc = value.id_suc
				Else
					Me._id_suc = CType(Nothing, Integer)
				End If
				Me.SendPropertyChanged("suc_cls")
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
	
	Private Sub attach_apb_cls(ByVal entity As apb_cls)
		Me.SendPropertyChanging
		entity.nnc_cls = Me
	End Sub
	
	Private Sub detach_apb_cls(ByVal entity As apb_cls)
		Me.SendPropertyChanging
		entity.nnc_cls = Nothing
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.nrd")>  _
Partial Public Class nrd_cls
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _id_nrd As Integer
	
	Private _id_dsi As Decimal
	
	Private _id_chr As Decimal
	
	Private _mto_resp As Double
	
	Private _chr_cls As EntityRef(Of chr_cls)
	
	Private _dsi_cls As EntityRef(Of dsi_cls)
	
    #Region "Definiciones de métodos de extensibilidad"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub Onid_nrdChanging(value As Integer)
    End Sub
    Partial Private Sub Onid_nrdChanged()
    End Sub
    Partial Private Sub Onid_dsiChanging(value As Decimal)
    End Sub
    Partial Private Sub Onid_dsiChanged()
    End Sub
    Partial Private Sub Onid_chrChanging(value As Decimal)
    End Sub
    Partial Private Sub Onid_chrChanged()
    End Sub
    Partial Private Sub Onmto_respChanging(value As Double)
    End Sub
    Partial Private Sub Onmto_respChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		Me._chr_cls = CType(Nothing, EntityRef(Of chr_cls))
		Me._dsi_cls = CType(Nothing, EntityRef(Of dsi_cls))
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_id_nrd", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property id_nrd() As Integer
		Get
			Return Me._id_nrd
		End Get
		Set
			If ((Me._id_nrd = value)  _
						= false) Then
				Me.Onid_nrdChanging(value)
				Me.SendPropertyChanging
				Me._id_nrd = value
				Me.SendPropertyChanged("id_nrd")
				Me.Onid_nrdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_id_dsi", DbType:="Decimal(18,0) NOT NULL")>  _
	Public Property id_dsi() As Decimal
		Get
			Return Me._id_dsi
		End Get
		Set
			If ((Me._id_dsi = value)  _
						= false) Then
				If Me._dsi_cls.HasLoadedOrAssignedValue Then
					Throw New System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException()
				End If
				Me.Onid_dsiChanging(value)
				Me.SendPropertyChanging
				Me._id_dsi = value
				Me.SendPropertyChanged("id_dsi")
				Me.Onid_dsiChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_id_chr", DbType:="Decimal(18,0) NOT NULL")>  _
	Public Property id_chr() As Decimal
		Get
			Return Me._id_chr
		End Get
		Set
			If ((Me._id_chr = value)  _
						= false) Then
				If Me._chr_cls.HasLoadedOrAssignedValue Then
					Throw New System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException()
				End If
				Me.Onid_chrChanging(value)
				Me.SendPropertyChanging
				Me._id_chr = value
				Me.SendPropertyChanged("id_chr")
				Me.Onid_chrChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_mto_resp", DbType:="Float NOT NULL")>  _
	Public Property mto_resp() As Double
		Get
			Return Me._mto_resp
		End Get
		Set
			If ((Me._mto_resp = value)  _
						= false) Then
				Me.Onmto_respChanging(value)
				Me.SendPropertyChanging
				Me._mto_resp = value
				Me.SendPropertyChanged("mto_resp")
				Me.Onmto_respChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="chr_cls_nrd_cls", Storage:="_chr_cls", ThisKey:="id_chr", OtherKey:="id_chr", IsForeignKey:=true)>  _
	Public Property chr_cls() As chr_cls
		Get
			Return Me._chr_cls.Entity
		End Get
		Set
			Dim previousValue As chr_cls = Me._chr_cls.Entity
			If ((Object.Equals(previousValue, value) = false)  _
						OrElse (Me._chr_cls.HasLoadedOrAssignedValue = false)) Then
				Me.SendPropertyChanging
				If ((previousValue Is Nothing)  _
							= false) Then
					Me._chr_cls.Entity = Nothing
					previousValue.nrd_cls.Remove(Me)
				End If
				Me._chr_cls.Entity = value
				If ((value Is Nothing)  _
							= false) Then
					value.nrd_cls.Add(Me)
					Me._id_chr = value.id_chr
				Else
					Me._id_chr = CType(Nothing, Decimal)
				End If
				Me.SendPropertyChanged("chr_cls")
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="dsi_cls_nrd_cls", Storage:="_dsi_cls", ThisKey:="id_dsi", OtherKey:="id_dsi", IsForeignKey:=true)>  _
	Public Property dsi_cls() As dsi_cls
		Get
			Return Me._dsi_cls.Entity
		End Get
		Set
			Dim previousValue As dsi_cls = Me._dsi_cls.Entity
			If ((Object.Equals(previousValue, value) = false)  _
						OrElse (Me._dsi_cls.HasLoadedOrAssignedValue = false)) Then
				Me.SendPropertyChanging
				If ((previousValue Is Nothing)  _
							= false) Then
					Me._dsi_cls.Entity = Nothing
					previousValue.nrd_cls.Remove(Me)
				End If
				Me._dsi_cls.Entity = value
				If ((value Is Nothing)  _
							= false) Then
					value.nrd_cls.Add(Me)
					Me._id_dsi = value.id_dsi
				Else
					Me._id_dsi = CType(Nothing, Decimal)
				End If
				Me.SendPropertyChanged("dsi_cls")
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.ntr")>  _
Partial Public Class ntr_cls
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _id_ntr As Integer
	
	Private _id_suc As System.Nullable(Of Integer)
	
	Private _id_cmn As System.Nullable(Of Integer)
	
	Private _ntr_nom As String
	
	Private _ntr_dml As String
	
	Private _ntr_dml_emp As String
	
	Private _ntr_tel As String
	
	Private _ntr_def As String
	
	Private _cmn_cls As EntityRef(Of cmn_cls)
	
	Private _suc_cls As EntityRef(Of suc_cls)
	
    #Region "Definiciones de métodos de extensibilidad"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub Onid_ntrChanging(value As Integer)
    End Sub
    Partial Private Sub Onid_ntrChanged()
    End Sub
    Partial Private Sub Onid_sucChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub Onid_sucChanged()
    End Sub
    Partial Private Sub Onid_cmnChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub Onid_cmnChanged()
    End Sub
    Partial Private Sub Onntr_nomChanging(value As String)
    End Sub
    Partial Private Sub Onntr_nomChanged()
    End Sub
    Partial Private Sub Onntr_dmlChanging(value As String)
    End Sub
    Partial Private Sub Onntr_dmlChanged()
    End Sub
    Partial Private Sub Onntr_dml_empChanging(value As String)
    End Sub
    Partial Private Sub Onntr_dml_empChanged()
    End Sub
    Partial Private Sub Onntr_telChanging(value As String)
    End Sub
    Partial Private Sub Onntr_telChanged()
    End Sub
    Partial Private Sub Onntr_defChanging(value As String)
    End Sub
    Partial Private Sub Onntr_defChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		Me._cmn_cls = CType(Nothing, EntityRef(Of cmn_cls))
		Me._suc_cls = CType(Nothing, EntityRef(Of suc_cls))
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_id_ntr", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property id_ntr() As Integer
		Get
			Return Me._id_ntr
		End Get
		Set
			If ((Me._id_ntr = value)  _
						= false) Then
				Me.Onid_ntrChanging(value)
				Me.SendPropertyChanging
				Me._id_ntr = value
				Me.SendPropertyChanged("id_ntr")
				Me.Onid_ntrChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_id_suc", DbType:="Int")>  _
	Public Property id_suc() As System.Nullable(Of Integer)
		Get
			Return Me._id_suc
		End Get
		Set
			If (Me._id_suc.Equals(value) = false) Then
				If Me._suc_cls.HasLoadedOrAssignedValue Then
					Throw New System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException()
				End If
				Me.Onid_sucChanging(value)
				Me.SendPropertyChanging
				Me._id_suc = value
				Me.SendPropertyChanged("id_suc")
				Me.Onid_sucChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_id_cmn", DbType:="Int")>  _
	Public Property id_cmn() As System.Nullable(Of Integer)
		Get
			Return Me._id_cmn
		End Get
		Set
			If (Me._id_cmn.Equals(value) = false) Then
				If Me._cmn_cls.HasLoadedOrAssignedValue Then
					Throw New System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException()
				End If
				Me.Onid_cmnChanging(value)
				Me.SendPropertyChanging
				Me._id_cmn = value
				Me.SendPropertyChanged("id_cmn")
				Me.Onid_cmnChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ntr_nom", DbType:="VarChar(50)")>  _
	Public Property ntr_nom() As String
		Get
			Return Me._ntr_nom
		End Get
		Set
			If (String.Equals(Me._ntr_nom, value) = false) Then
				Me.Onntr_nomChanging(value)
				Me.SendPropertyChanging
				Me._ntr_nom = value
				Me.SendPropertyChanged("ntr_nom")
				Me.Onntr_nomChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ntr_dml", DbType:="VarChar(50)")>  _
	Public Property ntr_dml() As String
		Get
			Return Me._ntr_dml
		End Get
		Set
			If (String.Equals(Me._ntr_dml, value) = false) Then
				Me.Onntr_dmlChanging(value)
				Me.SendPropertyChanging
				Me._ntr_dml = value
				Me.SendPropertyChanged("ntr_dml")
				Me.Onntr_dmlChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ntr_dml_emp", DbType:="VarChar(50)")>  _
	Public Property ntr_dml_emp() As String
		Get
			Return Me._ntr_dml_emp
		End Get
		Set
			If (String.Equals(Me._ntr_dml_emp, value) = false) Then
				Me.Onntr_dml_empChanging(value)
				Me.SendPropertyChanging
				Me._ntr_dml_emp = value
				Me.SendPropertyChanged("ntr_dml_emp")
				Me.Onntr_dml_empChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ntr_tel", DbType:="VarChar(10)")>  _
	Public Property ntr_tel() As String
		Get
			Return Me._ntr_tel
		End Get
		Set
			If (String.Equals(Me._ntr_tel, value) = false) Then
				Me.Onntr_telChanging(value)
				Me.SendPropertyChanging
				Me._ntr_tel = value
				Me.SendPropertyChanged("ntr_tel")
				Me.Onntr_telChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ntr_def", DbType:="VarChar(1)")>  _
	Public Property ntr_def() As String
		Get
			Return Me._ntr_def
		End Get
		Set
			If (String.Equals(Me._ntr_def, value) = false) Then
				Me.Onntr_defChanging(value)
				Me.SendPropertyChanging
				Me._ntr_def = value
				Me.SendPropertyChanged("ntr_def")
				Me.Onntr_defChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="cmn_cls_ntr_cls", Storage:="_cmn_cls", ThisKey:="id_cmn", OtherKey:="id_cmn", IsForeignKey:=true)>  _
	Public Property cmn_cls() As cmn_cls
		Get
			Return Me._cmn_cls.Entity
		End Get
		Set
			Dim previousValue As cmn_cls = Me._cmn_cls.Entity
			If ((Object.Equals(previousValue, value) = false)  _
						OrElse (Me._cmn_cls.HasLoadedOrAssignedValue = false)) Then
				Me.SendPropertyChanging
				If ((previousValue Is Nothing)  _
							= false) Then
					Me._cmn_cls.Entity = Nothing
					previousValue.ntr_cls.Remove(Me)
				End If
				Me._cmn_cls.Entity = value
				If ((value Is Nothing)  _
							= false) Then
					value.ntr_cls.Add(Me)
					Me._id_cmn = value.id_cmn
				Else
					Me._id_cmn = CType(Nothing, Nullable(Of Integer))
				End If
				Me.SendPropertyChanged("cmn_cls")
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="suc_cls_ntr_cls", Storage:="_suc_cls", ThisKey:="id_suc", OtherKey:="id_suc", IsForeignKey:=true)>  _
	Public Property suc_cls() As suc_cls
		Get
			Return Me._suc_cls.Entity
		End Get
		Set
			Dim previousValue As suc_cls = Me._suc_cls.Entity
			If ((Object.Equals(previousValue, value) = false)  _
						OrElse (Me._suc_cls.HasLoadedOrAssignedValue = false)) Then
				Me.SendPropertyChanging
				If ((previousValue Is Nothing)  _
							= false) Then
					Me._suc_cls.Entity = Nothing
					previousValue.ntr_cls.Remove(Me)
				End If
				Me._suc_cls.Entity = value
				If ((value Is Nothing)  _
							= false) Then
					value.ntr_cls.Add(Me)
					Me._id_suc = value.id_suc
				Else
					Me._id_suc = CType(Nothing, Nullable(Of Integer))
				End If
				Me.SendPropertyChanged("suc_cls")
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.ope")>  _
Partial Public Class ope_cls
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _id_ope As Decimal
	
	Private _id_opn As System.Nullable(Of Decimal)
	
	Private _id_ldc As System.Nullable(Of Decimal)
	
	Private _id_fct As System.Nullable(Of Decimal)
	
	Private _id_eje As System.Nullable(Of Integer)
	
	Private _id_P_0030 As System.Nullable(Of Integer)
	
	Private _id_P_0077 As System.Nullable(Of Integer)
	
	Private _id_P_0070 As System.Nullable(Of Integer)
	
	Private _id_P_0083 As System.Nullable(Of Integer)
	
	Private _id_P_0104 As System.Nullable(Of Integer)
	
	Private _ope_com_tot_pes As System.Nullable(Of Decimal)
	
	Private _ope_cuo As Char
	
	Private _ope_cnt As String
	
	Private _ope_fec_sim As System.Nullable(Of Date)
	
	Private _ope_val_duf As System.Nullable(Of Decimal)
	
	Private _ope_imp_ope As System.Nullable(Of Decimal)
	
	Private _ope_val_dus As System.Nullable(Of Decimal)
	
	Private _ope_tmc_dsi As System.Nullable(Of Decimal)
	
	Private _ope_fev As System.Nullable(Of Date)
	
	Private _ope_por_ant As System.Nullable(Of Decimal)
	
	Private _ope_mto_ant As System.Nullable(Of Decimal)
	
	Private _ope_pre_com As System.Nullable(Of Decimal)
	
	Private _ope_dif_pre As System.Nullable(Of Decimal)
	
	Private _ope_sal_pen As System.Nullable(Of Decimal)
	
	Private _ope_sal_pag As System.Nullable(Of Decimal)
	
	Private _ope_com_tot As System.Nullable(Of Decimal)
	
	Private _ope_iva_com As System.Nullable(Of Decimal)
	
	Private _ope_mon_gas As System.Nullable(Of Decimal)
	
	Private _ope_cdo As System.Nullable(Of Char)
	
	Private _ope_obs_sim As String
	
	Private _ope_fac_cam As System.Nullable(Of Decimal)
	
	Private _ope_ptl As System.Nullable(Of Char)
	
	Private _ope_int_dev As System.Nullable(Of Decimal)
	
	Private _ope_fec_anl As System.Nullable(Of Date)
	
	Private _ope_gar_son As System.Nullable(Of Integer)
	
	Private _ope_res_son As System.Nullable(Of Integer)
	
	Private _ope_fec_ctb As System.Nullable(Of Date)
	
	Private _ope_lnl As System.Nullable(Of Char)
	
	Private _ope_fog_son As System.Nullable(Of Char)
	
	Private _ope_fog_gar As String
	
	Private _ope_fog_mto_lin As System.Nullable(Of Decimal)
	
	Private _ope_seg_son As System.Nullable(Of Char)
	
	Private _ope_fog_ven As System.Nullable(Of Date)
	
	Private _ope_por_com_fog As System.Nullable(Of Decimal)
	
	Private _ope_com_fog As System.Nullable(Of Decimal)
	
	Private _ope_fac_cam_pag As System.Nullable(Of Decimal)
	
	Private _ope_con_cje As System.Nullable(Of Char)
	
	Private _ope_iva_com_tot_pes As System.Nullable(Of Decimal)
	
	Private _ope_num_temporal As System.Nullable(Of Integer)
	
	Private _ope_tot_gir As System.Nullable(Of Decimal)
	
	Private _ope_mto_scb As System.Nullable(Of Decimal)
	
	Private _ope_val_gmf As System.Nullable(Of Decimal)
	
	Private _ope_mon_gas_afe As System.Nullable(Of Decimal)
	
	Private _ope_tot_gir_ant As System.Nullable(Of Decimal)
	
	Private _cdn_cls As EntitySet(Of cdn_cls)
	
	Private _doc_dig_ope_cls As EntitySet(Of doc_dig_ope_cls)
	
	Private _dsi_cls As EntitySet(Of dsi_cls)
	
	Private _gos_cls As EntitySet(Of gos_cls)
	
	Private _opo_cls As EntitySet(Of opo_cls)
	
	Private _pgr_cls As EntitySet(Of pgr_cls)
	
	Private _rxo_cls As EntitySet(Of rxo_cls)
	
	Private _sim_cxc_cls As EntitySet(Of sim_cxc_cls)
	
	Private _sim_cxp As EntitySet(Of sim_cxp_cls)
	
	Private _sim_egr_cls As EntitySet(Of sim_egr_cls)
	
	Private _fct_cls As EntityRef(Of fct_cls)
	
	Private _ldc_cls As EntityRef(Of ldc_cls)
	
	Private _opn_cls As EntityRef(Of opn_cls)
	
	Private _P_0030_cls As EntityRef(Of P_0030_cls)
	
	Private _P_0070_cls As EntityRef(Of P_0070_cls)
	
	Private _P_0077_cls As EntityRef(Of P_0077_cls)
	
	Private _P_0083_cls As EntityRef(Of P_0083_cls)
	
	Private _P_0104_cls As EntityRef(Of P_0104_cls)
	
	Private _eje_cls As EntityRef(Of eje_cls)
	
    #Region "Definiciones de métodos de extensibilidad"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub Onid_opeChanging(value As Decimal)
    End Sub
    Partial Private Sub Onid_opeChanged()
    End Sub
    Partial Private Sub Onid_opnChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub Onid_opnChanged()
    End Sub
    Partial Private Sub Onid_ldcChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub Onid_ldcChanged()
    End Sub
    Partial Private Sub Onid_fctChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub Onid_fctChanged()
    End Sub
    Partial Private Sub Onid_ejeChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub Onid_ejeChanged()
    End Sub
    Partial Private Sub Onid_P_0030Changing(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub Onid_P_0030Changed()
    End Sub
    Partial Private Sub Onid_P_0077Changing(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub Onid_P_0077Changed()
    End Sub
    Partial Private Sub Onid_P_0070Changing(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub Onid_P_0070Changed()
    End Sub
    Partial Private Sub Onid_P_0083Changing(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub Onid_P_0083Changed()
    End Sub
    Partial Private Sub Onid_P_0104Changing(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub Onid_P_0104Changed()
    End Sub
    Partial Private Sub Onope_com_tot_pesChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub Onope_com_tot_pesChanged()
    End Sub
    Partial Private Sub Onope_cuoChanging(value As Char)
    End Sub
    Partial Private Sub Onope_cuoChanged()
    End Sub
    Partial Private Sub Onope_cntChanging(value As String)
    End Sub
    Partial Private Sub Onope_cntChanged()
    End Sub
    Partial Private Sub Onope_fec_simChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub Onope_fec_simChanged()
    End Sub
    Partial Private Sub Onope_val_dufChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub Onope_val_dufChanged()
    End Sub
    Partial Private Sub Onope_imp_opeChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub Onope_imp_opeChanged()
    End Sub
    Partial Private Sub Onope_val_dusChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub Onope_val_dusChanged()
    End Sub
    Partial Private Sub Onope_tmc_dsiChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub Onope_tmc_dsiChanged()
    End Sub
    Partial Private Sub Onope_fevChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub Onope_fevChanged()
    End Sub
    Partial Private Sub Onope_por_antChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub Onope_por_antChanged()
    End Sub
    Partial Private Sub Onope_mto_antChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub Onope_mto_antChanged()
    End Sub
    Partial Private Sub Onope_pre_comChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub Onope_pre_comChanged()
    End Sub
    Partial Private Sub Onope_dif_preChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub Onope_dif_preChanged()
    End Sub
    Partial Private Sub Onope_sal_penChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub Onope_sal_penChanged()
    End Sub
    Partial Private Sub Onope_sal_pagChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub Onope_sal_pagChanged()
    End Sub
    Partial Private Sub Onope_com_totChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub Onope_com_totChanged()
    End Sub
    Partial Private Sub Onope_iva_comChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub Onope_iva_comChanged()
    End Sub
    Partial Private Sub Onope_mon_gasChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub Onope_mon_gasChanged()
    End Sub
    Partial Private Sub Onope_cdoChanging(value As System.Nullable(Of Char))
    End Sub
    Partial Private Sub Onope_cdoChanged()
    End Sub
    Partial Private Sub Onope_obs_simChanging(value As String)
    End Sub
    Partial Private Sub Onope_obs_simChanged()
    End Sub
    Partial Private Sub Onope_fac_camChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub Onope_fac_camChanged()
    End Sub
    Partial Private Sub Onope_ptlChanging(value As System.Nullable(Of Char))
    End Sub
    Partial Private Sub Onope_ptlChanged()
    End Sub
    Partial Private Sub Onope_int_devChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub Onope_int_devChanged()
    End Sub
    Partial Private Sub Onope_fec_anlChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub Onope_fec_anlChanged()
    End Sub
    Partial Private Sub Onope_gar_sonChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub Onope_gar_sonChanged()
    End Sub
    Partial Private Sub Onope_res_sonChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub Onope_res_sonChanged()
    End Sub
    Partial Private Sub Onope_fec_ctbChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub Onope_fec_ctbChanged()
    End Sub
    Partial Private Sub Onope_lnlChanging(value As System.Nullable(Of Char))
    End Sub
    Partial Private Sub Onope_lnlChanged()
    End Sub
    Partial Private Sub Onope_fog_sonChanging(value As System.Nullable(Of Char))
    End Sub
    Partial Private Sub Onope_fog_sonChanged()
    End Sub
    Partial Private Sub Onope_fog_garChanging(value As String)
    End Sub
    Partial Private Sub Onope_fog_garChanged()
    End Sub
    Partial Private Sub Onope_fog_mto_linChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub Onope_fog_mto_linChanged()
    End Sub
    Partial Private Sub Onope_seg_sonChanging(value As System.Nullable(Of Char))
    End Sub
    Partial Private Sub Onope_seg_sonChanged()
    End Sub
    Partial Private Sub Onope_fog_venChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub Onope_fog_venChanged()
    End Sub
    Partial Private Sub Onope_por_com_fogChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub Onope_por_com_fogChanged()
    End Sub
    Partial Private Sub Onope_com_fogChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub Onope_com_fogChanged()
    End Sub
    Partial Private Sub Onope_fac_cam_pagChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub Onope_fac_cam_pagChanged()
    End Sub
    Partial Private Sub Onope_con_cjeChanging(value As System.Nullable(Of Char))
    End Sub
    Partial Private Sub Onope_con_cjeChanged()
    End Sub
    Partial Private Sub Onope_iva_com_tot_pesChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub Onope_iva_com_tot_pesChanged()
    End Sub
    Partial Private Sub Onope_num_temporalChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub Onope_num_temporalChanged()
    End Sub
    Partial Private Sub Onope_tot_girChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub Onope_tot_girChanged()
    End Sub
    Partial Private Sub Onope_mto_scbChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub Onope_mto_scbChanged()
    End Sub
    Partial Private Sub Onope_val_gmfChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub Onope_val_gmfChanged()
    End Sub
    Partial Private Sub Onope_mon_gas_afeChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub Onope_mon_gas_afeChanged()
    End Sub
    Partial Private Sub Onope_tot_gir_antChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub Onope_tot_gir_antChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		Me._cdn_cls = New EntitySet(Of cdn_cls)(AddressOf Me.attach_cdn_cls, AddressOf Me.detach_cdn_cls)
		Me._doc_dig_ope_cls = New EntitySet(Of doc_dig_ope_cls)(AddressOf Me.attach_doc_dig_ope_cls, AddressOf Me.detach_doc_dig_ope_cls)
		Me._dsi_cls = New EntitySet(Of dsi_cls)(AddressOf Me.attach_dsi_cls, AddressOf Me.detach_dsi_cls)
		Me._gos_cls = New EntitySet(Of gos_cls)(AddressOf Me.attach_gos_cls, AddressOf Me.detach_gos_cls)
		Me._opo_cls = New EntitySet(Of opo_cls)(AddressOf Me.attach_opo_cls, AddressOf Me.detach_opo_cls)
		Me._pgr_cls = New EntitySet(Of pgr_cls)(AddressOf Me.attach_pgr_cls, AddressOf Me.detach_pgr_cls)
		Me._rxo_cls = New EntitySet(Of rxo_cls)(AddressOf Me.attach_rxo_cls, AddressOf Me.detach_rxo_cls)
		Me._sim_cxc_cls = New EntitySet(Of sim_cxc_cls)(AddressOf Me.attach_sim_cxc_cls, AddressOf Me.detach_sim_cxc_cls)
		Me._sim_cxp = New EntitySet(Of sim_cxp_cls)(AddressOf Me.attach_sim_cxp, AddressOf Me.detach_sim_cxp)
		Me._sim_egr_cls = New EntitySet(Of sim_egr_cls)(AddressOf Me.attach_sim_egr_cls, AddressOf Me.detach_sim_egr_cls)
		Me._fct_cls = CType(Nothing, EntityRef(Of fct_cls))
		Me._ldc_cls = CType(Nothing, EntityRef(Of ldc_cls))
		Me._opn_cls = CType(Nothing, EntityRef(Of opn_cls))
		Me._P_0030_cls = CType(Nothing, EntityRef(Of P_0030_cls))
		Me._P_0070_cls = CType(Nothing, EntityRef(Of P_0070_cls))
		Me._P_0077_cls = CType(Nothing, EntityRef(Of P_0077_cls))
		Me._P_0083_cls = CType(Nothing, EntityRef(Of P_0083_cls))
		Me._P_0104_cls = CType(Nothing, EntityRef(Of P_0104_cls))
		Me._eje_cls = CType(Nothing, EntityRef(Of eje_cls))
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_id_ope", AutoSync:=AutoSync.OnInsert, DbType:="Decimal(10,0) NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property id_ope() As Decimal
		Get
			Return Me._id_ope
		End Get
		Set
			If ((Me._id_ope = value)  _
						= false) Then
				Me.Onid_opeChanging(value)
				Me.SendPropertyChanging
				Me._id_ope = value
				Me.SendPropertyChanged("id_ope")
				Me.Onid_opeChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_id_opn", DbType:="Decimal(10,0)")>  _
	Public Property id_opn() As System.Nullable(Of Decimal)
		Get
			Return Me._id_opn
		End Get
		Set
			If (Me._id_opn.Equals(value) = false) Then
				If Me._opn_cls.HasLoadedOrAssignedValue Then
					Throw New System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException()
				End If
				Me.Onid_opnChanging(value)
				Me.SendPropertyChanging
				Me._id_opn = value
				Me.SendPropertyChanged("id_opn")
				Me.Onid_opnChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_id_ldc", DbType:="Decimal(18,0)")>  _
	Public Property id_ldc() As System.Nullable(Of Decimal)
		Get
			Return Me._id_ldc
		End Get
		Set
			If (Me._id_ldc.Equals(value) = false) Then
				If Me._ldc_cls.HasLoadedOrAssignedValue Then
					Throw New System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException()
				End If
				Me.Onid_ldcChanging(value)
				Me.SendPropertyChanging
				Me._id_ldc = value
				Me.SendPropertyChanged("id_ldc")
				Me.Onid_ldcChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_id_fct", DbType:="Decimal(10,0)")>  _
	Public Property id_fct() As System.Nullable(Of Decimal)
		Get
			Return Me._id_fct
		End Get
		Set
			If (Me._id_fct.Equals(value) = false) Then
				If Me._fct_cls.HasLoadedOrAssignedValue Then
					Throw New System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException()
				End If
				Me.Onid_fctChanging(value)
				Me.SendPropertyChanging
				Me._id_fct = value
				Me.SendPropertyChanged("id_fct")
				Me.Onid_fctChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_id_eje", DbType:="Int")>  _
	Public Property id_eje() As System.Nullable(Of Integer)
		Get
			Return Me._id_eje
		End Get
		Set
			If (Me._id_eje.Equals(value) = false) Then
				If Me._eje_cls.HasLoadedOrAssignedValue Then
					Throw New System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException()
				End If
				Me.Onid_ejeChanging(value)
				Me.SendPropertyChanging
				Me._id_eje = value
				Me.SendPropertyChanged("id_eje")
				Me.Onid_ejeChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_id_P_0030", DbType:="Int")>  _
	Public Property id_P_0030() As System.Nullable(Of Integer)
		Get
			Return Me._id_P_0030
		End Get
		Set
			If (Me._id_P_0030.Equals(value) = false) Then
				If Me._P_0030_cls.HasLoadedOrAssignedValue Then
					Throw New System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException()
				End If
				Me.Onid_P_0030Changing(value)
				Me.SendPropertyChanging
				Me._id_P_0030 = value
				Me.SendPropertyChanged("id_P_0030")
				Me.Onid_P_0030Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_id_P_0077", DbType:="Int")>  _
	Public Property id_P_0077() As System.Nullable(Of Integer)
		Get
			Return Me._id_P_0077
		End Get
		Set
			If (Me._id_P_0077.Equals(value) = false) Then
				If Me._P_0077_cls.HasLoadedOrAssignedValue Then
					Throw New System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException()
				End If
				Me.Onid_P_0077Changing(value)
				Me.SendPropertyChanging
				Me._id_P_0077 = value
				Me.SendPropertyChanged("id_P_0077")
				Me.Onid_P_0077Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_id_P_0070", DbType:="Int")>  _
	Public Property id_P_0070() As System.Nullable(Of Integer)
		Get
			Return Me._id_P_0070
		End Get
		Set
			If (Me._id_P_0070.Equals(value) = false) Then
				If Me._P_0070_cls.HasLoadedOrAssignedValue Then
					Throw New System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException()
				End If
				Me.Onid_P_0070Changing(value)
				Me.SendPropertyChanging
				Me._id_P_0070 = value
				Me.SendPropertyChanged("id_P_0070")
				Me.Onid_P_0070Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_id_P_0083", DbType:="Int")>  _
	Public Property id_P_0083() As System.Nullable(Of Integer)
		Get
			Return Me._id_P_0083
		End Get
		Set
			If (Me._id_P_0083.Equals(value) = false) Then
				If Me._P_0083_cls.HasLoadedOrAssignedValue Then
					Throw New System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException()
				End If
				Me.Onid_P_0083Changing(value)
				Me.SendPropertyChanging
				Me._id_P_0083 = value
				Me.SendPropertyChanged("id_P_0083")
				Me.Onid_P_0083Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_id_P_0104", DbType:="Int")>  _
	Public Property id_P_0104() As System.Nullable(Of Integer)
		Get
			Return Me._id_P_0104
		End Get
		Set
			If (Me._id_P_0104.Equals(value) = false) Then
				If Me._P_0104_cls.HasLoadedOrAssignedValue Then
					Throw New System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException()
				End If
				Me.Onid_P_0104Changing(value)
				Me.SendPropertyChanging
				Me._id_P_0104 = value
				Me.SendPropertyChanged("id_P_0104")
				Me.Onid_P_0104Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ope_com_tot_pes", DbType:="Money")>  _
	Public Property ope_com_tot_pes() As System.Nullable(Of Decimal)
		Get
			Return Me._ope_com_tot_pes
		End Get
		Set
			If (Me._ope_com_tot_pes.Equals(value) = false) Then
				Me.Onope_com_tot_pesChanging(value)
				Me.SendPropertyChanging
				Me._ope_com_tot_pes = value
				Me.SendPropertyChanged("ope_com_tot_pes")
				Me.Onope_com_tot_pesChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ope_cuo", DbType:="Char(1) NOT NULL")>  _
	Public Property ope_cuo() As Char
		Get
			Return Me._ope_cuo
		End Get
		Set
			If ((Me._ope_cuo = value)  _
						= false) Then
				Me.Onope_cuoChanging(value)
				Me.SendPropertyChanging
				Me._ope_cuo = value
				Me.SendPropertyChanged("ope_cuo")
				Me.Onope_cuoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ope_cnt", DbType:="Char(20) NOT NULL", CanBeNull:=false)>  _
	Public Property ope_cnt() As String
		Get
			Return Me._ope_cnt
		End Get
		Set
			If (String.Equals(Me._ope_cnt, value) = false) Then
				Me.Onope_cntChanging(value)
				Me.SendPropertyChanging
				Me._ope_cnt = value
				Me.SendPropertyChanged("ope_cnt")
				Me.Onope_cntChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ope_fec_sim", DbType:="DateTime")>  _
	Public Property ope_fec_sim() As System.Nullable(Of Date)
		Get
			Return Me._ope_fec_sim
		End Get
		Set
			If (Me._ope_fec_sim.Equals(value) = false) Then
				Me.Onope_fec_simChanging(value)
				Me.SendPropertyChanging
				Me._ope_fec_sim = value
				Me.SendPropertyChanged("ope_fec_sim")
				Me.Onope_fec_simChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ope_val_duf", DbType:="Money")>  _
	Public Property ope_val_duf() As System.Nullable(Of Decimal)
		Get
			Return Me._ope_val_duf
		End Get
		Set
			If (Me._ope_val_duf.Equals(value) = false) Then
				Me.Onope_val_dufChanging(value)
				Me.SendPropertyChanging
				Me._ope_val_duf = value
				Me.SendPropertyChanged("ope_val_duf")
				Me.Onope_val_dufChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ope_imp_ope", DbType:="Money")>  _
	Public Property ope_imp_ope() As System.Nullable(Of Decimal)
		Get
			Return Me._ope_imp_ope
		End Get
		Set
			If (Me._ope_imp_ope.Equals(value) = false) Then
				Me.Onope_imp_opeChanging(value)
				Me.SendPropertyChanging
				Me._ope_imp_ope = value
				Me.SendPropertyChanged("ope_imp_ope")
				Me.Onope_imp_opeChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ope_val_dus", DbType:="Money")>  _
	Public Property ope_val_dus() As System.Nullable(Of Decimal)
		Get
			Return Me._ope_val_dus
		End Get
		Set
			If (Me._ope_val_dus.Equals(value) = false) Then
				Me.Onope_val_dusChanging(value)
				Me.SendPropertyChanging
				Me._ope_val_dus = value
				Me.SendPropertyChanged("ope_val_dus")
				Me.Onope_val_dusChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ope_tmc_dsi", DbType:="Decimal(5,2)")>  _
	Public Property ope_tmc_dsi() As System.Nullable(Of Decimal)
		Get
			Return Me._ope_tmc_dsi
		End Get
		Set
			If (Me._ope_tmc_dsi.Equals(value) = false) Then
				Me.Onope_tmc_dsiChanging(value)
				Me.SendPropertyChanging
				Me._ope_tmc_dsi = value
				Me.SendPropertyChanged("ope_tmc_dsi")
				Me.Onope_tmc_dsiChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ope_fev", DbType:="DateTime")>  _
	Public Property ope_fev() As System.Nullable(Of Date)
		Get
			Return Me._ope_fev
		End Get
		Set
			If (Me._ope_fev.Equals(value) = false) Then
				Me.Onope_fevChanging(value)
				Me.SendPropertyChanging
				Me._ope_fev = value
				Me.SendPropertyChanged("ope_fev")
				Me.Onope_fevChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ope_por_ant", DbType:="Decimal(5,2)")>  _
	Public Property ope_por_ant() As System.Nullable(Of Decimal)
		Get
			Return Me._ope_por_ant
		End Get
		Set
			If (Me._ope_por_ant.Equals(value) = false) Then
				Me.Onope_por_antChanging(value)
				Me.SendPropertyChanging
				Me._ope_por_ant = value
				Me.SendPropertyChanged("ope_por_ant")
				Me.Onope_por_antChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ope_mto_ant", DbType:="Money")>  _
	Public Property ope_mto_ant() As System.Nullable(Of Decimal)
		Get
			Return Me._ope_mto_ant
		End Get
		Set
			If (Me._ope_mto_ant.Equals(value) = false) Then
				Me.Onope_mto_antChanging(value)
				Me.SendPropertyChanging
				Me._ope_mto_ant = value
				Me.SendPropertyChanged("ope_mto_ant")
				Me.Onope_mto_antChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ope_pre_com", DbType:="Money")>  _
	Public Property ope_pre_com() As System.Nullable(Of Decimal)
		Get
			Return Me._ope_pre_com
		End Get
		Set
			If (Me._ope_pre_com.Equals(value) = false) Then
				Me.Onope_pre_comChanging(value)
				Me.SendPropertyChanging
				Me._ope_pre_com = value
				Me.SendPropertyChanged("ope_pre_com")
				Me.Onope_pre_comChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ope_dif_pre", DbType:="Money")>  _
	Public Property ope_dif_pre() As System.Nullable(Of Decimal)
		Get
			Return Me._ope_dif_pre
		End Get
		Set
			If (Me._ope_dif_pre.Equals(value) = false) Then
				Me.Onope_dif_preChanging(value)
				Me.SendPropertyChanging
				Me._ope_dif_pre = value
				Me.SendPropertyChanged("ope_dif_pre")
				Me.Onope_dif_preChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ope_sal_pen", DbType:="Money")>  _
	Public Property ope_sal_pen() As System.Nullable(Of Decimal)
		Get
			Return Me._ope_sal_pen
		End Get
		Set
			If (Me._ope_sal_pen.Equals(value) = false) Then
				Me.Onope_sal_penChanging(value)
				Me.SendPropertyChanging
				Me._ope_sal_pen = value
				Me.SendPropertyChanged("ope_sal_pen")
				Me.Onope_sal_penChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ope_sal_pag", DbType:="Money")>  _
	Public Property ope_sal_pag() As System.Nullable(Of Decimal)
		Get
			Return Me._ope_sal_pag
		End Get
		Set
			If (Me._ope_sal_pag.Equals(value) = false) Then
				Me.Onope_sal_pagChanging(value)
				Me.SendPropertyChanging
				Me._ope_sal_pag = value
				Me.SendPropertyChanged("ope_sal_pag")
				Me.Onope_sal_pagChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ope_com_tot", DbType:="Money")>  _
	Public Property ope_com_tot() As System.Nullable(Of Decimal)
		Get
			Return Me._ope_com_tot
		End Get
		Set
			If (Me._ope_com_tot.Equals(value) = false) Then
				Me.Onope_com_totChanging(value)
				Me.SendPropertyChanging
				Me._ope_com_tot = value
				Me.SendPropertyChanged("ope_com_tot")
				Me.Onope_com_totChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ope_iva_com", DbType:="Money")>  _
	Public Property ope_iva_com() As System.Nullable(Of Decimal)
		Get
			Return Me._ope_iva_com
		End Get
		Set
			If (Me._ope_iva_com.Equals(value) = false) Then
				Me.Onope_iva_comChanging(value)
				Me.SendPropertyChanging
				Me._ope_iva_com = value
				Me.SendPropertyChanged("ope_iva_com")
				Me.Onope_iva_comChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ope_mon_gas", DbType:="Money")>  _
	Public Property ope_mon_gas() As System.Nullable(Of Decimal)
		Get
			Return Me._ope_mon_gas
		End Get
		Set
			If (Me._ope_mon_gas.Equals(value) = false) Then
				Me.Onope_mon_gasChanging(value)
				Me.SendPropertyChanging
				Me._ope_mon_gas = value
				Me.SendPropertyChanged("ope_mon_gas")
				Me.Onope_mon_gasChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ope_cdo", DbType:="Char(1)")>  _
	Public Property ope_cdo() As System.Nullable(Of Char)
		Get
			Return Me._ope_cdo
		End Get
		Set
			If (Me._ope_cdo.Equals(value) = false) Then
				Me.Onope_cdoChanging(value)
				Me.SendPropertyChanging
				Me._ope_cdo = value
				Me.SendPropertyChanged("ope_cdo")
				Me.Onope_cdoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ope_obs_sim", DbType:="VarChar(255)")>  _
	Public Property ope_obs_sim() As String
		Get
			Return Me._ope_obs_sim
		End Get
		Set
			If (String.Equals(Me._ope_obs_sim, value) = false) Then
				Me.Onope_obs_simChanging(value)
				Me.SendPropertyChanging
				Me._ope_obs_sim = value
				Me.SendPropertyChanged("ope_obs_sim")
				Me.Onope_obs_simChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ope_fac_cam", DbType:="Money")>  _
	Public Property ope_fac_cam() As System.Nullable(Of Decimal)
		Get
			Return Me._ope_fac_cam
		End Get
		Set
			If (Me._ope_fac_cam.Equals(value) = false) Then
				Me.Onope_fac_camChanging(value)
				Me.SendPropertyChanging
				Me._ope_fac_cam = value
				Me.SendPropertyChanged("ope_fac_cam")
				Me.Onope_fac_camChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ope_ptl", DbType:="Char(1)")>  _
	Public Property ope_ptl() As System.Nullable(Of Char)
		Get
			Return Me._ope_ptl
		End Get
		Set
			If (Me._ope_ptl.Equals(value) = false) Then
				Me.Onope_ptlChanging(value)
				Me.SendPropertyChanging
				Me._ope_ptl = value
				Me.SendPropertyChanged("ope_ptl")
				Me.Onope_ptlChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ope_int_dev", DbType:="Money")>  _
	Public Property ope_int_dev() As System.Nullable(Of Decimal)
		Get
			Return Me._ope_int_dev
		End Get
		Set
			If (Me._ope_int_dev.Equals(value) = false) Then
				Me.Onope_int_devChanging(value)
				Me.SendPropertyChanging
				Me._ope_int_dev = value
				Me.SendPropertyChanged("ope_int_dev")
				Me.Onope_int_devChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ope_fec_anl", DbType:="DateTime")>  _
	Public Property ope_fec_anl() As System.Nullable(Of Date)
		Get
			Return Me._ope_fec_anl
		End Get
		Set
			If (Me._ope_fec_anl.Equals(value) = false) Then
				Me.Onope_fec_anlChanging(value)
				Me.SendPropertyChanging
				Me._ope_fec_anl = value
				Me.SendPropertyChanged("ope_fec_anl")
				Me.Onope_fec_anlChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ope_gar_son", DbType:="Int")>  _
	Public Property ope_gar_son() As System.Nullable(Of Integer)
		Get
			Return Me._ope_gar_son
		End Get
		Set
			If (Me._ope_gar_son.Equals(value) = false) Then
				Me.Onope_gar_sonChanging(value)
				Me.SendPropertyChanging
				Me._ope_gar_son = value
				Me.SendPropertyChanged("ope_gar_son")
				Me.Onope_gar_sonChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ope_res_son", DbType:="Int")>  _
	Public Property ope_res_son() As System.Nullable(Of Integer)
		Get
			Return Me._ope_res_son
		End Get
		Set
			If (Me._ope_res_son.Equals(value) = false) Then
				Me.Onope_res_sonChanging(value)
				Me.SendPropertyChanging
				Me._ope_res_son = value
				Me.SendPropertyChanged("ope_res_son")
				Me.Onope_res_sonChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ope_fec_ctb", DbType:="DateTime")>  _
	Public Property ope_fec_ctb() As System.Nullable(Of Date)
		Get
			Return Me._ope_fec_ctb
		End Get
		Set
			If (Me._ope_fec_ctb.Equals(value) = false) Then
				Me.Onope_fec_ctbChanging(value)
				Me.SendPropertyChanging
				Me._ope_fec_ctb = value
				Me.SendPropertyChanged("ope_fec_ctb")
				Me.Onope_fec_ctbChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ope_lnl", DbType:="Char(1)")>  _
	Public Property ope_lnl() As System.Nullable(Of Char)
		Get
			Return Me._ope_lnl
		End Get
		Set
			If (Me._ope_lnl.Equals(value) = false) Then
				Me.Onope_lnlChanging(value)
				Me.SendPropertyChanging
				Me._ope_lnl = value
				Me.SendPropertyChanged("ope_lnl")
				Me.Onope_lnlChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ope_fog_son", DbType:="Char(1)")>  _
	Public Property ope_fog_son() As System.Nullable(Of Char)
		Get
			Return Me._ope_fog_son
		End Get
		Set
			If (Me._ope_fog_son.Equals(value) = false) Then
				Me.Onope_fog_sonChanging(value)
				Me.SendPropertyChanging
				Me._ope_fog_son = value
				Me.SendPropertyChanged("ope_fog_son")
				Me.Onope_fog_sonChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ope_fog_gar", DbType:="VarChar(15)")>  _
	Public Property ope_fog_gar() As String
		Get
			Return Me._ope_fog_gar
		End Get
		Set
			If (String.Equals(Me._ope_fog_gar, value) = false) Then
				Me.Onope_fog_garChanging(value)
				Me.SendPropertyChanging
				Me._ope_fog_gar = value
				Me.SendPropertyChanged("ope_fog_gar")
				Me.Onope_fog_garChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ope_fog_mto_lin", DbType:="Money")>  _
	Public Property ope_fog_mto_lin() As System.Nullable(Of Decimal)
		Get
			Return Me._ope_fog_mto_lin
		End Get
		Set
			If (Me._ope_fog_mto_lin.Equals(value) = false) Then
				Me.Onope_fog_mto_linChanging(value)
				Me.SendPropertyChanging
				Me._ope_fog_mto_lin = value
				Me.SendPropertyChanged("ope_fog_mto_lin")
				Me.Onope_fog_mto_linChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ope_seg_son", DbType:="Char(1)")>  _
	Public Property ope_seg_son() As System.Nullable(Of Char)
		Get
			Return Me._ope_seg_son
		End Get
		Set
			If (Me._ope_seg_son.Equals(value) = false) Then
				Me.Onope_seg_sonChanging(value)
				Me.SendPropertyChanging
				Me._ope_seg_son = value
				Me.SendPropertyChanged("ope_seg_son")
				Me.Onope_seg_sonChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ope_fog_ven", DbType:="DateTime")>  _
	Public Property ope_fog_ven() As System.Nullable(Of Date)
		Get
			Return Me._ope_fog_ven
		End Get
		Set
			If (Me._ope_fog_ven.Equals(value) = false) Then
				Me.Onope_fog_venChanging(value)
				Me.SendPropertyChanging
				Me._ope_fog_ven = value
				Me.SendPropertyChanged("ope_fog_ven")
				Me.Onope_fog_venChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ope_por_com_fog", DbType:="Decimal(5,2)")>  _
	Public Property ope_por_com_fog() As System.Nullable(Of Decimal)
		Get
			Return Me._ope_por_com_fog
		End Get
		Set
			If (Me._ope_por_com_fog.Equals(value) = false) Then
				Me.Onope_por_com_fogChanging(value)
				Me.SendPropertyChanging
				Me._ope_por_com_fog = value
				Me.SendPropertyChanged("ope_por_com_fog")
				Me.Onope_por_com_fogChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ope_com_fog", DbType:="Decimal(5,2)")>  _
	Public Property ope_com_fog() As System.Nullable(Of Decimal)
		Get
			Return Me._ope_com_fog
		End Get
		Set
			If (Me._ope_com_fog.Equals(value) = false) Then
				Me.Onope_com_fogChanging(value)
				Me.SendPropertyChanging
				Me._ope_com_fog = value
				Me.SendPropertyChanged("ope_com_fog")
				Me.Onope_com_fogChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ope_fac_cam_pag", DbType:="Money")>  _
	Public Property ope_fac_cam_pag() As System.Nullable(Of Decimal)
		Get
			Return Me._ope_fac_cam_pag
		End Get
		Set
			If (Me._ope_fac_cam_pag.Equals(value) = false) Then
				Me.Onope_fac_cam_pagChanging(value)
				Me.SendPropertyChanging
				Me._ope_fac_cam_pag = value
				Me.SendPropertyChanged("ope_fac_cam_pag")
				Me.Onope_fac_cam_pagChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ope_con_cje", DbType:="Char(1)")>  _
	Public Property ope_con_cje() As System.Nullable(Of Char)
		Get
			Return Me._ope_con_cje
		End Get
		Set
			If (Me._ope_con_cje.Equals(value) = false) Then
				Me.Onope_con_cjeChanging(value)
				Me.SendPropertyChanging
				Me._ope_con_cje = value
				Me.SendPropertyChanged("ope_con_cje")
				Me.Onope_con_cjeChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ope_iva_com_tot_pes", DbType:="Money")>  _
	Public Property ope_iva_com_tot_pes() As System.Nullable(Of Decimal)
		Get
			Return Me._ope_iva_com_tot_pes
		End Get
		Set
			If (Me._ope_iva_com_tot_pes.Equals(value) = false) Then
				Me.Onope_iva_com_tot_pesChanging(value)
				Me.SendPropertyChanging
				Me._ope_iva_com_tot_pes = value
				Me.SendPropertyChanged("ope_iva_com_tot_pes")
				Me.Onope_iva_com_tot_pesChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ope_num_temporal", DbType:="Int")>  _
	Public Property ope_num_temporal() As System.Nullable(Of Integer)
		Get
			Return Me._ope_num_temporal
		End Get
		Set
			If (Me._ope_num_temporal.Equals(value) = false) Then
				Me.Onope_num_temporalChanging(value)
				Me.SendPropertyChanging
				Me._ope_num_temporal = value
				Me.SendPropertyChanged("ope_num_temporal")
				Me.Onope_num_temporalChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ope_tot_gir", DbType:="Money")>  _
	Public Property ope_tot_gir() As System.Nullable(Of Decimal)
		Get
			Return Me._ope_tot_gir
		End Get
		Set
			If (Me._ope_tot_gir.Equals(value) = false) Then
				Me.Onope_tot_girChanging(value)
				Me.SendPropertyChanging
				Me._ope_tot_gir = value
				Me.SendPropertyChanged("ope_tot_gir")
				Me.Onope_tot_girChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ope_mto_scb", DbType:="Money")>  _
	Public Property ope_mto_scb() As System.Nullable(Of Decimal)
		Get
			Return Me._ope_mto_scb
		End Get
		Set
			If (Me._ope_mto_scb.Equals(value) = false) Then
				Me.Onope_mto_scbChanging(value)
				Me.SendPropertyChanging
				Me._ope_mto_scb = value
				Me.SendPropertyChanged("ope_mto_scb")
				Me.Onope_mto_scbChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ope_val_gmf", DbType:="Money")>  _
	Public Property ope_val_gmf() As System.Nullable(Of Decimal)
		Get
			Return Me._ope_val_gmf
		End Get
		Set
			If (Me._ope_val_gmf.Equals(value) = false) Then
				Me.Onope_val_gmfChanging(value)
				Me.SendPropertyChanging
				Me._ope_val_gmf = value
				Me.SendPropertyChanged("ope_val_gmf")
				Me.Onope_val_gmfChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ope_mon_gas_afe", DbType:="Money")>  _
	Public Property ope_mon_gas_afe() As System.Nullable(Of Decimal)
		Get
			Return Me._ope_mon_gas_afe
		End Get
		Set
			If (Me._ope_mon_gas_afe.Equals(value) = false) Then
				Me.Onope_mon_gas_afeChanging(value)
				Me.SendPropertyChanging
				Me._ope_mon_gas_afe = value
				Me.SendPropertyChanged("ope_mon_gas_afe")
				Me.Onope_mon_gas_afeChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ope_tot_gir_ant", DbType:="Money")>  _
	Public Property ope_tot_gir_ant() As System.Nullable(Of Decimal)
		Get
			Return Me._ope_tot_gir_ant
		End Get
		Set
			If (Me._ope_tot_gir_ant.Equals(value) = false) Then
				Me.Onope_tot_gir_antChanging(value)
				Me.SendPropertyChanging
				Me._ope_tot_gir_ant = value
				Me.SendPropertyChanged("ope_tot_gir_ant")
				Me.Onope_tot_gir_antChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="ope_cls_cdn_cls", Storage:="_cdn_cls", ThisKey:="id_ope", OtherKey:="id_ope")>  _
	Public Property cdn_cls() As EntitySet(Of cdn_cls)
		Get
			Return Me._cdn_cls
		End Get
		Set
			Me._cdn_cls.Assign(value)
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="ope_cls_doc_dig_ope_cls", Storage:="_doc_dig_ope_cls", ThisKey:="id_ope", OtherKey:="id_ope")>  _
	Public Property doc_dig_ope_cls() As EntitySet(Of doc_dig_ope_cls)
		Get
			Return Me._doc_dig_ope_cls
		End Get
		Set
			Me._doc_dig_ope_cls.Assign(value)
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="ope_cls_dsi_cls", Storage:="_dsi_cls", ThisKey:="id_ope", OtherKey:="id_ope")>  _
	Public Property dsi_cls() As EntitySet(Of dsi_cls)
		Get
			Return Me._dsi_cls
		End Get
		Set
			Me._dsi_cls.Assign(value)
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="ope_cls_gos_cls", Storage:="_gos_cls", ThisKey:="id_ope", OtherKey:="id_ope")>  _
	Public Property gos_cls() As EntitySet(Of gos_cls)
		Get
			Return Me._gos_cls
		End Get
		Set
			Me._gos_cls.Assign(value)
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="ope_cls_opo_cls", Storage:="_opo_cls", ThisKey:="id_ope", OtherKey:="id_ope")>  _
	Public Property opo_cls() As EntitySet(Of opo_cls)
		Get
			Return Me._opo_cls
		End Get
		Set
			Me._opo_cls.Assign(value)
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="ope_cls_pgr_cls", Storage:="_pgr_cls", ThisKey:="id_ope", OtherKey:="id_ope")>  _
	Public Property pgr_cls() As EntitySet(Of pgr_cls)
		Get
			Return Me._pgr_cls
		End Get
		Set
			Me._pgr_cls.Assign(value)
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="ope_cls_rxo_cls", Storage:="_rxo_cls", ThisKey:="id_ope", OtherKey:="id_ope")>  _
	Public Property rxo_cls() As EntitySet(Of rxo_cls)
		Get
			Return Me._rxo_cls
		End Get
		Set
			Me._rxo_cls.Assign(value)
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="ope_cls_sim_cxc_cls", Storage:="_sim_cxc_cls", ThisKey:="id_ope", OtherKey:="id_ope")>  _
	Public Property sim_cxc_cls() As EntitySet(Of sim_cxc_cls)
		Get
			Return Me._sim_cxc_cls
		End Get
		Set
			Me._sim_cxc_cls.Assign(value)
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="ope_cls_sim_cxp_cls", Storage:="_sim_cxp", ThisKey:="id_ope", OtherKey:="id_ope")>  _
	Public Property sim_cxp_cls() As EntitySet(Of sim_cxp_cls)
		Get
			Return Me._sim_cxp
		End Get
		Set
			Me._sim_cxp.Assign(value)
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="ope_cls_sim_egr_cls", Storage:="_sim_egr_cls", ThisKey:="id_ope", OtherKey:="id_ope")>  _
	Public Property sim_egr_cls() As EntitySet(Of sim_egr_cls)
		Get
			Return Me._sim_egr_cls
		End Get
		Set
			Me._sim_egr_cls.Assign(value)
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="fct_cls_ope_cls", Storage:="_fct_cls", ThisKey:="id_fct", OtherKey:="id_fct", IsForeignKey:=true)>  _
	Public Property fct_cls() As fct_cls
		Get
			Return Me._fct_cls.Entity
		End Get
		Set
			Dim previousValue As fct_cls = Me._fct_cls.Entity
			If ((Object.Equals(previousValue, value) = false)  _
						OrElse (Me._fct_cls.HasLoadedOrAssignedValue = false)) Then
				Me.SendPropertyChanging
				If ((previousValue Is Nothing)  _
							= false) Then
					Me._fct_cls.Entity = Nothing
					previousValue.ope_cls.Remove(Me)
				End If
				Me._fct_cls.Entity = value
				If ((value Is Nothing)  _
							= false) Then
					value.ope_cls.Add(Me)
					Me._id_fct = value.id_fct
				Else
					Me._id_fct = CType(Nothing, Nullable(Of Decimal))
				End If
				Me.SendPropertyChanged("fct_cls")
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="ldc_cls_ope_cls", Storage:="_ldc_cls", ThisKey:="id_ldc", OtherKey:="id_ldc", IsForeignKey:=true)>  _
	Public Property ldc_cls() As ldc_cls
		Get
			Return Me._ldc_cls.Entity
		End Get
		Set
			Dim previousValue As ldc_cls = Me._ldc_cls.Entity
			If ((Object.Equals(previousValue, value) = false)  _
						OrElse (Me._ldc_cls.HasLoadedOrAssignedValue = false)) Then
				Me.SendPropertyChanging
				If ((previousValue Is Nothing)  _
							= false) Then
					Me._ldc_cls.Entity = Nothing
					previousValue.ope_cls.Remove(Me)
				End If
				Me._ldc_cls.Entity = value
				If ((value Is Nothing)  _
							= false) Then
					value.ope_cls.Add(Me)
					Me._id_ldc = value.id_ldc
				Else
					Me._id_ldc = CType(Nothing, Nullable(Of Decimal))
				End If
				Me.SendPropertyChanged("ldc_cls")
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="opn_cls_ope_cls", Storage:="_opn_cls", ThisKey:="id_opn", OtherKey:="id_opn", IsForeignKey:=true)>  _
	Public Property opn_cls() As opn_cls
		Get
			Return Me._opn_cls.Entity
		End Get
		Set
			Dim previousValue As opn_cls = Me._opn_cls.Entity
			If ((Object.Equals(previousValue, value) = false)  _
						OrElse (Me._opn_cls.HasLoadedOrAssignedValue = false)) Then
				Me.SendPropertyChanging
				If ((previousValue Is Nothing)  _
							= false) Then
					Me._opn_cls.Entity = Nothing
					previousValue.ope_cls.Remove(Me)
				End If
				Me._opn_cls.Entity = value
				If ((value Is Nothing)  _
							= false) Then
					value.ope_cls.Add(Me)
					Me._id_opn = value.id_opn
				Else
					Me._id_opn = CType(Nothing, Nullable(Of Decimal))
				End If
				Me.SendPropertyChanged("opn_cls")
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="P_0030_cls_ope_cls", Storage:="_P_0030_cls", ThisKey:="id_P_0030", OtherKey:="id_P_0030", IsForeignKey:=true)>  _
	Public Property P_0030_cls() As P_0030_cls
		Get
			Return Me._P_0030_cls.Entity
		End Get
		Set
			Dim previousValue As P_0030_cls = Me._P_0030_cls.Entity
			If ((Object.Equals(previousValue, value) = false)  _
						OrElse (Me._P_0030_cls.HasLoadedOrAssignedValue = false)) Then
				Me.SendPropertyChanging
				If ((previousValue Is Nothing)  _
							= false) Then
					Me._P_0030_cls.Entity = Nothing
					previousValue.ope_cls.Remove(Me)
				End If
				Me._P_0030_cls.Entity = value
				If ((value Is Nothing)  _
							= false) Then
					value.ope_cls.Add(Me)
					Me._id_P_0030 = value.id_P_0030
				Else
					Me._id_P_0030 = CType(Nothing, Nullable(Of Integer))
				End If
				Me.SendPropertyChanged("P_0030_cls")
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="P_0070_cls_ope_cls", Storage:="_P_0070_cls", ThisKey:="id_P_0070", OtherKey:="id_P_0070", IsForeignKey:=true)>  _
	Public Property P_0070_cls() As P_0070_cls
		Get
			Return Me._P_0070_cls.Entity
		End Get
		Set
			Dim previousValue As P_0070_cls = Me._P_0070_cls.Entity
			If ((Object.Equals(previousValue, value) = false)  _
						OrElse (Me._P_0070_cls.HasLoadedOrAssignedValue = false)) Then
				Me.SendPropertyChanging
				If ((previousValue Is Nothing)  _
							= false) Then
					Me._P_0070_cls.Entity = Nothing
					previousValue.ope_cls.Remove(Me)
				End If
				Me._P_0070_cls.Entity = value
				If ((value Is Nothing)  _
							= false) Then
					value.ope_cls.Add(Me)
					Me._id_P_0070 = value.id_P_0070
				Else
					Me._id_P_0070 = CType(Nothing, Nullable(Of Integer))
				End If
				Me.SendPropertyChanged("P_0070_cls")
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="P_0077_cls_ope_cls", Storage:="_P_0077_cls", ThisKey:="id_P_0077", OtherKey:="id_P_0077", IsForeignKey:=true)>  _
	Public Property P_0077_cls() As P_0077_cls
		Get
			Return Me._P_0077_cls.Entity
		End Get
		Set
			Dim previousValue As P_0077_cls = Me._P_0077_cls.Entity
			If ((Object.Equals(previousValue, value) = false)  _
						OrElse (Me._P_0077_cls.HasLoadedOrAssignedValue = false)) Then
				Me.SendPropertyChanging
				If ((previousValue Is Nothing)  _
							= false) Then
					Me._P_0077_cls.Entity = Nothing
					previousValue.ope_cls.Remove(Me)
				End If
				Me._P_0077_cls.Entity = value
				If ((value Is Nothing)  _
							= false) Then
					value.ope_cls.Add(Me)
					Me._id_P_0077 = value.id_P_0077
				Else
					Me._id_P_0077 = CType(Nothing, Nullable(Of Integer))
				End If
				Me.SendPropertyChanged("P_0077_cls")
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="P_0083_cls_ope_cls", Storage:="_P_0083_cls", ThisKey:="id_P_0083", OtherKey:="id_P_0083", IsForeignKey:=true)>  _
	Public Property P_0083_cls() As P_0083_cls
		Get
			Return Me._P_0083_cls.Entity
		End Get
		Set
			Dim previousValue As P_0083_cls = Me._P_0083_cls.Entity
			If ((Object.Equals(previousValue, value) = false)  _
						OrElse (Me._P_0083_cls.HasLoadedOrAssignedValue = false)) Then
				Me.SendPropertyChanging
				If ((previousValue Is Nothing)  _
							= false) Then
					Me._P_0083_cls.Entity = Nothing
					previousValue.ope_cls.Remove(Me)
				End If
				Me._P_0083_cls.Entity = value
				If ((value Is Nothing)  _
							= false) Then
					value.ope_cls.Add(Me)
					Me._id_P_0083 = value.id_P_0083
				Else
					Me._id_P_0083 = CType(Nothing, Nullable(Of Integer))
				End If
				Me.SendPropertyChanged("P_0083_cls")
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="P_0104_cls_ope_cls", Storage:="_P_0104_cls", ThisKey:="id_P_0104", OtherKey:="id_P_0104", IsForeignKey:=true)>  _
	Public Property P_0104_cls() As P_0104_cls
		Get
			Return Me._P_0104_cls.Entity
		End Get
		Set
			Dim previousValue As P_0104_cls = Me._P_0104_cls.Entity
			If ((Object.Equals(previousValue, value) = false)  _
						OrElse (Me._P_0104_cls.HasLoadedOrAssignedValue = false)) Then
				Me.SendPropertyChanging
				If ((previousValue Is Nothing)  _
							= false) Then
					Me._P_0104_cls.Entity = Nothing
					previousValue.ope_cls.Remove(Me)
				End If
				Me._P_0104_cls.Entity = value
				If ((value Is Nothing)  _
							= false) Then
					value.ope_cls.Add(Me)
					Me._id_P_0104 = value.id_P_0104
				Else
					Me._id_P_0104 = CType(Nothing, Nullable(Of Integer))
				End If
				Me.SendPropertyChanged("P_0104_cls")
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="eje_cls_ope_cls", Storage:="_eje_cls", ThisKey:="id_eje", OtherKey:="id_eje", IsForeignKey:=true)>  _
	Public Property eje_cls() As eje_cls
		Get
			Return Me._eje_cls.Entity
		End Get
		Set
			Dim previousValue As eje_cls = Me._eje_cls.Entity
			If ((Object.Equals(previousValue, value) = false)  _
						OrElse (Me._eje_cls.HasLoadedOrAssignedValue = false)) Then
				Me.SendPropertyChanging
				If ((previousValue Is Nothing)  _
							= false) Then
					Me._eje_cls.Entity = Nothing
					previousValue.ope_cls.Remove(Me)
				End If
				Me._eje_cls.Entity = value
				If ((value Is Nothing)  _
							= false) Then
					value.ope_cls.Add(Me)
					Me._id_eje = value.id_eje
				Else
					Me._id_eje = CType(Nothing, Nullable(Of Integer))
				End If
				Me.SendPropertyChanged("eje_cls")
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
	
	Private Sub attach_cdn_cls(ByVal entity As cdn_cls)
		Me.SendPropertyChanging
		entity.ope_cls = Me
	End Sub
	
	Private Sub detach_cdn_cls(ByVal entity As cdn_cls)
		Me.SendPropertyChanging
		entity.ope_cls = Nothing
	End Sub
	
	Private Sub attach_doc_dig_ope_cls(ByVal entity As doc_dig_ope_cls)
		Me.SendPropertyChanging
		entity.ope_cls = Me
	End Sub
	
	Private Sub detach_doc_dig_ope_cls(ByVal entity As doc_dig_ope_cls)
		Me.SendPropertyChanging
		entity.ope_cls = Nothing
	End Sub
	
	Private Sub attach_dsi_cls(ByVal entity As dsi_cls)
		Me.SendPropertyChanging
		entity.ope_cls = Me
	End Sub
	
	Private Sub detach_dsi_cls(ByVal entity As dsi_cls)
		Me.SendPropertyChanging
		entity.ope_cls = Nothing
	End Sub
	
	Private Sub attach_gos_cls(ByVal entity As gos_cls)
		Me.SendPropertyChanging
		entity.ope_cls = Me
	End Sub
	
	Private Sub detach_gos_cls(ByVal entity As gos_cls)
		Me.SendPropertyChanging
		entity.ope_cls = Nothing
	End Sub
	
	Private Sub attach_opo_cls(ByVal entity As opo_cls)
		Me.SendPropertyChanging
		entity.ope_cls = Me
	End Sub
	
	Private Sub detach_opo_cls(ByVal entity As opo_cls)
		Me.SendPropertyChanging
		entity.ope_cls = Nothing
	End Sub
	
	Private Sub attach_pgr_cls(ByVal entity As pgr_cls)
		Me.SendPropertyChanging
		entity.ope_cls = Me
	End Sub
	
	Private Sub detach_pgr_cls(ByVal entity As pgr_cls)
		Me.SendPropertyChanging
		entity.ope_cls = Nothing
	End Sub
	
	Private Sub attach_rxo_cls(ByVal entity As rxo_cls)
		Me.SendPropertyChanging
		entity.ope_cls = Me
	End Sub
	
	Private Sub detach_rxo_cls(ByVal entity As rxo_cls)
		Me.SendPropertyChanging
		entity.ope_cls = Nothing
	End Sub
	
	Private Sub attach_sim_cxc_cls(ByVal entity As sim_cxc_cls)
		Me.SendPropertyChanging
		entity.ope_cls = Me
	End Sub
	
	Private Sub detach_sim_cxc_cls(ByVal entity As sim_cxc_cls)
		Me.SendPropertyChanging
		entity.ope_cls = Nothing
	End Sub
	
	Private Sub attach_sim_cxp(ByVal entity As sim_cxp_cls)
		Me.SendPropertyChanging
		entity.ope_cls = Me
	End Sub
	
	Private Sub detach_sim_cxp(ByVal entity As sim_cxp_cls)
		Me.SendPropertyChanging
		entity.ope_cls = Nothing
	End Sub
	
	Private Sub attach_sim_egr_cls(ByVal entity As sim_egr_cls)
		Me.SendPropertyChanging
		entity.ope_cls = Me
	End Sub
	
	Private Sub detach_sim_egr_cls(ByVal entity As sim_egr_cls)
		Me.SendPropertyChanging
		entity.ope_cls = Nothing
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.opn")>  _
Partial Public Class opn_cls
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _id_opn As Decimal
	
	Private _id_eva As System.Nullable(Of Decimal)
	
	Private _id_bco As System.Nullable(Of Integer)
	
	Private _id_suc As System.Nullable(Of Integer)
	
	Private _id_eje As System.Nullable(Of Integer)
	
	Private _id_P_0012 As System.Nullable(Of Integer)
	
	Private _id_P_0031 As System.Nullable(Of Integer)
	
	Private _id_P_0056 As System.Nullable(Of Integer)
	
	Private _id_P_0023 As System.Nullable(Of Integer)
	
	Private _id_P_0023_fla As System.Nullable(Of Integer)
	
	Private _id_P_0023_com As System.Nullable(Of Integer)
	
	Private _id_P_0082 As System.Nullable(Of Integer)
	
	Private _id_P_0021 As System.Nullable(Of Integer)
	
	Private _id_PL_000047 As String
	
	Private _opn_fec As System.Nullable(Of Date)
	
	Private _opn_can_doc As System.Nullable(Of Decimal)
	
	Private _opn_mto_doc As System.Nullable(Of Decimal)
	
	Private _opn_fec_neg As System.Nullable(Of Date)
	
	Private _opn_fev As System.Nullable(Of Date)
	
	Private _opn_com_neg As String
	
	Private _opn_ins_neg As String
	
	Private _opn_por_ant As System.Nullable(Of Decimal)
	
	Private _opn_mto_des As System.Nullable(Of Decimal)
	
	Private _opn_pto_spr As System.Nullable(Of Decimal)
	
	Private _opn_por_com As System.Nullable(Of Decimal)
	
	Private _opn_com_fla As System.Nullable(Of Decimal)
	
	Private _opn_com_min As System.Nullable(Of Decimal)
	
	Private _opn_com_max As System.Nullable(Of Decimal)
	
	Private _opn_com_tot As System.Nullable(Of Decimal)
	
	Private _opn_can_ddr As System.Nullable(Of Integer)
	
	Private _opn_tas_bas As System.Nullable(Of Decimal)
	
	Private _opn_spr_ead As System.Nullable(Of Decimal)
	
	Private _opn_fev_ori As System.Nullable(Of Date)
	
	Private _opn_cta_cte As String
	
	Private _opn_cto_son As System.Nullable(Of Char)
	
	Private _opn_pag_son As System.Nullable(Of Char)
	
	Private _opn_mdt_son As System.Nullable(Of Char)
	
	Private _opn_ant_014 As System.Nullable(Of Char)
	
	Private _opn_pgr_fec_vto As System.Nullable(Of Date)
	
	Private _opn_pgr_mto As System.Nullable(Of Decimal)
	
	Private _opn_pgr_com As System.Nullable(Of Decimal)
	
	Private _ope_num_temporal As System.Nullable(Of Integer)
	
	Private _opn_tas_moa As Char
	
	Private _opn_pdf As System.Data.Linq.Binary
	
	Private _opn_ptl As System.Nullable(Of Char)
	
	Private _opn_res_son As System.Nullable(Of Char)
	
	Private _opn_cuo As System.Nullable(Of Char)
	
	Private _opn_lnl As System.Nullable(Of Char)
	
	Private _opn_gen_gmf As System.Nullable(Of Char)
	
	Private _cal_oto_gam As String
	
	Private _opn_dia_vto As System.Nullable(Of Integer)
	
	Private _opn_tip_tas As System.Nullable(Of Char)
	
	Private _opn_tas_neg As System.Nullable(Of Decimal)
	
	Private _id_eje_asoc As System.Nullable(Of Integer)
	
	Private _cxn_cls As EntitySet(Of cxn_cls)
	
	Private _dxn_cls As EntitySet(Of dxn_cls)
	
	Private _gdn_cls As EntitySet(Of gdn_cls)
	
	Private _gfn_cls As EntitySet(Of gfn_cls)
	
	Private _nmn_cls As EntitySet(Of nmn_cls)
	
	Private _nnc_cls As EntitySet(Of nnc_cls)
	
	Private _ope_cls As EntitySet(Of ope_cls)
	
	Private _nbc_cls As EntityRef(Of nbc_cls)
	
	Private _eva_cls As EntityRef(Of eva_cls)
	
	Private _P_0012_cls As EntityRef(Of P_0012_cls)
	
	Private _P_0021_cls As EntityRef(Of P_0021_cls)
	
	Private _P_0023 As EntityRef(Of P_0023_cls)
	
	Private _P_00231 As EntityRef(Of P_0023_cls)
	
	Private _P_0023_cls As EntityRef(Of P_0023_cls)
	
	Private _P_0031_cls As EntityRef(Of P_0031_cls)
	
	Private _P_0056_cls As EntityRef(Of P_0056_cls)
	
	Private _P_0082_cls As EntityRef(Of P_0082_cls)
	
	Private _PL_000047_cls As EntityRef(Of PL_000047_cls)
	
	Private _suc_cls As EntityRef(Of suc_cls)
	
	Private _eje_cls As EntityRef(Of eje_cls)
	
    #Region "Definiciones de métodos de extensibilidad"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub Onid_opnChanging(value As Decimal)
    End Sub
    Partial Private Sub Onid_opnChanged()
    End Sub
    Partial Private Sub Onid_evaChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub Onid_evaChanged()
    End Sub
    Partial Private Sub Onid_bcoChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub Onid_bcoChanged()
    End Sub
    Partial Private Sub Onid_sucChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub Onid_sucChanged()
    End Sub
    Partial Private Sub Onid_ejeChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub Onid_ejeChanged()
    End Sub
    Partial Private Sub Onid_P_0012Changing(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub Onid_P_0012Changed()
    End Sub
    Partial Private Sub Onid_P_0031Changing(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub Onid_P_0031Changed()
    End Sub
    Partial Private Sub Onid_P_0056Changing(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub Onid_P_0056Changed()
    End Sub
    Partial Private Sub Onid_P_0023Changing(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub Onid_P_0023Changed()
    End Sub
    Partial Private Sub Onid_P_0023_flaChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub Onid_P_0023_flaChanged()
    End Sub
    Partial Private Sub Onid_P_0023_comChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub Onid_P_0023_comChanged()
    End Sub
    Partial Private Sub Onid_P_0082Changing(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub Onid_P_0082Changed()
    End Sub
    Partial Private Sub Onid_P_0021Changing(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub Onid_P_0021Changed()
    End Sub
    Partial Private Sub Onid_PL_000047Changing(value As String)
    End Sub
    Partial Private Sub Onid_PL_000047Changed()
    End Sub
    Partial Private Sub Onopn_fecChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub Onopn_fecChanged()
    End Sub
    Partial Private Sub Onopn_can_docChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub Onopn_can_docChanged()
    End Sub
    Partial Private Sub Onopn_mto_docChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub Onopn_mto_docChanged()
    End Sub
    Partial Private Sub Onopn_fec_negChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub Onopn_fec_negChanged()
    End Sub
    Partial Private Sub Onopn_fevChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub Onopn_fevChanged()
    End Sub
    Partial Private Sub Onopn_com_negChanging(value As String)
    End Sub
    Partial Private Sub Onopn_com_negChanged()
    End Sub
    Partial Private Sub Onopn_ins_negChanging(value As String)
    End Sub
    Partial Private Sub Onopn_ins_negChanged()
    End Sub
    Partial Private Sub Onopn_por_antChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub Onopn_por_antChanged()
    End Sub
    Partial Private Sub Onopn_mto_desChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub Onopn_mto_desChanged()
    End Sub
    Partial Private Sub Onopn_pto_sprChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub Onopn_pto_sprChanged()
    End Sub
    Partial Private Sub Onopn_por_comChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub Onopn_por_comChanged()
    End Sub
    Partial Private Sub Onopn_com_flaChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub Onopn_com_flaChanged()
    End Sub
    Partial Private Sub Onopn_com_minChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub Onopn_com_minChanged()
    End Sub
    Partial Private Sub Onopn_com_maxChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub Onopn_com_maxChanged()
    End Sub
    Partial Private Sub Onopn_com_totChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub Onopn_com_totChanged()
    End Sub
    Partial Private Sub Onopn_can_ddrChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub Onopn_can_ddrChanged()
    End Sub
    Partial Private Sub Onopn_tas_basChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub Onopn_tas_basChanged()
    End Sub
    Partial Private Sub Onopn_spr_eadChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub Onopn_spr_eadChanged()
    End Sub
    Partial Private Sub Onopn_fev_oriChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub Onopn_fev_oriChanged()
    End Sub
    Partial Private Sub Onopn_cta_cteChanging(value As String)
    End Sub
    Partial Private Sub Onopn_cta_cteChanged()
    End Sub
    Partial Private Sub Onopn_cto_sonChanging(value As System.Nullable(Of Char))
    End Sub
    Partial Private Sub Onopn_cto_sonChanged()
    End Sub
    Partial Private Sub Onopn_pag_sonChanging(value As System.Nullable(Of Char))
    End Sub
    Partial Private Sub Onopn_pag_sonChanged()
    End Sub
    Partial Private Sub Onopn_mdt_sonChanging(value As System.Nullable(Of Char))
    End Sub
    Partial Private Sub Onopn_mdt_sonChanged()
    End Sub
    Partial Private Sub Onopn_ant_014Changing(value As System.Nullable(Of Char))
    End Sub
    Partial Private Sub Onopn_ant_014Changed()
    End Sub
    Partial Private Sub Onopn_pgr_fec_vtoChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub Onopn_pgr_fec_vtoChanged()
    End Sub
    Partial Private Sub Onopn_pgr_mtoChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub Onopn_pgr_mtoChanged()
    End Sub
    Partial Private Sub Onopn_pgr_comChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub Onopn_pgr_comChanged()
    End Sub
    Partial Private Sub Onope_num_temporalChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub Onope_num_temporalChanged()
    End Sub
    Partial Private Sub Onopn_tas_moaChanging(value As Char)
    End Sub
    Partial Private Sub Onopn_tas_moaChanged()
    End Sub
    Partial Private Sub Onopn_pdfChanging(value As System.Data.Linq.Binary)
    End Sub
    Partial Private Sub Onopn_pdfChanged()
    End Sub
    Partial Private Sub Onopn_ptlChanging(value As System.Nullable(Of Char))
    End Sub
    Partial Private Sub Onopn_ptlChanged()
    End Sub
    Partial Private Sub Onopn_res_sonChanging(value As System.Nullable(Of Char))
    End Sub
    Partial Private Sub Onopn_res_sonChanged()
    End Sub
    Partial Private Sub Onopn_cuoChanging(value As System.Nullable(Of Char))
    End Sub
    Partial Private Sub Onopn_cuoChanged()
    End Sub
    Partial Private Sub Onopn_lnlChanging(value As System.Nullable(Of Char))
    End Sub
    Partial Private Sub Onopn_lnlChanged()
    End Sub
    Partial Private Sub Onopn_gen_gmfChanging(value As System.Nullable(Of Char))
    End Sub
    Partial Private Sub Onopn_gen_gmfChanged()
    End Sub
    Partial Private Sub Oncal_oto_gamChanging(value As String)
    End Sub
    Partial Private Sub Oncal_oto_gamChanged()
    End Sub
    Partial Private Sub Onopn_dia_vtoChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub Onopn_dia_vtoChanged()
    End Sub
    Partial Private Sub Onopn_tip_tasChanging(value As System.Nullable(Of Char))
    End Sub
    Partial Private Sub Onopn_tip_tasChanged()
    End Sub
    Partial Private Sub Onopn_tas_negChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub Onopn_tas_negChanged()
    End Sub
    Partial Private Sub Onid_eje_asocChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub Onid_eje_asocChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		Me._cxn_cls = New EntitySet(Of cxn_cls)(AddressOf Me.attach_cxn_cls, AddressOf Me.detach_cxn_cls)
		Me._dxn_cls = New EntitySet(Of dxn_cls)(AddressOf Me.attach_dxn_cls, AddressOf Me.detach_dxn_cls)
		Me._gdn_cls = New EntitySet(Of gdn_cls)(AddressOf Me.attach_gdn_cls, AddressOf Me.detach_gdn_cls)
		Me._gfn_cls = New EntitySet(Of gfn_cls)(AddressOf Me.attach_gfn_cls, AddressOf Me.detach_gfn_cls)
		Me._nmn_cls = New EntitySet(Of nmn_cls)(AddressOf Me.attach_nmn_cls, AddressOf Me.detach_nmn_cls)
		Me._nnc_cls = New EntitySet(Of nnc_cls)(AddressOf Me.attach_nnc_cls, AddressOf Me.detach_nnc_cls)
		Me._ope_cls = New EntitySet(Of ope_cls)(AddressOf Me.attach_ope_cls, AddressOf Me.detach_ope_cls)
		Me._nbc_cls = CType(Nothing, EntityRef(Of nbc_cls))
		Me._eva_cls = CType(Nothing, EntityRef(Of eva_cls))
		Me._P_0012_cls = CType(Nothing, EntityRef(Of P_0012_cls))
		Me._P_0021_cls = CType(Nothing, EntityRef(Of P_0021_cls))
		Me._P_0023 = CType(Nothing, EntityRef(Of P_0023_cls))
		Me._P_00231 = CType(Nothing, EntityRef(Of P_0023_cls))
		Me._P_0023_cls = CType(Nothing, EntityRef(Of P_0023_cls))
		Me._P_0031_cls = CType(Nothing, EntityRef(Of P_0031_cls))
		Me._P_0056_cls = CType(Nothing, EntityRef(Of P_0056_cls))
		Me._P_0082_cls = CType(Nothing, EntityRef(Of P_0082_cls))
		Me._PL_000047_cls = CType(Nothing, EntityRef(Of PL_000047_cls))
		Me._suc_cls = CType(Nothing, EntityRef(Of suc_cls))
		Me._eje_cls = CType(Nothing, EntityRef(Of eje_cls))
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_id_opn", AutoSync:=AutoSync.OnInsert, DbType:="Decimal(10,0) NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property id_opn() As Decimal
		Get
			Return Me._id_opn
		End Get
		Set
			If ((Me._id_opn = value)  _
						= false) Then
				Me.Onid_opnChanging(value)
				Me.SendPropertyChanging
				Me._id_opn = value
				Me.SendPropertyChanged("id_opn")
				Me.Onid_opnChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_id_eva", DbType:="Decimal(10,0)")>  _
	Public Property id_eva() As System.Nullable(Of Decimal)
		Get
			Return Me._id_eva
		End Get
		Set
			If (Me._id_eva.Equals(value) = false) Then
				If Me._eva_cls.HasLoadedOrAssignedValue Then
					Throw New System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException()
				End If
				Me.Onid_evaChanging(value)
				Me.SendPropertyChanging
				Me._id_eva = value
				Me.SendPropertyChanged("id_eva")
				Me.Onid_evaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_id_bco", DbType:="Int")>  _
	Public Property id_bco() As System.Nullable(Of Integer)
		Get
			Return Me._id_bco
		End Get
		Set
			If (Me._id_bco.Equals(value) = false) Then
				If Me._nbc_cls.HasLoadedOrAssignedValue Then
					Throw New System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException()
				End If
				Me.Onid_bcoChanging(value)
				Me.SendPropertyChanging
				Me._id_bco = value
				Me.SendPropertyChanged("id_bco")
				Me.Onid_bcoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_id_suc", DbType:="Int")>  _
	Public Property id_suc() As System.Nullable(Of Integer)
		Get
			Return Me._id_suc
		End Get
		Set
			If (Me._id_suc.Equals(value) = false) Then
				If Me._suc_cls.HasLoadedOrAssignedValue Then
					Throw New System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException()
				End If
				Me.Onid_sucChanging(value)
				Me.SendPropertyChanging
				Me._id_suc = value
				Me.SendPropertyChanged("id_suc")
				Me.Onid_sucChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_id_eje", DbType:="Int")>  _
	Public Property id_eje() As System.Nullable(Of Integer)
		Get
			Return Me._id_eje
		End Get
		Set
			If (Me._id_eje.Equals(value) = false) Then
				If Me._eje_cls.HasLoadedOrAssignedValue Then
					Throw New System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException()
				End If
				Me.Onid_ejeChanging(value)
				Me.SendPropertyChanging
				Me._id_eje = value
				Me.SendPropertyChanged("id_eje")
				Me.Onid_ejeChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_id_P_0012", DbType:="Int")>  _
	Public Property id_P_0012() As System.Nullable(Of Integer)
		Get
			Return Me._id_P_0012
		End Get
		Set
			If (Me._id_P_0012.Equals(value) = false) Then
				If Me._P_0012_cls.HasLoadedOrAssignedValue Then
					Throw New System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException()
				End If
				Me.Onid_P_0012Changing(value)
				Me.SendPropertyChanging
				Me._id_P_0012 = value
				Me.SendPropertyChanged("id_P_0012")
				Me.Onid_P_0012Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_id_P_0031", DbType:="Int")>  _
	Public Property id_P_0031() As System.Nullable(Of Integer)
		Get
			Return Me._id_P_0031
		End Get
		Set
			If (Me._id_P_0031.Equals(value) = false) Then
				If Me._P_0031_cls.HasLoadedOrAssignedValue Then
					Throw New System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException()
				End If
				Me.Onid_P_0031Changing(value)
				Me.SendPropertyChanging
				Me._id_P_0031 = value
				Me.SendPropertyChanged("id_P_0031")
				Me.Onid_P_0031Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_id_P_0056", DbType:="Int")>  _
	Public Property id_P_0056() As System.Nullable(Of Integer)
		Get
			Return Me._id_P_0056
		End Get
		Set
			If (Me._id_P_0056.Equals(value) = false) Then
				If Me._P_0056_cls.HasLoadedOrAssignedValue Then
					Throw New System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException()
				End If
				Me.Onid_P_0056Changing(value)
				Me.SendPropertyChanging
				Me._id_P_0056 = value
				Me.SendPropertyChanged("id_P_0056")
				Me.Onid_P_0056Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_id_P_0023", DbType:="Int")>  _
	Public Property id_P_0023() As System.Nullable(Of Integer)
		Get
			Return Me._id_P_0023
		End Get
		Set
			If (Me._id_P_0023.Equals(value) = false) Then
				If Me._P_0023.HasLoadedOrAssignedValue Then
					Throw New System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException()
				End If
				Me.Onid_P_0023Changing(value)
				Me.SendPropertyChanging
				Me._id_P_0023 = value
				Me.SendPropertyChanged("id_P_0023")
				Me.Onid_P_0023Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_id_P_0023_fla", DbType:="Int")>  _
	Public Property id_P_0023_fla() As System.Nullable(Of Integer)
		Get
			Return Me._id_P_0023_fla
		End Get
		Set
			If (Me._id_P_0023_fla.Equals(value) = false) Then
				If Me._P_0023_cls.HasLoadedOrAssignedValue Then
					Throw New System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException()
				End If
				Me.Onid_P_0023_flaChanging(value)
				Me.SendPropertyChanging
				Me._id_P_0023_fla = value
				Me.SendPropertyChanged("id_P_0023_fla")
				Me.Onid_P_0023_flaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_id_P_0023_com", DbType:="Int")>  _
	Public Property id_P_0023_com() As System.Nullable(Of Integer)
		Get
			Return Me._id_P_0023_com
		End Get
		Set
			If (Me._id_P_0023_com.Equals(value) = false) Then
				If Me._P_00231.HasLoadedOrAssignedValue Then
					Throw New System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException()
				End If
				Me.Onid_P_0023_comChanging(value)
				Me.SendPropertyChanging
				Me._id_P_0023_com = value
				Me.SendPropertyChanged("id_P_0023_com")
				Me.Onid_P_0023_comChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_id_P_0082", DbType:="Int")>  _
	Public Property id_P_0082() As System.Nullable(Of Integer)
		Get
			Return Me._id_P_0082
		End Get
		Set
			If (Me._id_P_0082.Equals(value) = false) Then
				If Me._P_0082_cls.HasLoadedOrAssignedValue Then
					Throw New System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException()
				End If
				Me.Onid_P_0082Changing(value)
				Me.SendPropertyChanging
				Me._id_P_0082 = value
				Me.SendPropertyChanged("id_P_0082")
				Me.Onid_P_0082Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_id_P_0021", DbType:="Int")>  _
	Public Property id_P_0021() As System.Nullable(Of Integer)
		Get
			Return Me._id_P_0021
		End Get
		Set
			If (Me._id_P_0021.Equals(value) = false) Then
				If Me._P_0021_cls.HasLoadedOrAssignedValue Then
					Throw New System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException()
				End If
				Me.Onid_P_0021Changing(value)
				Me.SendPropertyChanging
				Me._id_P_0021 = value
				Me.SendPropertyChanged("id_P_0021")
				Me.Onid_P_0021Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_id_PL_000047", DbType:="Char(6)")>  _
	Public Property id_PL_000047() As String
		Get
			Return Me._id_PL_000047
		End Get
		Set
			If (String.Equals(Me._id_PL_000047, value) = false) Then
				If Me._PL_000047_cls.HasLoadedOrAssignedValue Then
					Throw New System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException()
				End If
				Me.Onid_PL_000047Changing(value)
				Me.SendPropertyChanging
				Me._id_PL_000047 = value
				Me.SendPropertyChanged("id_PL_000047")
				Me.Onid_PL_000047Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_opn_fec", DbType:="DateTime")>  _
	Public Property opn_fec() As System.Nullable(Of Date)
		Get
			Return Me._opn_fec
		End Get
		Set
			If (Me._opn_fec.Equals(value) = false) Then
				Me.Onopn_fecChanging(value)
				Me.SendPropertyChanging
				Me._opn_fec = value
				Me.SendPropertyChanged("opn_fec")
				Me.Onopn_fecChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_opn_can_doc", DbType:="Decimal(6,0)")>  _
	Public Property opn_can_doc() As System.Nullable(Of Decimal)
		Get
			Return Me._opn_can_doc
		End Get
		Set
			If (Me._opn_can_doc.Equals(value) = false) Then
				Me.Onopn_can_docChanging(value)
				Me.SendPropertyChanging
				Me._opn_can_doc = value
				Me.SendPropertyChanged("opn_can_doc")
				Me.Onopn_can_docChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_opn_mto_doc", DbType:="Money")>  _
	Public Property opn_mto_doc() As System.Nullable(Of Decimal)
		Get
			Return Me._opn_mto_doc
		End Get
		Set
			If (Me._opn_mto_doc.Equals(value) = false) Then
				Me.Onopn_mto_docChanging(value)
				Me.SendPropertyChanging
				Me._opn_mto_doc = value
				Me.SendPropertyChanged("opn_mto_doc")
				Me.Onopn_mto_docChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_opn_fec_neg", DbType:="DateTime")>  _
	Public Property opn_fec_neg() As System.Nullable(Of Date)
		Get
			Return Me._opn_fec_neg
		End Get
		Set
			If (Me._opn_fec_neg.Equals(value) = false) Then
				Me.Onopn_fec_negChanging(value)
				Me.SendPropertyChanging
				Me._opn_fec_neg = value
				Me.SendPropertyChanged("opn_fec_neg")
				Me.Onopn_fec_negChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_opn_fev", DbType:="DateTime")>  _
	Public Property opn_fev() As System.Nullable(Of Date)
		Get
			Return Me._opn_fev
		End Get
		Set
			If (Me._opn_fev.Equals(value) = false) Then
				Me.Onopn_fevChanging(value)
				Me.SendPropertyChanging
				Me._opn_fev = value
				Me.SendPropertyChanged("opn_fev")
				Me.Onopn_fevChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_opn_com_neg", DbType:="VarChar(800)")>  _
	Public Property opn_com_neg() As String
		Get
			Return Me._opn_com_neg
		End Get
		Set
			If (String.Equals(Me._opn_com_neg, value) = false) Then
				Me.Onopn_com_negChanging(value)
				Me.SendPropertyChanging
				Me._opn_com_neg = value
				Me.SendPropertyChanged("opn_com_neg")
				Me.Onopn_com_negChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_opn_ins_neg", DbType:="VarChar(800)")>  _
	Public Property opn_ins_neg() As String
		Get
			Return Me._opn_ins_neg
		End Get
		Set
			If (String.Equals(Me._opn_ins_neg, value) = false) Then
				Me.Onopn_ins_negChanging(value)
				Me.SendPropertyChanging
				Me._opn_ins_neg = value
				Me.SendPropertyChanged("opn_ins_neg")
				Me.Onopn_ins_negChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_opn_por_ant", DbType:="Decimal(5,2)")>  _
	Public Property opn_por_ant() As System.Nullable(Of Decimal)
		Get
			Return Me._opn_por_ant
		End Get
		Set
			If (Me._opn_por_ant.Equals(value) = false) Then
				Me.Onopn_por_antChanging(value)
				Me.SendPropertyChanging
				Me._opn_por_ant = value
				Me.SendPropertyChanged("opn_por_ant")
				Me.Onopn_por_antChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_opn_mto_des", DbType:="Money")>  _
	Public Property opn_mto_des() As System.Nullable(Of Decimal)
		Get
			Return Me._opn_mto_des
		End Get
		Set
			If (Me._opn_mto_des.Equals(value) = false) Then
				Me.Onopn_mto_desChanging(value)
				Me.SendPropertyChanging
				Me._opn_mto_des = value
				Me.SendPropertyChanged("opn_mto_des")
				Me.Onopn_mto_desChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_opn_pto_spr", DbType:="Decimal(7,4)")>  _
	Public Property opn_pto_spr() As System.Nullable(Of Decimal)
		Get
			Return Me._opn_pto_spr
		End Get
		Set
			If (Me._opn_pto_spr.Equals(value) = false) Then
				Me.Onopn_pto_sprChanging(value)
				Me.SendPropertyChanging
				Me._opn_pto_spr = value
				Me.SendPropertyChanged("opn_pto_spr")
				Me.Onopn_pto_sprChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_opn_por_com", DbType:="Decimal(5,2)")>  _
	Public Property opn_por_com() As System.Nullable(Of Decimal)
		Get
			Return Me._opn_por_com
		End Get
		Set
			If (Me._opn_por_com.Equals(value) = false) Then
				Me.Onopn_por_comChanging(value)
				Me.SendPropertyChanging
				Me._opn_por_com = value
				Me.SendPropertyChanged("opn_por_com")
				Me.Onopn_por_comChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_opn_com_fla", DbType:="Money")>  _
	Public Property opn_com_fla() As System.Nullable(Of Decimal)
		Get
			Return Me._opn_com_fla
		End Get
		Set
			If (Me._opn_com_fla.Equals(value) = false) Then
				Me.Onopn_com_flaChanging(value)
				Me.SendPropertyChanging
				Me._opn_com_fla = value
				Me.SendPropertyChanged("opn_com_fla")
				Me.Onopn_com_flaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_opn_com_min", DbType:="Money")>  _
	Public Property opn_com_min() As System.Nullable(Of Decimal)
		Get
			Return Me._opn_com_min
		End Get
		Set
			If (Me._opn_com_min.Equals(value) = false) Then
				Me.Onopn_com_minChanging(value)
				Me.SendPropertyChanging
				Me._opn_com_min = value
				Me.SendPropertyChanged("opn_com_min")
				Me.Onopn_com_minChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_opn_com_max", DbType:="Money")>  _
	Public Property opn_com_max() As System.Nullable(Of Decimal)
		Get
			Return Me._opn_com_max
		End Get
		Set
			If (Me._opn_com_max.Equals(value) = false) Then
				Me.Onopn_com_maxChanging(value)
				Me.SendPropertyChanging
				Me._opn_com_max = value
				Me.SendPropertyChanged("opn_com_max")
				Me.Onopn_com_maxChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_opn_com_tot", DbType:="Money")>  _
	Public Property opn_com_tot() As System.Nullable(Of Decimal)
		Get
			Return Me._opn_com_tot
		End Get
		Set
			If (Me._opn_com_tot.Equals(value) = false) Then
				Me.Onopn_com_totChanging(value)
				Me.SendPropertyChanging
				Me._opn_com_tot = value
				Me.SendPropertyChanged("opn_com_tot")
				Me.Onopn_com_totChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_opn_can_ddr", DbType:="Int")>  _
	Public Property opn_can_ddr() As System.Nullable(Of Integer)
		Get
			Return Me._opn_can_ddr
		End Get
		Set
			If (Me._opn_can_ddr.Equals(value) = false) Then
				Me.Onopn_can_ddrChanging(value)
				Me.SendPropertyChanging
				Me._opn_can_ddr = value
				Me.SendPropertyChanged("opn_can_ddr")
				Me.Onopn_can_ddrChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_opn_tas_bas", DbType:="Decimal(7,4)")>  _
	Public Property opn_tas_bas() As System.Nullable(Of Decimal)
		Get
			Return Me._opn_tas_bas
		End Get
		Set
			If (Me._opn_tas_bas.Equals(value) = false) Then
				Me.Onopn_tas_basChanging(value)
				Me.SendPropertyChanging
				Me._opn_tas_bas = value
				Me.SendPropertyChanged("opn_tas_bas")
				Me.Onopn_tas_basChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_opn_spr_ead", DbType:="Decimal(7,4)")>  _
	Public Property opn_spr_ead() As System.Nullable(Of Decimal)
		Get
			Return Me._opn_spr_ead
		End Get
		Set
			If (Me._opn_spr_ead.Equals(value) = false) Then
				Me.Onopn_spr_eadChanging(value)
				Me.SendPropertyChanging
				Me._opn_spr_ead = value
				Me.SendPropertyChanged("opn_spr_ead")
				Me.Onopn_spr_eadChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_opn_fev_ori", DbType:="DateTime")>  _
	Public Property opn_fev_ori() As System.Nullable(Of Date)
		Get
			Return Me._opn_fev_ori
		End Get
		Set
			If (Me._opn_fev_ori.Equals(value) = false) Then
				Me.Onopn_fev_oriChanging(value)
				Me.SendPropertyChanging
				Me._opn_fev_ori = value
				Me.SendPropertyChanged("opn_fev_ori")
				Me.Onopn_fev_oriChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_opn_cta_cte", DbType:="VarChar(50)")>  _
	Public Property opn_cta_cte() As String
		Get
			Return Me._opn_cta_cte
		End Get
		Set
			If (String.Equals(Me._opn_cta_cte, value) = false) Then
				Me.Onopn_cta_cteChanging(value)
				Me.SendPropertyChanging
				Me._opn_cta_cte = value
				Me.SendPropertyChanged("opn_cta_cte")
				Me.Onopn_cta_cteChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_opn_cto_son", DbType:="Char(1)")>  _
	Public Property opn_cto_son() As System.Nullable(Of Char)
		Get
			Return Me._opn_cto_son
		End Get
		Set
			If (Me._opn_cto_son.Equals(value) = false) Then
				Me.Onopn_cto_sonChanging(value)
				Me.SendPropertyChanging
				Me._opn_cto_son = value
				Me.SendPropertyChanged("opn_cto_son")
				Me.Onopn_cto_sonChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_opn_pag_son", DbType:="Char(1)")>  _
	Public Property opn_pag_son() As System.Nullable(Of Char)
		Get
			Return Me._opn_pag_son
		End Get
		Set
			If (Me._opn_pag_son.Equals(value) = false) Then
				Me.Onopn_pag_sonChanging(value)
				Me.SendPropertyChanging
				Me._opn_pag_son = value
				Me.SendPropertyChanged("opn_pag_son")
				Me.Onopn_pag_sonChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_opn_mdt_son", DbType:="Char(1)")>  _
	Public Property opn_mdt_son() As System.Nullable(Of Char)
		Get
			Return Me._opn_mdt_son
		End Get
		Set
			If (Me._opn_mdt_son.Equals(value) = false) Then
				Me.Onopn_mdt_sonChanging(value)
				Me.SendPropertyChanging
				Me._opn_mdt_son = value
				Me.SendPropertyChanged("opn_mdt_son")
				Me.Onopn_mdt_sonChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_opn_ant_014", DbType:="Char(1)")>  _
	Public Property opn_ant_014() As System.Nullable(Of Char)
		Get
			Return Me._opn_ant_014
		End Get
		Set
			If (Me._opn_ant_014.Equals(value) = false) Then
				Me.Onopn_ant_014Changing(value)
				Me.SendPropertyChanging
				Me._opn_ant_014 = value
				Me.SendPropertyChanged("opn_ant_014")
				Me.Onopn_ant_014Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_opn_pgr_fec_vto", DbType:="DateTime")>  _
	Public Property opn_pgr_fec_vto() As System.Nullable(Of Date)
		Get
			Return Me._opn_pgr_fec_vto
		End Get
		Set
			If (Me._opn_pgr_fec_vto.Equals(value) = false) Then
				Me.Onopn_pgr_fec_vtoChanging(value)
				Me.SendPropertyChanging
				Me._opn_pgr_fec_vto = value
				Me.SendPropertyChanged("opn_pgr_fec_vto")
				Me.Onopn_pgr_fec_vtoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_opn_pgr_mto", DbType:="Money")>  _
	Public Property opn_pgr_mto() As System.Nullable(Of Decimal)
		Get
			Return Me._opn_pgr_mto
		End Get
		Set
			If (Me._opn_pgr_mto.Equals(value) = false) Then
				Me.Onopn_pgr_mtoChanging(value)
				Me.SendPropertyChanging
				Me._opn_pgr_mto = value
				Me.SendPropertyChanged("opn_pgr_mto")
				Me.Onopn_pgr_mtoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_opn_pgr_com", DbType:="Money")>  _
	Public Property opn_pgr_com() As System.Nullable(Of Decimal)
		Get
			Return Me._opn_pgr_com
		End Get
		Set
			If (Me._opn_pgr_com.Equals(value) = false) Then
				Me.Onopn_pgr_comChanging(value)
				Me.SendPropertyChanging
				Me._opn_pgr_com = value
				Me.SendPropertyChanged("opn_pgr_com")
				Me.Onopn_pgr_comChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ope_num_temporal", DbType:="Int")>  _
	Public Property ope_num_temporal() As System.Nullable(Of Integer)
		Get
			Return Me._ope_num_temporal
		End Get
		Set
			If (Me._ope_num_temporal.Equals(value) = false) Then
				Me.Onope_num_temporalChanging(value)
				Me.SendPropertyChanging
				Me._ope_num_temporal = value
				Me.SendPropertyChanged("ope_num_temporal")
				Me.Onope_num_temporalChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_opn_tas_moa", DbType:="Char(1) NOT NULL")>  _
	Public Property opn_tas_moa() As Char
		Get
			Return Me._opn_tas_moa
		End Get
		Set
			If ((Me._opn_tas_moa = value)  _
						= false) Then
				Me.Onopn_tas_moaChanging(value)
				Me.SendPropertyChanging
				Me._opn_tas_moa = value
				Me.SendPropertyChanged("opn_tas_moa")
				Me.Onopn_tas_moaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_opn_pdf", DbType:="Image", CanBeNull:=true, UpdateCheck:=UpdateCheck.Never)>  _
	Public Property opn_pdf() As System.Data.Linq.Binary
		Get
			Return Me._opn_pdf
		End Get
		Set
			If (Object.Equals(Me._opn_pdf, value) = false) Then
				Me.Onopn_pdfChanging(value)
				Me.SendPropertyChanging
				Me._opn_pdf = value
				Me.SendPropertyChanged("opn_pdf")
				Me.Onopn_pdfChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_opn_ptl", DbType:="Char(1)")>  _
	Public Property opn_ptl() As System.Nullable(Of Char)
		Get
			Return Me._opn_ptl
		End Get
		Set
			If (Me._opn_ptl.Equals(value) = false) Then
				Me.Onopn_ptlChanging(value)
				Me.SendPropertyChanging
				Me._opn_ptl = value
				Me.SendPropertyChanged("opn_ptl")
				Me.Onopn_ptlChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_opn_res_son", DbType:="Char(1)")>  _
	Public Property opn_res_son() As System.Nullable(Of Char)
		Get
			Return Me._opn_res_son
		End Get
		Set
			If (Me._opn_res_son.Equals(value) = false) Then
				Me.Onopn_res_sonChanging(value)
				Me.SendPropertyChanging
				Me._opn_res_son = value
				Me.SendPropertyChanged("opn_res_son")
				Me.Onopn_res_sonChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_opn_cuo", DbType:="Char(1)")>  _
	Public Property opn_cuo() As System.Nullable(Of Char)
		Get
			Return Me._opn_cuo
		End Get
		Set
			If (Me._opn_cuo.Equals(value) = false) Then
				Me.Onopn_cuoChanging(value)
				Me.SendPropertyChanging
				Me._opn_cuo = value
				Me.SendPropertyChanged("opn_cuo")
				Me.Onopn_cuoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_opn_lnl", DbType:="Char(1)")>  _
	Public Property opn_lnl() As System.Nullable(Of Char)
		Get
			Return Me._opn_lnl
		End Get
		Set
			If (Me._opn_lnl.Equals(value) = false) Then
				Me.Onopn_lnlChanging(value)
				Me.SendPropertyChanging
				Me._opn_lnl = value
				Me.SendPropertyChanged("opn_lnl")
				Me.Onopn_lnlChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_opn_gen_gmf", DbType:="Char(1)")>  _
	Public Property opn_gen_gmf() As System.Nullable(Of Char)
		Get
			Return Me._opn_gen_gmf
		End Get
		Set
			If (Me._opn_gen_gmf.Equals(value) = false) Then
				Me.Onopn_gen_gmfChanging(value)
				Me.SendPropertyChanging
				Me._opn_gen_gmf = value
				Me.SendPropertyChanged("opn_gen_gmf")
				Me.Onopn_gen_gmfChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_cal_oto_gam", DbType:="Char(2)")>  _
	Public Property cal_oto_gam() As String
		Get
			Return Me._cal_oto_gam
		End Get
		Set
			If (String.Equals(Me._cal_oto_gam, value) = false) Then
				Me.Oncal_oto_gamChanging(value)
				Me.SendPropertyChanging
				Me._cal_oto_gam = value
				Me.SendPropertyChanged("cal_oto_gam")
				Me.Oncal_oto_gamChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_opn_dia_vto", DbType:="Int")>  _
	Public Property opn_dia_vto() As System.Nullable(Of Integer)
		Get
			Return Me._opn_dia_vto
		End Get
		Set
			If (Me._opn_dia_vto.Equals(value) = false) Then
				Me.Onopn_dia_vtoChanging(value)
				Me.SendPropertyChanging
				Me._opn_dia_vto = value
				Me.SendPropertyChanged("opn_dia_vto")
				Me.Onopn_dia_vtoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_opn_tip_tas", DbType:="Char(1)")>  _
	Public Property opn_tip_tas() As System.Nullable(Of Char)
		Get
			Return Me._opn_tip_tas
		End Get
		Set
			If (Me._opn_tip_tas.Equals(value) = false) Then
				Me.Onopn_tip_tasChanging(value)
				Me.SendPropertyChanging
				Me._opn_tip_tas = value
				Me.SendPropertyChanged("opn_tip_tas")
				Me.Onopn_tip_tasChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_opn_tas_neg", DbType:="Decimal(7,4)")>  _
	Public Property opn_tas_neg() As System.Nullable(Of Decimal)
		Get
			Return Me._opn_tas_neg
		End Get
		Set
			If (Me._opn_tas_neg.Equals(value) = false) Then
				Me.Onopn_tas_negChanging(value)
				Me.SendPropertyChanging
				Me._opn_tas_neg = value
				Me.SendPropertyChanged("opn_tas_neg")
				Me.Onopn_tas_negChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_id_eje_asoc", DbType:="Int")>  _
	Public Property id_eje_asoc() As System.Nullable(Of Integer)
		Get
			Return Me._id_eje_asoc
		End Get
		Set
			If (Me._id_eje_asoc.Equals(value) = false) Then
				Me.Onid_eje_asocChanging(value)
				Me.SendPropertyChanging
				Me._id_eje_asoc = value
				Me.SendPropertyChanged("id_eje_asoc")
				Me.Onid_eje_asocChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="opn_cls_cxn_cls", Storage:="_cxn_cls", ThisKey:="id_opn", OtherKey:="id_opn")>  _
	Public Property cxn_cls() As EntitySet(Of cxn_cls)
		Get
			Return Me._cxn_cls
		End Get
		Set
			Me._cxn_cls.Assign(value)
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="opn_cls_dxn_cls", Storage:="_dxn_cls", ThisKey:="id_opn", OtherKey:="id_opn")>  _
	Public Property dxn_cls() As EntitySet(Of dxn_cls)
		Get
			Return Me._dxn_cls
		End Get
		Set
			Me._dxn_cls.Assign(value)
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="opn_cls_gdn_cls", Storage:="_gdn_cls", ThisKey:="id_opn", OtherKey:="id_opn")>  _
	Public Property gdn_cls() As EntitySet(Of gdn_cls)
		Get
			Return Me._gdn_cls
		End Get
		Set
			Me._gdn_cls.Assign(value)
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="opn_cls_gfn_cls", Storage:="_gfn_cls", ThisKey:="id_opn", OtherKey:="id_opn")>  _
	Public Property gfn_cls() As EntitySet(Of gfn_cls)
		Get
			Return Me._gfn_cls
		End Get
		Set
			Me._gfn_cls.Assign(value)
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="opn_cls_nmn_cls", Storage:="_nmn_cls", ThisKey:="id_opn", OtherKey:="id_opn")>  _
	Public Property nmn_cls() As EntitySet(Of nmn_cls)
		Get
			Return Me._nmn_cls
		End Get
		Set
			Me._nmn_cls.Assign(value)
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="opn_cls_nnc_cls", Storage:="_nnc_cls", ThisKey:="id_opn", OtherKey:="id_opn")>  _
	Public Property nnc_cls() As EntitySet(Of nnc_cls)
		Get
			Return Me._nnc_cls
		End Get
		Set
			Me._nnc_cls.Assign(value)
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="opn_cls_ope_cls", Storage:="_ope_cls", ThisKey:="id_opn", OtherKey:="id_opn")>  _
	Public Property ope_cls() As EntitySet(Of ope_cls)
		Get
			Return Me._ope_cls
		End Get
		Set
			Me._ope_cls.Assign(value)
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="nbc_cls_opn_cls", Storage:="_nbc_cls", ThisKey:="id_bco", OtherKey:="id_nbc", IsForeignKey:=true)>  _
	Public Property nbc_cls() As nbc_cls
		Get
			Return Me._nbc_cls.Entity
		End Get
		Set
			Dim previousValue As nbc_cls = Me._nbc_cls.Entity
			If ((Object.Equals(previousValue, value) = false)  _
						OrElse (Me._nbc_cls.HasLoadedOrAssignedValue = false)) Then
				Me.SendPropertyChanging
				If ((previousValue Is Nothing)  _
							= false) Then
					Me._nbc_cls.Entity = Nothing
					previousValue.opn_cls.Remove(Me)
				End If
				Me._nbc_cls.Entity = value
				If ((value Is Nothing)  _
							= false) Then
					value.opn_cls.Add(Me)
					Me._id_bco = value.id_nbc
				Else
					Me._id_bco = CType(Nothing, Nullable(Of Integer))
				End If
				Me.SendPropertyChanged("nbc_cls")
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="eva_cls_opn_cls", Storage:="_eva_cls", ThisKey:="id_eva", OtherKey:="id_eva", IsForeignKey:=true)>  _
	Public Property eva_cls() As eva_cls
		Get
			Return Me._eva_cls.Entity
		End Get
		Set
			Dim previousValue As eva_cls = Me._eva_cls.Entity
			If ((Object.Equals(previousValue, value) = false)  _
						OrElse (Me._eva_cls.HasLoadedOrAssignedValue = false)) Then
				Me.SendPropertyChanging
				If ((previousValue Is Nothing)  _
							= false) Then
					Me._eva_cls.Entity = Nothing
					previousValue.opn_cls.Remove(Me)
				End If
				Me._eva_cls.Entity = value
				If ((value Is Nothing)  _
							= false) Then
					value.opn_cls.Add(Me)
					Me._id_eva = value.id_eva
				Else
					Me._id_eva = CType(Nothing, Nullable(Of Decimal))
				End If
				Me.SendPropertyChanged("eva_cls")
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="P_0012_cls_opn_cls", Storage:="_P_0012_cls", ThisKey:="id_P_0012", OtherKey:="id_P_0012", IsForeignKey:=true)>  _
	Public Property P_0012_cls() As P_0012_cls
		Get
			Return Me._P_0012_cls.Entity
		End Get
		Set
			Dim previousValue As P_0012_cls = Me._P_0012_cls.Entity
			If ((Object.Equals(previousValue, value) = false)  _
						OrElse (Me._P_0012_cls.HasLoadedOrAssignedValue = false)) Then
				Me.SendPropertyChanging
				If ((previousValue Is Nothing)  _
							= false) Then
					Me._P_0012_cls.Entity = Nothing
					previousValue.opn_cls.Remove(Me)
				End If
				Me._P_0012_cls.Entity = value
				If ((value Is Nothing)  _
							= false) Then
					value.opn_cls.Add(Me)
					Me._id_P_0012 = value.id_P_0012
				Else
					Me._id_P_0012 = CType(Nothing, Nullable(Of Integer))
				End If
				Me.SendPropertyChanged("P_0012_cls")
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="P_0021_cls_opn_cls", Storage:="_P_0021_cls", ThisKey:="id_P_0021", OtherKey:="id_P_0021", IsForeignKey:=true)>  _
	Public Property P_0021_cls() As P_0021_cls
		Get
			Return Me._P_0021_cls.Entity
		End Get
		Set
			Dim previousValue As P_0021_cls = Me._P_0021_cls.Entity
			If ((Object.Equals(previousValue, value) = false)  _
						OrElse (Me._P_0021_cls.HasLoadedOrAssignedValue = false)) Then
				Me.SendPropertyChanging
				If ((previousValue Is Nothing)  _
							= false) Then
					Me._P_0021_cls.Entity = Nothing
					previousValue.opn_cls.Remove(Me)
				End If
				Me._P_0021_cls.Entity = value
				If ((value Is Nothing)  _
							= false) Then
					value.opn_cls.Add(Me)
					Me._id_P_0021 = value.id_P_0021
				Else
					Me._id_P_0021 = CType(Nothing, Nullable(Of Integer))
				End If
				Me.SendPropertyChanged("P_0021_cls")
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="P_0023_cls_opn_cls", Storage:="_P_0023", ThisKey:="id_P_0023", OtherKey:="id_P_0023", IsForeignKey:=true)>  _
	Public Property P_0023() As P_0023_cls
		Get
			Return Me._P_0023.Entity
		End Get
		Set
			Dim previousValue As P_0023_cls = Me._P_0023.Entity
			If ((Object.Equals(previousValue, value) = false)  _
						OrElse (Me._P_0023.HasLoadedOrAssignedValue = false)) Then
				Me.SendPropertyChanging
				If ((previousValue Is Nothing)  _
							= false) Then
					Me._P_0023.Entity = Nothing
					previousValue.opn.Remove(Me)
				End If
				Me._P_0023.Entity = value
				If ((value Is Nothing)  _
							= false) Then
					value.opn.Add(Me)
					Me._id_P_0023 = value.id_P_0023
				Else
					Me._id_P_0023 = CType(Nothing, Nullable(Of Integer))
				End If
				Me.SendPropertyChanged("P_0023")
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="P_0023_cls_opn_cls1", Storage:="_P_00231", ThisKey:="id_P_0023_com", OtherKey:="id_P_0023", IsForeignKey:=true)>  _
	Public Property P_00231() As P_0023_cls
		Get
			Return Me._P_00231.Entity
		End Get
		Set
			Dim previousValue As P_0023_cls = Me._P_00231.Entity
			If ((Object.Equals(previousValue, value) = false)  _
						OrElse (Me._P_00231.HasLoadedOrAssignedValue = false)) Then
				Me.SendPropertyChanging
				If ((previousValue Is Nothing)  _
							= false) Then
					Me._P_00231.Entity = Nothing
					previousValue.opn1.Remove(Me)
				End If
				Me._P_00231.Entity = value
				If ((value Is Nothing)  _
							= false) Then
					value.opn1.Add(Me)
					Me._id_P_0023_com = value.id_P_0023
				Else
					Me._id_P_0023_com = CType(Nothing, Nullable(Of Integer))
				End If
				Me.SendPropertyChanged("P_00231")
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="P_0023_cls_opn_cls2", Storage:="_P_0023_cls", ThisKey:="id_P_0023_fla", OtherKey:="id_P_0023", IsForeignKey:=true)>  _
	Public Property P_0023_cls() As P_0023_cls
		Get
			Return Me._P_0023_cls.Entity
		End Get
		Set
			Dim previousValue As P_0023_cls = Me._P_0023_cls.Entity
			If ((Object.Equals(previousValue, value) = false)  _
						OrElse (Me._P_0023_cls.HasLoadedOrAssignedValue = false)) Then
				Me.SendPropertyChanging
				If ((previousValue Is Nothing)  _
							= false) Then
					Me._P_0023_cls.Entity = Nothing
					previousValue.opn_cls.Remove(Me)
				End If
				Me._P_0023_cls.Entity = value
				If ((value Is Nothing)  _
							= false) Then
					value.opn_cls.Add(Me)
					Me._id_P_0023_fla = value.id_P_0023
				Else
					Me._id_P_0023_fla = CType(Nothing, Nullable(Of Integer))
				End If
				Me.SendPropertyChanged("P_0023_cls")
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="P_0031_cls_opn_cls", Storage:="_P_0031_cls", ThisKey:="id_P_0031", OtherKey:="id_P_0031", IsForeignKey:=true)>  _
	Public Property P_0031_cls() As P_0031_cls
		Get
			Return Me._P_0031_cls.Entity
		End Get
		Set
			Dim previousValue As P_0031_cls = Me._P_0031_cls.Entity
			If ((Object.Equals(previousValue, value) = false)  _
						OrElse (Me._P_0031_cls.HasLoadedOrAssignedValue = false)) Then
				Me.SendPropertyChanging
				If ((previousValue Is Nothing)  _
							= false) Then
					Me._P_0031_cls.Entity = Nothing
					previousValue.opn_cls.Remove(Me)
				End If
				Me._P_0031_cls.Entity = value
				If ((value Is Nothing)  _
							= false) Then
					value.opn_cls.Add(Me)
					Me._id_P_0031 = value.id_P_0031
				Else
					Me._id_P_0031 = CType(Nothing, Nullable(Of Integer))
				End If
				Me.SendPropertyChanged("P_0031_cls")
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="P_0056_cls_opn_cls", Storage:="_P_0056_cls", ThisKey:="id_P_0056", OtherKey:="id_P_0056", IsForeignKey:=true)>  _
	Public Property P_0056_cls() As P_0056_cls
		Get
			Return Me._P_0056_cls.Entity
		End Get
		Set
			Dim previousValue As P_0056_cls = Me._P_0056_cls.Entity
			If ((Object.Equals(previousValue, value) = false)  _
						OrElse (Me._P_0056_cls.HasLoadedOrAssignedValue = false)) Then
				Me.SendPropertyChanging
				If ((previousValue Is Nothing)  _
							= false) Then
					Me._P_0056_cls.Entity = Nothing
					previousValue.opn_cls.Remove(Me)
				End If
				Me._P_0056_cls.Entity = value
				If ((value Is Nothing)  _
							= false) Then
					value.opn_cls.Add(Me)
					Me._id_P_0056 = value.id_P_0056
				Else
					Me._id_P_0056 = CType(Nothing, Nullable(Of Integer))
				End If
				Me.SendPropertyChanged("P_0056_cls")
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="P_0082_cls_opn_cls", Storage:="_P_0082_cls", ThisKey:="id_P_0082", OtherKey:="id_P_0082", IsForeignKey:=true)>  _
	Public Property P_0082_cls() As P_0082_cls
		Get
			Return Me._P_0082_cls.Entity
		End Get
		Set
			Dim previousValue As P_0082_cls = Me._P_0082_cls.Entity
			If ((Object.Equals(previousValue, value) = false)  _
						OrElse (Me._P_0082_cls.HasLoadedOrAssignedValue = false)) Then
				Me.SendPropertyChanging
				If ((previousValue Is Nothing)  _
							= false) Then
					Me._P_0082_cls.Entity = Nothing
					previousValue.opn_cls.Remove(Me)
				End If
				Me._P_0082_cls.Entity = value
				If ((value Is Nothing)  _
							= false) Then
					value.opn_cls.Add(Me)
					Me._id_P_0082 = value.id_P_0082
				Else
					Me._id_P_0082 = CType(Nothing, Nullable(Of Integer))
				End If
				Me.SendPropertyChanged("P_0082_cls")
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="PL_000047_cls_opn_cls", Storage:="_PL_000047_cls", ThisKey:="id_PL_000047", OtherKey:="id_PL_000047", IsForeignKey:=true)>  _
	Public Property PL_000047_cls() As PL_000047_cls
		Get
			Return Me._PL_000047_cls.Entity
		End Get
		Set
			Dim previousValue As PL_000047_cls = Me._PL_000047_cls.Entity
			If ((Object.Equals(previousValue, value) = false)  _
						OrElse (Me._PL_000047_cls.HasLoadedOrAssignedValue = false)) Then
				Me.SendPropertyChanging
				If ((previousValue Is Nothing)  _
							= false) Then
					Me._PL_000047_cls.Entity = Nothing
					previousValue.opn_cls.Remove(Me)
				End If
				Me._PL_000047_cls.Entity = value
				If ((value Is Nothing)  _
							= false) Then
					value.opn_cls.Add(Me)
					Me._id_PL_000047 = value.id_PL_000047
				Else
					Me._id_PL_000047 = CType(Nothing, String)
				End If
				Me.SendPropertyChanged("PL_000047_cls")
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="suc_cls_opn_cls", Storage:="_suc_cls", ThisKey:="id_suc", OtherKey:="id_suc", IsForeignKey:=true)>  _
	Public Property suc_cls() As suc_cls
		Get
			Return Me._suc_cls.Entity
		End Get
		Set
			Dim previousValue As suc_cls = Me._suc_cls.Entity
			If ((Object.Equals(previousValue, value) = false)  _
						OrElse (Me._suc_cls.HasLoadedOrAssignedValue = false)) Then
				Me.SendPropertyChanging
				If ((previousValue Is Nothing)  _
							= false) Then
					Me._suc_cls.Entity = Nothing
					previousValue.opn_cls.Remove(Me)
				End If
				Me._suc_cls.Entity = value
				If ((value Is Nothing)  _
							= false) Then
					value.opn_cls.Add(Me)
					Me._id_suc = value.id_suc
				Else
					Me._id_suc = CType(Nothing, Nullable(Of Integer))
				End If
				Me.SendPropertyChanged("suc_cls")
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="eje_cls_opn_cls", Storage:="_eje_cls", ThisKey:="id_eje", OtherKey:="id_eje", IsForeignKey:=true)>  _
	Public Property eje_cls() As eje_cls
		Get
			Return Me._eje_cls.Entity
		End Get
		Set
			Dim previousValue As eje_cls = Me._eje_cls.Entity
			If ((Object.Equals(previousValue, value) = false)  _
						OrElse (Me._eje_cls.HasLoadedOrAssignedValue = false)) Then
				Me.SendPropertyChanging
				If ((previousValue Is Nothing)  _
							= false) Then
					Me._eje_cls.Entity = Nothing
					previousValue.opn_cls.Remove(Me)
				End If
				Me._eje_cls.Entity = value
				If ((value Is Nothing)  _
							= false) Then
					value.opn_cls.Add(Me)
					Me._id_eje = value.id_eje
				Else
					Me._id_eje = CType(Nothing, Nullable(Of Integer))
				End If
				Me.SendPropertyChanged("eje_cls")
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
	
	Private Sub attach_cxn_cls(ByVal entity As cxn_cls)
		Me.SendPropertyChanging
		entity.opn_cls = Me
	End Sub
	
	Private Sub detach_cxn_cls(ByVal entity As cxn_cls)
		Me.SendPropertyChanging
		entity.opn_cls = Nothing
	End Sub
	
	Private Sub attach_dxn_cls(ByVal entity As dxn_cls)
		Me.SendPropertyChanging
		entity.opn_cls = Me
	End Sub
	
	Private Sub detach_dxn_cls(ByVal entity As dxn_cls)
		Me.SendPropertyChanging
		entity.opn_cls = Nothing
	End Sub
	
	Private Sub attach_gdn_cls(ByVal entity As gdn_cls)
		Me.SendPropertyChanging
		entity.opn_cls = Me
	End Sub
	
	Private Sub detach_gdn_cls(ByVal entity As gdn_cls)
		Me.SendPropertyChanging
		entity.opn_cls = Nothing
	End Sub
	
	Private Sub attach_gfn_cls(ByVal entity As gfn_cls)
		Me.SendPropertyChanging
		entity.opn_cls = Me
	End Sub
	
	Private Sub detach_gfn_cls(ByVal entity As gfn_cls)
		Me.SendPropertyChanging
		entity.opn_cls = Nothing
	End Sub
	
	Private Sub attach_nmn_cls(ByVal entity As nmn_cls)
		Me.SendPropertyChanging
		entity.opn_cls = Me
	End Sub
	
	Private Sub detach_nmn_cls(ByVal entity As nmn_cls)
		Me.SendPropertyChanging
		entity.opn_cls = Nothing
	End Sub
	
	Private Sub attach_nnc_cls(ByVal entity As nnc_cls)
		Me.SendPropertyChanging
		entity.opn_cls = Me
	End Sub
	
	Private Sub detach_nnc_cls(ByVal entity As nnc_cls)
		Me.SendPropertyChanging
		entity.opn_cls = Nothing
	End Sub
	
	Private Sub attach_ope_cls(ByVal entity As ope_cls)
		Me.SendPropertyChanging
		entity.opn_cls = Me
	End Sub
	
	Private Sub detach_ope_cls(ByVal entity As ope_cls)
		Me.SendPropertyChanging
		entity.opn_cls = Nothing
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.opo")>  _
Partial Public Class opo_cls
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _id_opo As Decimal
	
	Private _id_ope As System.Nullable(Of Decimal)
	
	Private _id_eje As System.Nullable(Of Integer)
	
	Private _opo_fec_oto As System.Nullable(Of Date)
	
	Private _opo_ful_pgo As System.Nullable(Of Date)
	
	Private _opo_int_dvg As System.Nullable(Of Decimal)
	
	Private _opo_rjt_dvg As System.Nullable(Of Decimal)
	
	Private _opo_rjt_cbr As System.Nullable(Of Decimal)
	
	Private _opo_cpi_cbr As System.Nullable(Of Decimal)
	
	Private _opo_fct As System.Nullable(Of Char)
	
	Private _opo_fec_anl As System.Nullable(Of Date)
	
	Private _opo_fec_ctb As System.Nullable(Of Date)
	
	Private _opo_otg As System.Nullable(Of Decimal)
	
	Private _ope_num_temporal As System.Nullable(Of Integer)
	
	Private _cxc_cls As EntitySet(Of cxc_cls)
	
	Private _cxp_cls As EntitySet(Of cxp_cls)
	
	Private _doc_cls As EntitySet(Of doc_cls)
	
	Private _doc_rea As EntitySet(Of doc_rea)
	
	Private _egr_cls As EntitySet(Of egr_cls)
	
	Private _ope_cls As EntityRef(Of ope_cls)
	
	Private _eje_cls As EntityRef(Of eje_cls)
	
    #Region "Definiciones de métodos de extensibilidad"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub Onid_opoChanging(value As Decimal)
    End Sub
    Partial Private Sub Onid_opoChanged()
    End Sub
    Partial Private Sub Onid_opeChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub Onid_opeChanged()
    End Sub
    Partial Private Sub Onid_ejeChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub Onid_ejeChanged()
    End Sub
    Partial Private Sub Onopo_fec_otoChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub Onopo_fec_otoChanged()
    End Sub
    Partial Private Sub Onopo_ful_pgoChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub Onopo_ful_pgoChanged()
    End Sub
    Partial Private Sub Onopo_int_dvgChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub Onopo_int_dvgChanged()
    End Sub
    Partial Private Sub Onopo_rjt_dvgChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub Onopo_rjt_dvgChanged()
    End Sub
    Partial Private Sub Onopo_rjt_cbrChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub Onopo_rjt_cbrChanged()
    End Sub
    Partial Private Sub Onopo_cpi_cbrChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub Onopo_cpi_cbrChanged()
    End Sub
    Partial Private Sub Onopo_fctChanging(value As System.Nullable(Of Char))
    End Sub
    Partial Private Sub Onopo_fctChanged()
    End Sub
    Partial Private Sub Onopo_fec_anlChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub Onopo_fec_anlChanged()
    End Sub
    Partial Private Sub Onopo_fec_ctbChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub Onopo_fec_ctbChanged()
    End Sub
    Partial Private Sub Onopo_otgChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub Onopo_otgChanged()
    End Sub
    Partial Private Sub Onope_num_temporalChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub Onope_num_temporalChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		Me._cxc_cls = New EntitySet(Of cxc_cls)(AddressOf Me.attach_cxc_cls, AddressOf Me.detach_cxc_cls)
		Me._cxp_cls = New EntitySet(Of cxp_cls)(AddressOf Me.attach_cxp_cls, AddressOf Me.detach_cxp_cls)
		Me._doc_cls = New EntitySet(Of doc_cls)(AddressOf Me.attach_doc_cls, AddressOf Me.detach_doc_cls)
		Me._doc_rea = New EntitySet(Of doc_rea)(AddressOf Me.attach_doc_rea, AddressOf Me.detach_doc_rea)
		Me._egr_cls = New EntitySet(Of egr_cls)(AddressOf Me.attach_egr_cls, AddressOf Me.detach_egr_cls)
		Me._ope_cls = CType(Nothing, EntityRef(Of ope_cls))
		Me._eje_cls = CType(Nothing, EntityRef(Of eje_cls))
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_id_opo", AutoSync:=AutoSync.OnInsert, DbType:="Decimal(10,0) NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property id_opo() As Decimal
		Get
			Return Me._id_opo
		End Get
		Set
			If ((Me._id_opo = value)  _
						= false) Then
				Me.Onid_opoChanging(value)
				Me.SendPropertyChanging
				Me._id_opo = value
				Me.SendPropertyChanged("id_opo")
				Me.Onid_opoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_id_ope", DbType:="Decimal(10,0)")>  _
	Public Property id_ope() As System.Nullable(Of Decimal)
		Get
			Return Me._id_ope
		End Get
		Set
			If (Me._id_ope.Equals(value) = false) Then
				If Me._ope_cls.HasLoadedOrAssignedValue Then
					Throw New System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException()
				End If
				Me.Onid_opeChanging(value)
				Me.SendPropertyChanging
				Me._id_ope = value
				Me.SendPropertyChanged("id_ope")
				Me.Onid_opeChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_id_eje", DbType:="Int")>  _
	Public Property id_eje() As System.Nullable(Of Integer)
		Get
			Return Me._id_eje
		End Get
		Set
			If (Me._id_eje.Equals(value) = false) Then
				If Me._eje_cls.HasLoadedOrAssignedValue Then
					Throw New System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException()
				End If
				Me.Onid_ejeChanging(value)
				Me.SendPropertyChanging
				Me._id_eje = value
				Me.SendPropertyChanged("id_eje")
				Me.Onid_ejeChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_opo_fec_oto", DbType:="DateTime")>  _
	Public Property opo_fec_oto() As System.Nullable(Of Date)
		Get
			Return Me._opo_fec_oto
		End Get
		Set
			If (Me._opo_fec_oto.Equals(value) = false) Then
				Me.Onopo_fec_otoChanging(value)
				Me.SendPropertyChanging
				Me._opo_fec_oto = value
				Me.SendPropertyChanged("opo_fec_oto")
				Me.Onopo_fec_otoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_opo_ful_pgo", DbType:="DateTime")>  _
	Public Property opo_ful_pgo() As System.Nullable(Of Date)
		Get
			Return Me._opo_ful_pgo
		End Get
		Set
			If (Me._opo_ful_pgo.Equals(value) = false) Then
				Me.Onopo_ful_pgoChanging(value)
				Me.SendPropertyChanging
				Me._opo_ful_pgo = value
				Me.SendPropertyChanged("opo_ful_pgo")
				Me.Onopo_ful_pgoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_opo_int_dvg", DbType:="Decimal(10,0)")>  _
	Public Property opo_int_dvg() As System.Nullable(Of Decimal)
		Get
			Return Me._opo_int_dvg
		End Get
		Set
			If (Me._opo_int_dvg.Equals(value) = false) Then
				Me.Onopo_int_dvgChanging(value)
				Me.SendPropertyChanging
				Me._opo_int_dvg = value
				Me.SendPropertyChanged("opo_int_dvg")
				Me.Onopo_int_dvgChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_opo_rjt_dvg", DbType:="Decimal(10,4)")>  _
	Public Property opo_rjt_dvg() As System.Nullable(Of Decimal)
		Get
			Return Me._opo_rjt_dvg
		End Get
		Set
			If (Me._opo_rjt_dvg.Equals(value) = false) Then
				Me.Onopo_rjt_dvgChanging(value)
				Me.SendPropertyChanging
				Me._opo_rjt_dvg = value
				Me.SendPropertyChanged("opo_rjt_dvg")
				Me.Onopo_rjt_dvgChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_opo_rjt_cbr", DbType:="Decimal(10,4)")>  _
	Public Property opo_rjt_cbr() As System.Nullable(Of Decimal)
		Get
			Return Me._opo_rjt_cbr
		End Get
		Set
			If (Me._opo_rjt_cbr.Equals(value) = false) Then
				Me.Onopo_rjt_cbrChanging(value)
				Me.SendPropertyChanging
				Me._opo_rjt_cbr = value
				Me.SendPropertyChanged("opo_rjt_cbr")
				Me.Onopo_rjt_cbrChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_opo_cpi_cbr", DbType:="Decimal(10,4)")>  _
	Public Property opo_cpi_cbr() As System.Nullable(Of Decimal)
		Get
			Return Me._opo_cpi_cbr
		End Get
		Set
			If (Me._opo_cpi_cbr.Equals(value) = false) Then
				Me.Onopo_cpi_cbrChanging(value)
				Me.SendPropertyChanging
				Me._opo_cpi_cbr = value
				Me.SendPropertyChanged("opo_cpi_cbr")
				Me.Onopo_cpi_cbrChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_opo_fct", DbType:="NChar(1)")>  _
	Public Property opo_fct() As System.Nullable(Of Char)
		Get
			Return Me._opo_fct
		End Get
		Set
			If (Me._opo_fct.Equals(value) = false) Then
				Me.Onopo_fctChanging(value)
				Me.SendPropertyChanging
				Me._opo_fct = value
				Me.SendPropertyChanged("opo_fct")
				Me.Onopo_fctChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_opo_fec_anl", DbType:="DateTime")>  _
	Public Property opo_fec_anl() As System.Nullable(Of Date)
		Get
			Return Me._opo_fec_anl
		End Get
		Set
			If (Me._opo_fec_anl.Equals(value) = false) Then
				Me.Onopo_fec_anlChanging(value)
				Me.SendPropertyChanging
				Me._opo_fec_anl = value
				Me.SendPropertyChanged("opo_fec_anl")
				Me.Onopo_fec_anlChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_opo_fec_ctb", DbType:="DateTime")>  _
	Public Property opo_fec_ctb() As System.Nullable(Of Date)
		Get
			Return Me._opo_fec_ctb
		End Get
		Set
			If (Me._opo_fec_ctb.Equals(value) = false) Then
				Me.Onopo_fec_ctbChanging(value)
				Me.SendPropertyChanging
				Me._opo_fec_ctb = value
				Me.SendPropertyChanged("opo_fec_ctb")
				Me.Onopo_fec_ctbChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_opo_otg", DbType:="Decimal(10,0)")>  _
	Public Property opo_otg() As System.Nullable(Of Decimal)
		Get
			Return Me._opo_otg
		End Get
		Set
			If (Me._opo_otg.Equals(value) = false) Then
				Me.Onopo_otgChanging(value)
				Me.SendPropertyChanging
				Me._opo_otg = value
				Me.SendPropertyChanged("opo_otg")
				Me.Onopo_otgChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ope_num_temporal", DbType:="Int")>  _
	Public Property ope_num_temporal() As System.Nullable(Of Integer)
		Get
			Return Me._ope_num_temporal
		End Get
		Set
			If (Me._ope_num_temporal.Equals(value) = false) Then
				Me.Onope_num_temporalChanging(value)
				Me.SendPropertyChanging
				Me._ope_num_temporal = value
				Me.SendPropertyChanged("ope_num_temporal")
				Me.Onope_num_temporalChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="opo_cls_cxc_cls", Storage:="_cxc_cls", ThisKey:="id_opo", OtherKey:="id_opo")>  _
	Public Property cxc_cls() As EntitySet(Of cxc_cls)
		Get
			Return Me._cxc_cls
		End Get
		Set
			Me._cxc_cls.Assign(value)
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="opo_cls_cxp_cls", Storage:="_cxp_cls", ThisKey:="id_opo", OtherKey:="id_opo")>  _
	Public Property cxp_cls() As EntitySet(Of cxp_cls)
		Get
			Return Me._cxp_cls
		End Get
		Set
			Me._cxp_cls.Assign(value)
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="opo_cls_doc_cls", Storage:="_doc_cls", ThisKey:="id_opo", OtherKey:="id_opo")>  _
	Public Property doc_cls() As EntitySet(Of doc_cls)
		Get
			Return Me._doc_cls
		End Get
		Set
			Me._doc_cls.Assign(value)
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="opo_cls_doc_rea", Storage:="_doc_rea", ThisKey:="id_opo", OtherKey:="id_opo")>  _
	Public Property doc_rea() As EntitySet(Of doc_rea)
		Get
			Return Me._doc_rea
		End Get
		Set
			Me._doc_rea.Assign(value)
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="opo_cls_egr_cls", Storage:="_egr_cls", ThisKey:="id_opo", OtherKey:="id_opo")>  _
	Public Property egr_cls() As EntitySet(Of egr_cls)
		Get
			Return Me._egr_cls
		End Get
		Set
			Me._egr_cls.Assign(value)
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="ope_cls_opo_cls", Storage:="_ope_cls", ThisKey:="id_ope", OtherKey:="id_ope", IsForeignKey:=true)>  _
	Public Property ope_cls() As ope_cls
		Get
			Return Me._ope_cls.Entity
		End Get
		Set
			Dim previousValue As ope_cls = Me._ope_cls.Entity
			If ((Object.Equals(previousValue, value) = false)  _
						OrElse (Me._ope_cls.HasLoadedOrAssignedValue = false)) Then
				Me.SendPropertyChanging
				If ((previousValue Is Nothing)  _
							= false) Then
					Me._ope_cls.Entity = Nothing
					previousValue.opo_cls.Remove(Me)
				End If
				Me._ope_cls.Entity = value
				If ((value Is Nothing)  _
							= false) Then
					value.opo_cls.Add(Me)
					Me._id_ope = value.id_ope
				Else
					Me._id_ope = CType(Nothing, Nullable(Of Decimal))
				End If
				Me.SendPropertyChanged("ope_cls")
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="eje_cls_opo_cls", Storage:="_eje_cls", ThisKey:="id_eje", OtherKey:="id_eje", IsForeignKey:=true)>  _
	Public Property eje_cls() As eje_cls
		Get
			Return Me._eje_cls.Entity
		End Get
		Set
			Dim previousValue As eje_cls = Me._eje_cls.Entity
			If ((Object.Equals(previousValue, value) = false)  _
						OrElse (Me._eje_cls.HasLoadedOrAssignedValue = false)) Then
				Me.SendPropertyChanging
				If ((previousValue Is Nothing)  _
							= false) Then
					Me._eje_cls.Entity = Nothing
					previousValue.opo_cls.Remove(Me)
				End If
				Me._eje_cls.Entity = value
				If ((value Is Nothing)  _
							= false) Then
					value.opo_cls.Add(Me)
					Me._id_eje = value.id_eje
				Else
					Me._id_eje = CType(Nothing, Nullable(Of Integer))
				End If
				Me.SendPropertyChanged("eje_cls")
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
	
	Private Sub attach_cxc_cls(ByVal entity As cxc_cls)
		Me.SendPropertyChanging
		entity.opo_cls = Me
	End Sub
	
	Private Sub detach_cxc_cls(ByVal entity As cxc_cls)
		Me.SendPropertyChanging
		entity.opo_cls = Nothing
	End Sub
	
	Private Sub attach_cxp_cls(ByVal entity As cxp_cls)
		Me.SendPropertyChanging
		entity.opo_cls = Me
	End Sub
	
	Private Sub detach_cxp_cls(ByVal entity As cxp_cls)
		Me.SendPropertyChanging
		entity.opo_cls = Nothing
	End Sub
	
	Private Sub attach_doc_cls(ByVal entity As doc_cls)
		Me.SendPropertyChanging
		entity.opo_cls = Me
	End Sub
	
	Private Sub detach_doc_cls(ByVal entity As doc_cls)
		Me.SendPropertyChanging
		entity.opo_cls = Nothing
	End Sub
	
	Private Sub attach_doc_rea(ByVal entity As doc_rea)
		Me.SendPropertyChanging
		entity.opo_cls = Me
	End Sub
	
	Private Sub detach_doc_rea(ByVal entity As doc_rea)
		Me.SendPropertyChanging
		entity.opo_cls = Nothing
	End Sub
	
	Private Sub attach_egr_cls(ByVal entity As egr_cls)
		Me.SendPropertyChanging
		entity.opo_cls = Me
	End Sub
	
	Private Sub detach_egr_cls(ByVal entity As egr_cls)
		Me.SendPropertyChanging
		entity.opo_cls = Nothing
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.org")>  _
Partial Public Class org_cls
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _id_org As Integer
	
	Private _cli_idc As String
	
	Private _org_rut As String
	
	Private _org_nom As String
	
	Private _org_car As String
	
	Private _org_atb As String
	
	Private _cli_cls As EntityRef(Of cli_cls)
	
    #Region "Definiciones de métodos de extensibilidad"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub Onid_orgChanging(value As Integer)
    End Sub
    Partial Private Sub Onid_orgChanged()
    End Sub
    Partial Private Sub Oncli_idcChanging(value As String)
    End Sub
    Partial Private Sub Oncli_idcChanged()
    End Sub
    Partial Private Sub Onorg_rutChanging(value As String)
    End Sub
    Partial Private Sub Onorg_rutChanged()
    End Sub
    Partial Private Sub Onorg_nomChanging(value As String)
    End Sub
    Partial Private Sub Onorg_nomChanged()
    End Sub
    Partial Private Sub Onorg_carChanging(value As String)
    End Sub
    Partial Private Sub Onorg_carChanged()
    End Sub
    Partial Private Sub Onorg_atbChanging(value As String)
    End Sub
    Partial Private Sub Onorg_atbChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		Me._cli_cls = CType(Nothing, EntityRef(Of cli_cls))
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_id_org", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property id_org() As Integer
		Get
			Return Me._id_org
		End Get
		Set
			If ((Me._id_org = value)  _
						= false) Then
				Me.Onid_orgChanging(value)
				Me.SendPropertyChanging
				Me._id_org = value
				Me.SendPropertyChanged("id_org")
				Me.Onid_orgChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_cli_idc", DbType:="Char(12) NOT NULL", CanBeNull:=false)>  _
	Public Property cli_idc() As String
		Get
			Return Me._cli_idc
		End Get
		Set
			If (String.Equals(Me._cli_idc, value) = false) Then
				If Me._cli_cls.HasLoadedOrAssignedValue Then
					Throw New System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException()
				End If
				Me.Oncli_idcChanging(value)
				Me.SendPropertyChanging
				Me._cli_idc = value
				Me.SendPropertyChanged("cli_idc")
				Me.Oncli_idcChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_org_rut", DbType:="VarChar(12) NOT NULL", CanBeNull:=false)>  _
	Public Property org_rut() As String
		Get
			Return Me._org_rut
		End Get
		Set
			If (String.Equals(Me._org_rut, value) = false) Then
				Me.Onorg_rutChanging(value)
				Me.SendPropertyChanging
				Me._org_rut = value
				Me.SendPropertyChanged("org_rut")
				Me.Onorg_rutChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_org_nom", DbType:="VarChar(50) NOT NULL", CanBeNull:=false)>  _
	Public Property org_nom() As String
		Get
			Return Me._org_nom
		End Get
		Set
			If (String.Equals(Me._org_nom, value) = false) Then
				Me.Onorg_nomChanging(value)
				Me.SendPropertyChanging
				Me._org_nom = value
				Me.SendPropertyChanged("org_nom")
				Me.Onorg_nomChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_org_car", DbType:="VarChar(30) NOT NULL", CanBeNull:=false)>  _
	Public Property org_car() As String
		Get
			Return Me._org_car
		End Get
		Set
			If (String.Equals(Me._org_car, value) = false) Then
				Me.Onorg_carChanging(value)
				Me.SendPropertyChanging
				Me._org_car = value
				Me.SendPropertyChanged("org_car")
				Me.Onorg_carChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_org_atb", DbType:="VarChar(30)")>  _
	Public Property org_atb() As String
		Get
			Return Me._org_atb
		End Get
		Set
			If (String.Equals(Me._org_atb, value) = false) Then
				Me.Onorg_atbChanging(value)
				Me.SendPropertyChanging
				Me._org_atb = value
				Me.SendPropertyChanged("org_atb")
				Me.Onorg_atbChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="cli_cls_org_cls", Storage:="_cli_cls", ThisKey:="cli_idc", OtherKey:="cli_idc", IsForeignKey:=true)>  _
	Public Property cli_cls() As cli_cls
		Get
			Return Me._cli_cls.Entity
		End Get
		Set
			Dim previousValue As cli_cls = Me._cli_cls.Entity
			If ((Object.Equals(previousValue, value) = false)  _
						OrElse (Me._cli_cls.HasLoadedOrAssignedValue = false)) Then
				Me.SendPropertyChanging
				If ((previousValue Is Nothing)  _
							= false) Then
					Me._cli_cls.Entity = Nothing
					previousValue.org_cls.Remove(Me)
				End If
				Me._cli_cls.Entity = value
				If ((value Is Nothing)  _
							= false) Then
					value.org_cls.Add(Me)
					Me._cli_idc = value.cli_idc
				Else
					Me._cli_idc = CType(Nothing, String)
				End If
				Me.SendPropertyChanged("cli_cls")
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.P_001")>  _
Partial Public Class P_001_cls
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _id_P_001 As Integer
	
	Private _pnu_des As String
	
	Private _pnu_est As System.Nullable(Of Char)
	
	Private _pnu_cod_temporal As System.Nullable(Of Integer)
	
	Private _ciu_cls As EntitySet(Of ciu_cls)
	
    #Region "Definiciones de métodos de extensibilidad"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub Onid_P_001Changing(value As Integer)
    End Sub
    Partial Private Sub Onid_P_001Changed()
    End Sub
    Partial Private Sub Onpnu_desChanging(value As String)
    End Sub
    Partial Private Sub Onpnu_desChanged()
    End Sub
    Partial Private Sub Onpnu_estChanging(value As System.Nullable(Of Char))
    End Sub
    Partial Private Sub Onpnu_estChanged()
    End Sub
    Partial Private Sub Onpnu_cod_temporalChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub Onpnu_cod_temporalChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		Me._ciu_cls = New EntitySet(Of ciu_cls)(AddressOf Me.attach_ciu_cls, AddressOf Me.detach_ciu_cls)
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_id_P_001", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property id_P_001() As Integer
		Get
			Return Me._id_P_001
		End Get
		Set
			If ((Me._id_P_001 = value)  _
						= false) Then
				Me.Onid_P_001Changing(value)
				Me.SendPropertyChanging
				Me._id_P_001 = value
				Me.SendPropertyChanged("id_P_001")
				Me.Onid_P_001Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pnu_des", DbType:="VarChar(80)")>  _
	Public Property pnu_des() As String
		Get
			Return Me._pnu_des
		End Get
		Set
			If (String.Equals(Me._pnu_des, value) = false) Then
				Me.Onpnu_desChanging(value)
				Me.SendPropertyChanging
				Me._pnu_des = value
				Me.SendPropertyChanged("pnu_des")
				Me.Onpnu_desChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pnu_est", DbType:="Char(1)")>  _
	Public Property pnu_est() As System.Nullable(Of Char)
		Get
			Return Me._pnu_est
		End Get
		Set
			If (Me._pnu_est.Equals(value) = false) Then
				Me.Onpnu_estChanging(value)
				Me.SendPropertyChanging
				Me._pnu_est = value
				Me.SendPropertyChanged("pnu_est")
				Me.Onpnu_estChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pnu_cod_temporal", DbType:="Int")>  _
	Public Property pnu_cod_temporal() As System.Nullable(Of Integer)
		Get
			Return Me._pnu_cod_temporal
		End Get
		Set
			If (Me._pnu_cod_temporal.Equals(value) = false) Then
				Me.Onpnu_cod_temporalChanging(value)
				Me.SendPropertyChanging
				Me._pnu_cod_temporal = value
				Me.SendPropertyChanged("pnu_cod_temporal")
				Me.Onpnu_cod_temporalChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="P_001_cls_ciu_cls", Storage:="_ciu_cls", ThisKey:="id_P_001", OtherKey:="id_p_001")>  _
	Public Property ciu_cls() As EntitySet(Of ciu_cls)
		Get
			Return Me._ciu_cls
		End Get
		Set
			Me._ciu_cls.Assign(value)
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
	
	Private Sub attach_ciu_cls(ByVal entity As ciu_cls)
		Me.SendPropertyChanging
		entity.P_001_cls = Me
	End Sub
	
	Private Sub detach_ciu_cls(ByVal entity As ciu_cls)
		Me.SendPropertyChanging
		entity.P_001_cls = Nothing
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.P_0010")>  _
Partial Public Class P_0010_cls
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _id_P_0010 As Integer
	
	Private _pnu_des As String
	
	Private _pnu_est As System.Nullable(Of Char)
	
	Private _pnu_cod_temporal As System.Nullable(Of Integer)
	
    #Region "Definiciones de métodos de extensibilidad"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub Onid_P_0010Changing(value As Integer)
    End Sub
    Partial Private Sub Onid_P_0010Changed()
    End Sub
    Partial Private Sub Onpnu_desChanging(value As String)
    End Sub
    Partial Private Sub Onpnu_desChanged()
    End Sub
    Partial Private Sub Onpnu_estChanging(value As System.Nullable(Of Char))
    End Sub
    Partial Private Sub Onpnu_estChanged()
    End Sub
    Partial Private Sub Onpnu_cod_temporalChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub Onpnu_cod_temporalChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_id_P_0010", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property id_P_0010() As Integer
		Get
			Return Me._id_P_0010
		End Get
		Set
			If ((Me._id_P_0010 = value)  _
						= false) Then
				Me.Onid_P_0010Changing(value)
				Me.SendPropertyChanging
				Me._id_P_0010 = value
				Me.SendPropertyChanged("id_P_0010")
				Me.Onid_P_0010Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pnu_des", DbType:="VarChar(80)")>  _
	Public Property pnu_des() As String
		Get
			Return Me._pnu_des
		End Get
		Set
			If (String.Equals(Me._pnu_des, value) = false) Then
				Me.Onpnu_desChanging(value)
				Me.SendPropertyChanging
				Me._pnu_des = value
				Me.SendPropertyChanged("pnu_des")
				Me.Onpnu_desChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pnu_est", DbType:="Char(1)")>  _
	Public Property pnu_est() As System.Nullable(Of Char)
		Get
			Return Me._pnu_est
		End Get
		Set
			If (Me._pnu_est.Equals(value) = false) Then
				Me.Onpnu_estChanging(value)
				Me.SendPropertyChanging
				Me._pnu_est = value
				Me.SendPropertyChanged("pnu_est")
				Me.Onpnu_estChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pnu_cod_temporal", DbType:="Int")>  _
	Public Property pnu_cod_temporal() As System.Nullable(Of Integer)
		Get
			Return Me._pnu_cod_temporal
		End Get
		Set
			If (Me._pnu_cod_temporal.Equals(value) = false) Then
				Me.Onpnu_cod_temporalChanging(value)
				Me.SendPropertyChanging
				Me._pnu_cod_temporal = value
				Me.SendPropertyChanged("pnu_cod_temporal")
				Me.Onpnu_cod_temporalChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.P_0011")>  _
Partial Public Class P_0011_cls
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _id_P_0011 As Integer
	
	Private _pnu_des As String
	
	Private _pnu_est As System.Nullable(Of Char)
	
	Private _pnu_cod_temporal As System.Nullable(Of Integer)
	
	Private _doc_rea As EntitySet(Of doc_rea)
	
	Private _dpg_cls As EntitySet(Of dpg_cls)
	
	Private _dsi_cls As EntitySet(Of dsi_cls)
	
	Private _gsn_cls As EntitySet(Of gsn_cls)
	
    #Region "Definiciones de métodos de extensibilidad"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub Onid_P_0011Changing(value As Integer)
    End Sub
    Partial Private Sub Onid_P_0011Changed()
    End Sub
    Partial Private Sub Onpnu_desChanging(value As String)
    End Sub
    Partial Private Sub Onpnu_desChanged()
    End Sub
    Partial Private Sub Onpnu_estChanging(value As System.Nullable(Of Char))
    End Sub
    Partial Private Sub Onpnu_estChanged()
    End Sub
    Partial Private Sub Onpnu_cod_temporalChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub Onpnu_cod_temporalChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		Me._doc_rea = New EntitySet(Of doc_rea)(AddressOf Me.attach_doc_rea, AddressOf Me.detach_doc_rea)
		Me._dpg_cls = New EntitySet(Of dpg_cls)(AddressOf Me.attach_dpg_cls, AddressOf Me.detach_dpg_cls)
		Me._dsi_cls = New EntitySet(Of dsi_cls)(AddressOf Me.attach_dsi_cls, AddressOf Me.detach_dsi_cls)
		Me._gsn_cls = New EntitySet(Of gsn_cls)(AddressOf Me.attach_gsn_cls, AddressOf Me.detach_gsn_cls)
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_id_P_0011", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property id_P_0011() As Integer
		Get
			Return Me._id_P_0011
		End Get
		Set
			If ((Me._id_P_0011 = value)  _
						= false) Then
				Me.Onid_P_0011Changing(value)
				Me.SendPropertyChanging
				Me._id_P_0011 = value
				Me.SendPropertyChanged("id_P_0011")
				Me.Onid_P_0011Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pnu_des", DbType:="VarChar(80)")>  _
	Public Property pnu_des() As String
		Get
			Return Me._pnu_des
		End Get
		Set
			If (String.Equals(Me._pnu_des, value) = false) Then
				Me.Onpnu_desChanging(value)
				Me.SendPropertyChanging
				Me._pnu_des = value
				Me.SendPropertyChanged("pnu_des")
				Me.Onpnu_desChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pnu_est", DbType:="Char(1)")>  _
	Public Property pnu_est() As System.Nullable(Of Char)
		Get
			Return Me._pnu_est
		End Get
		Set
			If (Me._pnu_est.Equals(value) = false) Then
				Me.Onpnu_estChanging(value)
				Me.SendPropertyChanging
				Me._pnu_est = value
				Me.SendPropertyChanged("pnu_est")
				Me.Onpnu_estChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pnu_cod_temporal", DbType:="Int")>  _
	Public Property pnu_cod_temporal() As System.Nullable(Of Integer)
		Get
			Return Me._pnu_cod_temporal
		End Get
		Set
			If (Me._pnu_cod_temporal.Equals(value) = false) Then
				Me.Onpnu_cod_temporalChanging(value)
				Me.SendPropertyChanging
				Me._pnu_cod_temporal = value
				Me.SendPropertyChanged("pnu_cod_temporal")
				Me.Onpnu_cod_temporalChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="P_0011_cls_doc_rea", Storage:="_doc_rea", ThisKey:="id_P_0011", OtherKey:="id_P_0011")>  _
	Public Property doc_rea() As EntitySet(Of doc_rea)
		Get
			Return Me._doc_rea
		End Get
		Set
			Me._doc_rea.Assign(value)
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="P_0011_cls_dpg_cls", Storage:="_dpg_cls", ThisKey:="id_P_0011", OtherKey:="id_P_0011")>  _
	Public Property dpg_cls() As EntitySet(Of dpg_cls)
		Get
			Return Me._dpg_cls
		End Get
		Set
			Me._dpg_cls.Assign(value)
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="P_0011_cls_dsi_cls", Storage:="_dsi_cls", ThisKey:="id_P_0011", OtherKey:="id_P_0011")>  _
	Public Property dsi_cls() As EntitySet(Of dsi_cls)
		Get
			Return Me._dsi_cls
		End Get
		Set
			Me._dsi_cls.Assign(value)
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="P_0011_cls_gsn_cls", Storage:="_gsn_cls", ThisKey:="id_P_0011", OtherKey:="id_P_0011")>  _
	Public Property gsn_cls() As EntitySet(Of gsn_cls)
		Get
			Return Me._gsn_cls
		End Get
		Set
			Me._gsn_cls.Assign(value)
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
	
	Private Sub attach_doc_rea(ByVal entity As doc_rea)
		Me.SendPropertyChanging
		entity.P_0011_cls = Me
	End Sub
	
	Private Sub detach_doc_rea(ByVal entity As doc_rea)
		Me.SendPropertyChanging
		entity.P_0011_cls = Nothing
	End Sub
	
	Private Sub attach_dpg_cls(ByVal entity As dpg_cls)
		Me.SendPropertyChanging
		entity.P_0011_cls = Me
	End Sub
	
	Private Sub detach_dpg_cls(ByVal entity As dpg_cls)
		Me.SendPropertyChanging
		entity.P_0011_cls = Nothing
	End Sub
	
	Private Sub attach_dsi_cls(ByVal entity As dsi_cls)
		Me.SendPropertyChanging
		entity.P_0011_cls = Me
	End Sub
	
	Private Sub detach_dsi_cls(ByVal entity As dsi_cls)
		Me.SendPropertyChanging
		entity.P_0011_cls = Nothing
	End Sub
	
	Private Sub attach_gsn_cls(ByVal entity As gsn_cls)
		Me.SendPropertyChanging
		entity.P_0011_cls = Me
	End Sub
	
	Private Sub detach_gsn_cls(ByVal entity As gsn_cls)
		Me.SendPropertyChanging
		entity.P_0011_cls = Nothing
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.P_0012")>  _
Partial Public Class P_0012_cls
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _id_P_0012 As Integer
	
	Private _pnu_des As String
	
	Private _pnu_est As System.Nullable(Of Char)
	
	Private _pnu_cod_temporal As System.Nullable(Of Integer)
	
	Private _opn_cls As EntitySet(Of opn_cls)
	
    #Region "Definiciones de métodos de extensibilidad"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub Onid_P_0012Changing(value As Integer)
    End Sub
    Partial Private Sub Onid_P_0012Changed()
    End Sub
    Partial Private Sub Onpnu_desChanging(value As String)
    End Sub
    Partial Private Sub Onpnu_desChanged()
    End Sub
    Partial Private Sub Onpnu_estChanging(value As System.Nullable(Of Char))
    End Sub
    Partial Private Sub Onpnu_estChanged()
    End Sub
    Partial Private Sub Onpnu_cod_temporalChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub Onpnu_cod_temporalChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		Me._opn_cls = New EntitySet(Of opn_cls)(AddressOf Me.attach_opn_cls, AddressOf Me.detach_opn_cls)
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_id_P_0012", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property id_P_0012() As Integer
		Get
			Return Me._id_P_0012
		End Get
		Set
			If ((Me._id_P_0012 = value)  _
						= false) Then
				Me.Onid_P_0012Changing(value)
				Me.SendPropertyChanging
				Me._id_P_0012 = value
				Me.SendPropertyChanged("id_P_0012")
				Me.Onid_P_0012Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pnu_des", DbType:="VarChar(80)")>  _
	Public Property pnu_des() As String
		Get
			Return Me._pnu_des
		End Get
		Set
			If (String.Equals(Me._pnu_des, value) = false) Then
				Me.Onpnu_desChanging(value)
				Me.SendPropertyChanging
				Me._pnu_des = value
				Me.SendPropertyChanged("pnu_des")
				Me.Onpnu_desChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pnu_est", DbType:="Char(1)")>  _
	Public Property pnu_est() As System.Nullable(Of Char)
		Get
			Return Me._pnu_est
		End Get
		Set
			If (Me._pnu_est.Equals(value) = false) Then
				Me.Onpnu_estChanging(value)
				Me.SendPropertyChanging
				Me._pnu_est = value
				Me.SendPropertyChanged("pnu_est")
				Me.Onpnu_estChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pnu_cod_temporal", DbType:="Int")>  _
	Public Property pnu_cod_temporal() As System.Nullable(Of Integer)
		Get
			Return Me._pnu_cod_temporal
		End Get
		Set
			If (Me._pnu_cod_temporal.Equals(value) = false) Then
				Me.Onpnu_cod_temporalChanging(value)
				Me.SendPropertyChanging
				Me._pnu_cod_temporal = value
				Me.SendPropertyChanged("pnu_cod_temporal")
				Me.Onpnu_cod_temporalChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="P_0012_cls_opn_cls", Storage:="_opn_cls", ThisKey:="id_P_0012", OtherKey:="id_P_0012")>  _
	Public Property opn_cls() As EntitySet(Of opn_cls)
		Get
			Return Me._opn_cls
		End Get
		Set
			Me._opn_cls.Assign(value)
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
	
	Private Sub attach_opn_cls(ByVal entity As opn_cls)
		Me.SendPropertyChanging
		entity.P_0012_cls = Me
	End Sub
	
	Private Sub detach_opn_cls(ByVal entity As opn_cls)
		Me.SendPropertyChanging
		entity.P_0012_cls = Nothing
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.P_0015")>  _
Partial Public Class P_0015_cls
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _id_P_0015 As Integer
	
	Private _pnu_des As String
	
	Private _pnu_est As System.Nullable(Of Char)
	
	Private _pnu_cod_temporal As System.Nullable(Of Integer)
	
    #Region "Definiciones de métodos de extensibilidad"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub Onid_P_0015Changing(value As Integer)
    End Sub
    Partial Private Sub Onid_P_0015Changed()
    End Sub
    Partial Private Sub Onpnu_desChanging(value As String)
    End Sub
    Partial Private Sub Onpnu_desChanged()
    End Sub
    Partial Private Sub Onpnu_estChanging(value As System.Nullable(Of Char))
    End Sub
    Partial Private Sub Onpnu_estChanged()
    End Sub
    Partial Private Sub Onpnu_cod_temporalChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub Onpnu_cod_temporalChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_id_P_0015", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property id_P_0015() As Integer
		Get
			Return Me._id_P_0015
		End Get
		Set
			If ((Me._id_P_0015 = value)  _
						= false) Then
				Me.Onid_P_0015Changing(value)
				Me.SendPropertyChanging
				Me._id_P_0015 = value
				Me.SendPropertyChanged("id_P_0015")
				Me.Onid_P_0015Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pnu_des", DbType:="VarChar(80)")>  _
	Public Property pnu_des() As String
		Get
			Return Me._pnu_des
		End Get
		Set
			If (String.Equals(Me._pnu_des, value) = false) Then
				Me.Onpnu_desChanging(value)
				Me.SendPropertyChanging
				Me._pnu_des = value
				Me.SendPropertyChanged("pnu_des")
				Me.Onpnu_desChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pnu_est", DbType:="Char(1)")>  _
	Public Property pnu_est() As System.Nullable(Of Char)
		Get
			Return Me._pnu_est
		End Get
		Set
			If (Me._pnu_est.Equals(value) = false) Then
				Me.Onpnu_estChanging(value)
				Me.SendPropertyChanging
				Me._pnu_est = value
				Me.SendPropertyChanged("pnu_est")
				Me.Onpnu_estChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pnu_cod_temporal", DbType:="Int")>  _
	Public Property pnu_cod_temporal() As System.Nullable(Of Integer)
		Get
			Return Me._pnu_cod_temporal
		End Get
		Set
			If (Me._pnu_cod_temporal.Equals(value) = false) Then
				Me.Onpnu_cod_temporalChanging(value)
				Me.SendPropertyChanging
				Me._pnu_cod_temporal = value
				Me.SendPropertyChanged("pnu_cod_temporal")
				Me.Onpnu_cod_temporalChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.P_0017")>  _
Partial Public Class P_0017_cls
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _id_P_0017 As Integer
	
	Private _pnu_des As String
	
	Private _pnu_est As System.Nullable(Of Char)
	
	Private _pnu_cod_temporal As System.Nullable(Of Integer)
	
    #Region "Definiciones de métodos de extensibilidad"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub Onid_P_0017Changing(value As Integer)
    End Sub
    Partial Private Sub Onid_P_0017Changed()
    End Sub
    Partial Private Sub Onpnu_desChanging(value As String)
    End Sub
    Partial Private Sub Onpnu_desChanged()
    End Sub
    Partial Private Sub Onpnu_estChanging(value As System.Nullable(Of Char))
    End Sub
    Partial Private Sub Onpnu_estChanged()
    End Sub
    Partial Private Sub Onpnu_cod_temporalChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub Onpnu_cod_temporalChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_id_P_0017", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property id_P_0017() As Integer
		Get
			Return Me._id_P_0017
		End Get
		Set
			If ((Me._id_P_0017 = value)  _
						= false) Then
				Me.Onid_P_0017Changing(value)
				Me.SendPropertyChanging
				Me._id_P_0017 = value
				Me.SendPropertyChanged("id_P_0017")
				Me.Onid_P_0017Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pnu_des", DbType:="VarChar(80)")>  _
	Public Property pnu_des() As String
		Get
			Return Me._pnu_des
		End Get
		Set
			If (String.Equals(Me._pnu_des, value) = false) Then
				Me.Onpnu_desChanging(value)
				Me.SendPropertyChanging
				Me._pnu_des = value
				Me.SendPropertyChanged("pnu_des")
				Me.Onpnu_desChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pnu_est", DbType:="Char(1)")>  _
	Public Property pnu_est() As System.Nullable(Of Char)
		Get
			Return Me._pnu_est
		End Get
		Set
			If (Me._pnu_est.Equals(value) = false) Then
				Me.Onpnu_estChanging(value)
				Me.SendPropertyChanging
				Me._pnu_est = value
				Me.SendPropertyChanged("pnu_est")
				Me.Onpnu_estChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pnu_cod_temporal", DbType:="Int")>  _
	Public Property pnu_cod_temporal() As System.Nullable(Of Integer)
		Get
			Return Me._pnu_cod_temporal
		End Get
		Set
			If (Me._pnu_cod_temporal.Equals(value) = false) Then
				Me.Onpnu_cod_temporalChanging(value)
				Me.SendPropertyChanging
				Me._pnu_cod_temporal = value
				Me.SendPropertyChanged("pnu_cod_temporal")
				Me.Onpnu_cod_temporalChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.P_0018")>  _
Partial Public Class P_0018_cls
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _id_P_0018 As Integer
	
	Private _pnu_des As String
	
	Private _pnu_est As System.Nullable(Of Char)
	
	Private _pnu_cod_temporal As System.Nullable(Of Integer)
	
    #Region "Definiciones de métodos de extensibilidad"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub Onid_P_0018Changing(value As Integer)
    End Sub
    Partial Private Sub Onid_P_0018Changed()
    End Sub
    Partial Private Sub Onpnu_desChanging(value As String)
    End Sub
    Partial Private Sub Onpnu_desChanged()
    End Sub
    Partial Private Sub Onpnu_estChanging(value As System.Nullable(Of Char))
    End Sub
    Partial Private Sub Onpnu_estChanged()
    End Sub
    Partial Private Sub Onpnu_cod_temporalChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub Onpnu_cod_temporalChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_id_P_0018", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property id_P_0018() As Integer
		Get
			Return Me._id_P_0018
		End Get
		Set
			If ((Me._id_P_0018 = value)  _
						= false) Then
				Me.Onid_P_0018Changing(value)
				Me.SendPropertyChanging
				Me._id_P_0018 = value
				Me.SendPropertyChanged("id_P_0018")
				Me.Onid_P_0018Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pnu_des", DbType:="VarChar(80)")>  _
	Public Property pnu_des() As String
		Get
			Return Me._pnu_des
		End Get
		Set
			If (String.Equals(Me._pnu_des, value) = false) Then
				Me.Onpnu_desChanging(value)
				Me.SendPropertyChanging
				Me._pnu_des = value
				Me.SendPropertyChanged("pnu_des")
				Me.Onpnu_desChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pnu_est", DbType:="Char(1)")>  _
	Public Property pnu_est() As System.Nullable(Of Char)
		Get
			Return Me._pnu_est
		End Get
		Set
			If (Me._pnu_est.Equals(value) = false) Then
				Me.Onpnu_estChanging(value)
				Me.SendPropertyChanging
				Me._pnu_est = value
				Me.SendPropertyChanged("pnu_est")
				Me.Onpnu_estChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pnu_cod_temporal", DbType:="Int")>  _
	Public Property pnu_cod_temporal() As System.Nullable(Of Integer)
		Get
			Return Me._pnu_cod_temporal
		End Get
		Set
			If (Me._pnu_cod_temporal.Equals(value) = false) Then
				Me.Onpnu_cod_temporalChanging(value)
				Me.SendPropertyChanging
				Me._pnu_cod_temporal = value
				Me.SendPropertyChanged("pnu_cod_temporal")
				Me.Onpnu_cod_temporalChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.P_002")>  _
Partial Public Class P_002_cls
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _id_P_002 As Integer
	
	Private _pnu_des As String
	
	Private _pnu_est As System.Nullable(Of Char)
	
	Private _pnu_cod_temporal As System.Nullable(Of Integer)
	
    #Region "Definiciones de métodos de extensibilidad"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub Onid_P_002Changing(value As Integer)
    End Sub
    Partial Private Sub Onid_P_002Changed()
    End Sub
    Partial Private Sub Onpnu_desChanging(value As String)
    End Sub
    Partial Private Sub Onpnu_desChanged()
    End Sub
    Partial Private Sub Onpnu_estChanging(value As System.Nullable(Of Char))
    End Sub
    Partial Private Sub Onpnu_estChanged()
    End Sub
    Partial Private Sub Onpnu_cod_temporalChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub Onpnu_cod_temporalChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_id_P_002", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property id_P_002() As Integer
		Get
			Return Me._id_P_002
		End Get
		Set
			If ((Me._id_P_002 = value)  _
						= false) Then
				Me.Onid_P_002Changing(value)
				Me.SendPropertyChanging
				Me._id_P_002 = value
				Me.SendPropertyChanged("id_P_002")
				Me.Onid_P_002Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pnu_des", DbType:="VarChar(80)")>  _
	Public Property pnu_des() As String
		Get
			Return Me._pnu_des
		End Get
		Set
			If (String.Equals(Me._pnu_des, value) = false) Then
				Me.Onpnu_desChanging(value)
				Me.SendPropertyChanging
				Me._pnu_des = value
				Me.SendPropertyChanged("pnu_des")
				Me.Onpnu_desChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pnu_est", DbType:="Char(1)")>  _
	Public Property pnu_est() As System.Nullable(Of Char)
		Get
			Return Me._pnu_est
		End Get
		Set
			If (Me._pnu_est.Equals(value) = false) Then
				Me.Onpnu_estChanging(value)
				Me.SendPropertyChanging
				Me._pnu_est = value
				Me.SendPropertyChanged("pnu_est")
				Me.Onpnu_estChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pnu_cod_temporal", DbType:="Int")>  _
	Public Property pnu_cod_temporal() As System.Nullable(Of Integer)
		Get
			Return Me._pnu_cod_temporal
		End Get
		Set
			If (Me._pnu_cod_temporal.Equals(value) = false) Then
				Me.Onpnu_cod_temporalChanging(value)
				Me.SendPropertyChanging
				Me._pnu_cod_temporal = value
				Me.SendPropertyChanged("pnu_cod_temporal")
				Me.Onpnu_cod_temporalChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.P_0020")>  _
Partial Public Class P_0020_cls
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _id_P_0020 As Integer
	
	Private _pnu_des As String
	
	Private _pnu_est As System.Nullable(Of Char)
	
	Private _pnu_cod_temporal As System.Nullable(Of Integer)
	
    #Region "Definiciones de métodos de extensibilidad"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub Onid_P_0020Changing(value As Integer)
    End Sub
    Partial Private Sub Onid_P_0020Changed()
    End Sub
    Partial Private Sub Onpnu_desChanging(value As String)
    End Sub
    Partial Private Sub Onpnu_desChanged()
    End Sub
    Partial Private Sub Onpnu_estChanging(value As System.Nullable(Of Char))
    End Sub
    Partial Private Sub Onpnu_estChanged()
    End Sub
    Partial Private Sub Onpnu_cod_temporalChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub Onpnu_cod_temporalChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_id_P_0020", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property id_P_0020() As Integer
		Get
			Return Me._id_P_0020
		End Get
		Set
			If ((Me._id_P_0020 = value)  _
						= false) Then
				Me.Onid_P_0020Changing(value)
				Me.SendPropertyChanging
				Me._id_P_0020 = value
				Me.SendPropertyChanged("id_P_0020")
				Me.Onid_P_0020Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pnu_des", DbType:="VarChar(80)")>  _
	Public Property pnu_des() As String
		Get
			Return Me._pnu_des
		End Get
		Set
			If (String.Equals(Me._pnu_des, value) = false) Then
				Me.Onpnu_desChanging(value)
				Me.SendPropertyChanging
				Me._pnu_des = value
				Me.SendPropertyChanged("pnu_des")
				Me.Onpnu_desChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pnu_est", DbType:="Char(1)")>  _
	Public Property pnu_est() As System.Nullable(Of Char)
		Get
			Return Me._pnu_est
		End Get
		Set
			If (Me._pnu_est.Equals(value) = false) Then
				Me.Onpnu_estChanging(value)
				Me.SendPropertyChanging
				Me._pnu_est = value
				Me.SendPropertyChanged("pnu_est")
				Me.Onpnu_estChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pnu_cod_temporal", DbType:="Int")>  _
	Public Property pnu_cod_temporal() As System.Nullable(Of Integer)
		Get
			Return Me._pnu_cod_temporal
		End Get
		Set
			If (Me._pnu_cod_temporal.Equals(value) = false) Then
				Me.Onpnu_cod_temporalChanging(value)
				Me.SendPropertyChanging
				Me._pnu_cod_temporal = value
				Me.SendPropertyChanged("pnu_cod_temporal")
				Me.Onpnu_cod_temporalChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.P_0021")>  _
Partial Public Class P_0021_cls
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _id_P_0021 As Integer
	
	Private _pnu_des As String
	
	Private _pnu_est As System.Nullable(Of Char)
	
	Private _pnu_cod_temporal As System.Nullable(Of Integer)
	
	Private _opn_cls As EntitySet(Of opn_cls)
	
	Private _pgr_cls As EntitySet(Of pgr_cls)
	
    #Region "Definiciones de métodos de extensibilidad"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub Onid_P_0021Changing(value As Integer)
    End Sub
    Partial Private Sub Onid_P_0021Changed()
    End Sub
    Partial Private Sub Onpnu_desChanging(value As String)
    End Sub
    Partial Private Sub Onpnu_desChanged()
    End Sub
    Partial Private Sub Onpnu_estChanging(value As System.Nullable(Of Char))
    End Sub
    Partial Private Sub Onpnu_estChanged()
    End Sub
    Partial Private Sub Onpnu_cod_temporalChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub Onpnu_cod_temporalChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		Me._opn_cls = New EntitySet(Of opn_cls)(AddressOf Me.attach_opn_cls, AddressOf Me.detach_opn_cls)
		Me._pgr_cls = New EntitySet(Of pgr_cls)(AddressOf Me.attach_pgr_cls, AddressOf Me.detach_pgr_cls)
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_id_P_0021", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property id_P_0021() As Integer
		Get
			Return Me._id_P_0021
		End Get
		Set
			If ((Me._id_P_0021 = value)  _
						= false) Then
				Me.Onid_P_0021Changing(value)
				Me.SendPropertyChanging
				Me._id_P_0021 = value
				Me.SendPropertyChanged("id_P_0021")
				Me.Onid_P_0021Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pnu_des", DbType:="VarChar(80)")>  _
	Public Property pnu_des() As String
		Get
			Return Me._pnu_des
		End Get
		Set
			If (String.Equals(Me._pnu_des, value) = false) Then
				Me.Onpnu_desChanging(value)
				Me.SendPropertyChanging
				Me._pnu_des = value
				Me.SendPropertyChanged("pnu_des")
				Me.Onpnu_desChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pnu_est", DbType:="Char(1)")>  _
	Public Property pnu_est() As System.Nullable(Of Char)
		Get
			Return Me._pnu_est
		End Get
		Set
			If (Me._pnu_est.Equals(value) = false) Then
				Me.Onpnu_estChanging(value)
				Me.SendPropertyChanging
				Me._pnu_est = value
				Me.SendPropertyChanged("pnu_est")
				Me.Onpnu_estChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pnu_cod_temporal", DbType:="Int")>  _
	Public Property pnu_cod_temporal() As System.Nullable(Of Integer)
		Get
			Return Me._pnu_cod_temporal
		End Get
		Set
			If (Me._pnu_cod_temporal.Equals(value) = false) Then
				Me.Onpnu_cod_temporalChanging(value)
				Me.SendPropertyChanging
				Me._pnu_cod_temporal = value
				Me.SendPropertyChanged("pnu_cod_temporal")
				Me.Onpnu_cod_temporalChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="P_0021_cls_opn_cls", Storage:="_opn_cls", ThisKey:="id_P_0021", OtherKey:="id_P_0021")>  _
	Public Property opn_cls() As EntitySet(Of opn_cls)
		Get
			Return Me._opn_cls
		End Get
		Set
			Me._opn_cls.Assign(value)
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="P_0021_cls_pgr_cls", Storage:="_pgr_cls", ThisKey:="id_P_0021", OtherKey:="id_P_0021")>  _
	Public Property pgr_cls() As EntitySet(Of pgr_cls)
		Get
			Return Me._pgr_cls
		End Get
		Set
			Me._pgr_cls.Assign(value)
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
	
	Private Sub attach_opn_cls(ByVal entity As opn_cls)
		Me.SendPropertyChanging
		entity.P_0021_cls = Me
	End Sub
	
	Private Sub detach_opn_cls(ByVal entity As opn_cls)
		Me.SendPropertyChanging
		entity.P_0021_cls = Nothing
	End Sub
	
	Private Sub attach_pgr_cls(ByVal entity As pgr_cls)
		Me.SendPropertyChanging
		entity.P_0021_cls = Me
	End Sub
	
	Private Sub detach_pgr_cls(ByVal entity As pgr_cls)
		Me.SendPropertyChanging
		entity.P_0021_cls = Nothing
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.P_0022")>  _
Partial Public Class P_0022_cls
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _id_P_0022 As Integer
	
	Private _pnu_des As String
	
	Private _pnu_est As System.Nullable(Of Char)
	
	Private _pnu_cod_temporal As System.Nullable(Of Integer)
	
	Private _pgr_cls As EntitySet(Of pgr_cls)
	
    #Region "Definiciones de métodos de extensibilidad"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub Onid_P_0022Changing(value As Integer)
    End Sub
    Partial Private Sub Onid_P_0022Changed()
    End Sub
    Partial Private Sub Onpnu_desChanging(value As String)
    End Sub
    Partial Private Sub Onpnu_desChanged()
    End Sub
    Partial Private Sub Onpnu_estChanging(value As System.Nullable(Of Char))
    End Sub
    Partial Private Sub Onpnu_estChanged()
    End Sub
    Partial Private Sub Onpnu_cod_temporalChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub Onpnu_cod_temporalChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		Me._pgr_cls = New EntitySet(Of pgr_cls)(AddressOf Me.attach_pgr_cls, AddressOf Me.detach_pgr_cls)
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_id_P_0022", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property id_P_0022() As Integer
		Get
			Return Me._id_P_0022
		End Get
		Set
			If ((Me._id_P_0022 = value)  _
						= false) Then
				Me.Onid_P_0022Changing(value)
				Me.SendPropertyChanging
				Me._id_P_0022 = value
				Me.SendPropertyChanged("id_P_0022")
				Me.Onid_P_0022Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pnu_des", DbType:="VarChar(80)")>  _
	Public Property pnu_des() As String
		Get
			Return Me._pnu_des
		End Get
		Set
			If (String.Equals(Me._pnu_des, value) = false) Then
				Me.Onpnu_desChanging(value)
				Me.SendPropertyChanging
				Me._pnu_des = value
				Me.SendPropertyChanged("pnu_des")
				Me.Onpnu_desChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pnu_est", DbType:="Char(1)")>  _
	Public Property pnu_est() As System.Nullable(Of Char)
		Get
			Return Me._pnu_est
		End Get
		Set
			If (Me._pnu_est.Equals(value) = false) Then
				Me.Onpnu_estChanging(value)
				Me.SendPropertyChanging
				Me._pnu_est = value
				Me.SendPropertyChanged("pnu_est")
				Me.Onpnu_estChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pnu_cod_temporal", DbType:="Int")>  _
	Public Property pnu_cod_temporal() As System.Nullable(Of Integer)
		Get
			Return Me._pnu_cod_temporal
		End Get
		Set
			If (Me._pnu_cod_temporal.Equals(value) = false) Then
				Me.Onpnu_cod_temporalChanging(value)
				Me.SendPropertyChanging
				Me._pnu_cod_temporal = value
				Me.SendPropertyChanged("pnu_cod_temporal")
				Me.Onpnu_cod_temporalChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="P_0022_cls_pgr_cls", Storage:="_pgr_cls", ThisKey:="id_P_0022", OtherKey:="id_P_0022")>  _
	Public Property pgr_cls() As EntitySet(Of pgr_cls)
		Get
			Return Me._pgr_cls
		End Get
		Set
			Me._pgr_cls.Assign(value)
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
	
	Private Sub attach_pgr_cls(ByVal entity As pgr_cls)
		Me.SendPropertyChanging
		entity.P_0022_cls = Me
	End Sub
	
	Private Sub detach_pgr_cls(ByVal entity As pgr_cls)
		Me.SendPropertyChanging
		entity.P_0022_cls = Nothing
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.P_0023")>  _
Partial Public Class P_0023_cls
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _id_P_0023 As Integer
	
	Private _pnu_des As String
	
	Private _pnu_est As System.Nullable(Of Char)
	
	Private _pnu_atr_003 As String
	
	Private _pnu_atr_004 As System.Nullable(Of Integer)
	
	Private _pnu_atr_005 As System.Nullable(Of Integer)
	
	Private _pnu_atr_008 As String
	
	Private _con_cls As EntitySet(Of con_cls)
	
	Private _cxc_cls As EntitySet(Of cxc_cls)
	
	Private _cxp_cls As EntitySet(Of cxp_cls)
	
	Private _deu_mon_cls As EntitySet(Of deu_mon_cls)
	
	Private _dpo_cls As EntitySet(Of dpo_cls)
	
	Private _dvf_cls As EntitySet(Of dvf_cls)
	
	Private _eva_cls As EntitySet(Of eva_cls)
	
	Private _nce_cls As EntitySet(Of nce_cls)
	
	Private _nmn_cls As EntitySet(Of nmn_cls)
	
	Private _opn As EntitySet(Of opn_cls)
	
	Private _opn1 As EntitySet(Of opn_cls)
	
	Private _opn_cls As EntitySet(Of opn_cls)
	
	Private _par_cls As EntitySet(Of par_cls)
	
	Private _pgr_cls As EntitySet(Of pgr_cls)
	
	Private _typ_cls As EntitySet(Of typ_cls)
	
    #Region "Definiciones de métodos de extensibilidad"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub Onid_P_0023Changing(value As Integer)
    End Sub
    Partial Private Sub Onid_P_0023Changed()
    End Sub
    Partial Private Sub Onpnu_desChanging(value As String)
    End Sub
    Partial Private Sub Onpnu_desChanged()
    End Sub
    Partial Private Sub Onpnu_estChanging(value As System.Nullable(Of Char))
    End Sub
    Partial Private Sub Onpnu_estChanged()
    End Sub
    Partial Private Sub Onpnu_atr_003Changing(value As String)
    End Sub
    Partial Private Sub Onpnu_atr_003Changed()
    End Sub
    Partial Private Sub Onpnu_atr_004Changing(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub Onpnu_atr_004Changed()
    End Sub
    Partial Private Sub Onpnu_atr_005Changing(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub Onpnu_atr_005Changed()
    End Sub
    Partial Private Sub Onpnu_atr_008Changing(value As String)
    End Sub
    Partial Private Sub Onpnu_atr_008Changed()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		Me._con_cls = New EntitySet(Of con_cls)(AddressOf Me.attach_con_cls, AddressOf Me.detach_con_cls)
		Me._cxc_cls = New EntitySet(Of cxc_cls)(AddressOf Me.attach_cxc_cls, AddressOf Me.detach_cxc_cls)
		Me._cxp_cls = New EntitySet(Of cxp_cls)(AddressOf Me.attach_cxp_cls, AddressOf Me.detach_cxp_cls)
		Me._deu_mon_cls = New EntitySet(Of deu_mon_cls)(AddressOf Me.attach_deu_mon_cls, AddressOf Me.detach_deu_mon_cls)
		Me._dpo_cls = New EntitySet(Of dpo_cls)(AddressOf Me.attach_dpo_cls, AddressOf Me.detach_dpo_cls)
		Me._dvf_cls = New EntitySet(Of dvf_cls)(AddressOf Me.attach_dvf_cls, AddressOf Me.detach_dvf_cls)
		Me._eva_cls = New EntitySet(Of eva_cls)(AddressOf Me.attach_eva_cls, AddressOf Me.detach_eva_cls)
		Me._nce_cls = New EntitySet(Of nce_cls)(AddressOf Me.attach_nce_cls, AddressOf Me.detach_nce_cls)
		Me._nmn_cls = New EntitySet(Of nmn_cls)(AddressOf Me.attach_nmn_cls, AddressOf Me.detach_nmn_cls)
		Me._opn = New EntitySet(Of opn_cls)(AddressOf Me.attach_opn, AddressOf Me.detach_opn)
		Me._opn1 = New EntitySet(Of opn_cls)(AddressOf Me.attach_opn1, AddressOf Me.detach_opn1)
		Me._opn_cls = New EntitySet(Of opn_cls)(AddressOf Me.attach_opn_cls, AddressOf Me.detach_opn_cls)
		Me._par_cls = New EntitySet(Of par_cls)(AddressOf Me.attach_par_cls, AddressOf Me.detach_par_cls)
		Me._pgr_cls = New EntitySet(Of pgr_cls)(AddressOf Me.attach_pgr_cls, AddressOf Me.detach_pgr_cls)
		Me._typ_cls = New EntitySet(Of typ_cls)(AddressOf Me.attach_typ_cls, AddressOf Me.detach_typ_cls)
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_id_P_0023", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property id_P_0023() As Integer
		Get
			Return Me._id_P_0023
		End Get
		Set
			If ((Me._id_P_0023 = value)  _
						= false) Then
				Me.Onid_P_0023Changing(value)
				Me.SendPropertyChanging
				Me._id_P_0023 = value
				Me.SendPropertyChanged("id_P_0023")
				Me.Onid_P_0023Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pnu_des", DbType:="VarChar(80)")>  _
	Public Property pnu_des() As String
		Get
			Return Me._pnu_des
		End Get
		Set
			If (String.Equals(Me._pnu_des, value) = false) Then
				Me.Onpnu_desChanging(value)
				Me.SendPropertyChanging
				Me._pnu_des = value
				Me.SendPropertyChanged("pnu_des")
				Me.Onpnu_desChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pnu_est", DbType:="Char(1)")>  _
	Public Property pnu_est() As System.Nullable(Of Char)
		Get
			Return Me._pnu_est
		End Get
		Set
			If (Me._pnu_est.Equals(value) = false) Then
				Me.Onpnu_estChanging(value)
				Me.SendPropertyChanging
				Me._pnu_est = value
				Me.SendPropertyChanged("pnu_est")
				Me.Onpnu_estChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pnu_atr_003", DbType:="VarChar(8)")>  _
	Public Property pnu_atr_003() As String
		Get
			Return Me._pnu_atr_003
		End Get
		Set
			If (String.Equals(Me._pnu_atr_003, value) = false) Then
				Me.Onpnu_atr_003Changing(value)
				Me.SendPropertyChanging
				Me._pnu_atr_003 = value
				Me.SendPropertyChanged("pnu_atr_003")
				Me.Onpnu_atr_003Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pnu_atr_004", DbType:="Int")>  _
	Public Property pnu_atr_004() As System.Nullable(Of Integer)
		Get
			Return Me._pnu_atr_004
		End Get
		Set
			If (Me._pnu_atr_004.Equals(value) = false) Then
				Me.Onpnu_atr_004Changing(value)
				Me.SendPropertyChanging
				Me._pnu_atr_004 = value
				Me.SendPropertyChanged("pnu_atr_004")
				Me.Onpnu_atr_004Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pnu_atr_005", DbType:="Int")>  _
	Public Property pnu_atr_005() As System.Nullable(Of Integer)
		Get
			Return Me._pnu_atr_005
		End Get
		Set
			If (Me._pnu_atr_005.Equals(value) = false) Then
				Me.Onpnu_atr_005Changing(value)
				Me.SendPropertyChanging
				Me._pnu_atr_005 = value
				Me.SendPropertyChanged("pnu_atr_005")
				Me.Onpnu_atr_005Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pnu_atr_008", DbType:="VarChar(8)")>  _
	Public Property pnu_atr_008() As String
		Get
			Return Me._pnu_atr_008
		End Get
		Set
			If (String.Equals(Me._pnu_atr_008, value) = false) Then
				Me.Onpnu_atr_008Changing(value)
				Me.SendPropertyChanging
				Me._pnu_atr_008 = value
				Me.SendPropertyChanged("pnu_atr_008")
				Me.Onpnu_atr_008Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="P_0023_cls_con_cls", Storage:="_con_cls", ThisKey:="id_P_0023", OtherKey:="id_p_0023")>  _
	Public Property con_cls() As EntitySet(Of con_cls)
		Get
			Return Me._con_cls
		End Get
		Set
			Me._con_cls.Assign(value)
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="P_0023_cls_cxc_cls", Storage:="_cxc_cls", ThisKey:="id_P_0023", OtherKey:="id_P_0023")>  _
	Public Property cxc_cls() As EntitySet(Of cxc_cls)
		Get
			Return Me._cxc_cls
		End Get
		Set
			Me._cxc_cls.Assign(value)
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="P_0023_cls_cxp_cls", Storage:="_cxp_cls", ThisKey:="id_P_0023", OtherKey:="id_P_0023")>  _
	Public Property cxp_cls() As EntitySet(Of cxp_cls)
		Get
			Return Me._cxp_cls
		End Get
		Set
			Me._cxp_cls.Assign(value)
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="P_0023_cls_deu_mon_cls", Storage:="_deu_mon_cls", ThisKey:="id_P_0023", OtherKey:="id_p_0023")>  _
	Public Property deu_mon_cls() As EntitySet(Of deu_mon_cls)
		Get
			Return Me._deu_mon_cls
		End Get
		Set
			Me._deu_mon_cls.Assign(value)
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="P_0023_cls_dpo_cls", Storage:="_dpo_cls", ThisKey:="id_P_0023", OtherKey:="id_P_0023")>  _
	Public Property dpo_cls() As EntitySet(Of dpo_cls)
		Get
			Return Me._dpo_cls
		End Get
		Set
			Me._dpo_cls.Assign(value)
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="P_0023_cls_dvf_cls", Storage:="_dvf_cls", ThisKey:="id_P_0023", OtherKey:="id_P_0023")>  _
	Public Property dvf_cls() As EntitySet(Of dvf_cls)
		Get
			Return Me._dvf_cls
		End Get
		Set
			Me._dvf_cls.Assign(value)
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="P_0023_cls_eva_cls", Storage:="_eva_cls", ThisKey:="id_P_0023", OtherKey:="id_P_0023")>  _
	Public Property eva_cls() As EntitySet(Of eva_cls)
		Get
			Return Me._eva_cls
		End Get
		Set
			Me._eva_cls.Assign(value)
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="P_0023_cls_nce_cls", Storage:="_nce_cls", ThisKey:="id_P_0023", OtherKey:="id_p_0023")>  _
	Public Property nce_cls() As EntitySet(Of nce_cls)
		Get
			Return Me._nce_cls
		End Get
		Set
			Me._nce_cls.Assign(value)
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="P_0023_cls_nmn_cls", Storage:="_nmn_cls", ThisKey:="id_P_0023", OtherKey:="id_p_0023")>  _
	Public Property nmn_cls() As EntitySet(Of nmn_cls)
		Get
			Return Me._nmn_cls
		End Get
		Set
			Me._nmn_cls.Assign(value)
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="P_0023_cls_opn_cls", Storage:="_opn", ThisKey:="id_P_0023", OtherKey:="id_P_0023")>  _
	Public Property opn() As EntitySet(Of opn_cls)
		Get
			Return Me._opn
		End Get
		Set
			Me._opn.Assign(value)
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="P_0023_cls_opn_cls1", Storage:="_opn1", ThisKey:="id_P_0023", OtherKey:="id_P_0023_com")>  _
	Public Property opn1() As EntitySet(Of opn_cls)
		Get
			Return Me._opn1
		End Get
		Set
			Me._opn1.Assign(value)
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="P_0023_cls_opn_cls2", Storage:="_opn_cls", ThisKey:="id_P_0023", OtherKey:="id_P_0023_fla")>  _
	Public Property opn_cls() As EntitySet(Of opn_cls)
		Get
			Return Me._opn_cls
		End Get
		Set
			Me._opn_cls.Assign(value)
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="P_0023_cls_par_cls", Storage:="_par_cls", ThisKey:="id_P_0023", OtherKey:="id_P_0023")>  _
	Public Property par_cls() As EntitySet(Of par_cls)
		Get
			Return Me._par_cls
		End Get
		Set
			Me._par_cls.Assign(value)
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="P_0023_cls_pgr_cls", Storage:="_pgr_cls", ThisKey:="id_P_0023", OtherKey:="id_P_0023")>  _
	Public Property pgr_cls() As EntitySet(Of pgr_cls)
		Get
			Return Me._pgr_cls
		End Get
		Set
			Me._pgr_cls.Assign(value)
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="P_0023_cls_typ_cls", Storage:="_typ_cls", ThisKey:="id_P_0023", OtherKey:="id_P_0023")>  _
	Public Property typ_cls() As EntitySet(Of typ_cls)
		Get
			Return Me._typ_cls
		End Get
		Set
			Me._typ_cls.Assign(value)
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
	
	Private Sub attach_con_cls(ByVal entity As con_cls)
		Me.SendPropertyChanging
		entity.P_0023_cls = Me
	End Sub
	
	Private Sub detach_con_cls(ByVal entity As con_cls)
		Me.SendPropertyChanging
		entity.P_0023_cls = Nothing
	End Sub
	
	Private Sub attach_cxc_cls(ByVal entity As cxc_cls)
		Me.SendPropertyChanging
		entity.P_0023_cls = Me
	End Sub
	
	Private Sub detach_cxc_cls(ByVal entity As cxc_cls)
		Me.SendPropertyChanging
		entity.P_0023_cls = Nothing
	End Sub
	
	Private Sub attach_cxp_cls(ByVal entity As cxp_cls)
		Me.SendPropertyChanging
		entity.P_0023_cls = Me
	End Sub
	
	Private Sub detach_cxp_cls(ByVal entity As cxp_cls)
		Me.SendPropertyChanging
		entity.P_0023_cls = Nothing
	End Sub
	
	Private Sub attach_deu_mon_cls(ByVal entity As deu_mon_cls)
		Me.SendPropertyChanging
		entity.P_0023_cls = Me
	End Sub
	
	Private Sub detach_deu_mon_cls(ByVal entity As deu_mon_cls)
		Me.SendPropertyChanging
		entity.P_0023_cls = Nothing
	End Sub
	
	Private Sub attach_dpo_cls(ByVal entity As dpo_cls)
		Me.SendPropertyChanging
		entity.P_0023_cls = Me
	End Sub
	
	Private Sub detach_dpo_cls(ByVal entity As dpo_cls)
		Me.SendPropertyChanging
		entity.P_0023_cls = Nothing
	End Sub
	
	Private Sub attach_dvf_cls(ByVal entity As dvf_cls)
		Me.SendPropertyChanging
		entity.P_0023_cls = Me
	End Sub
	
	Private Sub detach_dvf_cls(ByVal entity As dvf_cls)
		Me.SendPropertyChanging
		entity.P_0023_cls = Nothing
	End Sub
	
	Private Sub attach_eva_cls(ByVal entity As eva_cls)
		Me.SendPropertyChanging
		entity.P_0023_cls = Me
	End Sub
	
	Private Sub detach_eva_cls(ByVal entity As eva_cls)
		Me.SendPropertyChanging
		entity.P_0023_cls = Nothing
	End Sub
	
	Private Sub attach_nce_cls(ByVal entity As nce_cls)
		Me.SendPropertyChanging
		entity.P_0023_cls = Me
	End Sub
	
	Private Sub detach_nce_cls(ByVal entity As nce_cls)
		Me.SendPropertyChanging
		entity.P_0023_cls = Nothing
	End Sub
	
	Private Sub attach_nmn_cls(ByVal entity As nmn_cls)
		Me.SendPropertyChanging
		entity.P_0023_cls = Me
	End Sub
	
	Private Sub detach_nmn_cls(ByVal entity As nmn_cls)
		Me.SendPropertyChanging
		entity.P_0023_cls = Nothing
	End Sub
	
	Private Sub attach_opn(ByVal entity As opn_cls)
		Me.SendPropertyChanging
		entity.P_0023 = Me
	End Sub
	
	Private Sub detach_opn(ByVal entity As opn_cls)
		Me.SendPropertyChanging
		entity.P_0023 = Nothing
	End Sub
	
	Private Sub attach_opn1(ByVal entity As opn_cls)
		Me.SendPropertyChanging
		entity.P_00231 = Me
	End Sub
	
	Private Sub detach_opn1(ByVal entity As opn_cls)
		Me.SendPropertyChanging
		entity.P_00231 = Nothing
	End Sub
	
	Private Sub attach_opn_cls(ByVal entity As opn_cls)
		Me.SendPropertyChanging
		entity.P_0023_cls = Me
	End Sub
	
	Private Sub detach_opn_cls(ByVal entity As opn_cls)
		Me.SendPropertyChanging
		entity.P_0023_cls = Nothing
	End Sub
	
	Private Sub attach_par_cls(ByVal entity As par_cls)
		Me.SendPropertyChanging
		entity.P_0023_cls = Me
	End Sub
	
	Private Sub detach_par_cls(ByVal entity As par_cls)
		Me.SendPropertyChanging
		entity.P_0023_cls = Nothing
	End Sub
	
	Private Sub attach_pgr_cls(ByVal entity As pgr_cls)
		Me.SendPropertyChanging
		entity.P_0023_cls = Me
	End Sub
	
	Private Sub detach_pgr_cls(ByVal entity As pgr_cls)
		Me.SendPropertyChanging
		entity.P_0023_cls = Nothing
	End Sub
	
	Private Sub attach_typ_cls(ByVal entity As typ_cls)
		Me.SendPropertyChanging
		entity.P_0023_cls = Me
	End Sub
	
	Private Sub detach_typ_cls(ByVal entity As typ_cls)
		Me.SendPropertyChanging
		entity.P_0023_cls = Nothing
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.P_0024")>  _
Partial Public Class P_0024_cls
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _id_P_0024 As Integer
	
	Private _pnu_des As String
	
	Private _pnu_est As System.Nullable(Of Char)
	
	Private _pnu_cod_temporal As System.Nullable(Of Integer)
	
    #Region "Definiciones de métodos de extensibilidad"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub Onid_P_0024Changing(value As Integer)
    End Sub
    Partial Private Sub Onid_P_0024Changed()
    End Sub
    Partial Private Sub Onpnu_desChanging(value As String)
    End Sub
    Partial Private Sub Onpnu_desChanged()
    End Sub
    Partial Private Sub Onpnu_estChanging(value As System.Nullable(Of Char))
    End Sub
    Partial Private Sub Onpnu_estChanged()
    End Sub
    Partial Private Sub Onpnu_cod_temporalChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub Onpnu_cod_temporalChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_id_P_0024", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property id_P_0024() As Integer
		Get
			Return Me._id_P_0024
		End Get
		Set
			If ((Me._id_P_0024 = value)  _
						= false) Then
				Me.Onid_P_0024Changing(value)
				Me.SendPropertyChanging
				Me._id_P_0024 = value
				Me.SendPropertyChanged("id_P_0024")
				Me.Onid_P_0024Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pnu_des", DbType:="VarChar(80)")>  _
	Public Property pnu_des() As String
		Get
			Return Me._pnu_des
		End Get
		Set
			If (String.Equals(Me._pnu_des, value) = false) Then
				Me.Onpnu_desChanging(value)
				Me.SendPropertyChanging
				Me._pnu_des = value
				Me.SendPropertyChanged("pnu_des")
				Me.Onpnu_desChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pnu_est", DbType:="Char(1)")>  _
	Public Property pnu_est() As System.Nullable(Of Char)
		Get
			Return Me._pnu_est
		End Get
		Set
			If (Me._pnu_est.Equals(value) = false) Then
				Me.Onpnu_estChanging(value)
				Me.SendPropertyChanging
				Me._pnu_est = value
				Me.SendPropertyChanged("pnu_est")
				Me.Onpnu_estChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pnu_cod_temporal", DbType:="Int")>  _
	Public Property pnu_cod_temporal() As System.Nullable(Of Integer)
		Get
			Return Me._pnu_cod_temporal
		End Get
		Set
			If (Me._pnu_cod_temporal.Equals(value) = false) Then
				Me.Onpnu_cod_temporalChanging(value)
				Me.SendPropertyChanging
				Me._pnu_cod_temporal = value
				Me.SendPropertyChanged("pnu_cod_temporal")
				Me.Onpnu_cod_temporalChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.P_0025")>  _
Partial Public Class P_0025_cls
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _id_P_0025 As Integer
	
	Private _pnu_des As String
	
	Private _pnu_est As System.Nullable(Of Char)
	
	Private _pnu_cod_temporal As System.Nullable(Of Integer)
	
	Private _avl_cls As EntitySet(Of avl_cls)
	
    #Region "Definiciones de métodos de extensibilidad"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub Onid_P_0025Changing(value As Integer)
    End Sub
    Partial Private Sub Onid_P_0025Changed()
    End Sub
    Partial Private Sub Onpnu_desChanging(value As String)
    End Sub
    Partial Private Sub Onpnu_desChanged()
    End Sub
    Partial Private Sub Onpnu_estChanging(value As System.Nullable(Of Char))
    End Sub
    Partial Private Sub Onpnu_estChanged()
    End Sub
    Partial Private Sub Onpnu_cod_temporalChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub Onpnu_cod_temporalChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		Me._avl_cls = New EntitySet(Of avl_cls)(AddressOf Me.attach_avl_cls, AddressOf Me.detach_avl_cls)
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_id_P_0025", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property id_P_0025() As Integer
		Get
			Return Me._id_P_0025
		End Get
		Set
			If ((Me._id_P_0025 = value)  _
						= false) Then
				Me.Onid_P_0025Changing(value)
				Me.SendPropertyChanging
				Me._id_P_0025 = value
				Me.SendPropertyChanged("id_P_0025")
				Me.Onid_P_0025Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pnu_des", DbType:="VarChar(80)")>  _
	Public Property pnu_des() As String
		Get
			Return Me._pnu_des
		End Get
		Set
			If (String.Equals(Me._pnu_des, value) = false) Then
				Me.Onpnu_desChanging(value)
				Me.SendPropertyChanging
				Me._pnu_des = value
				Me.SendPropertyChanged("pnu_des")
				Me.Onpnu_desChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pnu_est", DbType:="Char(1)")>  _
	Public Property pnu_est() As System.Nullable(Of Char)
		Get
			Return Me._pnu_est
		End Get
		Set
			If (Me._pnu_est.Equals(value) = false) Then
				Me.Onpnu_estChanging(value)
				Me.SendPropertyChanging
				Me._pnu_est = value
				Me.SendPropertyChanged("pnu_est")
				Me.Onpnu_estChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pnu_cod_temporal", DbType:="Int")>  _
	Public Property pnu_cod_temporal() As System.Nullable(Of Integer)
		Get
			Return Me._pnu_cod_temporal
		End Get
		Set
			If (Me._pnu_cod_temporal.Equals(value) = false) Then
				Me.Onpnu_cod_temporalChanging(value)
				Me.SendPropertyChanging
				Me._pnu_cod_temporal = value
				Me.SendPropertyChanged("pnu_cod_temporal")
				Me.Onpnu_cod_temporalChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="P_0025_cls_avl_cls", Storage:="_avl_cls", ThisKey:="id_P_0025", OtherKey:="id_p_0025")>  _
	Public Property avl_cls() As EntitySet(Of avl_cls)
		Get
			Return Me._avl_cls
		End Get
		Set
			Me._avl_cls.Assign(value)
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
	
	Private Sub attach_avl_cls(ByVal entity As avl_cls)
		Me.SendPropertyChanging
		entity.P_0025_cls = Me
	End Sub
	
	Private Sub detach_avl_cls(ByVal entity As avl_cls)
		Me.SendPropertyChanging
		entity.P_0025_cls = Nothing
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.P_0026")>  _
Partial Public Class P_0026_cls
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _id_P_0026 As Integer
	
	Private _pnu_des As String
	
	Private _pnu_est As System.Nullable(Of Char)
	
	Private _pnu_cod_temporal As System.Nullable(Of Integer)
	
	Private _avl_cls As EntitySet(Of avl_cls)
	
    #Region "Definiciones de métodos de extensibilidad"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub Onid_P_0026Changing(value As Integer)
    End Sub
    Partial Private Sub Onid_P_0026Changed()
    End Sub
    Partial Private Sub Onpnu_desChanging(value As String)
    End Sub
    Partial Private Sub Onpnu_desChanged()
    End Sub
    Partial Private Sub Onpnu_estChanging(value As System.Nullable(Of Char))
    End Sub
    Partial Private Sub Onpnu_estChanged()
    End Sub
    Partial Private Sub Onpnu_cod_temporalChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub Onpnu_cod_temporalChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		Me._avl_cls = New EntitySet(Of avl_cls)(AddressOf Me.attach_avl_cls, AddressOf Me.detach_avl_cls)
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_id_P_0026", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property id_P_0026() As Integer
		Get
			Return Me._id_P_0026
		End Get
		Set
			If ((Me._id_P_0026 = value)  _
						= false) Then
				Me.Onid_P_0026Changing(value)
				Me.SendPropertyChanging
				Me._id_P_0026 = value
				Me.SendPropertyChanged("id_P_0026")
				Me.Onid_P_0026Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pnu_des", DbType:="VarChar(80)")>  _
	Public Property pnu_des() As String
		Get
			Return Me._pnu_des
		End Get
		Set
			If (String.Equals(Me._pnu_des, value) = false) Then
				Me.Onpnu_desChanging(value)
				Me.SendPropertyChanging
				Me._pnu_des = value
				Me.SendPropertyChanged("pnu_des")
				Me.Onpnu_desChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pnu_est", DbType:="Char(1)")>  _
	Public Property pnu_est() As System.Nullable(Of Char)
		Get
			Return Me._pnu_est
		End Get
		Set
			If (Me._pnu_est.Equals(value) = false) Then
				Me.Onpnu_estChanging(value)
				Me.SendPropertyChanging
				Me._pnu_est = value
				Me.SendPropertyChanged("pnu_est")
				Me.Onpnu_estChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pnu_cod_temporal", DbType:="Int")>  _
	Public Property pnu_cod_temporal() As System.Nullable(Of Integer)
		Get
			Return Me._pnu_cod_temporal
		End Get
		Set
			If (Me._pnu_cod_temporal.Equals(value) = false) Then
				Me.Onpnu_cod_temporalChanging(value)
				Me.SendPropertyChanging
				Me._pnu_cod_temporal = value
				Me.SendPropertyChanged("pnu_cod_temporal")
				Me.Onpnu_cod_temporalChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="P_0026_cls_avl_cls", Storage:="_avl_cls", ThisKey:="id_P_0026", OtherKey:="id_p_0026")>  _
	Public Property avl_cls() As EntitySet(Of avl_cls)
		Get
			Return Me._avl_cls
		End Get
		Set
			Me._avl_cls.Assign(value)
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
	
	Private Sub attach_avl_cls(ByVal entity As avl_cls)
		Me.SendPropertyChanging
		entity.P_0026_cls = Me
	End Sub
	
	Private Sub detach_avl_cls(ByVal entity As avl_cls)
		Me.SendPropertyChanging
		entity.P_0026_cls = Nothing
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.P_0027")>  _
Partial Public Class P_0027_cls
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _id_P_0027 As Integer
	
	Private _pnu_des As String
	
	Private _pnu_est As System.Nullable(Of Char)
	
	Private _pnu_cod_temporal As System.Nullable(Of Integer)
	
	Private _avl_cls As EntitySet(Of avl_cls)
	
    #Region "Definiciones de métodos de extensibilidad"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub Onid_P_0027Changing(value As Integer)
    End Sub
    Partial Private Sub Onid_P_0027Changed()
    End Sub
    Partial Private Sub Onpnu_desChanging(value As String)
    End Sub
    Partial Private Sub Onpnu_desChanged()
    End Sub
    Partial Private Sub Onpnu_estChanging(value As System.Nullable(Of Char))
    End Sub
    Partial Private Sub Onpnu_estChanged()
    End Sub
    Partial Private Sub Onpnu_cod_temporalChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub Onpnu_cod_temporalChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		Me._avl_cls = New EntitySet(Of avl_cls)(AddressOf Me.attach_avl_cls, AddressOf Me.detach_avl_cls)
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_id_P_0027", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property id_P_0027() As Integer
		Get
			Return Me._id_P_0027
		End Get
		Set
			If ((Me._id_P_0027 = value)  _
						= false) Then
				Me.Onid_P_0027Changing(value)
				Me.SendPropertyChanging
				Me._id_P_0027 = value
				Me.SendPropertyChanged("id_P_0027")
				Me.Onid_P_0027Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pnu_des", DbType:="VarChar(80)")>  _
	Public Property pnu_des() As String
		Get
			Return Me._pnu_des
		End Get
		Set
			If (String.Equals(Me._pnu_des, value) = false) Then
				Me.Onpnu_desChanging(value)
				Me.SendPropertyChanging
				Me._pnu_des = value
				Me.SendPropertyChanged("pnu_des")
				Me.Onpnu_desChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pnu_est", DbType:="Char(1)")>  _
	Public Property pnu_est() As System.Nullable(Of Char)
		Get
			Return Me._pnu_est
		End Get
		Set
			If (Me._pnu_est.Equals(value) = false) Then
				Me.Onpnu_estChanging(value)
				Me.SendPropertyChanging
				Me._pnu_est = value
				Me.SendPropertyChanged("pnu_est")
				Me.Onpnu_estChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pnu_cod_temporal", DbType:="Int")>  _
	Public Property pnu_cod_temporal() As System.Nullable(Of Integer)
		Get
			Return Me._pnu_cod_temporal
		End Get
		Set
			If (Me._pnu_cod_temporal.Equals(value) = false) Then
				Me.Onpnu_cod_temporalChanging(value)
				Me.SendPropertyChanging
				Me._pnu_cod_temporal = value
				Me.SendPropertyChanged("pnu_cod_temporal")
				Me.Onpnu_cod_temporalChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="P_0027_cls_avl_cls", Storage:="_avl_cls", ThisKey:="id_P_0027", OtherKey:="id_p_0027")>  _
	Public Property avl_cls() As EntitySet(Of avl_cls)
		Get
			Return Me._avl_cls
		End Get
		Set
			Me._avl_cls.Assign(value)
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
	
	Private Sub attach_avl_cls(ByVal entity As avl_cls)
		Me.SendPropertyChanging
		entity.P_0027_cls = Me
	End Sub
	
	Private Sub detach_avl_cls(ByVal entity As avl_cls)
		Me.SendPropertyChanging
		entity.P_0027_cls = Nothing
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.P_0028")>  _
Partial Public Class P_0028_cls
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _id_P_0028 As Integer
	
	Private _pnu_des As String
	
	Private _pnu_est As System.Nullable(Of Char)
	
	Private _pnu_cod_temporal As System.Nullable(Of Integer)
	
    #Region "Definiciones de métodos de extensibilidad"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub Onid_P_0028Changing(value As Integer)
    End Sub
    Partial Private Sub Onid_P_0028Changed()
    End Sub
    Partial Private Sub Onpnu_desChanging(value As String)
    End Sub
    Partial Private Sub Onpnu_desChanged()
    End Sub
    Partial Private Sub Onpnu_estChanging(value As System.Nullable(Of Char))
    End Sub
    Partial Private Sub Onpnu_estChanged()
    End Sub
    Partial Private Sub Onpnu_cod_temporalChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub Onpnu_cod_temporalChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_id_P_0028", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property id_P_0028() As Integer
		Get
			Return Me._id_P_0028
		End Get
		Set
			If ((Me._id_P_0028 = value)  _
						= false) Then
				Me.Onid_P_0028Changing(value)
				Me.SendPropertyChanging
				Me._id_P_0028 = value
				Me.SendPropertyChanged("id_P_0028")
				Me.Onid_P_0028Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pnu_des", DbType:="VarChar(80)")>  _
	Public Property pnu_des() As String
		Get
			Return Me._pnu_des
		End Get
		Set
			If (String.Equals(Me._pnu_des, value) = false) Then
				Me.Onpnu_desChanging(value)
				Me.SendPropertyChanging
				Me._pnu_des = value
				Me.SendPropertyChanged("pnu_des")
				Me.Onpnu_desChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pnu_est", DbType:="Char(1)")>  _
	Public Property pnu_est() As System.Nullable(Of Char)
		Get
			Return Me._pnu_est
		End Get
		Set
			If (Me._pnu_est.Equals(value) = false) Then
				Me.Onpnu_estChanging(value)
				Me.SendPropertyChanging
				Me._pnu_est = value
				Me.SendPropertyChanged("pnu_est")
				Me.Onpnu_estChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pnu_cod_temporal", DbType:="Int")>  _
	Public Property pnu_cod_temporal() As System.Nullable(Of Integer)
		Get
			Return Me._pnu_cod_temporal
		End Get
		Set
			If (Me._pnu_cod_temporal.Equals(value) = false) Then
				Me.Onpnu_cod_temporalChanging(value)
				Me.SendPropertyChanging
				Me._pnu_cod_temporal = value
				Me.SendPropertyChanged("pnu_cod_temporal")
				Me.Onpnu_cod_temporalChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.P_0029")>  _
Partial Public Class P_0029_cls
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _id_P_0029 As Integer
	
	Private _pnu_des As String
	
	Private _pnu_est As System.Nullable(Of Char)
	
	Private _pnu_cod_temporal As System.Nullable(Of Integer)
	
	Private _deu_mon_cls As EntitySet(Of deu_mon_cls)
	
	Private _ldc_cls As EntitySet(Of ldc_cls)
	
    #Region "Definiciones de métodos de extensibilidad"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub Onid_P_0029Changing(value As Integer)
    End Sub
    Partial Private Sub Onid_P_0029Changed()
    End Sub
    Partial Private Sub Onpnu_desChanging(value As String)
    End Sub
    Partial Private Sub Onpnu_desChanged()
    End Sub
    Partial Private Sub Onpnu_estChanging(value As System.Nullable(Of Char))
    End Sub
    Partial Private Sub Onpnu_estChanged()
    End Sub
    Partial Private Sub Onpnu_cod_temporalChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub Onpnu_cod_temporalChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		Me._deu_mon_cls = New EntitySet(Of deu_mon_cls)(AddressOf Me.attach_deu_mon_cls, AddressOf Me.detach_deu_mon_cls)
		Me._ldc_cls = New EntitySet(Of ldc_cls)(AddressOf Me.attach_ldc_cls, AddressOf Me.detach_ldc_cls)
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_id_P_0029", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property id_P_0029() As Integer
		Get
			Return Me._id_P_0029
		End Get
		Set
			If ((Me._id_P_0029 = value)  _
						= false) Then
				Me.Onid_P_0029Changing(value)
				Me.SendPropertyChanging
				Me._id_P_0029 = value
				Me.SendPropertyChanged("id_P_0029")
				Me.Onid_P_0029Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pnu_des", DbType:="VarChar(80)")>  _
	Public Property pnu_des() As String
		Get
			Return Me._pnu_des
		End Get
		Set
			If (String.Equals(Me._pnu_des, value) = false) Then
				Me.Onpnu_desChanging(value)
				Me.SendPropertyChanging
				Me._pnu_des = value
				Me.SendPropertyChanged("pnu_des")
				Me.Onpnu_desChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pnu_est", DbType:="Char(1)")>  _
	Public Property pnu_est() As System.Nullable(Of Char)
		Get
			Return Me._pnu_est
		End Get
		Set
			If (Me._pnu_est.Equals(value) = false) Then
				Me.Onpnu_estChanging(value)
				Me.SendPropertyChanging
				Me._pnu_est = value
				Me.SendPropertyChanged("pnu_est")
				Me.Onpnu_estChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pnu_cod_temporal", DbType:="Int")>  _
	Public Property pnu_cod_temporal() As System.Nullable(Of Integer)
		Get
			Return Me._pnu_cod_temporal
		End Get
		Set
			If (Me._pnu_cod_temporal.Equals(value) = false) Then
				Me.Onpnu_cod_temporalChanging(value)
				Me.SendPropertyChanging
				Me._pnu_cod_temporal = value
				Me.SendPropertyChanged("pnu_cod_temporal")
				Me.Onpnu_cod_temporalChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="P_0029_cls_deu_mon_cls", Storage:="_deu_mon_cls", ThisKey:="id_P_0029", OtherKey:="id_p_0029")>  _
	Public Property deu_mon_cls() As EntitySet(Of deu_mon_cls)
		Get
			Return Me._deu_mon_cls
		End Get
		Set
			Me._deu_mon_cls.Assign(value)
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="P_0029_cls_ldc_cls", Storage:="_ldc_cls", ThisKey:="id_P_0029", OtherKey:="id_P_0029")>  _
	Public Property ldc_cls() As EntitySet(Of ldc_cls)
		Get
			Return Me._ldc_cls
		End Get
		Set
			Me._ldc_cls.Assign(value)
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
	
	Private Sub attach_deu_mon_cls(ByVal entity As deu_mon_cls)
		Me.SendPropertyChanging
		entity.P_0029_cls = Me
	End Sub
	
	Private Sub detach_deu_mon_cls(ByVal entity As deu_mon_cls)
		Me.SendPropertyChanging
		entity.P_0029_cls = Nothing
	End Sub
	
	Private Sub attach_ldc_cls(ByVal entity As ldc_cls)
		Me.SendPropertyChanging
		entity.P_0029_cls = Me
	End Sub
	
	Private Sub detach_ldc_cls(ByVal entity As ldc_cls)
		Me.SendPropertyChanging
		entity.P_0029_cls = Nothing
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.P_003")>  _
Partial Public Class P_003_cls
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _id_P_003 As Integer
	
	Private _pnu_des As String
	
	Private _pnu_est As System.Nullable(Of Char)
	
	Private _pnu_atr_003 As String
	
	Private _pnu_cod_temporal As System.Nullable(Of Integer)
	
	Private _deu_cls As EntitySet(Of deu_cls)
	
    #Region "Definiciones de métodos de extensibilidad"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub Onid_P_003Changing(value As Integer)
    End Sub
    Partial Private Sub Onid_P_003Changed()
    End Sub
    Partial Private Sub Onpnu_desChanging(value As String)
    End Sub
    Partial Private Sub Onpnu_desChanged()
    End Sub
    Partial Private Sub Onpnu_estChanging(value As System.Nullable(Of Char))
    End Sub
    Partial Private Sub Onpnu_estChanged()
    End Sub
    Partial Private Sub Onpnu_atr_003Changing(value As String)
    End Sub
    Partial Private Sub Onpnu_atr_003Changed()
    End Sub
    Partial Private Sub Onpnu_cod_temporalChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub Onpnu_cod_temporalChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		Me._deu_cls = New EntitySet(Of deu_cls)(AddressOf Me.attach_deu_cls, AddressOf Me.detach_deu_cls)
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_id_P_003", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property id_P_003() As Integer
		Get
			Return Me._id_P_003
		End Get
		Set
			If ((Me._id_P_003 = value)  _
						= false) Then
				Me.Onid_P_003Changing(value)
				Me.SendPropertyChanging
				Me._id_P_003 = value
				Me.SendPropertyChanged("id_P_003")
				Me.Onid_P_003Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pnu_des", DbType:="VarChar(80)")>  _
	Public Property pnu_des() As String
		Get
			Return Me._pnu_des
		End Get
		Set
			If (String.Equals(Me._pnu_des, value) = false) Then
				Me.Onpnu_desChanging(value)
				Me.SendPropertyChanging
				Me._pnu_des = value
				Me.SendPropertyChanged("pnu_des")
				Me.Onpnu_desChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pnu_est", DbType:="Char(1)")>  _
	Public Property pnu_est() As System.Nullable(Of Char)
		Get
			Return Me._pnu_est
		End Get
		Set
			If (Me._pnu_est.Equals(value) = false) Then
				Me.Onpnu_estChanging(value)
				Me.SendPropertyChanging
				Me._pnu_est = value
				Me.SendPropertyChanged("pnu_est")
				Me.Onpnu_estChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pnu_atr_003", DbType:="VarChar(255)")>  _
	Public Property pnu_atr_003() As String
		Get
			Return Me._pnu_atr_003
		End Get
		Set
			If (String.Equals(Me._pnu_atr_003, value) = false) Then
				Me.Onpnu_atr_003Changing(value)
				Me.SendPropertyChanging
				Me._pnu_atr_003 = value
				Me.SendPropertyChanged("pnu_atr_003")
				Me.Onpnu_atr_003Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pnu_cod_temporal", DbType:="Int")>  _
	Public Property pnu_cod_temporal() As System.Nullable(Of Integer)
		Get
			Return Me._pnu_cod_temporal
		End Get
		Set
			If (Me._pnu_cod_temporal.Equals(value) = false) Then
				Me.Onpnu_cod_temporalChanging(value)
				Me.SendPropertyChanging
				Me._pnu_cod_temporal = value
				Me.SendPropertyChanged("pnu_cod_temporal")
				Me.Onpnu_cod_temporalChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="P_003_cls_deu_cls", Storage:="_deu_cls", ThisKey:="id_P_003", OtherKey:="id_P_003")>  _
	Public Property deu_cls() As EntitySet(Of deu_cls)
		Get
			Return Me._deu_cls
		End Get
		Set
			Me._deu_cls.Assign(value)
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
	
	Private Sub attach_deu_cls(ByVal entity As deu_cls)
		Me.SendPropertyChanging
		entity.P_003_cls = Me
	End Sub
	
	Private Sub detach_deu_cls(ByVal entity As deu_cls)
		Me.SendPropertyChanging
		entity.P_003_cls = Nothing
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.P_0030")>  _
Partial Public Class P_0030_cls
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _id_P_0030 As Integer
	
	Private _pnu_des As String
	
	Private _pnu_est As System.Nullable(Of Char)
	
	Private _pnu_cod_temporal As System.Nullable(Of Integer)
	
	Private _ope_cls As EntitySet(Of ope_cls)
	
    #Region "Definiciones de métodos de extensibilidad"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub Onid_P_0030Changing(value As Integer)
    End Sub
    Partial Private Sub Onid_P_0030Changed()
    End Sub
    Partial Private Sub Onpnu_desChanging(value As String)
    End Sub
    Partial Private Sub Onpnu_desChanged()
    End Sub
    Partial Private Sub Onpnu_estChanging(value As System.Nullable(Of Char))
    End Sub
    Partial Private Sub Onpnu_estChanged()
    End Sub
    Partial Private Sub Onpnu_cod_temporalChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub Onpnu_cod_temporalChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		Me._ope_cls = New EntitySet(Of ope_cls)(AddressOf Me.attach_ope_cls, AddressOf Me.detach_ope_cls)
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_id_P_0030", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property id_P_0030() As Integer
		Get
			Return Me._id_P_0030
		End Get
		Set
			If ((Me._id_P_0030 = value)  _
						= false) Then
				Me.Onid_P_0030Changing(value)
				Me.SendPropertyChanging
				Me._id_P_0030 = value
				Me.SendPropertyChanged("id_P_0030")
				Me.Onid_P_0030Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pnu_des", DbType:="VarChar(80)")>  _
	Public Property pnu_des() As String
		Get
			Return Me._pnu_des
		End Get
		Set
			If (String.Equals(Me._pnu_des, value) = false) Then
				Me.Onpnu_desChanging(value)
				Me.SendPropertyChanging
				Me._pnu_des = value
				Me.SendPropertyChanged("pnu_des")
				Me.Onpnu_desChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pnu_est", DbType:="Char(1)")>  _
	Public Property pnu_est() As System.Nullable(Of Char)
		Get
			Return Me._pnu_est
		End Get
		Set
			If (Me._pnu_est.Equals(value) = false) Then
				Me.Onpnu_estChanging(value)
				Me.SendPropertyChanging
				Me._pnu_est = value
				Me.SendPropertyChanged("pnu_est")
				Me.Onpnu_estChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pnu_cod_temporal", DbType:="Int")>  _
	Public Property pnu_cod_temporal() As System.Nullable(Of Integer)
		Get
			Return Me._pnu_cod_temporal
		End Get
		Set
			If (Me._pnu_cod_temporal.Equals(value) = false) Then
				Me.Onpnu_cod_temporalChanging(value)
				Me.SendPropertyChanging
				Me._pnu_cod_temporal = value
				Me.SendPropertyChanged("pnu_cod_temporal")
				Me.Onpnu_cod_temporalChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="P_0030_cls_ope_cls", Storage:="_ope_cls", ThisKey:="id_P_0030", OtherKey:="id_P_0030")>  _
	Public Property ope_cls() As EntitySet(Of ope_cls)
		Get
			Return Me._ope_cls
		End Get
		Set
			Me._ope_cls.Assign(value)
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
	
	Private Sub attach_ope_cls(ByVal entity As ope_cls)
		Me.SendPropertyChanging
		entity.P_0030_cls = Me
	End Sub
	
	Private Sub detach_ope_cls(ByVal entity As ope_cls)
		Me.SendPropertyChanging
		entity.P_0030_cls = Nothing
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.P_0031")>  _
Partial Public Class P_0031_cls
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _id_P_0031 As Integer
	
	Private _pnu_des As String
	
	Private _pnu_est As System.Nullable(Of Char)
	
	Private _pnu_atr_001 As System.Nullable(Of Integer)
	
	Private _pnu_atr_002 As String
	
	Private _pnu_atr_003 As String
	
	Private _pnu_atr_004 As String
	
	Private _pnu_atr_005 As String
	
	Private _pnu_atr_006 As String
	
	Private _pnu_atr_007 As String
	
	Private _pnu_atr_008 As String
	
	Private _pnu_atr_009 As String
	
	Private _pnu_atr_010 As String
	
	Private _pnu_atr_011 As String
	
	Private _pnu_atr_012 As String
	
	Private _pnu_cod_temporal As System.Nullable(Of Integer)
	
	Private _apc_cls As EntitySet(Of apc_cls)
	
	Private _ctr_cls As EntitySet(Of ctr_cls)
	
	Private _cxd_cls As EntitySet(Of cxd_cls)
	
	Private _dsb_cls As EntitySet(Of dsb_cls)
	
	Private _dvf_cls As EntitySet(Of dvf_cls)
	
	Private _dxd_cls As EntitySet(Of dxd_cls)
	
	Private _nce_cls As EntitySet(Of nce_cls)
	
	Private _opn_cls As EntitySet(Of opn_cls)
	
	Private _rsd_cls As EntitySet(Of rsd_cls)
	
	Private _rxd_cls As EntitySet(Of rxd_cls)
	
	Private _sbl_cls As EntitySet(Of sbl_cls)
	
    #Region "Definiciones de métodos de extensibilidad"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub Onid_P_0031Changing(value As Integer)
    End Sub
    Partial Private Sub Onid_P_0031Changed()
    End Sub
    Partial Private Sub Onpnu_desChanging(value As String)
    End Sub
    Partial Private Sub Onpnu_desChanged()
    End Sub
    Partial Private Sub Onpnu_estChanging(value As System.Nullable(Of Char))
    End Sub
    Partial Private Sub Onpnu_estChanged()
    End Sub
    Partial Private Sub Onpnu_atr_001Changing(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub Onpnu_atr_001Changed()
    End Sub
    Partial Private Sub Onpnu_atr_002Changing(value As String)
    End Sub
    Partial Private Sub Onpnu_atr_002Changed()
    End Sub
    Partial Private Sub Onpnu_atr_003Changing(value As String)
    End Sub
    Partial Private Sub Onpnu_atr_003Changed()
    End Sub
    Partial Private Sub Onpnu_atr_004Changing(value As String)
    End Sub
    Partial Private Sub Onpnu_atr_004Changed()
    End Sub
    Partial Private Sub Onpnu_atr_005Changing(value As String)
    End Sub
    Partial Private Sub Onpnu_atr_005Changed()
    End Sub
    Partial Private Sub Onpnu_atr_006Changing(value As String)
    End Sub
    Partial Private Sub Onpnu_atr_006Changed()
    End Sub
    Partial Private Sub Onpnu_atr_007Changing(value As String)
    End Sub
    Partial Private Sub Onpnu_atr_007Changed()
    End Sub
    Partial Private Sub Onpnu_atr_008Changing(value As String)
    End Sub
    Partial Private Sub Onpnu_atr_008Changed()
    End Sub
    Partial Private Sub Onpnu_atr_009Changing(value As String)
    End Sub
    Partial Private Sub Onpnu_atr_009Changed()
    End Sub
    Partial Private Sub Onpnu_atr_010Changing(value As String)
    End Sub
    Partial Private Sub Onpnu_atr_010Changed()
    End Sub
    Partial Private Sub Onpnu_atr_011Changing(value As String)
    End Sub
    Partial Private Sub Onpnu_atr_011Changed()
    End Sub
    Partial Private Sub Onpnu_atr_012Changing(value As String)
    End Sub
    Partial Private Sub Onpnu_atr_012Changed()
    End Sub
    Partial Private Sub Onpnu_cod_temporalChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub Onpnu_cod_temporalChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		Me._apc_cls = New EntitySet(Of apc_cls)(AddressOf Me.attach_apc_cls, AddressOf Me.detach_apc_cls)
		Me._ctr_cls = New EntitySet(Of ctr_cls)(AddressOf Me.attach_ctr_cls, AddressOf Me.detach_ctr_cls)
		Me._cxd_cls = New EntitySet(Of cxd_cls)(AddressOf Me.attach_cxd_cls, AddressOf Me.detach_cxd_cls)
		Me._dsb_cls = New EntitySet(Of dsb_cls)(AddressOf Me.attach_dsb_cls, AddressOf Me.detach_dsb_cls)
		Me._dvf_cls = New EntitySet(Of dvf_cls)(AddressOf Me.attach_dvf_cls, AddressOf Me.detach_dvf_cls)
		Me._dxd_cls = New EntitySet(Of dxd_cls)(AddressOf Me.attach_dxd_cls, AddressOf Me.detach_dxd_cls)
		Me._nce_cls = New EntitySet(Of nce_cls)(AddressOf Me.attach_nce_cls, AddressOf Me.detach_nce_cls)
		Me._opn_cls = New EntitySet(Of opn_cls)(AddressOf Me.attach_opn_cls, AddressOf Me.detach_opn_cls)
		Me._rsd_cls = New EntitySet(Of rsd_cls)(AddressOf Me.attach_rsd_cls, AddressOf Me.detach_rsd_cls)
		Me._rxd_cls = New EntitySet(Of rxd_cls)(AddressOf Me.attach_rxd_cls, AddressOf Me.detach_rxd_cls)
		Me._sbl_cls = New EntitySet(Of sbl_cls)(AddressOf Me.attach_sbl_cls, AddressOf Me.detach_sbl_cls)
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_id_P_0031", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property id_P_0031() As Integer
		Get
			Return Me._id_P_0031
		End Get
		Set
			If ((Me._id_P_0031 = value)  _
						= false) Then
				Me.Onid_P_0031Changing(value)
				Me.SendPropertyChanging
				Me._id_P_0031 = value
				Me.SendPropertyChanged("id_P_0031")
				Me.Onid_P_0031Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pnu_des", DbType:="VarChar(80)")>  _
	Public Property pnu_des() As String
		Get
			Return Me._pnu_des
		End Get
		Set
			If (String.Equals(Me._pnu_des, value) = false) Then
				Me.Onpnu_desChanging(value)
				Me.SendPropertyChanging
				Me._pnu_des = value
				Me.SendPropertyChanged("pnu_des")
				Me.Onpnu_desChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pnu_est", DbType:="Char(1)")>  _
	Public Property pnu_est() As System.Nullable(Of Char)
		Get
			Return Me._pnu_est
		End Get
		Set
			If (Me._pnu_est.Equals(value) = false) Then
				Me.Onpnu_estChanging(value)
				Me.SendPropertyChanging
				Me._pnu_est = value
				Me.SendPropertyChanged("pnu_est")
				Me.Onpnu_estChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pnu_atr_001", DbType:="Int")>  _
	Public Property pnu_atr_001() As System.Nullable(Of Integer)
		Get
			Return Me._pnu_atr_001
		End Get
		Set
			If (Me._pnu_atr_001.Equals(value) = false) Then
				Me.Onpnu_atr_001Changing(value)
				Me.SendPropertyChanging
				Me._pnu_atr_001 = value
				Me.SendPropertyChanged("pnu_atr_001")
				Me.Onpnu_atr_001Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pnu_atr_002", DbType:="VarChar(255)")>  _
	Public Property pnu_atr_002() As String
		Get
			Return Me._pnu_atr_002
		End Get
		Set
			If (String.Equals(Me._pnu_atr_002, value) = false) Then
				Me.Onpnu_atr_002Changing(value)
				Me.SendPropertyChanging
				Me._pnu_atr_002 = value
				Me.SendPropertyChanged("pnu_atr_002")
				Me.Onpnu_atr_002Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pnu_atr_003", DbType:="VarChar(255)")>  _
	Public Property pnu_atr_003() As String
		Get
			Return Me._pnu_atr_003
		End Get
		Set
			If (String.Equals(Me._pnu_atr_003, value) = false) Then
				Me.Onpnu_atr_003Changing(value)
				Me.SendPropertyChanging
				Me._pnu_atr_003 = value
				Me.SendPropertyChanged("pnu_atr_003")
				Me.Onpnu_atr_003Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pnu_atr_004", DbType:="VarChar(255)")>  _
	Public Property pnu_atr_004() As String
		Get
			Return Me._pnu_atr_004
		End Get
		Set
			If (String.Equals(Me._pnu_atr_004, value) = false) Then
				Me.Onpnu_atr_004Changing(value)
				Me.SendPropertyChanging
				Me._pnu_atr_004 = value
				Me.SendPropertyChanged("pnu_atr_004")
				Me.Onpnu_atr_004Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pnu_atr_005", DbType:="VarChar(255)")>  _
	Public Property pnu_atr_005() As String
		Get
			Return Me._pnu_atr_005
		End Get
		Set
			If (String.Equals(Me._pnu_atr_005, value) = false) Then
				Me.Onpnu_atr_005Changing(value)
				Me.SendPropertyChanging
				Me._pnu_atr_005 = value
				Me.SendPropertyChanged("pnu_atr_005")
				Me.Onpnu_atr_005Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pnu_atr_006", DbType:="VarChar(255)")>  _
	Public Property pnu_atr_006() As String
		Get
			Return Me._pnu_atr_006
		End Get
		Set
			If (String.Equals(Me._pnu_atr_006, value) = false) Then
				Me.Onpnu_atr_006Changing(value)
				Me.SendPropertyChanging
				Me._pnu_atr_006 = value
				Me.SendPropertyChanged("pnu_atr_006")
				Me.Onpnu_atr_006Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pnu_atr_007", DbType:="VarChar(255)")>  _
	Public Property pnu_atr_007() As String
		Get
			Return Me._pnu_atr_007
		End Get
		Set
			If (String.Equals(Me._pnu_atr_007, value) = false) Then
				Me.Onpnu_atr_007Changing(value)
				Me.SendPropertyChanging
				Me._pnu_atr_007 = value
				Me.SendPropertyChanged("pnu_atr_007")
				Me.Onpnu_atr_007Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pnu_atr_008", DbType:="VarChar(255)")>  _
	Public Property pnu_atr_008() As String
		Get
			Return Me._pnu_atr_008
		End Get
		Set
			If (String.Equals(Me._pnu_atr_008, value) = false) Then
				Me.Onpnu_atr_008Changing(value)
				Me.SendPropertyChanging
				Me._pnu_atr_008 = value
				Me.SendPropertyChanged("pnu_atr_008")
				Me.Onpnu_atr_008Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pnu_atr_009", DbType:="VarChar(255)")>  _
	Public Property pnu_atr_009() As String
		Get
			Return Me._pnu_atr_009
		End Get
		Set
			If (String.Equals(Me._pnu_atr_009, value) = false) Then
				Me.Onpnu_atr_009Changing(value)
				Me.SendPropertyChanging
				Me._pnu_atr_009 = value
				Me.SendPropertyChanged("pnu_atr_009")
				Me.Onpnu_atr_009Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pnu_atr_010", DbType:="VarChar(255)")>  _
	Public Property pnu_atr_010() As String
		Get
			Return Me._pnu_atr_010
		End Get
		Set
			If (String.Equals(Me._pnu_atr_010, value) = false) Then
				Me.Onpnu_atr_010Changing(value)
				Me.SendPropertyChanging
				Me._pnu_atr_010 = value
				Me.SendPropertyChanged("pnu_atr_010")
				Me.Onpnu_atr_010Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pnu_atr_011", DbType:="VarChar(255)")>  _
	Public Property pnu_atr_011() As String
		Get
			Return Me._pnu_atr_011
		End Get
		Set
			If (String.Equals(Me._pnu_atr_011, value) = false) Then
				Me.Onpnu_atr_011Changing(value)
				Me.SendPropertyChanging
				Me._pnu_atr_011 = value
				Me.SendPropertyChanged("pnu_atr_011")
				Me.Onpnu_atr_011Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pnu_atr_012", DbType:="VarChar(255)")>  _
	Public Property pnu_atr_012() As String
		Get
			Return Me._pnu_atr_012
		End Get
		Set
			If (String.Equals(Me._pnu_atr_012, value) = false) Then
				Me.Onpnu_atr_012Changing(value)
				Me.SendPropertyChanging
				Me._pnu_atr_012 = value
				Me.SendPropertyChanged("pnu_atr_012")
				Me.Onpnu_atr_012Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pnu_cod_temporal", DbType:="Int")>  _
	Public Property pnu_cod_temporal() As System.Nullable(Of Integer)
		Get
			Return Me._pnu_cod_temporal
		End Get
		Set
			If (Me._pnu_cod_temporal.Equals(value) = false) Then
				Me.Onpnu_cod_temporalChanging(value)
				Me.SendPropertyChanging
				Me._pnu_cod_temporal = value
				Me.SendPropertyChanged("pnu_cod_temporal")
				Me.Onpnu_cod_temporalChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="P_0031_cls_apc_cls", Storage:="_apc_cls", ThisKey:="id_P_0031", OtherKey:="id_P_0031")>  _
	Public Property apc_cls() As EntitySet(Of apc_cls)
		Get
			Return Me._apc_cls
		End Get
		Set
			Me._apc_cls.Assign(value)
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="P_0031_cls_ctr_cls", Storage:="_ctr_cls", ThisKey:="id_P_0031", OtherKey:="id_p_0031")>  _
	Public Property ctr_cls() As EntitySet(Of ctr_cls)
		Get
			Return Me._ctr_cls
		End Get
		Set
			Me._ctr_cls.Assign(value)
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="P_0031_cls_cxd_cls", Storage:="_cxd_cls", ThisKey:="id_P_0031", OtherKey:="id_p_0031")>  _
	Public Property cxd_cls() As EntitySet(Of cxd_cls)
		Get
			Return Me._cxd_cls
		End Get
		Set
			Me._cxd_cls.Assign(value)
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="P_0031_cls_dsb_cls", Storage:="_dsb_cls", ThisKey:="id_P_0031", OtherKey:="id_p_0031")>  _
	Public Property dsb_cls() As EntitySet(Of dsb_cls)
		Get
			Return Me._dsb_cls
		End Get
		Set
			Me._dsb_cls.Assign(value)
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="P_0031_cls_dvf_cls", Storage:="_dvf_cls", ThisKey:="id_P_0031", OtherKey:="id_P_0031")>  _
	Public Property dvf_cls() As EntitySet(Of dvf_cls)
		Get
			Return Me._dvf_cls
		End Get
		Set
			Me._dvf_cls.Assign(value)
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="P_0031_cls_dxd_cls", Storage:="_dxd_cls", ThisKey:="id_P_0031", OtherKey:="id_p_031")>  _
	Public Property dxd_cls() As EntitySet(Of dxd_cls)
		Get
			Return Me._dxd_cls
		End Get
		Set
			Me._dxd_cls.Assign(value)
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="P_0031_cls_nce_cls", Storage:="_nce_cls", ThisKey:="id_P_0031", OtherKey:="id_p_0031")>  _
	Public Property nce_cls() As EntitySet(Of nce_cls)
		Get
			Return Me._nce_cls
		End Get
		Set
			Me._nce_cls.Assign(value)
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="P_0031_cls_opn_cls", Storage:="_opn_cls", ThisKey:="id_P_0031", OtherKey:="id_P_0031")>  _
	Public Property opn_cls() As EntitySet(Of opn_cls)
		Get
			Return Me._opn_cls
		End Get
		Set
			Me._opn_cls.Assign(value)
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="P_0031_cls_rsd_cls", Storage:="_rsd_cls", ThisKey:="id_P_0031", OtherKey:="id_p_0031")>  _
	Public Property rsd_cls() As EntitySet(Of rsd_cls)
		Get
			Return Me._rsd_cls
		End Get
		Set
			Me._rsd_cls.Assign(value)
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="P_0031_cls_rxd_cls", Storage:="_rxd_cls", ThisKey:="id_P_0031", OtherKey:="id_p_0031")>  _
	Public Property rxd_cls() As EntitySet(Of rxd_cls)
		Get
			Return Me._rxd_cls
		End Get
		Set
			Me._rxd_cls.Assign(value)
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="P_0031_cls_sbl_cls", Storage:="_sbl_cls", ThisKey:="id_P_0031", OtherKey:="id_P_0031")>  _
	Public Property sbl_cls() As EntitySet(Of sbl_cls)
		Get
			Return Me._sbl_cls
		End Get
		Set
			Me._sbl_cls.Assign(value)
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
	
	Private Sub attach_apc_cls(ByVal entity As apc_cls)
		Me.SendPropertyChanging
		entity.P_0031_cls = Me
	End Sub
	
	Private Sub detach_apc_cls(ByVal entity As apc_cls)
		Me.SendPropertyChanging
		entity.P_0031_cls = Nothing
	End Sub
	
	Private Sub attach_ctr_cls(ByVal entity As ctr_cls)
		Me.SendPropertyChanging
		entity.P_0031_cls = Me
	End Sub
	
	Private Sub detach_ctr_cls(ByVal entity As ctr_cls)
		Me.SendPropertyChanging
		entity.P_0031_cls = Nothing
	End Sub
	
	Private Sub attach_cxd_cls(ByVal entity As cxd_cls)
		Me.SendPropertyChanging
		entity.P_0031_cls = Me
	End Sub
	
	Private Sub detach_cxd_cls(ByVal entity As cxd_cls)
		Me.SendPropertyChanging
		entity.P_0031_cls = Nothing
	End Sub
	
	Private Sub attach_dsb_cls(ByVal entity As dsb_cls)
		Me.SendPropertyChanging
		entity.P_0031_cls = Me
	End Sub
	
	Private Sub detach_dsb_cls(ByVal entity As dsb_cls)
		Me.SendPropertyChanging
		entity.P_0031_cls = Nothing
	End Sub
	
	Private Sub attach_dvf_cls(ByVal entity As dvf_cls)
		Me.SendPropertyChanging
		entity.P_0031_cls = Me
	End Sub
	
	Private Sub detach_dvf_cls(ByVal entity As dvf_cls)
		Me.SendPropertyChanging
		entity.P_0031_cls = Nothing
	End Sub
	
	Private Sub attach_dxd_cls(ByVal entity As dxd_cls)
		Me.SendPropertyChanging
		entity.P_0031_cls = Me
	End Sub
	
	Private Sub detach_dxd_cls(ByVal entity As dxd_cls)
		Me.SendPropertyChanging
		entity.P_0031_cls = Nothing
	End Sub
	
	Private Sub attach_nce_cls(ByVal entity As nce_cls)
		Me.SendPropertyChanging
		entity.P_0031_cls = Me
	End Sub
	
	Private Sub detach_nce_cls(ByVal entity As nce_cls)
		Me.SendPropertyChanging
		entity.P_0031_cls = Nothing
	End Sub
	
	Private Sub attach_opn_cls(ByVal entity As opn_cls)
		Me.SendPropertyChanging
		entity.P_0031_cls = Me
	End Sub
	
	Private Sub detach_opn_cls(ByVal entity As opn_cls)
		Me.SendPropertyChanging
		entity.P_0031_cls = Nothing
	End Sub
	
	Private Sub attach_rsd_cls(ByVal entity As rsd_cls)
		Me.SendPropertyChanging
		entity.P_0031_cls = Me
	End Sub
	
	Private Sub detach_rsd_cls(ByVal entity As rsd_cls)
		Me.SendPropertyChanging
		entity.P_0031_cls = Nothing
	End Sub
	
	Private Sub attach_rxd_cls(ByVal entity As rxd_cls)
		Me.SendPropertyChanging
		entity.P_0031_cls = Me
	End Sub
	
	Private Sub detach_rxd_cls(ByVal entity As rxd_cls)
		Me.SendPropertyChanging
		entity.P_0031_cls = Nothing
	End Sub
	
	Private Sub attach_sbl_cls(ByVal entity As sbl_cls)
		Me.SendPropertyChanging
		entity.P_0031_cls = Me
	End Sub
	
	Private Sub detach_sbl_cls(ByVal entity As sbl_cls)
		Me.SendPropertyChanging
		entity.P_0031_cls = Nothing
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.P_0036")>  _
Partial Public Class P_0036_cls
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _id_P_0036 As Integer
	
	Private _pnu_des As String
	
	Private _pnu_est As System.Nullable(Of Char)
	
	Private _pnu_cod_temporal As System.Nullable(Of Integer)
	
	Private _gto_cls As EntitySet(Of gto_cls)
	
    #Region "Definiciones de métodos de extensibilidad"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub Onid_P_0036Changing(value As Integer)
    End Sub
    Partial Private Sub Onid_P_0036Changed()
    End Sub
    Partial Private Sub Onpnu_desChanging(value As String)
    End Sub
    Partial Private Sub Onpnu_desChanged()
    End Sub
    Partial Private Sub Onpnu_estChanging(value As System.Nullable(Of Char))
    End Sub
    Partial Private Sub Onpnu_estChanged()
    End Sub
    Partial Private Sub Onpnu_cod_temporalChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub Onpnu_cod_temporalChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		Me._gto_cls = New EntitySet(Of gto_cls)(AddressOf Me.attach_gto_cls, AddressOf Me.detach_gto_cls)
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_id_P_0036", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property id_P_0036() As Integer
		Get
			Return Me._id_P_0036
		End Get
		Set
			If ((Me._id_P_0036 = value)  _
						= false) Then
				Me.Onid_P_0036Changing(value)
				Me.SendPropertyChanging
				Me._id_P_0036 = value
				Me.SendPropertyChanged("id_P_0036")
				Me.Onid_P_0036Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pnu_des", DbType:="VarChar(80)")>  _
	Public Property pnu_des() As String
		Get
			Return Me._pnu_des
		End Get
		Set
			If (String.Equals(Me._pnu_des, value) = false) Then
				Me.Onpnu_desChanging(value)
				Me.SendPropertyChanging
				Me._pnu_des = value
				Me.SendPropertyChanged("pnu_des")
				Me.Onpnu_desChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pnu_est", DbType:="Char(1)")>  _
	Public Property pnu_est() As System.Nullable(Of Char)
		Get
			Return Me._pnu_est
		End Get
		Set
			If (Me._pnu_est.Equals(value) = false) Then
				Me.Onpnu_estChanging(value)
				Me.SendPropertyChanging
				Me._pnu_est = value
				Me.SendPropertyChanged("pnu_est")
				Me.Onpnu_estChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pnu_cod_temporal", DbType:="Int")>  _
	Public Property pnu_cod_temporal() As System.Nullable(Of Integer)
		Get
			Return Me._pnu_cod_temporal
		End Get
		Set
			If (Me._pnu_cod_temporal.Equals(value) = false) Then
				Me.Onpnu_cod_temporalChanging(value)
				Me.SendPropertyChanging
				Me._pnu_cod_temporal = value
				Me.SendPropertyChanged("pnu_cod_temporal")
				Me.Onpnu_cod_temporalChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="P_0036_cls_gto_cls", Storage:="_gto_cls", ThisKey:="id_P_0036", OtherKey:="id_P_0036")>  _
	Public Property gto_cls() As EntitySet(Of gto_cls)
		Get
			Return Me._gto_cls
		End Get
		Set
			Me._gto_cls.Assign(value)
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
	
	Private Sub attach_gto_cls(ByVal entity As gto_cls)
		Me.SendPropertyChanging
		entity.P_0036_cls = Me
	End Sub
	
	Private Sub detach_gto_cls(ByVal entity As gto_cls)
		Me.SendPropertyChanging
		entity.P_0036_cls = Nothing
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.P_0040")>  _
Partial Public Class P_0040_cls
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _id_P_0040 As Integer
	
	Private _pnu_des As String
	
	Private _pnu_est As System.Nullable(Of Char)
	
	Private _pnu_cod_temporal As System.Nullable(Of Integer)
	
	Private _dsi_cls As EntitySet(Of dsi_cls)
	
	Private _dvf_cls As EntitySet(Of dvf_cls)
	
    #Region "Definiciones de métodos de extensibilidad"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub Onid_P_0040Changing(value As Integer)
    End Sub
    Partial Private Sub Onid_P_0040Changed()
    End Sub
    Partial Private Sub Onpnu_desChanging(value As String)
    End Sub
    Partial Private Sub Onpnu_desChanged()
    End Sub
    Partial Private Sub Onpnu_estChanging(value As System.Nullable(Of Char))
    End Sub
    Partial Private Sub Onpnu_estChanged()
    End Sub
    Partial Private Sub Onpnu_cod_temporalChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub Onpnu_cod_temporalChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		Me._dsi_cls = New EntitySet(Of dsi_cls)(AddressOf Me.attach_dsi_cls, AddressOf Me.detach_dsi_cls)
		Me._dvf_cls = New EntitySet(Of dvf_cls)(AddressOf Me.attach_dvf_cls, AddressOf Me.detach_dvf_cls)
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_id_P_0040", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property id_P_0040() As Integer
		Get
			Return Me._id_P_0040
		End Get
		Set
			If ((Me._id_P_0040 = value)  _
						= false) Then
				Me.Onid_P_0040Changing(value)
				Me.SendPropertyChanging
				Me._id_P_0040 = value
				Me.SendPropertyChanged("id_P_0040")
				Me.Onid_P_0040Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pnu_des", DbType:="VarChar(80)")>  _
	Public Property pnu_des() As String
		Get
			Return Me._pnu_des
		End Get
		Set
			If (String.Equals(Me._pnu_des, value) = false) Then
				Me.Onpnu_desChanging(value)
				Me.SendPropertyChanging
				Me._pnu_des = value
				Me.SendPropertyChanged("pnu_des")
				Me.Onpnu_desChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pnu_est", DbType:="Char(1)")>  _
	Public Property pnu_est() As System.Nullable(Of Char)
		Get
			Return Me._pnu_est
		End Get
		Set
			If (Me._pnu_est.Equals(value) = false) Then
				Me.Onpnu_estChanging(value)
				Me.SendPropertyChanging
				Me._pnu_est = value
				Me.SendPropertyChanged("pnu_est")
				Me.Onpnu_estChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pnu_cod_temporal", DbType:="Int")>  _
	Public Property pnu_cod_temporal() As System.Nullable(Of Integer)
		Get
			Return Me._pnu_cod_temporal
		End Get
		Set
			If (Me._pnu_cod_temporal.Equals(value) = false) Then
				Me.Onpnu_cod_temporalChanging(value)
				Me.SendPropertyChanging
				Me._pnu_cod_temporal = value
				Me.SendPropertyChanged("pnu_cod_temporal")
				Me.Onpnu_cod_temporalChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="P_0040_cls_dsi_cls", Storage:="_dsi_cls", ThisKey:="id_P_0040", OtherKey:="id_P_0040")>  _
	Public Property dsi_cls() As EntitySet(Of dsi_cls)
		Get
			Return Me._dsi_cls
		End Get
		Set
			Me._dsi_cls.Assign(value)
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="P_0040_cls_dvf_cls", Storage:="_dvf_cls", ThisKey:="id_P_0040", OtherKey:="id_P_0040")>  _
	Public Property dvf_cls() As EntitySet(Of dvf_cls)
		Get
			Return Me._dvf_cls
		End Get
		Set
			Me._dvf_cls.Assign(value)
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
	
	Private Sub attach_dsi_cls(ByVal entity As dsi_cls)
		Me.SendPropertyChanging
		entity.P_0040_cls = Me
	End Sub
	
	Private Sub detach_dsi_cls(ByVal entity As dsi_cls)
		Me.SendPropertyChanging
		entity.P_0040_cls = Nothing
	End Sub
	
	Private Sub attach_dvf_cls(ByVal entity As dvf_cls)
		Me.SendPropertyChanging
		entity.P_0040_cls = Me
	End Sub
	
	Private Sub detach_dvf_cls(ByVal entity As dvf_cls)
		Me.SendPropertyChanging
		entity.P_0040_cls = Nothing
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.p_0041")>  _
Partial Public Class p_0041_cls
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _id_P_0041 As Integer
	
	Private _pnu_des As String
	
	Private _pnu_est As System.Nullable(Of Char)
	
	Private _pnu_atr_002 As String
	
	Private _pnu_atr_003 As String
	
	Private _pnu_atr_004 As String
	
	Private _pnu_atr_005 As String
	
	Private _cxc_cls As EntitySet(Of cxc_cls)
	
	Private _cxp_cls As EntitySet(Of cxp_cls)
	
    #Region "Definiciones de métodos de extensibilidad"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub Onid_P_0041Changing(value As Integer)
    End Sub
    Partial Private Sub Onid_P_0041Changed()
    End Sub
    Partial Private Sub Onpnu_desChanging(value As String)
    End Sub
    Partial Private Sub Onpnu_desChanged()
    End Sub
    Partial Private Sub Onpnu_estChanging(value As System.Nullable(Of Char))
    End Sub
    Partial Private Sub Onpnu_estChanged()
    End Sub
    Partial Private Sub Onpnu_atr_002Changing(value As String)
    End Sub
    Partial Private Sub Onpnu_atr_002Changed()
    End Sub
    Partial Private Sub Onpnu_atr_003Changing(value As String)
    End Sub
    Partial Private Sub Onpnu_atr_003Changed()
    End Sub
    Partial Private Sub Onpnu_atr_004Changing(value As String)
    End Sub
    Partial Private Sub Onpnu_atr_004Changed()
    End Sub
    Partial Private Sub Onpnu_atr_005Changing(value As String)
    End Sub
    Partial Private Sub Onpnu_atr_005Changed()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		Me._cxc_cls = New EntitySet(Of cxc_cls)(AddressOf Me.attach_cxc_cls, AddressOf Me.detach_cxc_cls)
		Me._cxp_cls = New EntitySet(Of cxp_cls)(AddressOf Me.attach_cxp_cls, AddressOf Me.detach_cxp_cls)
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_id_P_0041", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property id_P_0041() As Integer
		Get
			Return Me._id_P_0041
		End Get
		Set
			If ((Me._id_P_0041 = value)  _
						= false) Then
				Me.Onid_P_0041Changing(value)
				Me.SendPropertyChanging
				Me._id_P_0041 = value
				Me.SendPropertyChanged("id_P_0041")
				Me.Onid_P_0041Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pnu_des", DbType:="VarChar(80)")>  _
	Public Property pnu_des() As String
		Get
			Return Me._pnu_des
		End Get
		Set
			If (String.Equals(Me._pnu_des, value) = false) Then
				Me.Onpnu_desChanging(value)
				Me.SendPropertyChanging
				Me._pnu_des = value
				Me.SendPropertyChanged("pnu_des")
				Me.Onpnu_desChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pnu_est", DbType:="Char(1)")>  _
	Public Property pnu_est() As System.Nullable(Of Char)
		Get
			Return Me._pnu_est
		End Get
		Set
			If (Me._pnu_est.Equals(value) = false) Then
				Me.Onpnu_estChanging(value)
				Me.SendPropertyChanging
				Me._pnu_est = value
				Me.SendPropertyChanged("pnu_est")
				Me.Onpnu_estChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pnu_atr_002", DbType:="VarChar(255)")>  _
	Public Property pnu_atr_002() As String
		Get
			Return Me._pnu_atr_002
		End Get
		Set
			If (String.Equals(Me._pnu_atr_002, value) = false) Then
				Me.Onpnu_atr_002Changing(value)
				Me.SendPropertyChanging
				Me._pnu_atr_002 = value
				Me.SendPropertyChanged("pnu_atr_002")
				Me.Onpnu_atr_002Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pnu_atr_003", DbType:="VarChar(255)")>  _
	Public Property pnu_atr_003() As String
		Get
			Return Me._pnu_atr_003
		End Get
		Set
			If (String.Equals(Me._pnu_atr_003, value) = false) Then
				Me.Onpnu_atr_003Changing(value)
				Me.SendPropertyChanging
				Me._pnu_atr_003 = value
				Me.SendPropertyChanged("pnu_atr_003")
				Me.Onpnu_atr_003Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pnu_atr_004", DbType:="VarChar(255)")>  _
	Public Property pnu_atr_004() As String
		Get
			Return Me._pnu_atr_004
		End Get
		Set
			If (String.Equals(Me._pnu_atr_004, value) = false) Then
				Me.Onpnu_atr_004Changing(value)
				Me.SendPropertyChanging
				Me._pnu_atr_004 = value
				Me.SendPropertyChanged("pnu_atr_004")
				Me.Onpnu_atr_004Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pnu_atr_005", DbType:="VarChar(255)")>  _
	Public Property pnu_atr_005() As String
		Get
			Return Me._pnu_atr_005
		End Get
		Set
			If (String.Equals(Me._pnu_atr_005, value) = false) Then
				Me.Onpnu_atr_005Changing(value)
				Me.SendPropertyChanging
				Me._pnu_atr_005 = value
				Me.SendPropertyChanged("pnu_atr_005")
				Me.Onpnu_atr_005Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="p_0041_cls_cxc_cls", Storage:="_cxc_cls", ThisKey:="id_P_0041", OtherKey:="id_P_0041")>  _
	Public Property cxc_cls() As EntitySet(Of cxc_cls)
		Get
			Return Me._cxc_cls
		End Get
		Set
			Me._cxc_cls.Assign(value)
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="p_0041_cls_cxp_cls", Storage:="_cxp_cls", ThisKey:="id_P_0041", OtherKey:="id_P_0041")>  _
	Public Property cxp_cls() As EntitySet(Of cxp_cls)
		Get
			Return Me._cxp_cls
		End Get
		Set
			Me._cxp_cls.Assign(value)
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
	
	Private Sub attach_cxc_cls(ByVal entity As cxc_cls)
		Me.SendPropertyChanging
		entity.p_0041_cls = Me
	End Sub
	
	Private Sub detach_cxc_cls(ByVal entity As cxc_cls)
		Me.SendPropertyChanging
		entity.p_0041_cls = Nothing
	End Sub
	
	Private Sub attach_cxp_cls(ByVal entity As cxp_cls)
		Me.SendPropertyChanging
		entity.p_0041_cls = Me
	End Sub
	
	Private Sub detach_cxp_cls(ByVal entity As cxp_cls)
		Me.SendPropertyChanging
		entity.p_0041_cls = Nothing
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.P_0044")>  _
Partial Public Class P_0044_cls
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _id_P_0044 As Integer
	
	Private _pnu_des As String
	
	Private _pnu_est As System.Nullable(Of Char)
	
	Private _pnu_cod_temporal As System.Nullable(Of Integer)
	
	Private _pnu_atr_001 As System.Nullable(Of Char)
	
	Private _cli_cls As EntitySet(Of cli_cls)
	
	Private _deu_cls As EntitySet(Of deu_cls)
	
    #Region "Definiciones de métodos de extensibilidad"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub Onid_P_0044Changing(value As Integer)
    End Sub
    Partial Private Sub Onid_P_0044Changed()
    End Sub
    Partial Private Sub Onpnu_desChanging(value As String)
    End Sub
    Partial Private Sub Onpnu_desChanged()
    End Sub
    Partial Private Sub Onpnu_estChanging(value As System.Nullable(Of Char))
    End Sub
    Partial Private Sub Onpnu_estChanged()
    End Sub
    Partial Private Sub Onpnu_cod_temporalChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub Onpnu_cod_temporalChanged()
    End Sub
    Partial Private Sub Onpnu_atr_001Changing(value As System.Nullable(Of Char))
    End Sub
    Partial Private Sub Onpnu_atr_001Changed()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		Me._cli_cls = New EntitySet(Of cli_cls)(AddressOf Me.attach_cli_cls, AddressOf Me.detach_cli_cls)
		Me._deu_cls = New EntitySet(Of deu_cls)(AddressOf Me.attach_deu_cls, AddressOf Me.detach_deu_cls)
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_id_P_0044", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property id_P_0044() As Integer
		Get
			Return Me._id_P_0044
		End Get
		Set
			If ((Me._id_P_0044 = value)  _
						= false) Then
				Me.Onid_P_0044Changing(value)
				Me.SendPropertyChanging
				Me._id_P_0044 = value
				Me.SendPropertyChanged("id_P_0044")
				Me.Onid_P_0044Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pnu_des", DbType:="VarChar(80)")>  _
	Public Property pnu_des() As String
		Get
			Return Me._pnu_des
		End Get
		Set
			If (String.Equals(Me._pnu_des, value) = false) Then
				Me.Onpnu_desChanging(value)
				Me.SendPropertyChanging
				Me._pnu_des = value
				Me.SendPropertyChanged("pnu_des")
				Me.Onpnu_desChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pnu_est", DbType:="Char(1)")>  _
	Public Property pnu_est() As System.Nullable(Of Char)
		Get
			Return Me._pnu_est
		End Get
		Set
			If (Me._pnu_est.Equals(value) = false) Then
				Me.Onpnu_estChanging(value)
				Me.SendPropertyChanging
				Me._pnu_est = value
				Me.SendPropertyChanged("pnu_est")
				Me.Onpnu_estChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pnu_cod_temporal", DbType:="Int")>  _
	Public Property pnu_cod_temporal() As System.Nullable(Of Integer)
		Get
			Return Me._pnu_cod_temporal
		End Get
		Set
			If (Me._pnu_cod_temporal.Equals(value) = false) Then
				Me.Onpnu_cod_temporalChanging(value)
				Me.SendPropertyChanging
				Me._pnu_cod_temporal = value
				Me.SendPropertyChanged("pnu_cod_temporal")
				Me.Onpnu_cod_temporalChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pnu_atr_001", DbType:="Char(1)")>  _
	Public Property pnu_atr_001() As System.Nullable(Of Char)
		Get
			Return Me._pnu_atr_001
		End Get
		Set
			If (Me._pnu_atr_001.Equals(value) = false) Then
				Me.Onpnu_atr_001Changing(value)
				Me.SendPropertyChanging
				Me._pnu_atr_001 = value
				Me.SendPropertyChanged("pnu_atr_001")
				Me.Onpnu_atr_001Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="P_0044_cls_cli_cls", Storage:="_cli_cls", ThisKey:="id_P_0044", OtherKey:="id_P_0044")>  _
	Public Property cli_cls() As EntitySet(Of cli_cls)
		Get
			Return Me._cli_cls
		End Get
		Set
			Me._cli_cls.Assign(value)
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="P_0044_cls_deu_cls", Storage:="_deu_cls", ThisKey:="id_P_0044", OtherKey:="id_P_0044")>  _
	Public Property deu_cls() As EntitySet(Of deu_cls)
		Get
			Return Me._deu_cls
		End Get
		Set
			Me._deu_cls.Assign(value)
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
	
	Private Sub attach_cli_cls(ByVal entity As cli_cls)
		Me.SendPropertyChanging
		entity.P_0044_cls = Me
	End Sub
	
	Private Sub detach_cli_cls(ByVal entity As cli_cls)
		Me.SendPropertyChanging
		entity.P_0044_cls = Nothing
	End Sub
	
	Private Sub attach_deu_cls(ByVal entity As deu_cls)
		Me.SendPropertyChanging
		entity.P_0044_cls = Me
	End Sub
	
	Private Sub detach_deu_cls(ByVal entity As deu_cls)
		Me.SendPropertyChanging
		entity.P_0044_cls = Nothing
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.P_0045")>  _
Partial Public Class P_0045_cls
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _id_P_0045 As Integer
	
	Private _pnu_des As String
	
	Private _pnu_est As System.Nullable(Of Char)
	
	Private _pnu_cod_temporal As System.Nullable(Of Integer)
	
	Private _nro_alt_bco As String
	
	Private _frm_cls As EntitySet(Of frm_cls)
	
	Private _eje_cls As EntitySet(Of eje_cls)
	
    #Region "Definiciones de métodos de extensibilidad"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub Onid_P_0045Changing(value As Integer)
    End Sub
    Partial Private Sub Onid_P_0045Changed()
    End Sub
    Partial Private Sub Onpnu_desChanging(value As String)
    End Sub
    Partial Private Sub Onpnu_desChanged()
    End Sub
    Partial Private Sub Onpnu_estChanging(value As System.Nullable(Of Char))
    End Sub
    Partial Private Sub Onpnu_estChanged()
    End Sub
    Partial Private Sub Onpnu_cod_temporalChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub Onpnu_cod_temporalChanged()
    End Sub
    Partial Private Sub Onnro_alt_bcoChanging(value As String)
    End Sub
    Partial Private Sub Onnro_alt_bcoChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		Me._frm_cls = New EntitySet(Of frm_cls)(AddressOf Me.attach_frm_cls, AddressOf Me.detach_frm_cls)
		Me._eje_cls = New EntitySet(Of eje_cls)(AddressOf Me.attach_eje_cls, AddressOf Me.detach_eje_cls)
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_id_P_0045", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property id_P_0045() As Integer
		Get
			Return Me._id_P_0045
		End Get
		Set
			If ((Me._id_P_0045 = value)  _
						= false) Then
				Me.Onid_P_0045Changing(value)
				Me.SendPropertyChanging
				Me._id_P_0045 = value
				Me.SendPropertyChanged("id_P_0045")
				Me.Onid_P_0045Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pnu_des", DbType:="VarChar(80)")>  _
	Public Property pnu_des() As String
		Get
			Return Me._pnu_des
		End Get
		Set
			If (String.Equals(Me._pnu_des, value) = false) Then
				Me.Onpnu_desChanging(value)
				Me.SendPropertyChanging
				Me._pnu_des = value
				Me.SendPropertyChanged("pnu_des")
				Me.Onpnu_desChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pnu_est", DbType:="Char(1)")>  _
	Public Property pnu_est() As System.Nullable(Of Char)
		Get
			Return Me._pnu_est
		End Get
		Set
			If (Me._pnu_est.Equals(value) = false) Then
				Me.Onpnu_estChanging(value)
				Me.SendPropertyChanging
				Me._pnu_est = value
				Me.SendPropertyChanged("pnu_est")
				Me.Onpnu_estChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pnu_cod_temporal", DbType:="Int")>  _
	Public Property pnu_cod_temporal() As System.Nullable(Of Integer)
		Get
			Return Me._pnu_cod_temporal
		End Get
		Set
			If (Me._pnu_cod_temporal.Equals(value) = false) Then
				Me.Onpnu_cod_temporalChanging(value)
				Me.SendPropertyChanging
				Me._pnu_cod_temporal = value
				Me.SendPropertyChanged("pnu_cod_temporal")
				Me.Onpnu_cod_temporalChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_nro_alt_bco", DbType:="VarChar(3)")>  _
	Public Property nro_alt_bco() As String
		Get
			Return Me._nro_alt_bco
		End Get
		Set
			If (String.Equals(Me._nro_alt_bco, value) = false) Then
				Me.Onnro_alt_bcoChanging(value)
				Me.SendPropertyChanging
				Me._nro_alt_bco = value
				Me.SendPropertyChanged("nro_alt_bco")
				Me.Onnro_alt_bcoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="P_0045_cls_frm_cls", Storage:="_frm_cls", ThisKey:="id_P_0045", OtherKey:="id_p_0045")>  _
	Public Property frm_cls() As EntitySet(Of frm_cls)
		Get
			Return Me._frm_cls
		End Get
		Set
			Me._frm_cls.Assign(value)
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="P_0045_cls_eje_cls", Storage:="_eje_cls", ThisKey:="id_P_0045", OtherKey:="id_P_0045")>  _
	Public Property eje_cls() As EntitySet(Of eje_cls)
		Get
			Return Me._eje_cls
		End Get
		Set
			Me._eje_cls.Assign(value)
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
	
	Private Sub attach_frm_cls(ByVal entity As frm_cls)
		Me.SendPropertyChanging
		entity.P_0045_cls = Me
	End Sub
	
	Private Sub detach_frm_cls(ByVal entity As frm_cls)
		Me.SendPropertyChanging
		entity.P_0045_cls = Nothing
	End Sub
	
	Private Sub attach_eje_cls(ByVal entity As eje_cls)
		Me.SendPropertyChanging
		entity.P_0045_cls = Me
	End Sub
	
	Private Sub detach_eje_cls(ByVal entity As eje_cls)
		Me.SendPropertyChanging
		entity.P_0045_cls = Nothing
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.P_0048")>  _
Partial Public Class P_0048_cls
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _id_P_0048 As Integer
	
	Private _pnu_des As String
	
	Private _pnu_est As System.Nullable(Of Char)
	
	Private _pnu_cod_temporal As System.Nullable(Of Integer)
	
	Private _eje_cls As EntitySet(Of eje_cls)
	
    #Region "Definiciones de métodos de extensibilidad"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub Onid_P_0048Changing(value As Integer)
    End Sub
    Partial Private Sub Onid_P_0048Changed()
    End Sub
    Partial Private Sub Onpnu_desChanging(value As String)
    End Sub
    Partial Private Sub Onpnu_desChanged()
    End Sub
    Partial Private Sub Onpnu_estChanging(value As System.Nullable(Of Char))
    End Sub
    Partial Private Sub Onpnu_estChanged()
    End Sub
    Partial Private Sub Onpnu_cod_temporalChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub Onpnu_cod_temporalChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		Me._eje_cls = New EntitySet(Of eje_cls)(AddressOf Me.attach_eje_cls, AddressOf Me.detach_eje_cls)
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_id_P_0048", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property id_P_0048() As Integer
		Get
			Return Me._id_P_0048
		End Get
		Set
			If ((Me._id_P_0048 = value)  _
						= false) Then
				Me.Onid_P_0048Changing(value)
				Me.SendPropertyChanging
				Me._id_P_0048 = value
				Me.SendPropertyChanged("id_P_0048")
				Me.Onid_P_0048Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pnu_des", DbType:="VarChar(80)")>  _
	Public Property pnu_des() As String
		Get
			Return Me._pnu_des
		End Get
		Set
			If (String.Equals(Me._pnu_des, value) = false) Then
				Me.Onpnu_desChanging(value)
				Me.SendPropertyChanging
				Me._pnu_des = value
				Me.SendPropertyChanged("pnu_des")
				Me.Onpnu_desChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pnu_est", DbType:="Char(1)")>  _
	Public Property pnu_est() As System.Nullable(Of Char)
		Get
			Return Me._pnu_est
		End Get
		Set
			If (Me._pnu_est.Equals(value) = false) Then
				Me.Onpnu_estChanging(value)
				Me.SendPropertyChanging
				Me._pnu_est = value
				Me.SendPropertyChanged("pnu_est")
				Me.Onpnu_estChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pnu_cod_temporal", DbType:="Int")>  _
	Public Property pnu_cod_temporal() As System.Nullable(Of Integer)
		Get
			Return Me._pnu_cod_temporal
		End Get
		Set
			If (Me._pnu_cod_temporal.Equals(value) = false) Then
				Me.Onpnu_cod_temporalChanging(value)
				Me.SendPropertyChanging
				Me._pnu_cod_temporal = value
				Me.SendPropertyChanged("pnu_cod_temporal")
				Me.Onpnu_cod_temporalChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="P_0048_cls_eje_cls", Storage:="_eje_cls", ThisKey:="id_P_0048", OtherKey:="id_P_0048")>  _
	Public Property eje_cls() As EntitySet(Of eje_cls)
		Get
			Return Me._eje_cls
		End Get
		Set
			Me._eje_cls.Assign(value)
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
	
	Private Sub attach_eje_cls(ByVal entity As eje_cls)
		Me.SendPropertyChanging
		entity.P_0048_cls = Me
	End Sub
	
	Private Sub detach_eje_cls(ByVal entity As eje_cls)
		Me.SendPropertyChanging
		entity.P_0048_cls = Nothing
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.P_0049")>  _
Partial Public Class P_0049_cls
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _id_P_0049 As Integer
	
	Private _pnu_des As String
	
	Private _pnu_est As System.Nullable(Of Char)
	
	Private _pnu_cod_temporal As System.Nullable(Of Integer)
	
    #Region "Definiciones de métodos de extensibilidad"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub Onid_P_0049Changing(value As Integer)
    End Sub
    Partial Private Sub Onid_P_0049Changed()
    End Sub
    Partial Private Sub Onpnu_desChanging(value As String)
    End Sub
    Partial Private Sub Onpnu_desChanged()
    End Sub
    Partial Private Sub Onpnu_estChanging(value As System.Nullable(Of Char))
    End Sub
    Partial Private Sub Onpnu_estChanged()
    End Sub
    Partial Private Sub Onpnu_cod_temporalChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub Onpnu_cod_temporalChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_id_P_0049", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property id_P_0049() As Integer
		Get
			Return Me._id_P_0049
		End Get
		Set
			If ((Me._id_P_0049 = value)  _
						= false) Then
				Me.Onid_P_0049Changing(value)
				Me.SendPropertyChanging
				Me._id_P_0049 = value
				Me.SendPropertyChanged("id_P_0049")
				Me.Onid_P_0049Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pnu_des", DbType:="VarChar(80)")>  _
	Public Property pnu_des() As String
		Get
			Return Me._pnu_des
		End Get
		Set
			If (String.Equals(Me._pnu_des, value) = false) Then
				Me.Onpnu_desChanging(value)
				Me.SendPropertyChanging
				Me._pnu_des = value
				Me.SendPropertyChanged("pnu_des")
				Me.Onpnu_desChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pnu_est", DbType:="Char(1)")>  _
	Public Property pnu_est() As System.Nullable(Of Char)
		Get
			Return Me._pnu_est
		End Get
		Set
			If (Me._pnu_est.Equals(value) = false) Then
				Me.Onpnu_estChanging(value)
				Me.SendPropertyChanging
				Me._pnu_est = value
				Me.SendPropertyChanged("pnu_est")
				Me.Onpnu_estChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pnu_cod_temporal", DbType:="Int")>  _
	Public Property pnu_cod_temporal() As System.Nullable(Of Integer)
		Get
			Return Me._pnu_cod_temporal
		End Get
		Set
			If (Me._pnu_cod_temporal.Equals(value) = false) Then
				Me.Onpnu_cod_temporalChanging(value)
				Me.SendPropertyChanging
				Me._pnu_cod_temporal = value
				Me.SendPropertyChanged("pnu_cod_temporal")
				Me.Onpnu_cod_temporalChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.P_005")>  _
Partial Public Class P_005_cls
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _id_P_005 As Integer
	
	Private _pnu_des As String
	
	Private _pnu_est As System.Nullable(Of Char)
	
	Private _pnu_cod_temporal As System.Nullable(Of Integer)
	
	Private _frm_cls As EntitySet(Of frm_cls)
	
    #Region "Definiciones de métodos de extensibilidad"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub Onid_P_005Changing(value As Integer)
    End Sub
    Partial Private Sub Onid_P_005Changed()
    End Sub
    Partial Private Sub Onpnu_desChanging(value As String)
    End Sub
    Partial Private Sub Onpnu_desChanged()
    End Sub
    Partial Private Sub Onpnu_estChanging(value As System.Nullable(Of Char))
    End Sub
    Partial Private Sub Onpnu_estChanged()
    End Sub
    Partial Private Sub Onpnu_cod_temporalChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub Onpnu_cod_temporalChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		Me._frm_cls = New EntitySet(Of frm_cls)(AddressOf Me.attach_frm_cls, AddressOf Me.detach_frm_cls)
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_id_P_005", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property id_P_005() As Integer
		Get
			Return Me._id_P_005
		End Get
		Set
			If ((Me._id_P_005 = value)  _
						= false) Then
				Me.Onid_P_005Changing(value)
				Me.SendPropertyChanging
				Me._id_P_005 = value
				Me.SendPropertyChanged("id_P_005")
				Me.Onid_P_005Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pnu_des", DbType:="VarChar(80)")>  _
	Public Property pnu_des() As String
		Get
			Return Me._pnu_des
		End Get
		Set
			If (String.Equals(Me._pnu_des, value) = false) Then
				Me.Onpnu_desChanging(value)
				Me.SendPropertyChanging
				Me._pnu_des = value
				Me.SendPropertyChanged("pnu_des")
				Me.Onpnu_desChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pnu_est", DbType:="Char(1)")>  _
	Public Property pnu_est() As System.Nullable(Of Char)
		Get
			Return Me._pnu_est
		End Get
		Set
			If (Me._pnu_est.Equals(value) = false) Then
				Me.Onpnu_estChanging(value)
				Me.SendPropertyChanging
				Me._pnu_est = value
				Me.SendPropertyChanged("pnu_est")
				Me.Onpnu_estChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pnu_cod_temporal", DbType:="Int")>  _
	Public Property pnu_cod_temporal() As System.Nullable(Of Integer)
		Get
			Return Me._pnu_cod_temporal
		End Get
		Set
			If (Me._pnu_cod_temporal.Equals(value) = false) Then
				Me.Onpnu_cod_temporalChanging(value)
				Me.SendPropertyChanging
				Me._pnu_cod_temporal = value
				Me.SendPropertyChanged("pnu_cod_temporal")
				Me.Onpnu_cod_temporalChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="P_005_cls_frm_cls", Storage:="_frm_cls", ThisKey:="id_P_005", OtherKey:="id_p_005")>  _
	Public Property frm_cls() As EntitySet(Of frm_cls)
		Get
			Return Me._frm_cls
		End Get
		Set
			Me._frm_cls.Assign(value)
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
	
	Private Sub attach_frm_cls(ByVal entity As frm_cls)
		Me.SendPropertyChanging
		entity.P_005_cls = Me
	End Sub
	
	Private Sub detach_frm_cls(ByVal entity As frm_cls)
		Me.SendPropertyChanging
		entity.P_005_cls = Nothing
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.P_0051")>  _
Partial Public Class P_0051_cls
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _id_P_0051 As Integer
	
	Private _pnu_des As String
	
	Private _pnu_est As System.Nullable(Of Char)
	
	Private _pnu_cod_temporal As System.Nullable(Of Integer)
	
	Private _gga_cls As EntitySet(Of gga_cls)
	
    #Region "Definiciones de métodos de extensibilidad"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub Onid_P_0051Changing(value As Integer)
    End Sub
    Partial Private Sub Onid_P_0051Changed()
    End Sub
    Partial Private Sub Onpnu_desChanging(value As String)
    End Sub
    Partial Private Sub Onpnu_desChanged()
    End Sub
    Partial Private Sub Onpnu_estChanging(value As System.Nullable(Of Char))
    End Sub
    Partial Private Sub Onpnu_estChanged()
    End Sub
    Partial Private Sub Onpnu_cod_temporalChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub Onpnu_cod_temporalChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		Me._gga_cls = New EntitySet(Of gga_cls)(AddressOf Me.attach_gga_cls, AddressOf Me.detach_gga_cls)
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_id_P_0051", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property id_P_0051() As Integer
		Get
			Return Me._id_P_0051
		End Get
		Set
			If ((Me._id_P_0051 = value)  _
						= false) Then
				Me.Onid_P_0051Changing(value)
				Me.SendPropertyChanging
				Me._id_P_0051 = value
				Me.SendPropertyChanged("id_P_0051")
				Me.Onid_P_0051Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pnu_des", DbType:="VarChar(80)")>  _
	Public Property pnu_des() As String
		Get
			Return Me._pnu_des
		End Get
		Set
			If (String.Equals(Me._pnu_des, value) = false) Then
				Me.Onpnu_desChanging(value)
				Me.SendPropertyChanging
				Me._pnu_des = value
				Me.SendPropertyChanged("pnu_des")
				Me.Onpnu_desChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pnu_est", DbType:="Char(1)")>  _
	Public Property pnu_est() As System.Nullable(Of Char)
		Get
			Return Me._pnu_est
		End Get
		Set
			If (Me._pnu_est.Equals(value) = false) Then
				Me.Onpnu_estChanging(value)
				Me.SendPropertyChanging
				Me._pnu_est = value
				Me.SendPropertyChanged("pnu_est")
				Me.Onpnu_estChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pnu_cod_temporal", DbType:="Int")>  _
	Public Property pnu_cod_temporal() As System.Nullable(Of Integer)
		Get
			Return Me._pnu_cod_temporal
		End Get
		Set
			If (Me._pnu_cod_temporal.Equals(value) = false) Then
				Me.Onpnu_cod_temporalChanging(value)
				Me.SendPropertyChanging
				Me._pnu_cod_temporal = value
				Me.SendPropertyChanged("pnu_cod_temporal")
				Me.Onpnu_cod_temporalChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="P_0051_cls_gga_cls", Storage:="_gga_cls", ThisKey:="id_P_0051", OtherKey:="id_p_0051")>  _
	Public Property gga_cls() As EntitySet(Of gga_cls)
		Get
			Return Me._gga_cls
		End Get
		Set
			Me._gga_cls.Assign(value)
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
	
	Private Sub attach_gga_cls(ByVal entity As gga_cls)
		Me.SendPropertyChanging
		entity.P_0051_cls = Me
	End Sub
	
	Private Sub detach_gga_cls(ByVal entity As gga_cls)
		Me.SendPropertyChanging
		entity.P_0051_cls = Nothing
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.P_0052")>  _
Partial Public Class P_0052_cls
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _id_P_0052 As Integer
	
	Private _pnu_des As String
	
	Private _pnu_est As System.Nullable(Of Char)
	
	Private _pnu_cod_temporal As System.Nullable(Of Integer)
	
	Private _dpo_cls As EntitySet(Of dpo_cls)
	
    #Region "Definiciones de métodos de extensibilidad"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub Onid_P_0052Changing(value As Integer)
    End Sub
    Partial Private Sub Onid_P_0052Changed()
    End Sub
    Partial Private Sub Onpnu_desChanging(value As String)
    End Sub
    Partial Private Sub Onpnu_desChanged()
    End Sub
    Partial Private Sub Onpnu_estChanging(value As System.Nullable(Of Char))
    End Sub
    Partial Private Sub Onpnu_estChanged()
    End Sub
    Partial Private Sub Onpnu_cod_temporalChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub Onpnu_cod_temporalChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		Me._dpo_cls = New EntitySet(Of dpo_cls)(AddressOf Me.attach_dpo_cls, AddressOf Me.detach_dpo_cls)
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_id_P_0052", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property id_P_0052() As Integer
		Get
			Return Me._id_P_0052
		End Get
		Set
			If ((Me._id_P_0052 = value)  _
						= false) Then
				Me.Onid_P_0052Changing(value)
				Me.SendPropertyChanging
				Me._id_P_0052 = value
				Me.SendPropertyChanged("id_P_0052")
				Me.Onid_P_0052Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pnu_des", DbType:="VarChar(80)")>  _
	Public Property pnu_des() As String
		Get
			Return Me._pnu_des
		End Get
		Set
			If (String.Equals(Me._pnu_des, value) = false) Then
				Me.Onpnu_desChanging(value)
				Me.SendPropertyChanging
				Me._pnu_des = value
				Me.SendPropertyChanged("pnu_des")
				Me.Onpnu_desChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pnu_est", DbType:="Char(1)")>  _
	Public Property pnu_est() As System.Nullable(Of Char)
		Get
			Return Me._pnu_est
		End Get
		Set
			If (Me._pnu_est.Equals(value) = false) Then
				Me.Onpnu_estChanging(value)
				Me.SendPropertyChanging
				Me._pnu_est = value
				Me.SendPropertyChanged("pnu_est")
				Me.Onpnu_estChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pnu_cod_temporal", DbType:="Int")>  _
	Public Property pnu_cod_temporal() As System.Nullable(Of Integer)
		Get
			Return Me._pnu_cod_temporal
		End Get
		Set
			If (Me._pnu_cod_temporal.Equals(value) = false) Then
				Me.Onpnu_cod_temporalChanging(value)
				Me.SendPropertyChanging
				Me._pnu_cod_temporal = value
				Me.SendPropertyChanged("pnu_cod_temporal")
				Me.Onpnu_cod_temporalChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="P_0052_cls_dpo_cls", Storage:="_dpo_cls", ThisKey:="id_P_0052", OtherKey:="id_P_0052")>  _
	Public Property dpo_cls() As EntitySet(Of dpo_cls)
		Get
			Return Me._dpo_cls
		End Get
		Set
			Me._dpo_cls.Assign(value)
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
	
	Private Sub attach_dpo_cls(ByVal entity As dpo_cls)
		Me.SendPropertyChanging
		entity.P_0052_cls = Me
	End Sub
	
	Private Sub detach_dpo_cls(ByVal entity As dpo_cls)
		Me.SendPropertyChanging
		entity.P_0052_cls = Nothing
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.P_0053")>  _
Partial Public Class P_0053_cls
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _id_P_0053 As Integer
	
	Private _pnu_des As String
	
	Private _pnu_est As System.Nullable(Of Char)
	
	Private _pnu_cod_temporal As System.Nullable(Of Integer)
	
	Private _egr_sec_cls As EntitySet(Of egr_sec_cls)
	
	Private _ing_sec_cls As EntitySet(Of ing_sec_cls)
	
    #Region "Definiciones de métodos de extensibilidad"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub Onid_P_0053Changing(value As Integer)
    End Sub
    Partial Private Sub Onid_P_0053Changed()
    End Sub
    Partial Private Sub Onpnu_desChanging(value As String)
    End Sub
    Partial Private Sub Onpnu_desChanged()
    End Sub
    Partial Private Sub Onpnu_estChanging(value As System.Nullable(Of Char))
    End Sub
    Partial Private Sub Onpnu_estChanged()
    End Sub
    Partial Private Sub Onpnu_cod_temporalChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub Onpnu_cod_temporalChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		Me._egr_sec_cls = New EntitySet(Of egr_sec_cls)(AddressOf Me.attach_egr_sec_cls, AddressOf Me.detach_egr_sec_cls)
		Me._ing_sec_cls = New EntitySet(Of ing_sec_cls)(AddressOf Me.attach_ing_sec_cls, AddressOf Me.detach_ing_sec_cls)
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_id_P_0053", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property id_P_0053() As Integer
		Get
			Return Me._id_P_0053
		End Get
		Set
			If ((Me._id_P_0053 = value)  _
						= false) Then
				Me.Onid_P_0053Changing(value)
				Me.SendPropertyChanging
				Me._id_P_0053 = value
				Me.SendPropertyChanged("id_P_0053")
				Me.Onid_P_0053Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pnu_des", DbType:="VarChar(80)")>  _
	Public Property pnu_des() As String
		Get
			Return Me._pnu_des
		End Get
		Set
			If (String.Equals(Me._pnu_des, value) = false) Then
				Me.Onpnu_desChanging(value)
				Me.SendPropertyChanging
				Me._pnu_des = value
				Me.SendPropertyChanged("pnu_des")
				Me.Onpnu_desChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pnu_est", DbType:="Char(1)")>  _
	Public Property pnu_est() As System.Nullable(Of Char)
		Get
			Return Me._pnu_est
		End Get
		Set
			If (Me._pnu_est.Equals(value) = false) Then
				Me.Onpnu_estChanging(value)
				Me.SendPropertyChanging
				Me._pnu_est = value
				Me.SendPropertyChanged("pnu_est")
				Me.Onpnu_estChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pnu_cod_temporal", DbType:="Int")>  _
	Public Property pnu_cod_temporal() As System.Nullable(Of Integer)
		Get
			Return Me._pnu_cod_temporal
		End Get
		Set
			If (Me._pnu_cod_temporal.Equals(value) = false) Then
				Me.Onpnu_cod_temporalChanging(value)
				Me.SendPropertyChanging
				Me._pnu_cod_temporal = value
				Me.SendPropertyChanged("pnu_cod_temporal")
				Me.Onpnu_cod_temporalChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="P_0053_cls_egr_sec_cls", Storage:="_egr_sec_cls", ThisKey:="id_P_0053", OtherKey:="id_P_0053")>  _
	Public Property egr_sec_cls() As EntitySet(Of egr_sec_cls)
		Get
			Return Me._egr_sec_cls
		End Get
		Set
			Me._egr_sec_cls.Assign(value)
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="P_0053_cls_ing_sec_cls", Storage:="_ing_sec_cls", ThisKey:="id_P_0053", OtherKey:="id_P_0053")>  _
	Public Property ing_sec_cls() As EntitySet(Of ing_sec_cls)
		Get
			Return Me._ing_sec_cls
		End Get
		Set
			Me._ing_sec_cls.Assign(value)
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
	
	Private Sub attach_egr_sec_cls(ByVal entity As egr_sec_cls)
		Me.SendPropertyChanging
		entity.P_0053_cls = Me
	End Sub
	
	Private Sub detach_egr_sec_cls(ByVal entity As egr_sec_cls)
		Me.SendPropertyChanging
		entity.P_0053_cls = Nothing
	End Sub
	
	Private Sub attach_ing_sec_cls(ByVal entity As ing_sec_cls)
		Me.SendPropertyChanging
		entity.P_0053_cls = Me
	End Sub
	
	Private Sub detach_ing_sec_cls(ByVal entity As ing_sec_cls)
		Me.SendPropertyChanging
		entity.P_0053_cls = Nothing
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.p_0054")>  _
Partial Public Class p_0054_cls
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _id_p_0054 As Integer
	
	Private _pnu_des As String
	
	Private _pnu_est As System.Nullable(Of Char)
	
	Private _pnu_atr_001 As System.Nullable(Of Integer)
	
	Private _pnu_atr_002 As String
	
	Private _pnu_atr_003 As String
	
	Private _pnu_atr_004 As String
	
	Private _pnu_atr_005 As String
	
    #Region "Definiciones de métodos de extensibilidad"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub Onid_p_0054Changing(value As Integer)
    End Sub
    Partial Private Sub Onid_p_0054Changed()
    End Sub
    Partial Private Sub Onpnu_desChanging(value As String)
    End Sub
    Partial Private Sub Onpnu_desChanged()
    End Sub
    Partial Private Sub Onpnu_estChanging(value As System.Nullable(Of Char))
    End Sub
    Partial Private Sub Onpnu_estChanged()
    End Sub
    Partial Private Sub Onpnu_atr_001Changing(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub Onpnu_atr_001Changed()
    End Sub
    Partial Private Sub Onpnu_atr_002Changing(value As String)
    End Sub
    Partial Private Sub Onpnu_atr_002Changed()
    End Sub
    Partial Private Sub Onpnu_atr_003Changing(value As String)
    End Sub
    Partial Private Sub Onpnu_atr_003Changed()
    End Sub
    Partial Private Sub Onpnu_atr_004Changing(value As String)
    End Sub
    Partial Private Sub Onpnu_atr_004Changed()
    End Sub
    Partial Private Sub Onpnu_atr_005Changing(value As String)
    End Sub
    Partial Private Sub Onpnu_atr_005Changed()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_id_p_0054", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property id_p_0054() As Integer
		Get
			Return Me._id_p_0054
		End Get
		Set
			If ((Me._id_p_0054 = value)  _
						= false) Then
				Me.Onid_p_0054Changing(value)
				Me.SendPropertyChanging
				Me._id_p_0054 = value
				Me.SendPropertyChanged("id_p_0054")
				Me.Onid_p_0054Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pnu_des", DbType:="VarChar(80)")>  _
	Public Property pnu_des() As String
		Get
			Return Me._pnu_des
		End Get
		Set
			If (String.Equals(Me._pnu_des, value) = false) Then
				Me.Onpnu_desChanging(value)
				Me.SendPropertyChanging
				Me._pnu_des = value
				Me.SendPropertyChanged("pnu_des")
				Me.Onpnu_desChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pnu_est", DbType:="Char(1)")>  _
	Public Property pnu_est() As System.Nullable(Of Char)
		Get
			Return Me._pnu_est
		End Get
		Set
			If (Me._pnu_est.Equals(value) = false) Then
				Me.Onpnu_estChanging(value)
				Me.SendPropertyChanging
				Me._pnu_est = value
				Me.SendPropertyChanged("pnu_est")
				Me.Onpnu_estChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pnu_atr_001", DbType:="Int")>  _
	Public Property pnu_atr_001() As System.Nullable(Of Integer)
		Get
			Return Me._pnu_atr_001
		End Get
		Set
			If (Me._pnu_atr_001.Equals(value) = false) Then
				Me.Onpnu_atr_001Changing(value)
				Me.SendPropertyChanging
				Me._pnu_atr_001 = value
				Me.SendPropertyChanged("pnu_atr_001")
				Me.Onpnu_atr_001Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pnu_atr_002", DbType:="VarChar(255)")>  _
	Public Property pnu_atr_002() As String
		Get
			Return Me._pnu_atr_002
		End Get
		Set
			If (String.Equals(Me._pnu_atr_002, value) = false) Then
				Me.Onpnu_atr_002Changing(value)
				Me.SendPropertyChanging
				Me._pnu_atr_002 = value
				Me.SendPropertyChanged("pnu_atr_002")
				Me.Onpnu_atr_002Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pnu_atr_003", DbType:="VarChar(255)")>  _
	Public Property pnu_atr_003() As String
		Get
			Return Me._pnu_atr_003
		End Get
		Set
			If (String.Equals(Me._pnu_atr_003, value) = false) Then
				Me.Onpnu_atr_003Changing(value)
				Me.SendPropertyChanging
				Me._pnu_atr_003 = value
				Me.SendPropertyChanged("pnu_atr_003")
				Me.Onpnu_atr_003Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pnu_atr_004", DbType:="VarChar(255)")>  _
	Public Property pnu_atr_004() As String
		Get
			Return Me._pnu_atr_004
		End Get
		Set
			If (String.Equals(Me._pnu_atr_004, value) = false) Then
				Me.Onpnu_atr_004Changing(value)
				Me.SendPropertyChanging
				Me._pnu_atr_004 = value
				Me.SendPropertyChanged("pnu_atr_004")
				Me.Onpnu_atr_004Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pnu_atr_005", DbType:="VarChar(255)")>  _
	Public Property pnu_atr_005() As String
		Get
			Return Me._pnu_atr_005
		End Get
		Set
			If (String.Equals(Me._pnu_atr_005, value) = false) Then
				Me.Onpnu_atr_005Changing(value)
				Me.SendPropertyChanging
				Me._pnu_atr_005 = value
				Me.SendPropertyChanged("pnu_atr_005")
				Me.Onpnu_atr_005Changed
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.P_0055")>  _
Partial Public Class P_0055_cls
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _id_P_0055 As Integer
	
	Private _pnu_des As String
	
	Private _pnu_est As System.Nullable(Of Char)
	
	Private _pnu_cod_temporal As System.Nullable(Of Integer)
	
	Private _egr_sec_cls As EntitySet(Of egr_sec_cls)
	
    #Region "Definiciones de métodos de extensibilidad"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub Onid_P_0055Changing(value As Integer)
    End Sub
    Partial Private Sub Onid_P_0055Changed()
    End Sub
    Partial Private Sub Onpnu_desChanging(value As String)
    End Sub
    Partial Private Sub Onpnu_desChanged()
    End Sub
    Partial Private Sub Onpnu_estChanging(value As System.Nullable(Of Char))
    End Sub
    Partial Private Sub Onpnu_estChanged()
    End Sub
    Partial Private Sub Onpnu_cod_temporalChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub Onpnu_cod_temporalChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		Me._egr_sec_cls = New EntitySet(Of egr_sec_cls)(AddressOf Me.attach_egr_sec_cls, AddressOf Me.detach_egr_sec_cls)
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_id_P_0055", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property id_P_0055() As Integer
		Get
			Return Me._id_P_0055
		End Get
		Set
			If ((Me._id_P_0055 = value)  _
						= false) Then
				Me.Onid_P_0055Changing(value)
				Me.SendPropertyChanging
				Me._id_P_0055 = value
				Me.SendPropertyChanged("id_P_0055")
				Me.Onid_P_0055Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pnu_des", DbType:="VarChar(80)")>  _
	Public Property pnu_des() As String
		Get
			Return Me._pnu_des
		End Get
		Set
			If (String.Equals(Me._pnu_des, value) = false) Then
				Me.Onpnu_desChanging(value)
				Me.SendPropertyChanging
				Me._pnu_des = value
				Me.SendPropertyChanged("pnu_des")
				Me.Onpnu_desChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pnu_est", DbType:="Char(1)")>  _
	Public Property pnu_est() As System.Nullable(Of Char)
		Get
			Return Me._pnu_est
		End Get
		Set
			If (Me._pnu_est.Equals(value) = false) Then
				Me.Onpnu_estChanging(value)
				Me.SendPropertyChanging
				Me._pnu_est = value
				Me.SendPropertyChanged("pnu_est")
				Me.Onpnu_estChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pnu_cod_temporal", DbType:="Int")>  _
	Public Property pnu_cod_temporal() As System.Nullable(Of Integer)
		Get
			Return Me._pnu_cod_temporal
		End Get
		Set
			If (Me._pnu_cod_temporal.Equals(value) = false) Then
				Me.Onpnu_cod_temporalChanging(value)
				Me.SendPropertyChanging
				Me._pnu_cod_temporal = value
				Me.SendPropertyChanged("pnu_cod_temporal")
				Me.Onpnu_cod_temporalChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="P_0055_cls_egr_sec_cls", Storage:="_egr_sec_cls", ThisKey:="id_P_0055", OtherKey:="id_P_0055")>  _
	Public Property egr_sec_cls() As EntitySet(Of egr_sec_cls)
		Get
			Return Me._egr_sec_cls
		End Get
		Set
			Me._egr_sec_cls.Assign(value)
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
	
	Private Sub attach_egr_sec_cls(ByVal entity As egr_sec_cls)
		Me.SendPropertyChanging
		entity.P_0055_cls = Me
	End Sub
	
	Private Sub detach_egr_sec_cls(ByVal entity As egr_sec_cls)
		Me.SendPropertyChanging
		entity.P_0055_cls = Nothing
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.P_0056")>  _
Partial Public Class P_0056_cls
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _id_P_0056 As Integer
	
	Private _pnu_des As String
	
	Private _pnu_est As System.Nullable(Of Char)
	
	Private _pnu_atr_002 As System.Nullable(Of Char)
	
	Private _pnu_atr_003 As System.Nullable(Of Char)
	
	Private _pnu_atr_004 As System.Nullable(Of Char)
	
	Private _pnu_atr_005 As System.Nullable(Of Char)
	
	Private _pnu_cod_temporal As String
	
	Private _pnu_atr_006 As String
	
	Private _pnu_atr_007 As System.Nullable(Of Char)
	
	Private _pnu_atr_008 As System.Nullable(Of Decimal)
	
	Private _pnu_atr_009 As System.Nullable(Of System.TimeSpan)
	
	Private _pnu_atr_010 As System.Nullable(Of System.TimeSpan)
	
	Private _pnu_Nomenclatura As String
	
	Private _pnu_atr_011 As String
	
	Private _PNU_ATR_FORMATO As String
	
	Private _egr_sec_cls As EntitySet(Of egr_sec_cls)
	
	Private _opn_cls As EntitySet(Of opn_cls)
	
    #Region "Definiciones de métodos de extensibilidad"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub Onid_P_0056Changing(value As Integer)
    End Sub
    Partial Private Sub Onid_P_0056Changed()
    End Sub
    Partial Private Sub Onpnu_desChanging(value As String)
    End Sub
    Partial Private Sub Onpnu_desChanged()
    End Sub
    Partial Private Sub Onpnu_estChanging(value As System.Nullable(Of Char))
    End Sub
    Partial Private Sub Onpnu_estChanged()
    End Sub
    Partial Private Sub Onpnu_atr_002Changing(value As System.Nullable(Of Char))
    End Sub
    Partial Private Sub Onpnu_atr_002Changed()
    End Sub
    Partial Private Sub Onpnu_atr_003Changing(value As System.Nullable(Of Char))
    End Sub
    Partial Private Sub Onpnu_atr_003Changed()
    End Sub
    Partial Private Sub Onpnu_atr_004Changing(value As System.Nullable(Of Char))
    End Sub
    Partial Private Sub Onpnu_atr_004Changed()
    End Sub
    Partial Private Sub Onpnu_atr_005Changing(value As System.Nullable(Of Char))
    End Sub
    Partial Private Sub Onpnu_atr_005Changed()
    End Sub
    Partial Private Sub Onpnu_cod_temporalChanging(value As String)
    End Sub
    Partial Private Sub Onpnu_cod_temporalChanged()
    End Sub
    Partial Private Sub Onpnu_atr_006Changing(value As String)
    End Sub
    Partial Private Sub Onpnu_atr_006Changed()
    End Sub
    Partial Private Sub Onpnu_atr_007Changing(value As System.Nullable(Of Char))
    End Sub
    Partial Private Sub Onpnu_atr_007Changed()
    End Sub
    Partial Private Sub Onpnu_atr_008Changing(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub Onpnu_atr_008Changed()
    End Sub
    Partial Private Sub Onpnu_atr_009Changing(value As System.Nullable(Of System.TimeSpan))
    End Sub
    Partial Private Sub Onpnu_atr_009Changed()
    End Sub
    Partial Private Sub Onpnu_atr_010Changing(value As System.Nullable(Of System.TimeSpan))
    End Sub
    Partial Private Sub Onpnu_atr_010Changed()
    End Sub
    Partial Private Sub Onpnu_NomenclaturaChanging(value As String)
    End Sub
    Partial Private Sub Onpnu_NomenclaturaChanged()
    End Sub
    Partial Private Sub Onpnu_atr_011Changing(value As String)
    End Sub
    Partial Private Sub Onpnu_atr_011Changed()
    End Sub
    Partial Private Sub OnPNU_ATR_FORMATOChanging(value As String)
    End Sub
    Partial Private Sub OnPNU_ATR_FORMATOChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		Me._egr_sec_cls = New EntitySet(Of egr_sec_cls)(AddressOf Me.attach_egr_sec_cls, AddressOf Me.detach_egr_sec_cls)
		Me._opn_cls = New EntitySet(Of opn_cls)(AddressOf Me.attach_opn_cls, AddressOf Me.detach_opn_cls)
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_id_P_0056", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property id_P_0056() As Integer
		Get
			Return Me._id_P_0056
		End Get
		Set
			If ((Me._id_P_0056 = value)  _
						= false) Then
				Me.Onid_P_0056Changing(value)
				Me.SendPropertyChanging
				Me._id_P_0056 = value
				Me.SendPropertyChanged("id_P_0056")
				Me.Onid_P_0056Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pnu_des", DbType:="VarChar(80)")>  _
	Public Property pnu_des() As String
		Get
			Return Me._pnu_des
		End Get
		Set
			If (String.Equals(Me._pnu_des, value) = false) Then
				Me.Onpnu_desChanging(value)
				Me.SendPropertyChanging
				Me._pnu_des = value
				Me.SendPropertyChanged("pnu_des")
				Me.Onpnu_desChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pnu_est", DbType:="Char(1)")>  _
	Public Property pnu_est() As System.Nullable(Of Char)
		Get
			Return Me._pnu_est
		End Get
		Set
			If (Me._pnu_est.Equals(value) = false) Then
				Me.Onpnu_estChanging(value)
				Me.SendPropertyChanging
				Me._pnu_est = value
				Me.SendPropertyChanged("pnu_est")
				Me.Onpnu_estChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pnu_atr_002", DbType:="Char(1)")>  _
	Public Property pnu_atr_002() As System.Nullable(Of Char)
		Get
			Return Me._pnu_atr_002
		End Get
		Set
			If (Me._pnu_atr_002.Equals(value) = false) Then
				Me.Onpnu_atr_002Changing(value)
				Me.SendPropertyChanging
				Me._pnu_atr_002 = value
				Me.SendPropertyChanged("pnu_atr_002")
				Me.Onpnu_atr_002Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pnu_atr_003", DbType:="Char(1)")>  _
	Public Property pnu_atr_003() As System.Nullable(Of Char)
		Get
			Return Me._pnu_atr_003
		End Get
		Set
			If (Me._pnu_atr_003.Equals(value) = false) Then
				Me.Onpnu_atr_003Changing(value)
				Me.SendPropertyChanging
				Me._pnu_atr_003 = value
				Me.SendPropertyChanged("pnu_atr_003")
				Me.Onpnu_atr_003Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pnu_atr_004", DbType:="Char(1)")>  _
	Public Property pnu_atr_004() As System.Nullable(Of Char)
		Get
			Return Me._pnu_atr_004
		End Get
		Set
			If (Me._pnu_atr_004.Equals(value) = false) Then
				Me.Onpnu_atr_004Changing(value)
				Me.SendPropertyChanging
				Me._pnu_atr_004 = value
				Me.SendPropertyChanged("pnu_atr_004")
				Me.Onpnu_atr_004Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pnu_atr_005", DbType:="Char(1)")>  _
	Public Property pnu_atr_005() As System.Nullable(Of Char)
		Get
			Return Me._pnu_atr_005
		End Get
		Set
			If (Me._pnu_atr_005.Equals(value) = false) Then
				Me.Onpnu_atr_005Changing(value)
				Me.SendPropertyChanging
				Me._pnu_atr_005 = value
				Me.SendPropertyChanged("pnu_atr_005")
				Me.Onpnu_atr_005Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pnu_cod_temporal", DbType:="VarChar(3)")>  _
	Public Property pnu_cod_temporal() As String
		Get
			Return Me._pnu_cod_temporal
		End Get
		Set
			If (String.Equals(Me._pnu_cod_temporal, value) = false) Then
				Me.Onpnu_cod_temporalChanging(value)
				Me.SendPropertyChanging
				Me._pnu_cod_temporal = value
				Me.SendPropertyChanged("pnu_cod_temporal")
				Me.Onpnu_cod_temporalChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pnu_atr_006", DbType:="VarChar(3)")>  _
	Public Property pnu_atr_006() As String
		Get
			Return Me._pnu_atr_006
		End Get
		Set
			If (String.Equals(Me._pnu_atr_006, value) = false) Then
				Me.Onpnu_atr_006Changing(value)
				Me.SendPropertyChanging
				Me._pnu_atr_006 = value
				Me.SendPropertyChanged("pnu_atr_006")
				Me.Onpnu_atr_006Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pnu_atr_007", DbType:="Char(1)")>  _
	Public Property pnu_atr_007() As System.Nullable(Of Char)
		Get
			Return Me._pnu_atr_007
		End Get
		Set
			If (Me._pnu_atr_007.Equals(value) = false) Then
				Me.Onpnu_atr_007Changing(value)
				Me.SendPropertyChanging
				Me._pnu_atr_007 = value
				Me.SendPropertyChanged("pnu_atr_007")
				Me.Onpnu_atr_007Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pnu_atr_008", DbType:="Money")>  _
	Public Property pnu_atr_008() As System.Nullable(Of Decimal)
		Get
			Return Me._pnu_atr_008
		End Get
		Set
			If (Me._pnu_atr_008.Equals(value) = false) Then
				Me.Onpnu_atr_008Changing(value)
				Me.SendPropertyChanging
				Me._pnu_atr_008 = value
				Me.SendPropertyChanged("pnu_atr_008")
				Me.Onpnu_atr_008Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pnu_atr_009", DbType:="Time")>  _
	Public Property pnu_atr_009() As System.Nullable(Of System.TimeSpan)
		Get
			Return Me._pnu_atr_009
		End Get
		Set
			If (Me._pnu_atr_009.Equals(value) = false) Then
				Me.Onpnu_atr_009Changing(value)
				Me.SendPropertyChanging
				Me._pnu_atr_009 = value
				Me.SendPropertyChanged("pnu_atr_009")
				Me.Onpnu_atr_009Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pnu_atr_010", DbType:="Time")>  _
	Public Property pnu_atr_010() As System.Nullable(Of System.TimeSpan)
		Get
			Return Me._pnu_atr_010
		End Get
		Set
			If (Me._pnu_atr_010.Equals(value) = false) Then
				Me.Onpnu_atr_010Changing(value)
				Me.SendPropertyChanging
				Me._pnu_atr_010 = value
				Me.SendPropertyChanged("pnu_atr_010")
				Me.Onpnu_atr_010Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pnu_Nomenclatura", DbType:="VarChar(5)")>  _
	Public Property pnu_Nomenclatura() As String
		Get
			Return Me._pnu_Nomenclatura
		End Get
		Set
			If (String.Equals(Me._pnu_Nomenclatura, value) = false) Then
				Me.Onpnu_NomenclaturaChanging(value)
				Me.SendPropertyChanging
				Me._pnu_Nomenclatura = value
				Me.SendPropertyChanged("pnu_Nomenclatura")
				Me.Onpnu_NomenclaturaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pnu_atr_011", DbType:="VarChar(50)")>  _
	Public Property pnu_atr_011() As String
		Get
			Return Me._pnu_atr_011
		End Get
		Set
			If (String.Equals(Me._pnu_atr_011, value) = false) Then
				Me.Onpnu_atr_011Changing(value)
				Me.SendPropertyChanging
				Me._pnu_atr_011 = value
				Me.SendPropertyChanged("pnu_atr_011")
				Me.Onpnu_atr_011Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PNU_ATR_FORMATO", DbType:="VarChar(3)")>  _
	Public Property PNU_ATR_FORMATO() As String
		Get
			Return Me._PNU_ATR_FORMATO
		End Get
		Set
			If (String.Equals(Me._PNU_ATR_FORMATO, value) = false) Then
				Me.OnPNU_ATR_FORMATOChanging(value)
				Me.SendPropertyChanging
				Me._PNU_ATR_FORMATO = value
				Me.SendPropertyChanged("PNU_ATR_FORMATO")
				Me.OnPNU_ATR_FORMATOChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="P_0056_cls_egr_sec_cls", Storage:="_egr_sec_cls", ThisKey:="id_P_0056", OtherKey:="id_P_0056")>  _
	Public Property egr_sec_cls() As EntitySet(Of egr_sec_cls)
		Get
			Return Me._egr_sec_cls
		End Get
		Set
			Me._egr_sec_cls.Assign(value)
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="P_0056_cls_opn_cls", Storage:="_opn_cls", ThisKey:="id_P_0056", OtherKey:="id_P_0056")>  _
	Public Property opn_cls() As EntitySet(Of opn_cls)
		Get
			Return Me._opn_cls
		End Get
		Set
			Me._opn_cls.Assign(value)
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
	
	Private Sub attach_egr_sec_cls(ByVal entity As egr_sec_cls)
		Me.SendPropertyChanging
		entity.P_0056_cls = Me
	End Sub
	
	Private Sub detach_egr_sec_cls(ByVal entity As egr_sec_cls)
		Me.SendPropertyChanging
		entity.P_0056_cls = Nothing
	End Sub
	
	Private Sub attach_opn_cls(ByVal entity As opn_cls)
		Me.SendPropertyChanging
		entity.P_0056_cls = Me
	End Sub
	
	Private Sub detach_opn_cls(ByVal entity As opn_cls)
		Me.SendPropertyChanging
		entity.P_0056_cls = Nothing
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.P_0057")>  _
Partial Public Class P_0057_cls
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _id_P_0057 As Integer
	
	Private _pnu_des As String
	
	Private _pnu_est As Char
	
	Private _pnu_cod_temporal As System.Nullable(Of Integer)
	
	Private _cxc_cls As EntitySet(Of cxc_cls)
	
	Private _cxp_cls As EntitySet(Of cxp_cls)
	
    #Region "Definiciones de métodos de extensibilidad"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub Onid_P_0057Changing(value As Integer)
    End Sub
    Partial Private Sub Onid_P_0057Changed()
    End Sub
    Partial Private Sub Onpnu_desChanging(value As String)
    End Sub
    Partial Private Sub Onpnu_desChanged()
    End Sub
    Partial Private Sub Onpnu_estChanging(value As Char)
    End Sub
    Partial Private Sub Onpnu_estChanged()
    End Sub
    Partial Private Sub Onpnu_cod_temporalChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub Onpnu_cod_temporalChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		Me._cxc_cls = New EntitySet(Of cxc_cls)(AddressOf Me.attach_cxc_cls, AddressOf Me.detach_cxc_cls)
		Me._cxp_cls = New EntitySet(Of cxp_cls)(AddressOf Me.attach_cxp_cls, AddressOf Me.detach_cxp_cls)
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_id_P_0057", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property id_P_0057() As Integer
		Get
			Return Me._id_P_0057
		End Get
		Set
			If ((Me._id_P_0057 = value)  _
						= false) Then
				Me.Onid_P_0057Changing(value)
				Me.SendPropertyChanging
				Me._id_P_0057 = value
				Me.SendPropertyChanged("id_P_0057")
				Me.Onid_P_0057Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pnu_des", DbType:="VarChar(50) NOT NULL", CanBeNull:=false)>  _
	Public Property pnu_des() As String
		Get
			Return Me._pnu_des
		End Get
		Set
			If (String.Equals(Me._pnu_des, value) = false) Then
				Me.Onpnu_desChanging(value)
				Me.SendPropertyChanging
				Me._pnu_des = value
				Me.SendPropertyChanged("pnu_des")
				Me.Onpnu_desChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pnu_est", DbType:="Char(1) NOT NULL")>  _
	Public Property pnu_est() As Char
		Get
			Return Me._pnu_est
		End Get
		Set
			If ((Me._pnu_est = value)  _
						= false) Then
				Me.Onpnu_estChanging(value)
				Me.SendPropertyChanging
				Me._pnu_est = value
				Me.SendPropertyChanged("pnu_est")
				Me.Onpnu_estChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pnu_cod_temporal", DbType:="Int")>  _
	Public Property pnu_cod_temporal() As System.Nullable(Of Integer)
		Get
			Return Me._pnu_cod_temporal
		End Get
		Set
			If (Me._pnu_cod_temporal.Equals(value) = false) Then
				Me.Onpnu_cod_temporalChanging(value)
				Me.SendPropertyChanging
				Me._pnu_cod_temporal = value
				Me.SendPropertyChanged("pnu_cod_temporal")
				Me.Onpnu_cod_temporalChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="P_0057_cls_cxc_cls", Storage:="_cxc_cls", ThisKey:="id_P_0057", OtherKey:="id_P_0057")>  _
	Public Property cxc_cls() As EntitySet(Of cxc_cls)
		Get
			Return Me._cxc_cls
		End Get
		Set
			Me._cxc_cls.Assign(value)
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="P_0057_cls_cxp_cls", Storage:="_cxp_cls", ThisKey:="id_P_0057", OtherKey:="id_P_0057")>  _
	Public Property cxp_cls() As EntitySet(Of cxp_cls)
		Get
			Return Me._cxp_cls
		End Get
		Set
			Me._cxp_cls.Assign(value)
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
	
	Private Sub attach_cxc_cls(ByVal entity As cxc_cls)
		Me.SendPropertyChanging
		entity.P_0057_cls = Me
	End Sub
	
	Private Sub detach_cxc_cls(ByVal entity As cxc_cls)
		Me.SendPropertyChanging
		entity.P_0057_cls = Nothing
	End Sub
	
	Private Sub attach_cxp_cls(ByVal entity As cxp_cls)
		Me.SendPropertyChanging
		entity.P_0057_cls = Me
	End Sub
	
	Private Sub detach_cxp_cls(ByVal entity As cxp_cls)
		Me.SendPropertyChanging
		entity.P_0057_cls = Nothing
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.P_0058")>  _
Partial Public Class P_0058_cls
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _id_P_0058 As Integer
	
	Private _pnu_des As String
	
	Private _pnu_est As System.Nullable(Of Char)
	
	Private _pnu_cod_temporal As System.Nullable(Of Integer)
	
	Private _cli_cls As EntitySet(Of cli_cls)
	
    #Region "Definiciones de métodos de extensibilidad"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub Onid_P_0058Changing(value As Integer)
    End Sub
    Partial Private Sub Onid_P_0058Changed()
    End Sub
    Partial Private Sub Onpnu_desChanging(value As String)
    End Sub
    Partial Private Sub Onpnu_desChanged()
    End Sub
    Partial Private Sub Onpnu_estChanging(value As System.Nullable(Of Char))
    End Sub
    Partial Private Sub Onpnu_estChanged()
    End Sub
    Partial Private Sub Onpnu_cod_temporalChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub Onpnu_cod_temporalChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		Me._cli_cls = New EntitySet(Of cli_cls)(AddressOf Me.attach_cli_cls, AddressOf Me.detach_cli_cls)
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_id_P_0058", DbType:="Int NOT NULL", IsPrimaryKey:=true)>  _
	Public Property id_P_0058() As Integer
		Get
			Return Me._id_P_0058
		End Get
		Set
			If ((Me._id_P_0058 = value)  _
						= false) Then
				Me.Onid_P_0058Changing(value)
				Me.SendPropertyChanging
				Me._id_P_0058 = value
				Me.SendPropertyChanged("id_P_0058")
				Me.Onid_P_0058Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pnu_des", DbType:="VarChar(80)")>  _
	Public Property pnu_des() As String
		Get
			Return Me._pnu_des
		End Get
		Set
			If (String.Equals(Me._pnu_des, value) = false) Then
				Me.Onpnu_desChanging(value)
				Me.SendPropertyChanging
				Me._pnu_des = value
				Me.SendPropertyChanged("pnu_des")
				Me.Onpnu_desChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pnu_est", DbType:="Char(1)")>  _
	Public Property pnu_est() As System.Nullable(Of Char)
		Get
			Return Me._pnu_est
		End Get
		Set
			If (Me._pnu_est.Equals(value) = false) Then
				Me.Onpnu_estChanging(value)
				Me.SendPropertyChanging
				Me._pnu_est = value
				Me.SendPropertyChanged("pnu_est")
				Me.Onpnu_estChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pnu_cod_temporal", DbType:="Int")>  _
	Public Property pnu_cod_temporal() As System.Nullable(Of Integer)
		Get
			Return Me._pnu_cod_temporal
		End Get
		Set
			If (Me._pnu_cod_temporal.Equals(value) = false) Then
				Me.Onpnu_cod_temporalChanging(value)
				Me.SendPropertyChanging
				Me._pnu_cod_temporal = value
				Me.SendPropertyChanged("pnu_cod_temporal")
				Me.Onpnu_cod_temporalChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="P_0058_cls_cli_cls", Storage:="_cli_cls", ThisKey:="id_P_0058", OtherKey:="id_P_0058")>  _
	Public Property cli_cls() As EntitySet(Of cli_cls)
		Get
			Return Me._cli_cls
		End Get
		Set
			Me._cli_cls.Assign(value)
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
	
	Private Sub attach_cli_cls(ByVal entity As cli_cls)
		Me.SendPropertyChanging
		entity.P_0058_cls = Me
	End Sub
	
	Private Sub detach_cli_cls(ByVal entity As cli_cls)
		Me.SendPropertyChanging
		entity.P_0058_cls = Nothing
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.P_0060")>  _
Partial Public Class P_0060_cls
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _id_P_0060 As Integer
	
	Private _pnu_des As String
	
	Private _pnu_est As System.Nullable(Of Char)
	
	Private _pnu_cod_temporal As System.Nullable(Of Integer)
	
	Private _cft_cls As EntitySet(Of cft_cls)
	
    #Region "Definiciones de métodos de extensibilidad"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub Onid_P_0060Changing(value As Integer)
    End Sub
    Partial Private Sub Onid_P_0060Changed()
    End Sub
    Partial Private Sub Onpnu_desChanging(value As String)
    End Sub
    Partial Private Sub Onpnu_desChanged()
    End Sub
    Partial Private Sub Onpnu_estChanging(value As System.Nullable(Of Char))
    End Sub
    Partial Private Sub Onpnu_estChanged()
    End Sub
    Partial Private Sub Onpnu_cod_temporalChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub Onpnu_cod_temporalChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		Me._cft_cls = New EntitySet(Of cft_cls)(AddressOf Me.attach_cft_cls, AddressOf Me.detach_cft_cls)
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_id_P_0060", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property id_P_0060() As Integer
		Get
			Return Me._id_P_0060
		End Get
		Set
			If ((Me._id_P_0060 = value)  _
						= false) Then
				Me.Onid_P_0060Changing(value)
				Me.SendPropertyChanging
				Me._id_P_0060 = value
				Me.SendPropertyChanged("id_P_0060")
				Me.Onid_P_0060Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pnu_des", DbType:="VarChar(80)")>  _
	Public Property pnu_des() As String
		Get
			Return Me._pnu_des
		End Get
		Set
			If (String.Equals(Me._pnu_des, value) = false) Then
				Me.Onpnu_desChanging(value)
				Me.SendPropertyChanging
				Me._pnu_des = value
				Me.SendPropertyChanged("pnu_des")
				Me.Onpnu_desChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pnu_est", DbType:="Char(1)")>  _
	Public Property pnu_est() As System.Nullable(Of Char)
		Get
			Return Me._pnu_est
		End Get
		Set
			If (Me._pnu_est.Equals(value) = false) Then
				Me.Onpnu_estChanging(value)
				Me.SendPropertyChanging
				Me._pnu_est = value
				Me.SendPropertyChanged("pnu_est")
				Me.Onpnu_estChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pnu_cod_temporal", DbType:="Int")>  _
	Public Property pnu_cod_temporal() As System.Nullable(Of Integer)
		Get
			Return Me._pnu_cod_temporal
		End Get
		Set
			If (Me._pnu_cod_temporal.Equals(value) = false) Then
				Me.Onpnu_cod_temporalChanging(value)
				Me.SendPropertyChanging
				Me._pnu_cod_temporal = value
				Me.SendPropertyChanged("pnu_cod_temporal")
				Me.Onpnu_cod_temporalChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="P_0060_cls_cft_cls", Storage:="_cft_cls", ThisKey:="id_P_0060", OtherKey:="id_P_0060")>  _
	Public Property cft_cls() As EntitySet(Of cft_cls)
		Get
			Return Me._cft_cls
		End Get
		Set
			Me._cft_cls.Assign(value)
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
	
	Private Sub attach_cft_cls(ByVal entity As cft_cls)
		Me.SendPropertyChanging
		entity.P_0060_cls = Me
	End Sub
	
	Private Sub detach_cft_cls(ByVal entity As cft_cls)
		Me.SendPropertyChanging
		entity.P_0060_cls = Nothing
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.P_0061")>  _
Partial Public Class P_0061_cls
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _id_P_0061 As Integer
	
	Private _pnu_des As String
	
	Private _pnu_est As System.Nullable(Of Char)
	
	Private _pnu_cod_temporal As System.Nullable(Of Integer)
	
	Private _dpo_cls As EntitySet(Of dpo_cls)
	
	Private _dsi_cls As EntitySet(Of dsi_cls)
	
	Private _pgr_cls As EntitySet(Of pgr_cls)
	
    #Region "Definiciones de métodos de extensibilidad"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub Onid_P_0061Changing(value As Integer)
    End Sub
    Partial Private Sub Onid_P_0061Changed()
    End Sub
    Partial Private Sub Onpnu_desChanging(value As String)
    End Sub
    Partial Private Sub Onpnu_desChanged()
    End Sub
    Partial Private Sub Onpnu_estChanging(value As System.Nullable(Of Char))
    End Sub
    Partial Private Sub Onpnu_estChanged()
    End Sub
    Partial Private Sub Onpnu_cod_temporalChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub Onpnu_cod_temporalChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		Me._dpo_cls = New EntitySet(Of dpo_cls)(AddressOf Me.attach_dpo_cls, AddressOf Me.detach_dpo_cls)
		Me._dsi_cls = New EntitySet(Of dsi_cls)(AddressOf Me.attach_dsi_cls, AddressOf Me.detach_dsi_cls)
		Me._pgr_cls = New EntitySet(Of pgr_cls)(AddressOf Me.attach_pgr_cls, AddressOf Me.detach_pgr_cls)
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_id_P_0061", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property id_P_0061() As Integer
		Get
			Return Me._id_P_0061
		End Get
		Set
			If ((Me._id_P_0061 = value)  _
						= false) Then
				Me.Onid_P_0061Changing(value)
				Me.SendPropertyChanging
				Me._id_P_0061 = value
				Me.SendPropertyChanged("id_P_0061")
				Me.Onid_P_0061Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pnu_des", DbType:="VarChar(80)")>  _
	Public Property pnu_des() As String
		Get
			Return Me._pnu_des
		End Get
		Set
			If (String.Equals(Me._pnu_des, value) = false) Then
				Me.Onpnu_desChanging(value)
				Me.SendPropertyChanging
				Me._pnu_des = value
				Me.SendPropertyChanged("pnu_des")
				Me.Onpnu_desChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pnu_est", DbType:="Char(1)")>  _
	Public Property pnu_est() As System.Nullable(Of Char)
		Get
			Return Me._pnu_est
		End Get
		Set
			If (Me._pnu_est.Equals(value) = false) Then
				Me.Onpnu_estChanging(value)
				Me.SendPropertyChanging
				Me._pnu_est = value
				Me.SendPropertyChanged("pnu_est")
				Me.Onpnu_estChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pnu_cod_temporal", DbType:="Int")>  _
	Public Property pnu_cod_temporal() As System.Nullable(Of Integer)
		Get
			Return Me._pnu_cod_temporal
		End Get
		Set
			If (Me._pnu_cod_temporal.Equals(value) = false) Then
				Me.Onpnu_cod_temporalChanging(value)
				Me.SendPropertyChanging
				Me._pnu_cod_temporal = value
				Me.SendPropertyChanged("pnu_cod_temporal")
				Me.Onpnu_cod_temporalChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="P_0061_cls_dpo_cls", Storage:="_dpo_cls", ThisKey:="id_P_0061", OtherKey:="id_P_0061")>  _
	Public Property dpo_cls() As EntitySet(Of dpo_cls)
		Get
			Return Me._dpo_cls
		End Get
		Set
			Me._dpo_cls.Assign(value)
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="P_0061_cls_dsi_cls", Storage:="_dsi_cls", ThisKey:="id_P_0061", OtherKey:="id_P_0061")>  _
	Public Property dsi_cls() As EntitySet(Of dsi_cls)
		Get
			Return Me._dsi_cls
		End Get
		Set
			Me._dsi_cls.Assign(value)
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="P_0061_cls_pgr_cls", Storage:="_pgr_cls", ThisKey:="id_P_0061", OtherKey:="id_P_0061")>  _
	Public Property pgr_cls() As EntitySet(Of pgr_cls)
		Get
			Return Me._pgr_cls
		End Get
		Set
			Me._pgr_cls.Assign(value)
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
	
	Private Sub attach_dpo_cls(ByVal entity As dpo_cls)
		Me.SendPropertyChanging
		entity.P_0061_cls = Me
	End Sub
	
	Private Sub detach_dpo_cls(ByVal entity As dpo_cls)
		Me.SendPropertyChanging
		entity.P_0061_cls = Nothing
	End Sub
	
	Private Sub attach_dsi_cls(ByVal entity As dsi_cls)
		Me.SendPropertyChanging
		entity.P_0061_cls = Me
	End Sub
	
	Private Sub detach_dsi_cls(ByVal entity As dsi_cls)
		Me.SendPropertyChanging
		entity.P_0061_cls = Nothing
	End Sub
	
	Private Sub attach_pgr_cls(ByVal entity As pgr_cls)
		Me.SendPropertyChanging
		entity.P_0061_cls = Me
	End Sub
	
	Private Sub detach_pgr_cls(ByVal entity As pgr_cls)
		Me.SendPropertyChanging
		entity.P_0061_cls = Nothing
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.P_0062")>  _
Partial Public Class P_0062_cls
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _id_P_0062 As Integer
	
	Private _pnu_des As String
	
	Private _pnu_est As System.Nullable(Of Char)
	
	Private _pnu_cod_temporal As System.Nullable(Of Integer)
	
    #Region "Definiciones de métodos de extensibilidad"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub Onid_P_0062Changing(value As Integer)
    End Sub
    Partial Private Sub Onid_P_0062Changed()
    End Sub
    Partial Private Sub Onpnu_desChanging(value As String)
    End Sub
    Partial Private Sub Onpnu_desChanged()
    End Sub
    Partial Private Sub Onpnu_estChanging(value As System.Nullable(Of Char))
    End Sub
    Partial Private Sub Onpnu_estChanged()
    End Sub
    Partial Private Sub Onpnu_cod_temporalChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub Onpnu_cod_temporalChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_id_P_0062", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property id_P_0062() As Integer
		Get
			Return Me._id_P_0062
		End Get
		Set
			If ((Me._id_P_0062 = value)  _
						= false) Then
				Me.Onid_P_0062Changing(value)
				Me.SendPropertyChanging
				Me._id_P_0062 = value
				Me.SendPropertyChanged("id_P_0062")
				Me.Onid_P_0062Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pnu_des", DbType:="VarChar(80)")>  _
	Public Property pnu_des() As String
		Get
			Return Me._pnu_des
		End Get
		Set
			If (String.Equals(Me._pnu_des, value) = false) Then
				Me.Onpnu_desChanging(value)
				Me.SendPropertyChanging
				Me._pnu_des = value
				Me.SendPropertyChanged("pnu_des")
				Me.Onpnu_desChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pnu_est", DbType:="Char(1)")>  _
	Public Property pnu_est() As System.Nullable(Of Char)
		Get
			Return Me._pnu_est
		End Get
		Set
			If (Me._pnu_est.Equals(value) = false) Then
				Me.Onpnu_estChanging(value)
				Me.SendPropertyChanging
				Me._pnu_est = value
				Me.SendPropertyChanged("pnu_est")
				Me.Onpnu_estChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pnu_cod_temporal", DbType:="Int")>  _
	Public Property pnu_cod_temporal() As System.Nullable(Of Integer)
		Get
			Return Me._pnu_cod_temporal
		End Get
		Set
			If (Me._pnu_cod_temporal.Equals(value) = false) Then
				Me.Onpnu_cod_temporalChanging(value)
				Me.SendPropertyChanging
				Me._pnu_cod_temporal = value
				Me.SendPropertyChanged("pnu_cod_temporal")
				Me.Onpnu_cod_temporalChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.P_0063")>  _
Partial Public Class P_0063_cls
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _id_P_0063 As Integer
	
	Private _pnu_des As String
	
	Private _pnu_est As System.Nullable(Of Char)
	
	Private _pnu_atr_007 As String
	
	Private _pnu_cod_temporal As System.Nullable(Of Integer)
	
	Private _deu_cls As EntitySet(Of deu_cls)
	
    #Region "Definiciones de métodos de extensibilidad"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub Onid_P_0063Changing(value As Integer)
    End Sub
    Partial Private Sub Onid_P_0063Changed()
    End Sub
    Partial Private Sub Onpnu_desChanging(value As String)
    End Sub
    Partial Private Sub Onpnu_desChanged()
    End Sub
    Partial Private Sub Onpnu_estChanging(value As System.Nullable(Of Char))
    End Sub
    Partial Private Sub Onpnu_estChanged()
    End Sub
    Partial Private Sub Onpnu_atr_007Changing(value As String)
    End Sub
    Partial Private Sub Onpnu_atr_007Changed()
    End Sub
    Partial Private Sub Onpnu_cod_temporalChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub Onpnu_cod_temporalChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		Me._deu_cls = New EntitySet(Of deu_cls)(AddressOf Me.attach_deu_cls, AddressOf Me.detach_deu_cls)
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_id_P_0063", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property id_P_0063() As Integer
		Get
			Return Me._id_P_0063
		End Get
		Set
			If ((Me._id_P_0063 = value)  _
						= false) Then
				Me.Onid_P_0063Changing(value)
				Me.SendPropertyChanging
				Me._id_P_0063 = value
				Me.SendPropertyChanged("id_P_0063")
				Me.Onid_P_0063Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pnu_des", DbType:="VarChar(80)")>  _
	Public Property pnu_des() As String
		Get
			Return Me._pnu_des
		End Get
		Set
			If (String.Equals(Me._pnu_des, value) = false) Then
				Me.Onpnu_desChanging(value)
				Me.SendPropertyChanging
				Me._pnu_des = value
				Me.SendPropertyChanged("pnu_des")
				Me.Onpnu_desChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pnu_est", DbType:="Char(1)")>  _
	Public Property pnu_est() As System.Nullable(Of Char)
		Get
			Return Me._pnu_est
		End Get
		Set
			If (Me._pnu_est.Equals(value) = false) Then
				Me.Onpnu_estChanging(value)
				Me.SendPropertyChanging
				Me._pnu_est = value
				Me.SendPropertyChanged("pnu_est")
				Me.Onpnu_estChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pnu_atr_007", DbType:="VarChar(50)")>  _
	Public Property pnu_atr_007() As String
		Get
			Return Me._pnu_atr_007
		End Get
		Set
			If (String.Equals(Me._pnu_atr_007, value) = false) Then
				Me.Onpnu_atr_007Changing(value)
				Me.SendPropertyChanging
				Me._pnu_atr_007 = value
				Me.SendPropertyChanged("pnu_atr_007")
				Me.Onpnu_atr_007Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pnu_cod_temporal", DbType:="Int")>  _
	Public Property pnu_cod_temporal() As System.Nullable(Of Integer)
		Get
			Return Me._pnu_cod_temporal
		End Get
		Set
			If (Me._pnu_cod_temporal.Equals(value) = false) Then
				Me.Onpnu_cod_temporalChanging(value)
				Me.SendPropertyChanging
				Me._pnu_cod_temporal = value
				Me.SendPropertyChanged("pnu_cod_temporal")
				Me.Onpnu_cod_temporalChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="P_0063_cls_deu_cls", Storage:="_deu_cls", ThisKey:="id_P_0063", OtherKey:="id_P_0063")>  _
	Public Property deu_cls() As EntitySet(Of deu_cls)
		Get
			Return Me._deu_cls
		End Get
		Set
			Me._deu_cls.Assign(value)
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
	
	Private Sub attach_deu_cls(ByVal entity As deu_cls)
		Me.SendPropertyChanging
		entity.P_0063_cls = Me
	End Sub
	
	Private Sub detach_deu_cls(ByVal entity As deu_cls)
		Me.SendPropertyChanging
		entity.P_0063_cls = Nothing
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.P_0064")>  _
Partial Public Class P_0064_cls
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _id_P_0064 As Integer
	
	Private _pnu_des As String
	
	Private _pnu_est As System.Nullable(Of Char)
	
	Private _pnu_cod_temporal As String
	
	Private _cli_cls As EntitySet(Of cli_cls)
	
	Private _deu_cls As EntitySet(Of deu_cls)
	
    #Region "Definiciones de métodos de extensibilidad"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub Onid_P_0064Changing(value As Integer)
    End Sub
    Partial Private Sub Onid_P_0064Changed()
    End Sub
    Partial Private Sub Onpnu_desChanging(value As String)
    End Sub
    Partial Private Sub Onpnu_desChanged()
    End Sub
    Partial Private Sub Onpnu_estChanging(value As System.Nullable(Of Char))
    End Sub
    Partial Private Sub Onpnu_estChanged()
    End Sub
    Partial Private Sub Onpnu_cod_temporalChanging(value As String)
    End Sub
    Partial Private Sub Onpnu_cod_temporalChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		Me._cli_cls = New EntitySet(Of cli_cls)(AddressOf Me.attach_cli_cls, AddressOf Me.detach_cli_cls)
		Me._deu_cls = New EntitySet(Of deu_cls)(AddressOf Me.attach_deu_cls, AddressOf Me.detach_deu_cls)
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_id_P_0064", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property id_P_0064() As Integer
		Get
			Return Me._id_P_0064
		End Get
		Set
			If ((Me._id_P_0064 = value)  _
						= false) Then
				Me.Onid_P_0064Changing(value)
				Me.SendPropertyChanging
				Me._id_P_0064 = value
				Me.SendPropertyChanged("id_P_0064")
				Me.Onid_P_0064Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pnu_des", DbType:="VarChar(500)")>  _
	Public Property pnu_des() As String
		Get
			Return Me._pnu_des
		End Get
		Set
			If (String.Equals(Me._pnu_des, value) = false) Then
				Me.Onpnu_desChanging(value)
				Me.SendPropertyChanging
				Me._pnu_des = value
				Me.SendPropertyChanged("pnu_des")
				Me.Onpnu_desChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pnu_est", DbType:="Char(1)")>  _
	Public Property pnu_est() As System.Nullable(Of Char)
		Get
			Return Me._pnu_est
		End Get
		Set
			If (Me._pnu_est.Equals(value) = false) Then
				Me.Onpnu_estChanging(value)
				Me.SendPropertyChanging
				Me._pnu_est = value
				Me.SendPropertyChanged("pnu_est")
				Me.Onpnu_estChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pnu_cod_temporal", DbType:="VarChar(50)")>  _
	Public Property pnu_cod_temporal() As String
		Get
			Return Me._pnu_cod_temporal
		End Get
		Set
			If (String.Equals(Me._pnu_cod_temporal, value) = false) Then
				Me.Onpnu_cod_temporalChanging(value)
				Me.SendPropertyChanging
				Me._pnu_cod_temporal = value
				Me.SendPropertyChanged("pnu_cod_temporal")
				Me.Onpnu_cod_temporalChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="P_0064_cls_cli_cls", Storage:="_cli_cls", ThisKey:="id_P_0064", OtherKey:="id_P_0064")>  _
	Public Property cli_cls() As EntitySet(Of cli_cls)
		Get
			Return Me._cli_cls
		End Get
		Set
			Me._cli_cls.Assign(value)
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="P_0064_cls_deu_cls", Storage:="_deu_cls", ThisKey:="id_P_0064", OtherKey:="id_P_0064")>  _
	Public Property deu_cls() As EntitySet(Of deu_cls)
		Get
			Return Me._deu_cls
		End Get
		Set
			Me._deu_cls.Assign(value)
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
	
	Private Sub attach_cli_cls(ByVal entity As cli_cls)
		Me.SendPropertyChanging
		entity.P_0064_cls = Me
	End Sub
	
	Private Sub detach_cli_cls(ByVal entity As cli_cls)
		Me.SendPropertyChanging
		entity.P_0064_cls = Nothing
	End Sub
	
	Private Sub attach_deu_cls(ByVal entity As deu_cls)
		Me.SendPropertyChanging
		entity.P_0064_cls = Me
	End Sub
	
	Private Sub detach_deu_cls(ByVal entity As deu_cls)
		Me.SendPropertyChanging
		entity.P_0064_cls = Nothing
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.P_0065")>  _
Partial Public Class P_0065_cls
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _id_P_0065 As Integer
	
	Private _pnu_des As String
	
	Private _pnu_est As System.Nullable(Of Char)
	
	Private _pnu_atr_002 As String
	
	Private _pnu_cod_temporal As System.Nullable(Of Integer)
	
	Private _ctr_cls As EntitySet(Of ctr_cls)
	
	Private _dsi_cls As EntitySet(Of dsi_cls)
	
    #Region "Definiciones de métodos de extensibilidad"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub Onid_P_0065Changing(value As Integer)
    End Sub
    Partial Private Sub Onid_P_0065Changed()
    End Sub
    Partial Private Sub Onpnu_desChanging(value As String)
    End Sub
    Partial Private Sub Onpnu_desChanged()
    End Sub
    Partial Private Sub Onpnu_estChanging(value As System.Nullable(Of Char))
    End Sub
    Partial Private Sub Onpnu_estChanged()
    End Sub
    Partial Private Sub Onpnu_atr_002Changing(value As String)
    End Sub
    Partial Private Sub Onpnu_atr_002Changed()
    End Sub
    Partial Private Sub Onpnu_cod_temporalChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub Onpnu_cod_temporalChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		Me._ctr_cls = New EntitySet(Of ctr_cls)(AddressOf Me.attach_ctr_cls, AddressOf Me.detach_ctr_cls)
		Me._dsi_cls = New EntitySet(Of dsi_cls)(AddressOf Me.attach_dsi_cls, AddressOf Me.detach_dsi_cls)
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_id_P_0065", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property id_P_0065() As Integer
		Get
			Return Me._id_P_0065
		End Get
		Set
			If ((Me._id_P_0065 = value)  _
						= false) Then
				Me.Onid_P_0065Changing(value)
				Me.SendPropertyChanging
				Me._id_P_0065 = value
				Me.SendPropertyChanged("id_P_0065")
				Me.Onid_P_0065Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pnu_des", DbType:="VarChar(80)")>  _
	Public Property pnu_des() As String
		Get
			Return Me._pnu_des
		End Get
		Set
			If (String.Equals(Me._pnu_des, value) = false) Then
				Me.Onpnu_desChanging(value)
				Me.SendPropertyChanging
				Me._pnu_des = value
				Me.SendPropertyChanged("pnu_des")
				Me.Onpnu_desChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pnu_est", DbType:="Char(1)")>  _
	Public Property pnu_est() As System.Nullable(Of Char)
		Get
			Return Me._pnu_est
		End Get
		Set
			If (Me._pnu_est.Equals(value) = false) Then
				Me.Onpnu_estChanging(value)
				Me.SendPropertyChanging
				Me._pnu_est = value
				Me.SendPropertyChanged("pnu_est")
				Me.Onpnu_estChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pnu_atr_002", DbType:="VarChar(50)")>  _
	Public Property pnu_atr_002() As String
		Get
			Return Me._pnu_atr_002
		End Get
		Set
			If (String.Equals(Me._pnu_atr_002, value) = false) Then
				Me.Onpnu_atr_002Changing(value)
				Me.SendPropertyChanging
				Me._pnu_atr_002 = value
				Me.SendPropertyChanged("pnu_atr_002")
				Me.Onpnu_atr_002Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pnu_cod_temporal", DbType:="Int")>  _
	Public Property pnu_cod_temporal() As System.Nullable(Of Integer)
		Get
			Return Me._pnu_cod_temporal
		End Get
		Set
			If (Me._pnu_cod_temporal.Equals(value) = false) Then
				Me.Onpnu_cod_temporalChanging(value)
				Me.SendPropertyChanging
				Me._pnu_cod_temporal = value
				Me.SendPropertyChanged("pnu_cod_temporal")
				Me.Onpnu_cod_temporalChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="P_0065_cls_ctr_cls", Storage:="_ctr_cls", ThisKey:="id_P_0065", OtherKey:="id_P_0065")>  _
	Public Property ctr_cls() As EntitySet(Of ctr_cls)
		Get
			Return Me._ctr_cls
		End Get
		Set
			Me._ctr_cls.Assign(value)
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="P_0065_cls_dsi_cls", Storage:="_dsi_cls", ThisKey:="id_P_0065", OtherKey:="id_P_0065")>  _
	Public Property dsi_cls() As EntitySet(Of dsi_cls)
		Get
			Return Me._dsi_cls
		End Get
		Set
			Me._dsi_cls.Assign(value)
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
	
	Private Sub attach_ctr_cls(ByVal entity As ctr_cls)
		Me.SendPropertyChanging
		entity.P_0065_cls = Me
	End Sub
	
	Private Sub detach_ctr_cls(ByVal entity As ctr_cls)
		Me.SendPropertyChanging
		entity.P_0065_cls = Nothing
	End Sub
	
	Private Sub attach_dsi_cls(ByVal entity As dsi_cls)
		Me.SendPropertyChanging
		entity.P_0065_cls = Me
	End Sub
	
	Private Sub detach_dsi_cls(ByVal entity As dsi_cls)
		Me.SendPropertyChanging
		entity.P_0065_cls = Nothing
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.P_0067")>  _
Partial Public Class P_0067_cls
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _id_P_0067 As Integer
	
	Private _pnu_des As String
	
	Private _pnu_est As System.Nullable(Of Char)
	
	Private _pnu_cod_temporal As System.Nullable(Of Integer)
	
	Private _cli_cls As EntitySet(Of cli_cls)
	
    #Region "Definiciones de métodos de extensibilidad"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub Onid_P_0067Changing(value As Integer)
    End Sub
    Partial Private Sub Onid_P_0067Changed()
    End Sub
    Partial Private Sub Onpnu_desChanging(value As String)
    End Sub
    Partial Private Sub Onpnu_desChanged()
    End Sub
    Partial Private Sub Onpnu_estChanging(value As System.Nullable(Of Char))
    End Sub
    Partial Private Sub Onpnu_estChanged()
    End Sub
    Partial Private Sub Onpnu_cod_temporalChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub Onpnu_cod_temporalChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		Me._cli_cls = New EntitySet(Of cli_cls)(AddressOf Me.attach_cli_cls, AddressOf Me.detach_cli_cls)
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_id_P_0067", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property id_P_0067() As Integer
		Get
			Return Me._id_P_0067
		End Get
		Set
			If ((Me._id_P_0067 = value)  _
						= false) Then
				Me.Onid_P_0067Changing(value)
				Me.SendPropertyChanging
				Me._id_P_0067 = value
				Me.SendPropertyChanged("id_P_0067")
				Me.Onid_P_0067Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pnu_des", DbType:="VarChar(80)")>  _
	Public Property pnu_des() As String
		Get
			Return Me._pnu_des
		End Get
		Set
			If (String.Equals(Me._pnu_des, value) = false) Then
				Me.Onpnu_desChanging(value)
				Me.SendPropertyChanging
				Me._pnu_des = value
				Me.SendPropertyChanged("pnu_des")
				Me.Onpnu_desChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pnu_est", DbType:="Char(1)")>  _
	Public Property pnu_est() As System.Nullable(Of Char)
		Get
			Return Me._pnu_est
		End Get
		Set
			If (Me._pnu_est.Equals(value) = false) Then
				Me.Onpnu_estChanging(value)
				Me.SendPropertyChanging
				Me._pnu_est = value
				Me.SendPropertyChanged("pnu_est")
				Me.Onpnu_estChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pnu_cod_temporal", DbType:="Int")>  _
	Public Property pnu_cod_temporal() As System.Nullable(Of Integer)
		Get
			Return Me._pnu_cod_temporal
		End Get
		Set
			If (Me._pnu_cod_temporal.Equals(value) = false) Then
				Me.Onpnu_cod_temporalChanging(value)
				Me.SendPropertyChanging
				Me._pnu_cod_temporal = value
				Me.SendPropertyChanged("pnu_cod_temporal")
				Me.Onpnu_cod_temporalChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="P_0067_cls_cli_cls", Storage:="_cli_cls", ThisKey:="id_P_0067", OtherKey:="id_P_0067")>  _
	Public Property cli_cls() As EntitySet(Of cli_cls)
		Get
			Return Me._cli_cls
		End Get
		Set
			Me._cli_cls.Assign(value)
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
	
	Private Sub attach_cli_cls(ByVal entity As cli_cls)
		Me.SendPropertyChanging
		entity.P_0067_cls = Me
	End Sub
	
	Private Sub detach_cli_cls(ByVal entity As cli_cls)
		Me.SendPropertyChanging
		entity.P_0067_cls = Nothing
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.P_0068")>  _
Partial Public Class P_0068_cls
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _id_P_0068 As Integer
	
	Private _pnu_des As String
	
	Private _pnu_est As System.Nullable(Of Char)
	
	Private _pnu_cod_temporal As System.Nullable(Of Integer)
	
	Private _cli_cls As EntitySet(Of cli_cls)
	
    #Region "Definiciones de métodos de extensibilidad"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub Onid_P_0068Changing(value As Integer)
    End Sub
    Partial Private Sub Onid_P_0068Changed()
    End Sub
    Partial Private Sub Onpnu_desChanging(value As String)
    End Sub
    Partial Private Sub Onpnu_desChanged()
    End Sub
    Partial Private Sub Onpnu_estChanging(value As System.Nullable(Of Char))
    End Sub
    Partial Private Sub Onpnu_estChanged()
    End Sub
    Partial Private Sub Onpnu_cod_temporalChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub Onpnu_cod_temporalChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		Me._cli_cls = New EntitySet(Of cli_cls)(AddressOf Me.attach_cli_cls, AddressOf Me.detach_cli_cls)
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_id_P_0068", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property id_P_0068() As Integer
		Get
			Return Me._id_P_0068
		End Get
		Set
			If ((Me._id_P_0068 = value)  _
						= false) Then
				Me.Onid_P_0068Changing(value)
				Me.SendPropertyChanging
				Me._id_P_0068 = value
				Me.SendPropertyChanged("id_P_0068")
				Me.Onid_P_0068Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pnu_des", DbType:="VarChar(80)")>  _
	Public Property pnu_des() As String
		Get
			Return Me._pnu_des
		End Get
		Set
			If (String.Equals(Me._pnu_des, value) = false) Then
				Me.Onpnu_desChanging(value)
				Me.SendPropertyChanging
				Me._pnu_des = value
				Me.SendPropertyChanged("pnu_des")
				Me.Onpnu_desChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pnu_est", DbType:="Char(1)")>  _
	Public Property pnu_est() As System.Nullable(Of Char)
		Get
			Return Me._pnu_est
		End Get
		Set
			If (Me._pnu_est.Equals(value) = false) Then
				Me.Onpnu_estChanging(value)
				Me.SendPropertyChanging
				Me._pnu_est = value
				Me.SendPropertyChanged("pnu_est")
				Me.Onpnu_estChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pnu_cod_temporal", DbType:="Int")>  _
	Public Property pnu_cod_temporal() As System.Nullable(Of Integer)
		Get
			Return Me._pnu_cod_temporal
		End Get
		Set
			If (Me._pnu_cod_temporal.Equals(value) = false) Then
				Me.Onpnu_cod_temporalChanging(value)
				Me.SendPropertyChanging
				Me._pnu_cod_temporal = value
				Me.SendPropertyChanged("pnu_cod_temporal")
				Me.Onpnu_cod_temporalChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="P_0068_cls_cli_cls", Storage:="_cli_cls", ThisKey:="id_P_0068", OtherKey:="id_P_0068")>  _
	Public Property cli_cls() As EntitySet(Of cli_cls)
		Get
			Return Me._cli_cls
		End Get
		Set
			Me._cli_cls.Assign(value)
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
	
	Private Sub attach_cli_cls(ByVal entity As cli_cls)
		Me.SendPropertyChanging
		entity.P_0068_cls = Me
	End Sub
	
	Private Sub detach_cli_cls(ByVal entity As cli_cls)
		Me.SendPropertyChanging
		entity.P_0068_cls = Nothing
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.P_0069")>  _
Partial Public Class P_0069_cls
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _id_P_0069 As Integer
	
	Private _pnu_des As String
	
	Private _pnu_est As System.Nullable(Of Char)
	
	Private _pnu_cod_temporal As System.Nullable(Of Integer)
	
	Private _cfc_cls As EntitySet(Of cfc_cls)
	
    #Region "Definiciones de métodos de extensibilidad"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub Onid_P_0069Changing(value As Integer)
    End Sub
    Partial Private Sub Onid_P_0069Changed()
    End Sub
    Partial Private Sub Onpnu_desChanging(value As String)
    End Sub
    Partial Private Sub Onpnu_desChanged()
    End Sub
    Partial Private Sub Onpnu_estChanging(value As System.Nullable(Of Char))
    End Sub
    Partial Private Sub Onpnu_estChanged()
    End Sub
    Partial Private Sub Onpnu_cod_temporalChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub Onpnu_cod_temporalChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		Me._cfc_cls = New EntitySet(Of cfc_cls)(AddressOf Me.attach_cfc_cls, AddressOf Me.detach_cfc_cls)
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_id_P_0069", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property id_P_0069() As Integer
		Get
			Return Me._id_P_0069
		End Get
		Set
			If ((Me._id_P_0069 = value)  _
						= false) Then
				Me.Onid_P_0069Changing(value)
				Me.SendPropertyChanging
				Me._id_P_0069 = value
				Me.SendPropertyChanged("id_P_0069")
				Me.Onid_P_0069Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pnu_des", DbType:="VarChar(80)")>  _
	Public Property pnu_des() As String
		Get
			Return Me._pnu_des
		End Get
		Set
			If (String.Equals(Me._pnu_des, value) = false) Then
				Me.Onpnu_desChanging(value)
				Me.SendPropertyChanging
				Me._pnu_des = value
				Me.SendPropertyChanged("pnu_des")
				Me.Onpnu_desChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pnu_est", DbType:="Char(1)")>  _
	Public Property pnu_est() As System.Nullable(Of Char)
		Get
			Return Me._pnu_est
		End Get
		Set
			If (Me._pnu_est.Equals(value) = false) Then
				Me.Onpnu_estChanging(value)
				Me.SendPropertyChanging
				Me._pnu_est = value
				Me.SendPropertyChanged("pnu_est")
				Me.Onpnu_estChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pnu_cod_temporal", DbType:="Int")>  _
	Public Property pnu_cod_temporal() As System.Nullable(Of Integer)
		Get
			Return Me._pnu_cod_temporal
		End Get
		Set
			If (Me._pnu_cod_temporal.Equals(value) = false) Then
				Me.Onpnu_cod_temporalChanging(value)
				Me.SendPropertyChanging
				Me._pnu_cod_temporal = value
				Me.SendPropertyChanged("pnu_cod_temporal")
				Me.Onpnu_cod_temporalChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="P_0069_cls_cfc_cls", Storage:="_cfc_cls", ThisKey:="id_P_0069", OtherKey:="id_P_0069")>  _
	Public Property cfc_cls() As EntitySet(Of cfc_cls)
		Get
			Return Me._cfc_cls
		End Get
		Set
			Me._cfc_cls.Assign(value)
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
	
	Private Sub attach_cfc_cls(ByVal entity As cfc_cls)
		Me.SendPropertyChanging
		entity.P_0069_cls = Me
	End Sub
	
	Private Sub detach_cfc_cls(ByVal entity As cfc_cls)
		Me.SendPropertyChanging
		entity.P_0069_cls = Nothing
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.P_007")>  _
Partial Public Class P_007_cls
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _id_P_007 As Integer
	
	Private _pnu_des As String
	
	Private _pnu_est As System.Nullable(Of Char)
	
	Private _pnu_cod_temporal As System.Nullable(Of Integer)
	
	Private _cli_cls As EntitySet(Of cli_cls)
	
    #Region "Definiciones de métodos de extensibilidad"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub Onid_P_007Changing(value As Integer)
    End Sub
    Partial Private Sub Onid_P_007Changed()
    End Sub
    Partial Private Sub Onpnu_desChanging(value As String)
    End Sub
    Partial Private Sub Onpnu_desChanged()
    End Sub
    Partial Private Sub Onpnu_estChanging(value As System.Nullable(Of Char))
    End Sub
    Partial Private Sub Onpnu_estChanged()
    End Sub
    Partial Private Sub Onpnu_cod_temporalChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub Onpnu_cod_temporalChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		Me._cli_cls = New EntitySet(Of cli_cls)(AddressOf Me.attach_cli_cls, AddressOf Me.detach_cli_cls)
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_id_P_007", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property id_P_007() As Integer
		Get
			Return Me._id_P_007
		End Get
		Set
			If ((Me._id_P_007 = value)  _
						= false) Then
				Me.Onid_P_007Changing(value)
				Me.SendPropertyChanging
				Me._id_P_007 = value
				Me.SendPropertyChanged("id_P_007")
				Me.Onid_P_007Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pnu_des", DbType:="VarChar(80)")>  _
	Public Property pnu_des() As String
		Get
			Return Me._pnu_des
		End Get
		Set
			If (String.Equals(Me._pnu_des, value) = false) Then
				Me.Onpnu_desChanging(value)
				Me.SendPropertyChanging
				Me._pnu_des = value
				Me.SendPropertyChanged("pnu_des")
				Me.Onpnu_desChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pnu_est", DbType:="Char(1)")>  _
	Public Property pnu_est() As System.Nullable(Of Char)
		Get
			Return Me._pnu_est
		End Get
		Set
			If (Me._pnu_est.Equals(value) = false) Then
				Me.Onpnu_estChanging(value)
				Me.SendPropertyChanging
				Me._pnu_est = value
				Me.SendPropertyChanged("pnu_est")
				Me.Onpnu_estChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pnu_cod_temporal", DbType:="Int")>  _
	Public Property pnu_cod_temporal() As System.Nullable(Of Integer)
		Get
			Return Me._pnu_cod_temporal
		End Get
		Set
			If (Me._pnu_cod_temporal.Equals(value) = false) Then
				Me.Onpnu_cod_temporalChanging(value)
				Me.SendPropertyChanging
				Me._pnu_cod_temporal = value
				Me.SendPropertyChanged("pnu_cod_temporal")
				Me.Onpnu_cod_temporalChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="P_007_cls_cli_cls", Storage:="_cli_cls", ThisKey:="id_P_007", OtherKey:="id_P_007")>  _
	Public Property cli_cls() As EntitySet(Of cli_cls)
		Get
			Return Me._cli_cls
		End Get
		Set
			Me._cli_cls.Assign(value)
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
	
	Private Sub attach_cli_cls(ByVal entity As cli_cls)
		Me.SendPropertyChanging
		entity.P_007_cls = Me
	End Sub
	
	Private Sub detach_cli_cls(ByVal entity As cli_cls)
		Me.SendPropertyChanging
		entity.P_007_cls = Nothing
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.P_0070")>  _
Partial Public Class P_0070_cls
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _id_P_0070 As Integer
	
	Private _pnu_des As String
	
	Private _pnu_est As System.Nullable(Of Char)
	
	Private _pnu_cod_temporal As System.Nullable(Of Integer)
	
	Private _ope_cls As EntitySet(Of ope_cls)
	
    #Region "Definiciones de métodos de extensibilidad"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub Onid_P_0070Changing(value As Integer)
    End Sub
    Partial Private Sub Onid_P_0070Changed()
    End Sub
    Partial Private Sub Onpnu_desChanging(value As String)
    End Sub
    Partial Private Sub Onpnu_desChanged()
    End Sub
    Partial Private Sub Onpnu_estChanging(value As System.Nullable(Of Char))
    End Sub
    Partial Private Sub Onpnu_estChanged()
    End Sub
    Partial Private Sub Onpnu_cod_temporalChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub Onpnu_cod_temporalChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		Me._ope_cls = New EntitySet(Of ope_cls)(AddressOf Me.attach_ope_cls, AddressOf Me.detach_ope_cls)
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_id_P_0070", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property id_P_0070() As Integer
		Get
			Return Me._id_P_0070
		End Get
		Set
			If ((Me._id_P_0070 = value)  _
						= false) Then
				Me.Onid_P_0070Changing(value)
				Me.SendPropertyChanging
				Me._id_P_0070 = value
				Me.SendPropertyChanged("id_P_0070")
				Me.Onid_P_0070Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pnu_des", DbType:="VarChar(80)")>  _
	Public Property pnu_des() As String
		Get
			Return Me._pnu_des
		End Get
		Set
			If (String.Equals(Me._pnu_des, value) = false) Then
				Me.Onpnu_desChanging(value)
				Me.SendPropertyChanging
				Me._pnu_des = value
				Me.SendPropertyChanged("pnu_des")
				Me.Onpnu_desChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pnu_est", DbType:="Char(1)")>  _
	Public Property pnu_est() As System.Nullable(Of Char)
		Get
			Return Me._pnu_est
		End Get
		Set
			If (Me._pnu_est.Equals(value) = false) Then
				Me.Onpnu_estChanging(value)
				Me.SendPropertyChanging
				Me._pnu_est = value
				Me.SendPropertyChanged("pnu_est")
				Me.Onpnu_estChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pnu_cod_temporal", DbType:="Int")>  _
	Public Property pnu_cod_temporal() As System.Nullable(Of Integer)
		Get
			Return Me._pnu_cod_temporal
		End Get
		Set
			If (Me._pnu_cod_temporal.Equals(value) = false) Then
				Me.Onpnu_cod_temporalChanging(value)
				Me.SendPropertyChanging
				Me._pnu_cod_temporal = value
				Me.SendPropertyChanged("pnu_cod_temporal")
				Me.Onpnu_cod_temporalChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="P_0070_cls_ope_cls", Storage:="_ope_cls", ThisKey:="id_P_0070", OtherKey:="id_P_0070")>  _
	Public Property ope_cls() As EntitySet(Of ope_cls)
		Get
			Return Me._ope_cls
		End Get
		Set
			Me._ope_cls.Assign(value)
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
	
	Private Sub attach_ope_cls(ByVal entity As ope_cls)
		Me.SendPropertyChanging
		entity.P_0070_cls = Me
	End Sub
	
	Private Sub detach_ope_cls(ByVal entity As ope_cls)
		Me.SendPropertyChanging
		entity.P_0070_cls = Nothing
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.P_0071")>  _
Partial Public Class P_0071_cls
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _id_P_0071 As Integer
	
	Private _pnu_des As String
	
	Private _pnu_est As System.Nullable(Of Char)
	
	Private _pnu_cod_temporal As System.Nullable(Of Integer)
	
    #Region "Definiciones de métodos de extensibilidad"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub Onid_P_0071Changing(value As Integer)
    End Sub
    Partial Private Sub Onid_P_0071Changed()
    End Sub
    Partial Private Sub Onpnu_desChanging(value As String)
    End Sub
    Partial Private Sub Onpnu_desChanged()
    End Sub
    Partial Private Sub Onpnu_estChanging(value As System.Nullable(Of Char))
    End Sub
    Partial Private Sub Onpnu_estChanged()
    End Sub
    Partial Private Sub Onpnu_cod_temporalChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub Onpnu_cod_temporalChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_id_P_0071", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property id_P_0071() As Integer
		Get
			Return Me._id_P_0071
		End Get
		Set
			If ((Me._id_P_0071 = value)  _
						= false) Then
				Me.Onid_P_0071Changing(value)
				Me.SendPropertyChanging
				Me._id_P_0071 = value
				Me.SendPropertyChanged("id_P_0071")
				Me.Onid_P_0071Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pnu_des", DbType:="VarChar(80)")>  _
	Public Property pnu_des() As String
		Get
			Return Me._pnu_des
		End Get
		Set
			If (String.Equals(Me._pnu_des, value) = false) Then
				Me.Onpnu_desChanging(value)
				Me.SendPropertyChanging
				Me._pnu_des = value
				Me.SendPropertyChanged("pnu_des")
				Me.Onpnu_desChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pnu_est", DbType:="Char(1)")>  _
	Public Property pnu_est() As System.Nullable(Of Char)
		Get
			Return Me._pnu_est
		End Get
		Set
			If (Me._pnu_est.Equals(value) = false) Then
				Me.Onpnu_estChanging(value)
				Me.SendPropertyChanging
				Me._pnu_est = value
				Me.SendPropertyChanged("pnu_est")
				Me.Onpnu_estChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pnu_cod_temporal", DbType:="Int")>  _
	Public Property pnu_cod_temporal() As System.Nullable(Of Integer)
		Get
			Return Me._pnu_cod_temporal
		End Get
		Set
			If (Me._pnu_cod_temporal.Equals(value) = false) Then
				Me.Onpnu_cod_temporalChanging(value)
				Me.SendPropertyChanging
				Me._pnu_cod_temporal = value
				Me.SendPropertyChanged("pnu_cod_temporal")
				Me.Onpnu_cod_temporalChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.P_0072")>  _
Partial Public Class P_0072_cls
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _id_P_0072 As Integer
	
	Private _pnu_des As String
	
	Private _pnu_est As System.Nullable(Of Char)
	
	Private _pnu_cod_temporal As System.Nullable(Of Integer)
	
    #Region "Definiciones de métodos de extensibilidad"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub Onid_P_0072Changing(value As Integer)
    End Sub
    Partial Private Sub Onid_P_0072Changed()
    End Sub
    Partial Private Sub Onpnu_desChanging(value As String)
    End Sub
    Partial Private Sub Onpnu_desChanged()
    End Sub
    Partial Private Sub Onpnu_estChanging(value As System.Nullable(Of Char))
    End Sub
    Partial Private Sub Onpnu_estChanged()
    End Sub
    Partial Private Sub Onpnu_cod_temporalChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub Onpnu_cod_temporalChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_id_P_0072", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property id_P_0072() As Integer
		Get
			Return Me._id_P_0072
		End Get
		Set
			If ((Me._id_P_0072 = value)  _
						= false) Then
				Me.Onid_P_0072Changing(value)
				Me.SendPropertyChanging
				Me._id_P_0072 = value
				Me.SendPropertyChanged("id_P_0072")
				Me.Onid_P_0072Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pnu_des", DbType:="VarChar(80)")>  _
	Public Property pnu_des() As String
		Get
			Return Me._pnu_des
		End Get
		Set
			If (String.Equals(Me._pnu_des, value) = false) Then
				Me.Onpnu_desChanging(value)
				Me.SendPropertyChanging
				Me._pnu_des = value
				Me.SendPropertyChanged("pnu_des")
				Me.Onpnu_desChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pnu_est", DbType:="Char(1)")>  _
	Public Property pnu_est() As System.Nullable(Of Char)
		Get
			Return Me._pnu_est
		End Get
		Set
			If (Me._pnu_est.Equals(value) = false) Then
				Me.Onpnu_estChanging(value)
				Me.SendPropertyChanging
				Me._pnu_est = value
				Me.SendPropertyChanged("pnu_est")
				Me.Onpnu_estChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pnu_cod_temporal", DbType:="Int")>  _
	Public Property pnu_cod_temporal() As System.Nullable(Of Integer)
		Get
			Return Me._pnu_cod_temporal
		End Get
		Set
			If (Me._pnu_cod_temporal.Equals(value) = false) Then
				Me.Onpnu_cod_temporalChanging(value)
				Me.SendPropertyChanging
				Me._pnu_cod_temporal = value
				Me.SendPropertyChanged("pnu_cod_temporal")
				Me.Onpnu_cod_temporalChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.P_0073")>  _
Partial Public Class P_0073_cls
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _id_P_0073 As Integer
	
	Private _pnu_des As String
	
	Private _pnu_est As System.Nullable(Of Char)
	
	Private _pnu_cod_temporal As System.Nullable(Of Integer)
	
    #Region "Definiciones de métodos de extensibilidad"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub Onid_P_0073Changing(value As Integer)
    End Sub
    Partial Private Sub Onid_P_0073Changed()
    End Sub
    Partial Private Sub Onpnu_desChanging(value As String)
    End Sub
    Partial Private Sub Onpnu_desChanged()
    End Sub
    Partial Private Sub Onpnu_estChanging(value As System.Nullable(Of Char))
    End Sub
    Partial Private Sub Onpnu_estChanged()
    End Sub
    Partial Private Sub Onpnu_cod_temporalChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub Onpnu_cod_temporalChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_id_P_0073", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property id_P_0073() As Integer
		Get
			Return Me._id_P_0073
		End Get
		Set
			If ((Me._id_P_0073 = value)  _
						= false) Then
				Me.Onid_P_0073Changing(value)
				Me.SendPropertyChanging
				Me._id_P_0073 = value
				Me.SendPropertyChanged("id_P_0073")
				Me.Onid_P_0073Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pnu_des", DbType:="VarChar(80)")>  _
	Public Property pnu_des() As String
		Get
			Return Me._pnu_des
		End Get
		Set
			If (String.Equals(Me._pnu_des, value) = false) Then
				Me.Onpnu_desChanging(value)
				Me.SendPropertyChanging
				Me._pnu_des = value
				Me.SendPropertyChanged("pnu_des")
				Me.Onpnu_desChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pnu_est", DbType:="Char(1)")>  _
	Public Property pnu_est() As System.Nullable(Of Char)
		Get
			Return Me._pnu_est
		End Get
		Set
			If (Me._pnu_est.Equals(value) = false) Then
				Me.Onpnu_estChanging(value)
				Me.SendPropertyChanging
				Me._pnu_est = value
				Me.SendPropertyChanged("pnu_est")
				Me.Onpnu_estChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pnu_cod_temporal", DbType:="Int")>  _
	Public Property pnu_cod_temporal() As System.Nullable(Of Integer)
		Get
			Return Me._pnu_cod_temporal
		End Get
		Set
			If (Me._pnu_cod_temporal.Equals(value) = false) Then
				Me.Onpnu_cod_temporalChanging(value)
				Me.SendPropertyChanging
				Me._pnu_cod_temporal = value
				Me.SendPropertyChanged("pnu_cod_temporal")
				Me.Onpnu_cod_temporalChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.P_0074")>  _
Partial Public Class P_0074_cls
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _id_P_0074 As Integer
	
	Private _pnu_des As String
	
	Private _pnu_est As System.Nullable(Of Char)
	
	Private _pnu_cod_temporal As System.Nullable(Of Integer)
	
    #Region "Definiciones de métodos de extensibilidad"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub Onid_P_0074Changing(value As Integer)
    End Sub
    Partial Private Sub Onid_P_0074Changed()
    End Sub
    Partial Private Sub Onpnu_desChanging(value As String)
    End Sub
    Partial Private Sub Onpnu_desChanged()
    End Sub
    Partial Private Sub Onpnu_estChanging(value As System.Nullable(Of Char))
    End Sub
    Partial Private Sub Onpnu_estChanged()
    End Sub
    Partial Private Sub Onpnu_cod_temporalChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub Onpnu_cod_temporalChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_id_P_0074", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property id_P_0074() As Integer
		Get
			Return Me._id_P_0074
		End Get
		Set
			If ((Me._id_P_0074 = value)  _
						= false) Then
				Me.Onid_P_0074Changing(value)
				Me.SendPropertyChanging
				Me._id_P_0074 = value
				Me.SendPropertyChanged("id_P_0074")
				Me.Onid_P_0074Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pnu_des", DbType:="VarChar(80)")>  _
	Public Property pnu_des() As String
		Get
			Return Me._pnu_des
		End Get
		Set
			If (String.Equals(Me._pnu_des, value) = false) Then
				Me.Onpnu_desChanging(value)
				Me.SendPropertyChanging
				Me._pnu_des = value
				Me.SendPropertyChanged("pnu_des")
				Me.Onpnu_desChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pnu_est", DbType:="Char(1)")>  _
	Public Property pnu_est() As System.Nullable(Of Char)
		Get
			Return Me._pnu_est
		End Get
		Set
			If (Me._pnu_est.Equals(value) = false) Then
				Me.Onpnu_estChanging(value)
				Me.SendPropertyChanging
				Me._pnu_est = value
				Me.SendPropertyChanged("pnu_est")
				Me.Onpnu_estChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pnu_cod_temporal", DbType:="Int")>  _
	Public Property pnu_cod_temporal() As System.Nullable(Of Integer)
		Get
			Return Me._pnu_cod_temporal
		End Get
		Set
			If (Me._pnu_cod_temporal.Equals(value) = false) Then
				Me.Onpnu_cod_temporalChanging(value)
				Me.SendPropertyChanging
				Me._pnu_cod_temporal = value
				Me.SendPropertyChanged("pnu_cod_temporal")
				Me.Onpnu_cod_temporalChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.P_0075")>  _
Partial Public Class P_0075_cls
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _id_P_0075 As Integer
	
	Private _pnu_des As String
	
	Private _pnu_est As System.Nullable(Of Char)
	
	Private _pnu_cod_temporal As System.Nullable(Of Integer)
	
    #Region "Definiciones de métodos de extensibilidad"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub Onid_P_0075Changing(value As Integer)
    End Sub
    Partial Private Sub Onid_P_0075Changed()
    End Sub
    Partial Private Sub Onpnu_desChanging(value As String)
    End Sub
    Partial Private Sub Onpnu_desChanged()
    End Sub
    Partial Private Sub Onpnu_estChanging(value As System.Nullable(Of Char))
    End Sub
    Partial Private Sub Onpnu_estChanged()
    End Sub
    Partial Private Sub Onpnu_cod_temporalChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub Onpnu_cod_temporalChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_id_P_0075", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property id_P_0075() As Integer
		Get
			Return Me._id_P_0075
		End Get
		Set
			If ((Me._id_P_0075 = value)  _
						= false) Then
				Me.Onid_P_0075Changing(value)
				Me.SendPropertyChanging
				Me._id_P_0075 = value
				Me.SendPropertyChanged("id_P_0075")
				Me.Onid_P_0075Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pnu_des", DbType:="VarChar(80)")>  _
	Public Property pnu_des() As String
		Get
			Return Me._pnu_des
		End Get
		Set
			If (String.Equals(Me._pnu_des, value) = false) Then
				Me.Onpnu_desChanging(value)
				Me.SendPropertyChanging
				Me._pnu_des = value
				Me.SendPropertyChanged("pnu_des")
				Me.Onpnu_desChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pnu_est", DbType:="Char(1)")>  _
	Public Property pnu_est() As System.Nullable(Of Char)
		Get
			Return Me._pnu_est
		End Get
		Set
			If (Me._pnu_est.Equals(value) = false) Then
				Me.Onpnu_estChanging(value)
				Me.SendPropertyChanging
				Me._pnu_est = value
				Me.SendPropertyChanged("pnu_est")
				Me.Onpnu_estChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pnu_cod_temporal", DbType:="Int")>  _
	Public Property pnu_cod_temporal() As System.Nullable(Of Integer)
		Get
			Return Me._pnu_cod_temporal
		End Get
		Set
			If (Me._pnu_cod_temporal.Equals(value) = false) Then
				Me.Onpnu_cod_temporalChanging(value)
				Me.SendPropertyChanging
				Me._pnu_cod_temporal = value
				Me.SendPropertyChanged("pnu_cod_temporal")
				Me.Onpnu_cod_temporalChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.P_0076")>  _
Partial Public Class P_0076_cls
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _id_P_0076 As Integer
	
	Private _pnu_des As String
	
	Private _pnu_est As System.Nullable(Of Char)
	
	Private _pnu_atr_003 As String
	
	Private _cli_cls As EntitySet(Of cli_cls)
	
	Private _deu_cls As EntitySet(Of deu_cls)
	
    #Region "Definiciones de métodos de extensibilidad"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub Onid_P_0076Changing(value As Integer)
    End Sub
    Partial Private Sub Onid_P_0076Changed()
    End Sub
    Partial Private Sub Onpnu_desChanging(value As String)
    End Sub
    Partial Private Sub Onpnu_desChanged()
    End Sub
    Partial Private Sub Onpnu_estChanging(value As System.Nullable(Of Char))
    End Sub
    Partial Private Sub Onpnu_estChanged()
    End Sub
    Partial Private Sub Onpnu_atr_003Changing(value As String)
    End Sub
    Partial Private Sub Onpnu_atr_003Changed()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		Me._cli_cls = New EntitySet(Of cli_cls)(AddressOf Me.attach_cli_cls, AddressOf Me.detach_cli_cls)
		Me._deu_cls = New EntitySet(Of deu_cls)(AddressOf Me.attach_deu_cls, AddressOf Me.detach_deu_cls)
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_id_P_0076", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property id_P_0076() As Integer
		Get
			Return Me._id_P_0076
		End Get
		Set
			If ((Me._id_P_0076 = value)  _
						= false) Then
				Me.Onid_P_0076Changing(value)
				Me.SendPropertyChanging
				Me._id_P_0076 = value
				Me.SendPropertyChanged("id_P_0076")
				Me.Onid_P_0076Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pnu_des", DbType:="VarChar(80)")>  _
	Public Property pnu_des() As String
		Get
			Return Me._pnu_des
		End Get
		Set
			If (String.Equals(Me._pnu_des, value) = false) Then
				Me.Onpnu_desChanging(value)
				Me.SendPropertyChanging
				Me._pnu_des = value
				Me.SendPropertyChanged("pnu_des")
				Me.Onpnu_desChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pnu_est", DbType:="Char(1)")>  _
	Public Property pnu_est() As System.Nullable(Of Char)
		Get
			Return Me._pnu_est
		End Get
		Set
			If (Me._pnu_est.Equals(value) = false) Then
				Me.Onpnu_estChanging(value)
				Me.SendPropertyChanging
				Me._pnu_est = value
				Me.SendPropertyChanged("pnu_est")
				Me.Onpnu_estChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pnu_atr_003", DbType:="VarChar(255)")>  _
	Public Property pnu_atr_003() As String
		Get
			Return Me._pnu_atr_003
		End Get
		Set
			If (String.Equals(Me._pnu_atr_003, value) = false) Then
				Me.Onpnu_atr_003Changing(value)
				Me.SendPropertyChanging
				Me._pnu_atr_003 = value
				Me.SendPropertyChanged("pnu_atr_003")
				Me.Onpnu_atr_003Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="P_0076_cls_cli_cls", Storage:="_cli_cls", ThisKey:="id_P_0076", OtherKey:="id_P_0076")>  _
	Public Property cli_cls() As EntitySet(Of cli_cls)
		Get
			Return Me._cli_cls
		End Get
		Set
			Me._cli_cls.Assign(value)
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="P_0076_cls_deu_cls", Storage:="_deu_cls", ThisKey:="id_P_0076", OtherKey:="id_P_0076")>  _
	Public Property deu_cls() As EntitySet(Of deu_cls)
		Get
			Return Me._deu_cls
		End Get
		Set
			Me._deu_cls.Assign(value)
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
	
	Private Sub attach_cli_cls(ByVal entity As cli_cls)
		Me.SendPropertyChanging
		entity.P_0076_cls = Me
	End Sub
	
	Private Sub detach_cli_cls(ByVal entity As cli_cls)
		Me.SendPropertyChanging
		entity.P_0076_cls = Nothing
	End Sub
	
	Private Sub attach_deu_cls(ByVal entity As deu_cls)
		Me.SendPropertyChanging
		entity.P_0076_cls = Me
	End Sub
	
	Private Sub detach_deu_cls(ByVal entity As deu_cls)
		Me.SendPropertyChanging
		entity.P_0076_cls = Nothing
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.P_0077")>  _
Partial Public Class P_0077_cls
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _id_P_0077 As Integer
	
	Private _pnu_des As String
	
	Private _pnu_est As System.Nullable(Of Char)
	
	Private _pnu_cod_temporal As System.Nullable(Of Integer)
	
	Private _ope_cls As EntitySet(Of ope_cls)
	
    #Region "Definiciones de métodos de extensibilidad"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub Onid_P_0077Changing(value As Integer)
    End Sub
    Partial Private Sub Onid_P_0077Changed()
    End Sub
    Partial Private Sub Onpnu_desChanging(value As String)
    End Sub
    Partial Private Sub Onpnu_desChanged()
    End Sub
    Partial Private Sub Onpnu_estChanging(value As System.Nullable(Of Char))
    End Sub
    Partial Private Sub Onpnu_estChanged()
    End Sub
    Partial Private Sub Onpnu_cod_temporalChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub Onpnu_cod_temporalChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		Me._ope_cls = New EntitySet(Of ope_cls)(AddressOf Me.attach_ope_cls, AddressOf Me.detach_ope_cls)
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_id_P_0077", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property id_P_0077() As Integer
		Get
			Return Me._id_P_0077
		End Get
		Set
			If ((Me._id_P_0077 = value)  _
						= false) Then
				Me.Onid_P_0077Changing(value)
				Me.SendPropertyChanging
				Me._id_P_0077 = value
				Me.SendPropertyChanged("id_P_0077")
				Me.Onid_P_0077Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pnu_des", DbType:="VarChar(80)")>  _
	Public Property pnu_des() As String
		Get
			Return Me._pnu_des
		End Get
		Set
			If (String.Equals(Me._pnu_des, value) = false) Then
				Me.Onpnu_desChanging(value)
				Me.SendPropertyChanging
				Me._pnu_des = value
				Me.SendPropertyChanged("pnu_des")
				Me.Onpnu_desChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pnu_est", DbType:="Char(1)")>  _
	Public Property pnu_est() As System.Nullable(Of Char)
		Get
			Return Me._pnu_est
		End Get
		Set
			If (Me._pnu_est.Equals(value) = false) Then
				Me.Onpnu_estChanging(value)
				Me.SendPropertyChanging
				Me._pnu_est = value
				Me.SendPropertyChanged("pnu_est")
				Me.Onpnu_estChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pnu_cod_temporal", DbType:="Int")>  _
	Public Property pnu_cod_temporal() As System.Nullable(Of Integer)
		Get
			Return Me._pnu_cod_temporal
		End Get
		Set
			If (Me._pnu_cod_temporal.Equals(value) = false) Then
				Me.Onpnu_cod_temporalChanging(value)
				Me.SendPropertyChanging
				Me._pnu_cod_temporal = value
				Me.SendPropertyChanged("pnu_cod_temporal")
				Me.Onpnu_cod_temporalChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="P_0077_cls_ope_cls", Storage:="_ope_cls", ThisKey:="id_P_0077", OtherKey:="id_P_0077")>  _
	Public Property ope_cls() As EntitySet(Of ope_cls)
		Get
			Return Me._ope_cls
		End Get
		Set
			Me._ope_cls.Assign(value)
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
	
	Private Sub attach_ope_cls(ByVal entity As ope_cls)
		Me.SendPropertyChanging
		entity.P_0077_cls = Me
	End Sub
	
	Private Sub detach_ope_cls(ByVal entity As ope_cls)
		Me.SendPropertyChanging
		entity.P_0077_cls = Nothing
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.P_0078")>  _
Partial Public Class P_0078_cls
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _id_P_0078 As Integer
	
	Private _pnu_des As String
	
	Private _pnu_est As System.Nullable(Of Char)
	
	Private _pnu_cod_temporal As System.Nullable(Of Integer)
	
    #Region "Definiciones de métodos de extensibilidad"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub Onid_P_0078Changing(value As Integer)
    End Sub
    Partial Private Sub Onid_P_0078Changed()
    End Sub
    Partial Private Sub Onpnu_desChanging(value As String)
    End Sub
    Partial Private Sub Onpnu_desChanged()
    End Sub
    Partial Private Sub Onpnu_estChanging(value As System.Nullable(Of Char))
    End Sub
    Partial Private Sub Onpnu_estChanged()
    End Sub
    Partial Private Sub Onpnu_cod_temporalChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub Onpnu_cod_temporalChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_id_P_0078", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property id_P_0078() As Integer
		Get
			Return Me._id_P_0078
		End Get
		Set
			If ((Me._id_P_0078 = value)  _
						= false) Then
				Me.Onid_P_0078Changing(value)
				Me.SendPropertyChanging
				Me._id_P_0078 = value
				Me.SendPropertyChanged("id_P_0078")
				Me.Onid_P_0078Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pnu_des", DbType:="VarChar(80)")>  _
	Public Property pnu_des() As String
		Get
			Return Me._pnu_des
		End Get
		Set
			If (String.Equals(Me._pnu_des, value) = false) Then
				Me.Onpnu_desChanging(value)
				Me.SendPropertyChanging
				Me._pnu_des = value
				Me.SendPropertyChanged("pnu_des")
				Me.Onpnu_desChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pnu_est", DbType:="Char(1)")>  _
	Public Property pnu_est() As System.Nullable(Of Char)
		Get
			Return Me._pnu_est
		End Get
		Set
			If (Me._pnu_est.Equals(value) = false) Then
				Me.Onpnu_estChanging(value)
				Me.SendPropertyChanging
				Me._pnu_est = value
				Me.SendPropertyChanged("pnu_est")
				Me.Onpnu_estChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pnu_cod_temporal", DbType:="Int")>  _
	Public Property pnu_cod_temporal() As System.Nullable(Of Integer)
		Get
			Return Me._pnu_cod_temporal
		End Get
		Set
			If (Me._pnu_cod_temporal.Equals(value) = false) Then
				Me.Onpnu_cod_temporalChanging(value)
				Me.SendPropertyChanging
				Me._pnu_cod_temporal = value
				Me.SendPropertyChanged("pnu_cod_temporal")
				Me.Onpnu_cod_temporalChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.P_0079")>  _
Partial Public Class P_0079_cls
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _id_P_0079 As Integer
	
	Private _pnu_des As String
	
	Private _pnu_est As System.Nullable(Of Char)
	
	Private _pnu_cod_temporal As System.Nullable(Of Integer)
	
    #Region "Definiciones de métodos de extensibilidad"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub Onid_P_0079Changing(value As Integer)
    End Sub
    Partial Private Sub Onid_P_0079Changed()
    End Sub
    Partial Private Sub Onpnu_desChanging(value As String)
    End Sub
    Partial Private Sub Onpnu_desChanged()
    End Sub
    Partial Private Sub Onpnu_estChanging(value As System.Nullable(Of Char))
    End Sub
    Partial Private Sub Onpnu_estChanged()
    End Sub
    Partial Private Sub Onpnu_cod_temporalChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub Onpnu_cod_temporalChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_id_P_0079", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property id_P_0079() As Integer
		Get
			Return Me._id_P_0079
		End Get
		Set
			If ((Me._id_P_0079 = value)  _
						= false) Then
				Me.Onid_P_0079Changing(value)
				Me.SendPropertyChanging
				Me._id_P_0079 = value
				Me.SendPropertyChanged("id_P_0079")
				Me.Onid_P_0079Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pnu_des", DbType:="VarChar(80)")>  _
	Public Property pnu_des() As String
		Get
			Return Me._pnu_des
		End Get
		Set
			If (String.Equals(Me._pnu_des, value) = false) Then
				Me.Onpnu_desChanging(value)
				Me.SendPropertyChanging
				Me._pnu_des = value
				Me.SendPropertyChanged("pnu_des")
				Me.Onpnu_desChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pnu_est", DbType:="Char(1)")>  _
	Public Property pnu_est() As System.Nullable(Of Char)
		Get
			Return Me._pnu_est
		End Get
		Set
			If (Me._pnu_est.Equals(value) = false) Then
				Me.Onpnu_estChanging(value)
				Me.SendPropertyChanging
				Me._pnu_est = value
				Me.SendPropertyChanged("pnu_est")
				Me.Onpnu_estChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pnu_cod_temporal", DbType:="Int")>  _
	Public Property pnu_cod_temporal() As System.Nullable(Of Integer)
		Get
			Return Me._pnu_cod_temporal
		End Get
		Set
			If (Me._pnu_cod_temporal.Equals(value) = false) Then
				Me.Onpnu_cod_temporalChanging(value)
				Me.SendPropertyChanging
				Me._pnu_cod_temporal = value
				Me.SendPropertyChanged("pnu_cod_temporal")
				Me.Onpnu_cod_temporalChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.P_008")>  _
Partial Public Class P_008_cls
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _id_P_008 As Integer
	
	Private _pnu_des As String
	
	Private _pnu_est As System.Nullable(Of Char)
	
	Private _pnu_cod_temporal As System.Nullable(Of Integer)
	
	Private _cli_cls As EntitySet(Of cli_cls)
	
    #Region "Definiciones de métodos de extensibilidad"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub Onid_P_008Changing(value As Integer)
    End Sub
    Partial Private Sub Onid_P_008Changed()
    End Sub
    Partial Private Sub Onpnu_desChanging(value As String)
    End Sub
    Partial Private Sub Onpnu_desChanged()
    End Sub
    Partial Private Sub Onpnu_estChanging(value As System.Nullable(Of Char))
    End Sub
    Partial Private Sub Onpnu_estChanged()
    End Sub
    Partial Private Sub Onpnu_cod_temporalChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub Onpnu_cod_temporalChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		Me._cli_cls = New EntitySet(Of cli_cls)(AddressOf Me.attach_cli_cls, AddressOf Me.detach_cli_cls)
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_id_P_008", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property id_P_008() As Integer
		Get
			Return Me._id_P_008
		End Get
		Set
			If ((Me._id_P_008 = value)  _
						= false) Then
				Me.Onid_P_008Changing(value)
				Me.SendPropertyChanging
				Me._id_P_008 = value
				Me.SendPropertyChanged("id_P_008")
				Me.Onid_P_008Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pnu_des", DbType:="VarChar(80)")>  _
	Public Property pnu_des() As String
		Get
			Return Me._pnu_des
		End Get
		Set
			If (String.Equals(Me._pnu_des, value) = false) Then
				Me.Onpnu_desChanging(value)
				Me.SendPropertyChanging
				Me._pnu_des = value
				Me.SendPropertyChanged("pnu_des")
				Me.Onpnu_desChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pnu_est", DbType:="Char(1)")>  _
	Public Property pnu_est() As System.Nullable(Of Char)
		Get
			Return Me._pnu_est
		End Get
		Set
			If (Me._pnu_est.Equals(value) = false) Then
				Me.Onpnu_estChanging(value)
				Me.SendPropertyChanging
				Me._pnu_est = value
				Me.SendPropertyChanged("pnu_est")
				Me.Onpnu_estChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pnu_cod_temporal", DbType:="Int")>  _
	Public Property pnu_cod_temporal() As System.Nullable(Of Integer)
		Get
			Return Me._pnu_cod_temporal
		End Get
		Set
			If (Me._pnu_cod_temporal.Equals(value) = false) Then
				Me.Onpnu_cod_temporalChanging(value)
				Me.SendPropertyChanging
				Me._pnu_cod_temporal = value
				Me.SendPropertyChanged("pnu_cod_temporal")
				Me.Onpnu_cod_temporalChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="P_008_cls_cli_cls", Storage:="_cli_cls", ThisKey:="id_P_008", OtherKey:="id_P_008")>  _
	Public Property cli_cls() As EntitySet(Of cli_cls)
		Get
			Return Me._cli_cls
		End Get
		Set
			Me._cli_cls.Assign(value)
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
	
	Private Sub attach_cli_cls(ByVal entity As cli_cls)
		Me.SendPropertyChanging
		entity.P_008_cls = Me
	End Sub
	
	Private Sub detach_cli_cls(ByVal entity As cli_cls)
		Me.SendPropertyChanging
		entity.P_008_cls = Nothing
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.P_0080")>  _
Partial Public Class P_0080_cls
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _id_P_0080 As Integer
	
	Private _pnu_des As String
	
	Private _pnu_est As System.Nullable(Of Char)
	
	Private _pnu_cod_temporal As System.Nullable(Of Integer)
	
    #Region "Definiciones de métodos de extensibilidad"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub Onid_P_0080Changing(value As Integer)
    End Sub
    Partial Private Sub Onid_P_0080Changed()
    End Sub
    Partial Private Sub Onpnu_desChanging(value As String)
    End Sub
    Partial Private Sub Onpnu_desChanged()
    End Sub
    Partial Private Sub Onpnu_estChanging(value As System.Nullable(Of Char))
    End Sub
    Partial Private Sub Onpnu_estChanged()
    End Sub
    Partial Private Sub Onpnu_cod_temporalChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub Onpnu_cod_temporalChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_id_P_0080", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property id_P_0080() As Integer
		Get
			Return Me._id_P_0080
		End Get
		Set
			If ((Me._id_P_0080 = value)  _
						= false) Then
				Me.Onid_P_0080Changing(value)
				Me.SendPropertyChanging
				Me._id_P_0080 = value
				Me.SendPropertyChanged("id_P_0080")
				Me.Onid_P_0080Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pnu_des", DbType:="VarChar(80)")>  _
	Public Property pnu_des() As String
		Get
			Return Me._pnu_des
		End Get
		Set
			If (String.Equals(Me._pnu_des, value) = false) Then
				Me.Onpnu_desChanging(value)
				Me.SendPropertyChanging
				Me._pnu_des = value
				Me.SendPropertyChanged("pnu_des")
				Me.Onpnu_desChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pnu_est", DbType:="Char(1)")>  _
	Public Property pnu_est() As System.Nullable(Of Char)
		Get
			Return Me._pnu_est
		End Get
		Set
			If (Me._pnu_est.Equals(value) = false) Then
				Me.Onpnu_estChanging(value)
				Me.SendPropertyChanging
				Me._pnu_est = value
				Me.SendPropertyChanged("pnu_est")
				Me.Onpnu_estChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pnu_cod_temporal", DbType:="Int")>  _
	Public Property pnu_cod_temporal() As System.Nullable(Of Integer)
		Get
			Return Me._pnu_cod_temporal
		End Get
		Set
			If (Me._pnu_cod_temporal.Equals(value) = false) Then
				Me.Onpnu_cod_temporalChanging(value)
				Me.SendPropertyChanging
				Me._pnu_cod_temporal = value
				Me.SendPropertyChanged("pnu_cod_temporal")
				Me.Onpnu_cod_temporalChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.P_0081")>  _
Partial Public Class P_0081_cls
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _id_P_0081 As Integer
	
	Private _pnu_des As String
	
	Private _pnu_est As System.Nullable(Of Char)
	
	Private _pnu_cod_temporal As System.Nullable(Of Integer)
	
    #Region "Definiciones de métodos de extensibilidad"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub Onid_P_0081Changing(value As Integer)
    End Sub
    Partial Private Sub Onid_P_0081Changed()
    End Sub
    Partial Private Sub Onpnu_desChanging(value As String)
    End Sub
    Partial Private Sub Onpnu_desChanged()
    End Sub
    Partial Private Sub Onpnu_estChanging(value As System.Nullable(Of Char))
    End Sub
    Partial Private Sub Onpnu_estChanged()
    End Sub
    Partial Private Sub Onpnu_cod_temporalChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub Onpnu_cod_temporalChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_id_P_0081", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property id_P_0081() As Integer
		Get
			Return Me._id_P_0081
		End Get
		Set
			If ((Me._id_P_0081 = value)  _
						= false) Then
				Me.Onid_P_0081Changing(value)
				Me.SendPropertyChanging
				Me._id_P_0081 = value
				Me.SendPropertyChanged("id_P_0081")
				Me.Onid_P_0081Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pnu_des", DbType:="VarChar(80)")>  _
	Public Property pnu_des() As String
		Get
			Return Me._pnu_des
		End Get
		Set
			If (String.Equals(Me._pnu_des, value) = false) Then
				Me.Onpnu_desChanging(value)
				Me.SendPropertyChanging
				Me._pnu_des = value
				Me.SendPropertyChanged("pnu_des")
				Me.Onpnu_desChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pnu_est", DbType:="Char(1)")>  _
	Public Property pnu_est() As System.Nullable(Of Char)
		Get
			Return Me._pnu_est
		End Get
		Set
			If (Me._pnu_est.Equals(value) = false) Then
				Me.Onpnu_estChanging(value)
				Me.SendPropertyChanging
				Me._pnu_est = value
				Me.SendPropertyChanged("pnu_est")
				Me.Onpnu_estChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pnu_cod_temporal", DbType:="Int")>  _
	Public Property pnu_cod_temporal() As System.Nullable(Of Integer)
		Get
			Return Me._pnu_cod_temporal
		End Get
		Set
			If (Me._pnu_cod_temporal.Equals(value) = false) Then
				Me.Onpnu_cod_temporalChanging(value)
				Me.SendPropertyChanging
				Me._pnu_cod_temporal = value
				Me.SendPropertyChanged("pnu_cod_temporal")
				Me.Onpnu_cod_temporalChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.P_0082")>  _
Partial Public Class P_0082_cls
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _id_P_0082 As Integer
	
	Private _pnu_des As String
	
	Private _pnu_est As System.Nullable(Of Char)
	
	Private _pnu_cod_temporal As System.Nullable(Of Integer)
	
	Private _opn_cls As EntitySet(Of opn_cls)
	
    #Region "Definiciones de métodos de extensibilidad"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub Onid_P_0082Changing(value As Integer)
    End Sub
    Partial Private Sub Onid_P_0082Changed()
    End Sub
    Partial Private Sub Onpnu_desChanging(value As String)
    End Sub
    Partial Private Sub Onpnu_desChanged()
    End Sub
    Partial Private Sub Onpnu_estChanging(value As System.Nullable(Of Char))
    End Sub
    Partial Private Sub Onpnu_estChanged()
    End Sub
    Partial Private Sub Onpnu_cod_temporalChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub Onpnu_cod_temporalChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		Me._opn_cls = New EntitySet(Of opn_cls)(AddressOf Me.attach_opn_cls, AddressOf Me.detach_opn_cls)
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_id_P_0082", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property id_P_0082() As Integer
		Get
			Return Me._id_P_0082
		End Get
		Set
			If ((Me._id_P_0082 = value)  _
						= false) Then
				Me.Onid_P_0082Changing(value)
				Me.SendPropertyChanging
				Me._id_P_0082 = value
				Me.SendPropertyChanged("id_P_0082")
				Me.Onid_P_0082Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pnu_des", DbType:="VarChar(80)")>  _
	Public Property pnu_des() As String
		Get
			Return Me._pnu_des
		End Get
		Set
			If (String.Equals(Me._pnu_des, value) = false) Then
				Me.Onpnu_desChanging(value)
				Me.SendPropertyChanging
				Me._pnu_des = value
				Me.SendPropertyChanged("pnu_des")
				Me.Onpnu_desChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pnu_est", DbType:="Char(1)")>  _
	Public Property pnu_est() As System.Nullable(Of Char)
		Get
			Return Me._pnu_est
		End Get
		Set
			If (Me._pnu_est.Equals(value) = false) Then
				Me.Onpnu_estChanging(value)
				Me.SendPropertyChanging
				Me._pnu_est = value
				Me.SendPropertyChanged("pnu_est")
				Me.Onpnu_estChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pnu_cod_temporal", DbType:="Int")>  _
	Public Property pnu_cod_temporal() As System.Nullable(Of Integer)
		Get
			Return Me._pnu_cod_temporal
		End Get
		Set
			If (Me._pnu_cod_temporal.Equals(value) = false) Then
				Me.Onpnu_cod_temporalChanging(value)
				Me.SendPropertyChanging
				Me._pnu_cod_temporal = value
				Me.SendPropertyChanged("pnu_cod_temporal")
				Me.Onpnu_cod_temporalChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="P_0082_cls_opn_cls", Storage:="_opn_cls", ThisKey:="id_P_0082", OtherKey:="id_P_0082")>  _
	Public Property opn_cls() As EntitySet(Of opn_cls)
		Get
			Return Me._opn_cls
		End Get
		Set
			Me._opn_cls.Assign(value)
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
	
	Private Sub attach_opn_cls(ByVal entity As opn_cls)
		Me.SendPropertyChanging
		entity.P_0082_cls = Me
	End Sub
	
	Private Sub detach_opn_cls(ByVal entity As opn_cls)
		Me.SendPropertyChanging
		entity.P_0082_cls = Nothing
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.P_0083")>  _
Partial Public Class P_0083_cls
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _id_P_0083 As Integer
	
	Private _pnu_des As String
	
	Private _pnu_est As System.Nullable(Of Char)
	
	Private _pnu_cod_temporal As System.Nullable(Of Integer)
	
	Private _ope_cls As EntitySet(Of ope_cls)
	
    #Region "Definiciones de métodos de extensibilidad"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub Onid_P_0083Changing(value As Integer)
    End Sub
    Partial Private Sub Onid_P_0083Changed()
    End Sub
    Partial Private Sub Onpnu_desChanging(value As String)
    End Sub
    Partial Private Sub Onpnu_desChanged()
    End Sub
    Partial Private Sub Onpnu_estChanging(value As System.Nullable(Of Char))
    End Sub
    Partial Private Sub Onpnu_estChanged()
    End Sub
    Partial Private Sub Onpnu_cod_temporalChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub Onpnu_cod_temporalChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		Me._ope_cls = New EntitySet(Of ope_cls)(AddressOf Me.attach_ope_cls, AddressOf Me.detach_ope_cls)
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_id_P_0083", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property id_P_0083() As Integer
		Get
			Return Me._id_P_0083
		End Get
		Set
			If ((Me._id_P_0083 = value)  _
						= false) Then
				Me.Onid_P_0083Changing(value)
				Me.SendPropertyChanging
				Me._id_P_0083 = value
				Me.SendPropertyChanged("id_P_0083")
				Me.Onid_P_0083Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pnu_des", DbType:="VarChar(80)")>  _
	Public Property pnu_des() As String
		Get
			Return Me._pnu_des
		End Get
		Set
			If (String.Equals(Me._pnu_des, value) = false) Then
				Me.Onpnu_desChanging(value)
				Me.SendPropertyChanging
				Me._pnu_des = value
				Me.SendPropertyChanged("pnu_des")
				Me.Onpnu_desChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pnu_est", DbType:="Char(1)")>  _
	Public Property pnu_est() As System.Nullable(Of Char)
		Get
			Return Me._pnu_est
		End Get
		Set
			If (Me._pnu_est.Equals(value) = false) Then
				Me.Onpnu_estChanging(value)
				Me.SendPropertyChanging
				Me._pnu_est = value
				Me.SendPropertyChanged("pnu_est")
				Me.Onpnu_estChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pnu_cod_temporal", DbType:="Int")>  _
	Public Property pnu_cod_temporal() As System.Nullable(Of Integer)
		Get
			Return Me._pnu_cod_temporal
		End Get
		Set
			If (Me._pnu_cod_temporal.Equals(value) = false) Then
				Me.Onpnu_cod_temporalChanging(value)
				Me.SendPropertyChanging
				Me._pnu_cod_temporal = value
				Me.SendPropertyChanged("pnu_cod_temporal")
				Me.Onpnu_cod_temporalChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="P_0083_cls_ope_cls", Storage:="_ope_cls", ThisKey:="id_P_0083", OtherKey:="id_P_0083")>  _
	Public Property ope_cls() As EntitySet(Of ope_cls)
		Get
			Return Me._ope_cls
		End Get
		Set
			Me._ope_cls.Assign(value)
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
	
	Private Sub attach_ope_cls(ByVal entity As ope_cls)
		Me.SendPropertyChanging
		entity.P_0083_cls = Me
	End Sub
	
	Private Sub detach_ope_cls(ByVal entity As ope_cls)
		Me.SendPropertyChanging
		entity.P_0083_cls = Nothing
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.P_0084")>  _
Partial Public Class P_0084_cls
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _id_P_0084 As Integer
	
	Private _pnu_des As String
	
	Private _pnu_est As System.Nullable(Of Char)
	
	Private _pnu_cod_temporal As System.Nullable(Of Integer)
	
    #Region "Definiciones de métodos de extensibilidad"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub Onid_P_0084Changing(value As Integer)
    End Sub
    Partial Private Sub Onid_P_0084Changed()
    End Sub
    Partial Private Sub Onpnu_desChanging(value As String)
    End Sub
    Partial Private Sub Onpnu_desChanged()
    End Sub
    Partial Private Sub Onpnu_estChanging(value As System.Nullable(Of Char))
    End Sub
    Partial Private Sub Onpnu_estChanged()
    End Sub
    Partial Private Sub Onpnu_cod_temporalChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub Onpnu_cod_temporalChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_id_P_0084", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property id_P_0084() As Integer
		Get
			Return Me._id_P_0084
		End Get
		Set
			If ((Me._id_P_0084 = value)  _
						= false) Then
				Me.Onid_P_0084Changing(value)
				Me.SendPropertyChanging
				Me._id_P_0084 = value
				Me.SendPropertyChanged("id_P_0084")
				Me.Onid_P_0084Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pnu_des", DbType:="VarChar(80)")>  _
	Public Property pnu_des() As String
		Get
			Return Me._pnu_des
		End Get
		Set
			If (String.Equals(Me._pnu_des, value) = false) Then
				Me.Onpnu_desChanging(value)
				Me.SendPropertyChanging
				Me._pnu_des = value
				Me.SendPropertyChanged("pnu_des")
				Me.Onpnu_desChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pnu_est", DbType:="Char(1)")>  _
	Public Property pnu_est() As System.Nullable(Of Char)
		Get
			Return Me._pnu_est
		End Get
		Set
			If (Me._pnu_est.Equals(value) = false) Then
				Me.Onpnu_estChanging(value)
				Me.SendPropertyChanging
				Me._pnu_est = value
				Me.SendPropertyChanged("pnu_est")
				Me.Onpnu_estChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pnu_cod_temporal", DbType:="Int")>  _
	Public Property pnu_cod_temporal() As System.Nullable(Of Integer)
		Get
			Return Me._pnu_cod_temporal
		End Get
		Set
			If (Me._pnu_cod_temporal.Equals(value) = false) Then
				Me.Onpnu_cod_temporalChanging(value)
				Me.SendPropertyChanging
				Me._pnu_cod_temporal = value
				Me.SendPropertyChanged("pnu_cod_temporal")
				Me.Onpnu_cod_temporalChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.P_0085")>  _
Partial Public Class P_0085_cls
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _id_P_0085 As Integer
	
	Private _pnu_des As String
	
	Private _pnu_est As System.Nullable(Of Char)
	
	Private _pnu_cod_temporal As System.Nullable(Of Integer)
	
    #Region "Definiciones de métodos de extensibilidad"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub Onid_P_0085Changing(value As Integer)
    End Sub
    Partial Private Sub Onid_P_0085Changed()
    End Sub
    Partial Private Sub Onpnu_desChanging(value As String)
    End Sub
    Partial Private Sub Onpnu_desChanged()
    End Sub
    Partial Private Sub Onpnu_estChanging(value As System.Nullable(Of Char))
    End Sub
    Partial Private Sub Onpnu_estChanged()
    End Sub
    Partial Private Sub Onpnu_cod_temporalChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub Onpnu_cod_temporalChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_id_P_0085", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property id_P_0085() As Integer
		Get
			Return Me._id_P_0085
		End Get
		Set
			If ((Me._id_P_0085 = value)  _
						= false) Then
				Me.Onid_P_0085Changing(value)
				Me.SendPropertyChanging
				Me._id_P_0085 = value
				Me.SendPropertyChanged("id_P_0085")
				Me.Onid_P_0085Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pnu_des", DbType:="VarChar(80)")>  _
	Public Property pnu_des() As String
		Get
			Return Me._pnu_des
		End Get
		Set
			If (String.Equals(Me._pnu_des, value) = false) Then
				Me.Onpnu_desChanging(value)
				Me.SendPropertyChanging
				Me._pnu_des = value
				Me.SendPropertyChanged("pnu_des")
				Me.Onpnu_desChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pnu_est", DbType:="Char(1)")>  _
	Public Property pnu_est() As System.Nullable(Of Char)
		Get
			Return Me._pnu_est
		End Get
		Set
			If (Me._pnu_est.Equals(value) = false) Then
				Me.Onpnu_estChanging(value)
				Me.SendPropertyChanging
				Me._pnu_est = value
				Me.SendPropertyChanged("pnu_est")
				Me.Onpnu_estChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pnu_cod_temporal", DbType:="Int")>  _
	Public Property pnu_cod_temporal() As System.Nullable(Of Integer)
		Get
			Return Me._pnu_cod_temporal
		End Get
		Set
			If (Me._pnu_cod_temporal.Equals(value) = false) Then
				Me.Onpnu_cod_temporalChanging(value)
				Me.SendPropertyChanging
				Me._pnu_cod_temporal = value
				Me.SendPropertyChanged("pnu_cod_temporal")
				Me.Onpnu_cod_temporalChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.P_0086")>  _
Partial Public Class P_0086_cls
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _id_P_0086 As Integer
	
	Private _pnu_des As String
	
	Private _pnu_est As System.Nullable(Of Char)
	
	Private _pnu_cod_temporal As System.Nullable(Of Integer)
	
    #Region "Definiciones de métodos de extensibilidad"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub Onid_P_0086Changing(value As Integer)
    End Sub
    Partial Private Sub Onid_P_0086Changed()
    End Sub
    Partial Private Sub Onpnu_desChanging(value As String)
    End Sub
    Partial Private Sub Onpnu_desChanged()
    End Sub
    Partial Private Sub Onpnu_estChanging(value As System.Nullable(Of Char))
    End Sub
    Partial Private Sub Onpnu_estChanged()
    End Sub
    Partial Private Sub Onpnu_cod_temporalChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub Onpnu_cod_temporalChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_id_P_0086", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property id_P_0086() As Integer
		Get
			Return Me._id_P_0086
		End Get
		Set
			If ((Me._id_P_0086 = value)  _
						= false) Then
				Me.Onid_P_0086Changing(value)
				Me.SendPropertyChanging
				Me._id_P_0086 = value
				Me.SendPropertyChanged("id_P_0086")
				Me.Onid_P_0086Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pnu_des", DbType:="VarChar(80)")>  _
	Public Property pnu_des() As String
		Get
			Return Me._pnu_des
		End Get
		Set
			If (String.Equals(Me._pnu_des, value) = false) Then
				Me.Onpnu_desChanging(value)
				Me.SendPropertyChanging
				Me._pnu_des = value
				Me.SendPropertyChanged("pnu_des")
				Me.Onpnu_desChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pnu_est", DbType:="Char(1)")>  _
	Public Property pnu_est() As System.Nullable(Of Char)
		Get
			Return Me._pnu_est
		End Get
		Set
			If (Me._pnu_est.Equals(value) = false) Then
				Me.Onpnu_estChanging(value)
				Me.SendPropertyChanging
				Me._pnu_est = value
				Me.SendPropertyChanged("pnu_est")
				Me.Onpnu_estChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pnu_cod_temporal", DbType:="Int")>  _
	Public Property pnu_cod_temporal() As System.Nullable(Of Integer)
		Get
			Return Me._pnu_cod_temporal
		End Get
		Set
			If (Me._pnu_cod_temporal.Equals(value) = false) Then
				Me.Onpnu_cod_temporalChanging(value)
				Me.SendPropertyChanging
				Me._pnu_cod_temporal = value
				Me.SendPropertyChanged("pnu_cod_temporal")
				Me.Onpnu_cod_temporalChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.P_0087")>  _
Partial Public Class P_0087_cls
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _id_P_0087 As Integer
	
	Private _pnu_des As String
	
	Private _pnu_est As System.Nullable(Of Char)
	
	Private _pnu_cod_temporal As System.Nullable(Of Integer)
	
	Private _dpo_cls As EntitySet(Of dpo_cls)
	
    #Region "Definiciones de métodos de extensibilidad"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub Onid_P_0087Changing(value As Integer)
    End Sub
    Partial Private Sub Onid_P_0087Changed()
    End Sub
    Partial Private Sub Onpnu_desChanging(value As String)
    End Sub
    Partial Private Sub Onpnu_desChanged()
    End Sub
    Partial Private Sub Onpnu_estChanging(value As System.Nullable(Of Char))
    End Sub
    Partial Private Sub Onpnu_estChanged()
    End Sub
    Partial Private Sub Onpnu_cod_temporalChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub Onpnu_cod_temporalChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		Me._dpo_cls = New EntitySet(Of dpo_cls)(AddressOf Me.attach_dpo_cls, AddressOf Me.detach_dpo_cls)
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_id_P_0087", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property id_P_0087() As Integer
		Get
			Return Me._id_P_0087
		End Get
		Set
			If ((Me._id_P_0087 = value)  _
						= false) Then
				Me.Onid_P_0087Changing(value)
				Me.SendPropertyChanging
				Me._id_P_0087 = value
				Me.SendPropertyChanged("id_P_0087")
				Me.Onid_P_0087Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pnu_des", DbType:="VarChar(80)")>  _
	Public Property pnu_des() As String
		Get
			Return Me._pnu_des
		End Get
		Set
			If (String.Equals(Me._pnu_des, value) = false) Then
				Me.Onpnu_desChanging(value)
				Me.SendPropertyChanging
				Me._pnu_des = value
				Me.SendPropertyChanged("pnu_des")
				Me.Onpnu_desChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pnu_est", DbType:="Char(1)")>  _
	Public Property pnu_est() As System.Nullable(Of Char)
		Get
			Return Me._pnu_est
		End Get
		Set
			If (Me._pnu_est.Equals(value) = false) Then
				Me.Onpnu_estChanging(value)
				Me.SendPropertyChanging
				Me._pnu_est = value
				Me.SendPropertyChanged("pnu_est")
				Me.Onpnu_estChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pnu_cod_temporal", DbType:="Int")>  _
	Public Property pnu_cod_temporal() As System.Nullable(Of Integer)
		Get
			Return Me._pnu_cod_temporal
		End Get
		Set
			If (Me._pnu_cod_temporal.Equals(value) = false) Then
				Me.Onpnu_cod_temporalChanging(value)
				Me.SendPropertyChanging
				Me._pnu_cod_temporal = value
				Me.SendPropertyChanged("pnu_cod_temporal")
				Me.Onpnu_cod_temporalChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="P_0087_cls_dpo_cls", Storage:="_dpo_cls", ThisKey:="id_P_0087", OtherKey:="id_P_0087")>  _
	Public Property dpo_cls() As EntitySet(Of dpo_cls)
		Get
			Return Me._dpo_cls
		End Get
		Set
			Me._dpo_cls.Assign(value)
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
	
	Private Sub attach_dpo_cls(ByVal entity As dpo_cls)
		Me.SendPropertyChanging
		entity.P_0087_cls = Me
	End Sub
	
	Private Sub detach_dpo_cls(ByVal entity As dpo_cls)
		Me.SendPropertyChanging
		entity.P_0087_cls = Nothing
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.P_0088")>  _
Partial Public Class P_0088_cls
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _id_P_0088 As Integer
	
	Private _pnu_des As String
	
	Private _pnu_est As System.Nullable(Of Char)
	
	Private _pnu_cod_temporal As System.Nullable(Of Integer)
	
    #Region "Definiciones de métodos de extensibilidad"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub Onid_P_0088Changing(value As Integer)
    End Sub
    Partial Private Sub Onid_P_0088Changed()
    End Sub
    Partial Private Sub Onpnu_desChanging(value As String)
    End Sub
    Partial Private Sub Onpnu_desChanged()
    End Sub
    Partial Private Sub Onpnu_estChanging(value As System.Nullable(Of Char))
    End Sub
    Partial Private Sub Onpnu_estChanged()
    End Sub
    Partial Private Sub Onpnu_cod_temporalChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub Onpnu_cod_temporalChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_id_P_0088", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property id_P_0088() As Integer
		Get
			Return Me._id_P_0088
		End Get
		Set
			If ((Me._id_P_0088 = value)  _
						= false) Then
				Me.Onid_P_0088Changing(value)
				Me.SendPropertyChanging
				Me._id_P_0088 = value
				Me.SendPropertyChanged("id_P_0088")
				Me.Onid_P_0088Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pnu_des", DbType:="VarChar(80)")>  _
	Public Property pnu_des() As String
		Get
			Return Me._pnu_des
		End Get
		Set
			If (String.Equals(Me._pnu_des, value) = false) Then
				Me.Onpnu_desChanging(value)
				Me.SendPropertyChanging
				Me._pnu_des = value
				Me.SendPropertyChanged("pnu_des")
				Me.Onpnu_desChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pnu_est", DbType:="Char(1)")>  _
	Public Property pnu_est() As System.Nullable(Of Char)
		Get
			Return Me._pnu_est
		End Get
		Set
			If (Me._pnu_est.Equals(value) = false) Then
				Me.Onpnu_estChanging(value)
				Me.SendPropertyChanging
				Me._pnu_est = value
				Me.SendPropertyChanged("pnu_est")
				Me.Onpnu_estChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pnu_cod_temporal", DbType:="Int")>  _
	Public Property pnu_cod_temporal() As System.Nullable(Of Integer)
		Get
			Return Me._pnu_cod_temporal
		End Get
		Set
			If (Me._pnu_cod_temporal.Equals(value) = false) Then
				Me.Onpnu_cod_temporalChanging(value)
				Me.SendPropertyChanging
				Me._pnu_cod_temporal = value
				Me.SendPropertyChanged("pnu_cod_temporal")
				Me.Onpnu_cod_temporalChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.P_0089")>  _
Partial Public Class P_0089_cls
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _id_P_0089 As Integer
	
	Private _pnu_des As String
	
	Private _pnu_est As System.Nullable(Of Char)
	
	Private _pnu_cod_temporal As System.Nullable(Of Integer)
	
    #Region "Definiciones de métodos de extensibilidad"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub Onid_P_0089Changing(value As Integer)
    End Sub
    Partial Private Sub Onid_P_0089Changed()
    End Sub
    Partial Private Sub Onpnu_desChanging(value As String)
    End Sub
    Partial Private Sub Onpnu_desChanged()
    End Sub
    Partial Private Sub Onpnu_estChanging(value As System.Nullable(Of Char))
    End Sub
    Partial Private Sub Onpnu_estChanged()
    End Sub
    Partial Private Sub Onpnu_cod_temporalChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub Onpnu_cod_temporalChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_id_P_0089", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property id_P_0089() As Integer
		Get
			Return Me._id_P_0089
		End Get
		Set
			If ((Me._id_P_0089 = value)  _
						= false) Then
				Me.Onid_P_0089Changing(value)
				Me.SendPropertyChanging
				Me._id_P_0089 = value
				Me.SendPropertyChanged("id_P_0089")
				Me.Onid_P_0089Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pnu_des", DbType:="VarChar(80)")>  _
	Public Property pnu_des() As String
		Get
			Return Me._pnu_des
		End Get
		Set
			If (String.Equals(Me._pnu_des, value) = false) Then
				Me.Onpnu_desChanging(value)
				Me.SendPropertyChanging
				Me._pnu_des = value
				Me.SendPropertyChanged("pnu_des")
				Me.Onpnu_desChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pnu_est", DbType:="Char(1)")>  _
	Public Property pnu_est() As System.Nullable(Of Char)
		Get
			Return Me._pnu_est
		End Get
		Set
			If (Me._pnu_est.Equals(value) = false) Then
				Me.Onpnu_estChanging(value)
				Me.SendPropertyChanging
				Me._pnu_est = value
				Me.SendPropertyChanged("pnu_est")
				Me.Onpnu_estChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pnu_cod_temporal", DbType:="Int")>  _
	Public Property pnu_cod_temporal() As System.Nullable(Of Integer)
		Get
			Return Me._pnu_cod_temporal
		End Get
		Set
			If (Me._pnu_cod_temporal.Equals(value) = false) Then
				Me.Onpnu_cod_temporalChanging(value)
				Me.SendPropertyChanging
				Me._pnu_cod_temporal = value
				Me.SendPropertyChanged("pnu_cod_temporal")
				Me.Onpnu_cod_temporalChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.P_0090")>  _
Partial Public Class P_0090_cls
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _id_P_0090 As Integer
	
	Private _pnu_des As String
	
	Private _pnu_est As System.Nullable(Of Char)
	
	Private _pnu_cod_temporal As System.Nullable(Of Integer)
	
    #Region "Definiciones de métodos de extensibilidad"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub Onid_P_0090Changing(value As Integer)
    End Sub
    Partial Private Sub Onid_P_0090Changed()
    End Sub
    Partial Private Sub Onpnu_desChanging(value As String)
    End Sub
    Partial Private Sub Onpnu_desChanged()
    End Sub
    Partial Private Sub Onpnu_estChanging(value As System.Nullable(Of Char))
    End Sub
    Partial Private Sub Onpnu_estChanged()
    End Sub
    Partial Private Sub Onpnu_cod_temporalChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub Onpnu_cod_temporalChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_id_P_0090", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property id_P_0090() As Integer
		Get
			Return Me._id_P_0090
		End Get
		Set
			If ((Me._id_P_0090 = value)  _
						= false) Then
				Me.Onid_P_0090Changing(value)
				Me.SendPropertyChanging
				Me._id_P_0090 = value
				Me.SendPropertyChanged("id_P_0090")
				Me.Onid_P_0090Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pnu_des", DbType:="VarChar(80)")>  _
	Public Property pnu_des() As String
		Get
			Return Me._pnu_des
		End Get
		Set
			If (String.Equals(Me._pnu_des, value) = false) Then
				Me.Onpnu_desChanging(value)
				Me.SendPropertyChanging
				Me._pnu_des = value
				Me.SendPropertyChanged("pnu_des")
				Me.Onpnu_desChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pnu_est", DbType:="Char(1)")>  _
	Public Property pnu_est() As System.Nullable(Of Char)
		Get
			Return Me._pnu_est
		End Get
		Set
			If (Me._pnu_est.Equals(value) = false) Then
				Me.Onpnu_estChanging(value)
				Me.SendPropertyChanging
				Me._pnu_est = value
				Me.SendPropertyChanged("pnu_est")
				Me.Onpnu_estChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pnu_cod_temporal", DbType:="Int")>  _
	Public Property pnu_cod_temporal() As System.Nullable(Of Integer)
		Get
			Return Me._pnu_cod_temporal
		End Get
		Set
			If (Me._pnu_cod_temporal.Equals(value) = false) Then
				Me.Onpnu_cod_temporalChanging(value)
				Me.SendPropertyChanging
				Me._pnu_cod_temporal = value
				Me.SendPropertyChanged("pnu_cod_temporal")
				Me.Onpnu_cod_temporalChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.P_0091")>  _
Partial Public Class P_0091_cls
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _id_P_0091 As Integer
	
	Private _pnu_des As String
	
	Private _pnu_est As System.Nullable(Of Char)
	
	Private _pnu_atr_002 As String
	
	Private _pnu_cod_temporal As System.Nullable(Of Integer)
	
	Private _ctn_cls As EntitySet(Of ctn_cls)
	
    #Region "Definiciones de métodos de extensibilidad"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub Onid_P_0091Changing(value As Integer)
    End Sub
    Partial Private Sub Onid_P_0091Changed()
    End Sub
    Partial Private Sub Onpnu_desChanging(value As String)
    End Sub
    Partial Private Sub Onpnu_desChanged()
    End Sub
    Partial Private Sub Onpnu_estChanging(value As System.Nullable(Of Char))
    End Sub
    Partial Private Sub Onpnu_estChanged()
    End Sub
    Partial Private Sub Onpnu_atr_002Changing(value As String)
    End Sub
    Partial Private Sub Onpnu_atr_002Changed()
    End Sub
    Partial Private Sub Onpnu_cod_temporalChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub Onpnu_cod_temporalChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		Me._ctn_cls = New EntitySet(Of ctn_cls)(AddressOf Me.attach_ctn_cls, AddressOf Me.detach_ctn_cls)
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_id_P_0091", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property id_P_0091() As Integer
		Get
			Return Me._id_P_0091
		End Get
		Set
			If ((Me._id_P_0091 = value)  _
						= false) Then
				Me.Onid_P_0091Changing(value)
				Me.SendPropertyChanging
				Me._id_P_0091 = value
				Me.SendPropertyChanged("id_P_0091")
				Me.Onid_P_0091Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pnu_des", DbType:="VarChar(80)")>  _
	Public Property pnu_des() As String
		Get
			Return Me._pnu_des
		End Get
		Set
			If (String.Equals(Me._pnu_des, value) = false) Then
				Me.Onpnu_desChanging(value)
				Me.SendPropertyChanging
				Me._pnu_des = value
				Me.SendPropertyChanged("pnu_des")
				Me.Onpnu_desChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pnu_est", DbType:="Char(1)")>  _
	Public Property pnu_est() As System.Nullable(Of Char)
		Get
			Return Me._pnu_est
		End Get
		Set
			If (Me._pnu_est.Equals(value) = false) Then
				Me.Onpnu_estChanging(value)
				Me.SendPropertyChanging
				Me._pnu_est = value
				Me.SendPropertyChanged("pnu_est")
				Me.Onpnu_estChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pnu_atr_002", DbType:="Char(10)")>  _
	Public Property pnu_atr_002() As String
		Get
			Return Me._pnu_atr_002
		End Get
		Set
			If (String.Equals(Me._pnu_atr_002, value) = false) Then
				Me.Onpnu_atr_002Changing(value)
				Me.SendPropertyChanging
				Me._pnu_atr_002 = value
				Me.SendPropertyChanged("pnu_atr_002")
				Me.Onpnu_atr_002Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pnu_cod_temporal", DbType:="Int")>  _
	Public Property pnu_cod_temporal() As System.Nullable(Of Integer)
		Get
			Return Me._pnu_cod_temporal
		End Get
		Set
			If (Me._pnu_cod_temporal.Equals(value) = false) Then
				Me.Onpnu_cod_temporalChanging(value)
				Me.SendPropertyChanging
				Me._pnu_cod_temporal = value
				Me.SendPropertyChanged("pnu_cod_temporal")
				Me.Onpnu_cod_temporalChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="P_0091_cls_ctn_cls", Storage:="_ctn_cls", ThisKey:="id_P_0091", OtherKey:="id_P_0091")>  _
	Public Property ctn_cls() As EntitySet(Of ctn_cls)
		Get
			Return Me._ctn_cls
		End Get
		Set
			Me._ctn_cls.Assign(value)
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
	
	Private Sub attach_ctn_cls(ByVal entity As ctn_cls)
		Me.SendPropertyChanging
		entity.P_0091_cls = Me
	End Sub
	
	Private Sub detach_ctn_cls(ByVal entity As ctn_cls)
		Me.SendPropertyChanging
		entity.P_0091_cls = Nothing
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.P_0099")>  _
Partial Public Class P_0099_cls
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _id_P_0099 As Integer
	
	Private _pnu_des As String
	
	Private _pnu_est As System.Nullable(Of Char)
	
	Private _pnu_cod_temporal As System.Nullable(Of Integer)
	
    #Region "Definiciones de métodos de extensibilidad"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub Onid_P_0099Changing(value As Integer)
    End Sub
    Partial Private Sub Onid_P_0099Changed()
    End Sub
    Partial Private Sub Onpnu_desChanging(value As String)
    End Sub
    Partial Private Sub Onpnu_desChanged()
    End Sub
    Partial Private Sub Onpnu_estChanging(value As System.Nullable(Of Char))
    End Sub
    Partial Private Sub Onpnu_estChanged()
    End Sub
    Partial Private Sub Onpnu_cod_temporalChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub Onpnu_cod_temporalChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_id_P_0099", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property id_P_0099() As Integer
		Get
			Return Me._id_P_0099
		End Get
		Set
			If ((Me._id_P_0099 = value)  _
						= false) Then
				Me.Onid_P_0099Changing(value)
				Me.SendPropertyChanging
				Me._id_P_0099 = value
				Me.SendPropertyChanged("id_P_0099")
				Me.Onid_P_0099Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pnu_des", DbType:="VarChar(80)")>  _
	Public Property pnu_des() As String
		Get
			Return Me._pnu_des
		End Get
		Set
			If (String.Equals(Me._pnu_des, value) = false) Then
				Me.Onpnu_desChanging(value)
				Me.SendPropertyChanging
				Me._pnu_des = value
				Me.SendPropertyChanged("pnu_des")
				Me.Onpnu_desChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pnu_est", DbType:="Char(1)")>  _
	Public Property pnu_est() As System.Nullable(Of Char)
		Get
			Return Me._pnu_est
		End Get
		Set
			If (Me._pnu_est.Equals(value) = false) Then
				Me.Onpnu_estChanging(value)
				Me.SendPropertyChanging
				Me._pnu_est = value
				Me.SendPropertyChanged("pnu_est")
				Me.Onpnu_estChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pnu_cod_temporal", DbType:="Int")>  _
	Public Property pnu_cod_temporal() As System.Nullable(Of Integer)
		Get
			Return Me._pnu_cod_temporal
		End Get
		Set
			If (Me._pnu_cod_temporal.Equals(value) = false) Then
				Me.Onpnu_cod_temporalChanging(value)
				Me.SendPropertyChanging
				Me._pnu_cod_temporal = value
				Me.SendPropertyChanged("pnu_cod_temporal")
				Me.Onpnu_cod_temporalChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.P_0100")>  _
Partial Public Class P_0100_cls
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _id_P_0100 As Integer
	
	Private _pnu_des As String
	
	Private _pnu_est As System.Nullable(Of Char)
	
	Private _pnu_cod_temporal As System.Nullable(Of Integer)
	
    #Region "Definiciones de métodos de extensibilidad"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub Onid_P_0100Changing(value As Integer)
    End Sub
    Partial Private Sub Onid_P_0100Changed()
    End Sub
    Partial Private Sub Onpnu_desChanging(value As String)
    End Sub
    Partial Private Sub Onpnu_desChanged()
    End Sub
    Partial Private Sub Onpnu_estChanging(value As System.Nullable(Of Char))
    End Sub
    Partial Private Sub Onpnu_estChanged()
    End Sub
    Partial Private Sub Onpnu_cod_temporalChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub Onpnu_cod_temporalChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_id_P_0100", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property id_P_0100() As Integer
		Get
			Return Me._id_P_0100
		End Get
		Set
			If ((Me._id_P_0100 = value)  _
						= false) Then
				Me.Onid_P_0100Changing(value)
				Me.SendPropertyChanging
				Me._id_P_0100 = value
				Me.SendPropertyChanged("id_P_0100")
				Me.Onid_P_0100Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pnu_des", DbType:="VarChar(80)")>  _
	Public Property pnu_des() As String
		Get
			Return Me._pnu_des
		End Get
		Set
			If (String.Equals(Me._pnu_des, value) = false) Then
				Me.Onpnu_desChanging(value)
				Me.SendPropertyChanging
				Me._pnu_des = value
				Me.SendPropertyChanged("pnu_des")
				Me.Onpnu_desChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pnu_est", DbType:="Char(1)")>  _
	Public Property pnu_est() As System.Nullable(Of Char)
		Get
			Return Me._pnu_est
		End Get
		Set
			If (Me._pnu_est.Equals(value) = false) Then
				Me.Onpnu_estChanging(value)
				Me.SendPropertyChanging
				Me._pnu_est = value
				Me.SendPropertyChanged("pnu_est")
				Me.Onpnu_estChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pnu_cod_temporal", DbType:="Int")>  _
	Public Property pnu_cod_temporal() As System.Nullable(Of Integer)
		Get
			Return Me._pnu_cod_temporal
		End Get
		Set
			If (Me._pnu_cod_temporal.Equals(value) = false) Then
				Me.Onpnu_cod_temporalChanging(value)
				Me.SendPropertyChanging
				Me._pnu_cod_temporal = value
				Me.SendPropertyChanged("pnu_cod_temporal")
				Me.Onpnu_cod_temporalChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.P_0101")>  _
Partial Public Class P_0101_cls
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _id_P_0101 As Integer
	
	Private _pnu_des As String
	
	Private _pnu_est As System.Nullable(Of Char)
	
	Private _pnu_cod_temporal As System.Nullable(Of Integer)
	
    #Region "Definiciones de métodos de extensibilidad"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub Onid_P_0101Changing(value As Integer)
    End Sub
    Partial Private Sub Onid_P_0101Changed()
    End Sub
    Partial Private Sub Onpnu_desChanging(value As String)
    End Sub
    Partial Private Sub Onpnu_desChanged()
    End Sub
    Partial Private Sub Onpnu_estChanging(value As System.Nullable(Of Char))
    End Sub
    Partial Private Sub Onpnu_estChanged()
    End Sub
    Partial Private Sub Onpnu_cod_temporalChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub Onpnu_cod_temporalChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_id_P_0101", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property id_P_0101() As Integer
		Get
			Return Me._id_P_0101
		End Get
		Set
			If ((Me._id_P_0101 = value)  _
						= false) Then
				Me.Onid_P_0101Changing(value)
				Me.SendPropertyChanging
				Me._id_P_0101 = value
				Me.SendPropertyChanged("id_P_0101")
				Me.Onid_P_0101Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pnu_des", DbType:="VarChar(80)")>  _
	Public Property pnu_des() As String
		Get
			Return Me._pnu_des
		End Get
		Set
			If (String.Equals(Me._pnu_des, value) = false) Then
				Me.Onpnu_desChanging(value)
				Me.SendPropertyChanging
				Me._pnu_des = value
				Me.SendPropertyChanged("pnu_des")
				Me.Onpnu_desChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pnu_est", DbType:="Char(1)")>  _
	Public Property pnu_est() As System.Nullable(Of Char)
		Get
			Return Me._pnu_est
		End Get
		Set
			If (Me._pnu_est.Equals(value) = false) Then
				Me.Onpnu_estChanging(value)
				Me.SendPropertyChanging
				Me._pnu_est = value
				Me.SendPropertyChanged("pnu_est")
				Me.Onpnu_estChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pnu_cod_temporal", DbType:="Int")>  _
	Public Property pnu_cod_temporal() As System.Nullable(Of Integer)
		Get
			Return Me._pnu_cod_temporal
		End Get
		Set
			If (Me._pnu_cod_temporal.Equals(value) = false) Then
				Me.Onpnu_cod_temporalChanging(value)
				Me.SendPropertyChanging
				Me._pnu_cod_temporal = value
				Me.SendPropertyChanged("pnu_cod_temporal")
				Me.Onpnu_cod_temporalChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.P_0102")>  _
Partial Public Class P_0102_cls
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _id_P_0102 As Integer
	
	Private _pnu_des As String
	
	Private _pnu_est As System.Nullable(Of Char)
	
	Private _pnu_cod_temporal As System.Nullable(Of Integer)
	
    #Region "Definiciones de métodos de extensibilidad"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub Onid_P_0102Changing(value As Integer)
    End Sub
    Partial Private Sub Onid_P_0102Changed()
    End Sub
    Partial Private Sub Onpnu_desChanging(value As String)
    End Sub
    Partial Private Sub Onpnu_desChanged()
    End Sub
    Partial Private Sub Onpnu_estChanging(value As System.Nullable(Of Char))
    End Sub
    Partial Private Sub Onpnu_estChanged()
    End Sub
    Partial Private Sub Onpnu_cod_temporalChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub Onpnu_cod_temporalChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_id_P_0102", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property id_P_0102() As Integer
		Get
			Return Me._id_P_0102
		End Get
		Set
			If ((Me._id_P_0102 = value)  _
						= false) Then
				Me.Onid_P_0102Changing(value)
				Me.SendPropertyChanging
				Me._id_P_0102 = value
				Me.SendPropertyChanged("id_P_0102")
				Me.Onid_P_0102Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pnu_des", DbType:="VarChar(80)")>  _
	Public Property pnu_des() As String
		Get
			Return Me._pnu_des
		End Get
		Set
			If (String.Equals(Me._pnu_des, value) = false) Then
				Me.Onpnu_desChanging(value)
				Me.SendPropertyChanging
				Me._pnu_des = value
				Me.SendPropertyChanged("pnu_des")
				Me.Onpnu_desChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pnu_est", DbType:="Char(1)")>  _
	Public Property pnu_est() As System.Nullable(Of Char)
		Get
			Return Me._pnu_est
		End Get
		Set
			If (Me._pnu_est.Equals(value) = false) Then
				Me.Onpnu_estChanging(value)
				Me.SendPropertyChanging
				Me._pnu_est = value
				Me.SendPropertyChanged("pnu_est")
				Me.Onpnu_estChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pnu_cod_temporal", DbType:="Int")>  _
	Public Property pnu_cod_temporal() As System.Nullable(Of Integer)
		Get
			Return Me._pnu_cod_temporal
		End Get
		Set
			If (Me._pnu_cod_temporal.Equals(value) = false) Then
				Me.Onpnu_cod_temporalChanging(value)
				Me.SendPropertyChanging
				Me._pnu_cod_temporal = value
				Me.SendPropertyChanged("pnu_cod_temporal")
				Me.Onpnu_cod_temporalChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.P_0103")>  _
Partial Public Class P_0103_cls
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _id_P_0103 As Integer
	
	Private _pnu_des As String
	
	Private _pnu_est As System.Nullable(Of Char)
	
	Private _pnu_cod_temporal As System.Nullable(Of Integer)
	
	Private _drc_cls As EntitySet(Of drc_cls)
	
    #Region "Definiciones de métodos de extensibilidad"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub Onid_P_0103Changing(value As Integer)
    End Sub
    Partial Private Sub Onid_P_0103Changed()
    End Sub
    Partial Private Sub Onpnu_desChanging(value As String)
    End Sub
    Partial Private Sub Onpnu_desChanged()
    End Sub
    Partial Private Sub Onpnu_estChanging(value As System.Nullable(Of Char))
    End Sub
    Partial Private Sub Onpnu_estChanged()
    End Sub
    Partial Private Sub Onpnu_cod_temporalChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub Onpnu_cod_temporalChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		Me._drc_cls = New EntitySet(Of drc_cls)(AddressOf Me.attach_drc_cls, AddressOf Me.detach_drc_cls)
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_id_P_0103", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property id_P_0103() As Integer
		Get
			Return Me._id_P_0103
		End Get
		Set
			If ((Me._id_P_0103 = value)  _
						= false) Then
				Me.Onid_P_0103Changing(value)
				Me.SendPropertyChanging
				Me._id_P_0103 = value
				Me.SendPropertyChanged("id_P_0103")
				Me.Onid_P_0103Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pnu_des", DbType:="VarChar(80)")>  _
	Public Property pnu_des() As String
		Get
			Return Me._pnu_des
		End Get
		Set
			If (String.Equals(Me._pnu_des, value) = false) Then
				Me.Onpnu_desChanging(value)
				Me.SendPropertyChanging
				Me._pnu_des = value
				Me.SendPropertyChanged("pnu_des")
				Me.Onpnu_desChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pnu_est", DbType:="Char(1)")>  _
	Public Property pnu_est() As System.Nullable(Of Char)
		Get
			Return Me._pnu_est
		End Get
		Set
			If (Me._pnu_est.Equals(value) = false) Then
				Me.Onpnu_estChanging(value)
				Me.SendPropertyChanging
				Me._pnu_est = value
				Me.SendPropertyChanged("pnu_est")
				Me.Onpnu_estChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pnu_cod_temporal", DbType:="Int")>  _
	Public Property pnu_cod_temporal() As System.Nullable(Of Integer)
		Get
			Return Me._pnu_cod_temporal
		End Get
		Set
			If (Me._pnu_cod_temporal.Equals(value) = false) Then
				Me.Onpnu_cod_temporalChanging(value)
				Me.SendPropertyChanging
				Me._pnu_cod_temporal = value
				Me.SendPropertyChanged("pnu_cod_temporal")
				Me.Onpnu_cod_temporalChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="P_0103_cls_drc_cls", Storage:="_drc_cls", ThisKey:="id_P_0103", OtherKey:="id_P_0103")>  _
	Public Property drc_cls() As EntitySet(Of drc_cls)
		Get
			Return Me._drc_cls
		End Get
		Set
			Me._drc_cls.Assign(value)
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
	
	Private Sub attach_drc_cls(ByVal entity As drc_cls)
		Me.SendPropertyChanging
		entity.P_0103_cls = Me
	End Sub
	
	Private Sub detach_drc_cls(ByVal entity As drc_cls)
		Me.SendPropertyChanging
		entity.P_0103_cls = Nothing
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.P_0104")>  _
Partial Public Class P_0104_cls
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _id_P_0104 As Integer
	
	Private _pnu_des As String
	
	Private _pnu_est As System.Nullable(Of Char)
	
	Private _pnu_cod_temporal As System.Nullable(Of Integer)
	
	Private _ope_cls As EntitySet(Of ope_cls)
	
    #Region "Definiciones de métodos de extensibilidad"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub Onid_P_0104Changing(value As Integer)
    End Sub
    Partial Private Sub Onid_P_0104Changed()
    End Sub
    Partial Private Sub Onpnu_desChanging(value As String)
    End Sub
    Partial Private Sub Onpnu_desChanged()
    End Sub
    Partial Private Sub Onpnu_estChanging(value As System.Nullable(Of Char))
    End Sub
    Partial Private Sub Onpnu_estChanged()
    End Sub
    Partial Private Sub Onpnu_cod_temporalChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub Onpnu_cod_temporalChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		Me._ope_cls = New EntitySet(Of ope_cls)(AddressOf Me.attach_ope_cls, AddressOf Me.detach_ope_cls)
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_id_P_0104", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property id_P_0104() As Integer
		Get
			Return Me._id_P_0104
		End Get
		Set
			If ((Me._id_P_0104 = value)  _
						= false) Then
				Me.Onid_P_0104Changing(value)
				Me.SendPropertyChanging
				Me._id_P_0104 = value
				Me.SendPropertyChanged("id_P_0104")
				Me.Onid_P_0104Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pnu_des", DbType:="VarChar(80)")>  _
	Public Property pnu_des() As String
		Get
			Return Me._pnu_des
		End Get
		Set
			If (String.Equals(Me._pnu_des, value) = false) Then
				Me.Onpnu_desChanging(value)
				Me.SendPropertyChanging
				Me._pnu_des = value
				Me.SendPropertyChanged("pnu_des")
				Me.Onpnu_desChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pnu_est", DbType:="Char(1)")>  _
	Public Property pnu_est() As System.Nullable(Of Char)
		Get
			Return Me._pnu_est
		End Get
		Set
			If (Me._pnu_est.Equals(value) = false) Then
				Me.Onpnu_estChanging(value)
				Me.SendPropertyChanging
				Me._pnu_est = value
				Me.SendPropertyChanged("pnu_est")
				Me.Onpnu_estChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pnu_cod_temporal", DbType:="Int")>  _
	Public Property pnu_cod_temporal() As System.Nullable(Of Integer)
		Get
			Return Me._pnu_cod_temporal
		End Get
		Set
			If (Me._pnu_cod_temporal.Equals(value) = false) Then
				Me.Onpnu_cod_temporalChanging(value)
				Me.SendPropertyChanging
				Me._pnu_cod_temporal = value
				Me.SendPropertyChanged("pnu_cod_temporal")
				Me.Onpnu_cod_temporalChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="P_0104_cls_ope_cls", Storage:="_ope_cls", ThisKey:="id_P_0104", OtherKey:="id_P_0104")>  _
	Public Property ope_cls() As EntitySet(Of ope_cls)
		Get
			Return Me._ope_cls
		End Get
		Set
			Me._ope_cls.Assign(value)
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
	
	Private Sub attach_ope_cls(ByVal entity As ope_cls)
		Me.SendPropertyChanging
		entity.P_0104_cls = Me
	End Sub
	
	Private Sub detach_ope_cls(ByVal entity As ope_cls)
		Me.SendPropertyChanging
		entity.P_0104_cls = Nothing
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.P_0105")>  _
Partial Public Class P_0105_cls
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _id_P_0105 As Integer
	
	Private _pnu_des As String
	
	Private _pnu_est As System.Nullable(Of Char)
	
	Private _pnu_cod_temporal As System.Nullable(Of Integer)
	
    #Region "Definiciones de métodos de extensibilidad"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub Onid_P_0105Changing(value As Integer)
    End Sub
    Partial Private Sub Onid_P_0105Changed()
    End Sub
    Partial Private Sub Onpnu_desChanging(value As String)
    End Sub
    Partial Private Sub Onpnu_desChanged()
    End Sub
    Partial Private Sub Onpnu_estChanging(value As System.Nullable(Of Char))
    End Sub
    Partial Private Sub Onpnu_estChanged()
    End Sub
    Partial Private Sub Onpnu_cod_temporalChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub Onpnu_cod_temporalChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_id_P_0105", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property id_P_0105() As Integer
		Get
			Return Me._id_P_0105
		End Get
		Set
			If ((Me._id_P_0105 = value)  _
						= false) Then
				Me.Onid_P_0105Changing(value)
				Me.SendPropertyChanging
				Me._id_P_0105 = value
				Me.SendPropertyChanged("id_P_0105")
				Me.Onid_P_0105Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pnu_des", DbType:="VarChar(80)")>  _
	Public Property pnu_des() As String
		Get
			Return Me._pnu_des
		End Get
		Set
			If (String.Equals(Me._pnu_des, value) = false) Then
				Me.Onpnu_desChanging(value)
				Me.SendPropertyChanging
				Me._pnu_des = value
				Me.SendPropertyChanged("pnu_des")
				Me.Onpnu_desChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pnu_est", DbType:="Char(1)")>  _
	Public Property pnu_est() As System.Nullable(Of Char)
		Get
			Return Me._pnu_est
		End Get
		Set
			If (Me._pnu_est.Equals(value) = false) Then
				Me.Onpnu_estChanging(value)
				Me.SendPropertyChanging
				Me._pnu_est = value
				Me.SendPropertyChanged("pnu_est")
				Me.Onpnu_estChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pnu_cod_temporal", DbType:="Int")>  _
	Public Property pnu_cod_temporal() As System.Nullable(Of Integer)
		Get
			Return Me._pnu_cod_temporal
		End Get
		Set
			If (Me._pnu_cod_temporal.Equals(value) = false) Then
				Me.Onpnu_cod_temporalChanging(value)
				Me.SendPropertyChanging
				Me._pnu_cod_temporal = value
				Me.SendPropertyChanged("pnu_cod_temporal")
				Me.Onpnu_cod_temporalChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.P_0106")>  _
Partial Public Class P_0106_cls
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _id_P_0106 As Integer
	
	Private _pnu_des As String
	
	Private _pnu_est As System.Nullable(Of Char)
	
	Private _pnu_cod_temporal As System.Nullable(Of Integer)
	
    #Region "Definiciones de métodos de extensibilidad"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub Onid_P_0106Changing(value As Integer)
    End Sub
    Partial Private Sub Onid_P_0106Changed()
    End Sub
    Partial Private Sub Onpnu_desChanging(value As String)
    End Sub
    Partial Private Sub Onpnu_desChanged()
    End Sub
    Partial Private Sub Onpnu_estChanging(value As System.Nullable(Of Char))
    End Sub
    Partial Private Sub Onpnu_estChanged()
    End Sub
    Partial Private Sub Onpnu_cod_temporalChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub Onpnu_cod_temporalChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_id_P_0106", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property id_P_0106() As Integer
		Get
			Return Me._id_P_0106
		End Get
		Set
			If ((Me._id_P_0106 = value)  _
						= false) Then
				Me.Onid_P_0106Changing(value)
				Me.SendPropertyChanging
				Me._id_P_0106 = value
				Me.SendPropertyChanged("id_P_0106")
				Me.Onid_P_0106Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pnu_des", DbType:="VarChar(80)")>  _
	Public Property pnu_des() As String
		Get
			Return Me._pnu_des
		End Get
		Set
			If (String.Equals(Me._pnu_des, value) = false) Then
				Me.Onpnu_desChanging(value)
				Me.SendPropertyChanging
				Me._pnu_des = value
				Me.SendPropertyChanged("pnu_des")
				Me.Onpnu_desChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pnu_est", DbType:="Char(1)")>  _
	Public Property pnu_est() As System.Nullable(Of Char)
		Get
			Return Me._pnu_est
		End Get
		Set
			If (Me._pnu_est.Equals(value) = false) Then
				Me.Onpnu_estChanging(value)
				Me.SendPropertyChanging
				Me._pnu_est = value
				Me.SendPropertyChanged("pnu_est")
				Me.Onpnu_estChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pnu_cod_temporal", DbType:="Int")>  _
	Public Property pnu_cod_temporal() As System.Nullable(Of Integer)
		Get
			Return Me._pnu_cod_temporal
		End Get
		Set
			If (Me._pnu_cod_temporal.Equals(value) = false) Then
				Me.Onpnu_cod_temporalChanging(value)
				Me.SendPropertyChanging
				Me._pnu_cod_temporal = value
				Me.SendPropertyChanged("pnu_cod_temporal")
				Me.Onpnu_cod_temporalChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.P_0107")>  _
Partial Public Class P_0107_cls
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _id_P_0107 As Integer
	
	Private _pnu_des As String
	
	Private _pnu_est As System.Nullable(Of Char)
	
	Private _pnu_cod_temporal As System.Nullable(Of Integer)
	
    #Region "Definiciones de métodos de extensibilidad"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub Onid_P_0107Changing(value As Integer)
    End Sub
    Partial Private Sub Onid_P_0107Changed()
    End Sub
    Partial Private Sub Onpnu_desChanging(value As String)
    End Sub
    Partial Private Sub Onpnu_desChanged()
    End Sub
    Partial Private Sub Onpnu_estChanging(value As System.Nullable(Of Char))
    End Sub
    Partial Private Sub Onpnu_estChanged()
    End Sub
    Partial Private Sub Onpnu_cod_temporalChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub Onpnu_cod_temporalChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_id_P_0107", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property id_P_0107() As Integer
		Get
			Return Me._id_P_0107
		End Get
		Set
			If ((Me._id_P_0107 = value)  _
						= false) Then
				Me.Onid_P_0107Changing(value)
				Me.SendPropertyChanging
				Me._id_P_0107 = value
				Me.SendPropertyChanged("id_P_0107")
				Me.Onid_P_0107Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pnu_des", DbType:="VarChar(80)")>  _
	Public Property pnu_des() As String
		Get
			Return Me._pnu_des
		End Get
		Set
			If (String.Equals(Me._pnu_des, value) = false) Then
				Me.Onpnu_desChanging(value)
				Me.SendPropertyChanging
				Me._pnu_des = value
				Me.SendPropertyChanged("pnu_des")
				Me.Onpnu_desChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pnu_est", DbType:="Char(1)")>  _
	Public Property pnu_est() As System.Nullable(Of Char)
		Get
			Return Me._pnu_est
		End Get
		Set
			If (Me._pnu_est.Equals(value) = false) Then
				Me.Onpnu_estChanging(value)
				Me.SendPropertyChanging
				Me._pnu_est = value
				Me.SendPropertyChanged("pnu_est")
				Me.Onpnu_estChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pnu_cod_temporal", DbType:="Int")>  _
	Public Property pnu_cod_temporal() As System.Nullable(Of Integer)
		Get
			Return Me._pnu_cod_temporal
		End Get
		Set
			If (Me._pnu_cod_temporal.Equals(value) = false) Then
				Me.Onpnu_cod_temporalChanging(value)
				Me.SendPropertyChanging
				Me._pnu_cod_temporal = value
				Me.SendPropertyChanged("pnu_cod_temporal")
				Me.Onpnu_cod_temporalChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.P_0108")>  _
Partial Public Class P_0108_cls
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _id_P_0108 As Integer
	
	Private _pnu_des As String
	
	Private _pnu_est As System.Nullable(Of Char)
	
	Private _pnu_cod_temporal As System.Nullable(Of Integer)
	
    #Region "Definiciones de métodos de extensibilidad"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub Onid_P_0108Changing(value As Integer)
    End Sub
    Partial Private Sub Onid_P_0108Changed()
    End Sub
    Partial Private Sub Onpnu_desChanging(value As String)
    End Sub
    Partial Private Sub Onpnu_desChanged()
    End Sub
    Partial Private Sub Onpnu_estChanging(value As System.Nullable(Of Char))
    End Sub
    Partial Private Sub Onpnu_estChanged()
    End Sub
    Partial Private Sub Onpnu_cod_temporalChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub Onpnu_cod_temporalChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_id_P_0108", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property id_P_0108() As Integer
		Get
			Return Me._id_P_0108
		End Get
		Set
			If ((Me._id_P_0108 = value)  _
						= false) Then
				Me.Onid_P_0108Changing(value)
				Me.SendPropertyChanging
				Me._id_P_0108 = value
				Me.SendPropertyChanged("id_P_0108")
				Me.Onid_P_0108Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pnu_des", DbType:="VarChar(80)")>  _
	Public Property pnu_des() As String
		Get
			Return Me._pnu_des
		End Get
		Set
			If (String.Equals(Me._pnu_des, value) = false) Then
				Me.Onpnu_desChanging(value)
				Me.SendPropertyChanging
				Me._pnu_des = value
				Me.SendPropertyChanged("pnu_des")
				Me.Onpnu_desChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pnu_est", DbType:="Char(1)")>  _
	Public Property pnu_est() As System.Nullable(Of Char)
		Get
			Return Me._pnu_est
		End Get
		Set
			If (Me._pnu_est.Equals(value) = false) Then
				Me.Onpnu_estChanging(value)
				Me.SendPropertyChanging
				Me._pnu_est = value
				Me.SendPropertyChanged("pnu_est")
				Me.Onpnu_estChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pnu_cod_temporal", DbType:="Int")>  _
	Public Property pnu_cod_temporal() As System.Nullable(Of Integer)
		Get
			Return Me._pnu_cod_temporal
		End Get
		Set
			If (Me._pnu_cod_temporal.Equals(value) = false) Then
				Me.Onpnu_cod_temporalChanging(value)
				Me.SendPropertyChanging
				Me._pnu_cod_temporal = value
				Me.SendPropertyChanged("pnu_cod_temporal")
				Me.Onpnu_cod_temporalChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.P_0109")>  _
Partial Public Class P_0109_cls
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _id_P_0109 As Integer
	
	Private _pnu_des As String
	
	Private _pnu_est As System.Nullable(Of Char)
	
	Private _pnu_cod_temporal As System.Nullable(Of Integer)
	
    #Region "Definiciones de métodos de extensibilidad"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub Onid_P_0109Changing(value As Integer)
    End Sub
    Partial Private Sub Onid_P_0109Changed()
    End Sub
    Partial Private Sub Onpnu_desChanging(value As String)
    End Sub
    Partial Private Sub Onpnu_desChanged()
    End Sub
    Partial Private Sub Onpnu_estChanging(value As System.Nullable(Of Char))
    End Sub
    Partial Private Sub Onpnu_estChanged()
    End Sub
    Partial Private Sub Onpnu_cod_temporalChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub Onpnu_cod_temporalChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_id_P_0109", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property id_P_0109() As Integer
		Get
			Return Me._id_P_0109
		End Get
		Set
			If ((Me._id_P_0109 = value)  _
						= false) Then
				Me.Onid_P_0109Changing(value)
				Me.SendPropertyChanging
				Me._id_P_0109 = value
				Me.SendPropertyChanged("id_P_0109")
				Me.Onid_P_0109Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pnu_des", DbType:="VarChar(80)")>  _
	Public Property pnu_des() As String
		Get
			Return Me._pnu_des
		End Get
		Set
			If (String.Equals(Me._pnu_des, value) = false) Then
				Me.Onpnu_desChanging(value)
				Me.SendPropertyChanging
				Me._pnu_des = value
				Me.SendPropertyChanged("pnu_des")
				Me.Onpnu_desChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pnu_est", DbType:="Char(1)")>  _
	Public Property pnu_est() As System.Nullable(Of Char)
		Get
			Return Me._pnu_est
		End Get
		Set
			If (Me._pnu_est.Equals(value) = false) Then
				Me.Onpnu_estChanging(value)
				Me.SendPropertyChanging
				Me._pnu_est = value
				Me.SendPropertyChanged("pnu_est")
				Me.Onpnu_estChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pnu_cod_temporal", DbType:="Int")>  _
	Public Property pnu_cod_temporal() As System.Nullable(Of Integer)
		Get
			Return Me._pnu_cod_temporal
		End Get
		Set
			If (Me._pnu_cod_temporal.Equals(value) = false) Then
				Me.Onpnu_cod_temporalChanging(value)
				Me.SendPropertyChanging
				Me._pnu_cod_temporal = value
				Me.SendPropertyChanged("pnu_cod_temporal")
				Me.Onpnu_cod_temporalChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.P_0110")>  _
Partial Public Class P_0110_cls
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _id_P_0110 As Integer
	
	Private _pnu_des As String
	
	Private _pnu_est As System.Nullable(Of Char)
	
	Private _eva_cls As EntitySet(Of eva_cls)
	
    #Region "Definiciones de métodos de extensibilidad"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub Onid_P_0110Changing(value As Integer)
    End Sub
    Partial Private Sub Onid_P_0110Changed()
    End Sub
    Partial Private Sub Onpnu_desChanging(value As String)
    End Sub
    Partial Private Sub Onpnu_desChanged()
    End Sub
    Partial Private Sub Onpnu_estChanging(value As System.Nullable(Of Char))
    End Sub
    Partial Private Sub Onpnu_estChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		Me._eva_cls = New EntitySet(Of eva_cls)(AddressOf Me.attach_eva_cls, AddressOf Me.detach_eva_cls)
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_id_P_0110", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property id_P_0110() As Integer
		Get
			Return Me._id_P_0110
		End Get
		Set
			If ((Me._id_P_0110 = value)  _
						= false) Then
				Me.Onid_P_0110Changing(value)
				Me.SendPropertyChanging
				Me._id_P_0110 = value
				Me.SendPropertyChanged("id_P_0110")
				Me.Onid_P_0110Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pnu_des", DbType:="VarChar(50)")>  _
	Public Property pnu_des() As String
		Get
			Return Me._pnu_des
		End Get
		Set
			If (String.Equals(Me._pnu_des, value) = false) Then
				Me.Onpnu_desChanging(value)
				Me.SendPropertyChanging
				Me._pnu_des = value
				Me.SendPropertyChanged("pnu_des")
				Me.Onpnu_desChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pnu_est", DbType:="Char(1)")>  _
	Public Property pnu_est() As System.Nullable(Of Char)
		Get
			Return Me._pnu_est
		End Get
		Set
			If (Me._pnu_est.Equals(value) = false) Then
				Me.Onpnu_estChanging(value)
				Me.SendPropertyChanging
				Me._pnu_est = value
				Me.SendPropertyChanged("pnu_est")
				Me.Onpnu_estChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="P_0110_cls_eva_cls", Storage:="_eva_cls", ThisKey:="id_P_0110", OtherKey:="id_P_0110")>  _
	Public Property eva_cls() As EntitySet(Of eva_cls)
		Get
			Return Me._eva_cls
		End Get
		Set
			Me._eva_cls.Assign(value)
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
	
	Private Sub attach_eva_cls(ByVal entity As eva_cls)
		Me.SendPropertyChanging
		entity.P_0110_cls = Me
	End Sub
	
	Private Sub detach_eva_cls(ByVal entity As eva_cls)
		Me.SendPropertyChanging
		entity.P_0110_cls = Nothing
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.p_0111")>  _
Partial Public Class p_0111_cls
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _id_p_0111 As Integer
	
	Private _pnu_des As String
	
	Private _pnu_est As System.Nullable(Of Char)
	
	Private _cdn_cls As EntitySet(Of cdn_cls)
	
    #Region "Definiciones de métodos de extensibilidad"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub Onid_p_0111Changing(value As Integer)
    End Sub
    Partial Private Sub Onid_p_0111Changed()
    End Sub
    Partial Private Sub Onpnu_desChanging(value As String)
    End Sub
    Partial Private Sub Onpnu_desChanged()
    End Sub
    Partial Private Sub Onpnu_estChanging(value As System.Nullable(Of Char))
    End Sub
    Partial Private Sub Onpnu_estChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		Me._cdn_cls = New EntitySet(Of cdn_cls)(AddressOf Me.attach_cdn_cls, AddressOf Me.detach_cdn_cls)
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_id_p_0111", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property id_p_0111() As Integer
		Get
			Return Me._id_p_0111
		End Get
		Set
			If ((Me._id_p_0111 = value)  _
						= false) Then
				Me.Onid_p_0111Changing(value)
				Me.SendPropertyChanging
				Me._id_p_0111 = value
				Me.SendPropertyChanged("id_p_0111")
				Me.Onid_p_0111Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pnu_des", DbType:="VarChar(50)")>  _
	Public Property pnu_des() As String
		Get
			Return Me._pnu_des
		End Get
		Set
			If (String.Equals(Me._pnu_des, value) = false) Then
				Me.Onpnu_desChanging(value)
				Me.SendPropertyChanging
				Me._pnu_des = value
				Me.SendPropertyChanged("pnu_des")
				Me.Onpnu_desChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pnu_est", DbType:="Char(1)")>  _
	Public Property pnu_est() As System.Nullable(Of Char)
		Get
			Return Me._pnu_est
		End Get
		Set
			If (Me._pnu_est.Equals(value) = false) Then
				Me.Onpnu_estChanging(value)
				Me.SendPropertyChanging
				Me._pnu_est = value
				Me.SendPropertyChanged("pnu_est")
				Me.Onpnu_estChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="p_0111_cls_cdn_cls", Storage:="_cdn_cls", ThisKey:="id_p_0111", OtherKey:="id_p_0111")>  _
	Public Property cdn_cls() As EntitySet(Of cdn_cls)
		Get
			Return Me._cdn_cls
		End Get
		Set
			Me._cdn_cls.Assign(value)
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
	
	Private Sub attach_cdn_cls(ByVal entity As cdn_cls)
		Me.SendPropertyChanging
		entity.p_0111_cls = Me
	End Sub
	
	Private Sub detach_cdn_cls(ByVal entity As cdn_cls)
		Me.SendPropertyChanging
		entity.p_0111_cls = Nothing
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.P_0112")>  _
Partial Public Class P_0112_cls
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _id_P_0112 As Integer
	
	Private _pnu_des As String
	
	Private _pnu_est As Char
	
	Private _chr_cls As EntitySet(Of chr_cls)
	
	Private _dsi_cls As EntitySet(Of dsi_cls)
	
    #Region "Definiciones de métodos de extensibilidad"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub Onid_P_0112Changing(value As Integer)
    End Sub
    Partial Private Sub Onid_P_0112Changed()
    End Sub
    Partial Private Sub Onpnu_desChanging(value As String)
    End Sub
    Partial Private Sub Onpnu_desChanged()
    End Sub
    Partial Private Sub Onpnu_estChanging(value As Char)
    End Sub
    Partial Private Sub Onpnu_estChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		Me._chr_cls = New EntitySet(Of chr_cls)(AddressOf Me.attach_chr_cls, AddressOf Me.detach_chr_cls)
		Me._dsi_cls = New EntitySet(Of dsi_cls)(AddressOf Me.attach_dsi_cls, AddressOf Me.detach_dsi_cls)
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_id_P_0112", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property id_P_0112() As Integer
		Get
			Return Me._id_P_0112
		End Get
		Set
			If ((Me._id_P_0112 = value)  _
						= false) Then
				Me.Onid_P_0112Changing(value)
				Me.SendPropertyChanging
				Me._id_P_0112 = value
				Me.SendPropertyChanged("id_P_0112")
				Me.Onid_P_0112Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pnu_des", DbType:="VarChar(50) NOT NULL", CanBeNull:=false)>  _
	Public Property pnu_des() As String
		Get
			Return Me._pnu_des
		End Get
		Set
			If (String.Equals(Me._pnu_des, value) = false) Then
				Me.Onpnu_desChanging(value)
				Me.SendPropertyChanging
				Me._pnu_des = value
				Me.SendPropertyChanged("pnu_des")
				Me.Onpnu_desChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pnu_est", DbType:="Char(1) NOT NULL")>  _
	Public Property pnu_est() As Char
		Get
			Return Me._pnu_est
		End Get
		Set
			If ((Me._pnu_est = value)  _
						= false) Then
				Me.Onpnu_estChanging(value)
				Me.SendPropertyChanging
				Me._pnu_est = value
				Me.SendPropertyChanged("pnu_est")
				Me.Onpnu_estChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="P_0112_cls_chr_cls", Storage:="_chr_cls", ThisKey:="id_P_0112", OtherKey:="id_P_0112")>  _
	Public Property chr_cls() As EntitySet(Of chr_cls)
		Get
			Return Me._chr_cls
		End Get
		Set
			Me._chr_cls.Assign(value)
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="P_0112_cls_dsi_cls", Storage:="_dsi_cls", ThisKey:="id_P_0112", OtherKey:="id_P_0112")>  _
	Public Property dsi_cls() As EntitySet(Of dsi_cls)
		Get
			Return Me._dsi_cls
		End Get
		Set
			Me._dsi_cls.Assign(value)
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
	
	Private Sub attach_chr_cls(ByVal entity As chr_cls)
		Me.SendPropertyChanging
		entity.P_0112_cls = Me
	End Sub
	
	Private Sub detach_chr_cls(ByVal entity As chr_cls)
		Me.SendPropertyChanging
		entity.P_0112_cls = Nothing
	End Sub
	
	Private Sub attach_dsi_cls(ByVal entity As dsi_cls)
		Me.SendPropertyChanging
		entity.P_0112_cls = Me
	End Sub
	
	Private Sub detach_dsi_cls(ByVal entity As dsi_cls)
		Me.SendPropertyChanging
		entity.P_0112_cls = Nothing
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.p_0113")>  _
Partial Public Class p_0113_cls
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _id_p_0113 As Integer
	
	Private _pnu_des As String
	
	Private _pnu_est As System.Nullable(Of Char)
	
	Private _chr_cls As EntitySet(Of chr_cls)
	
    #Region "Definiciones de métodos de extensibilidad"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub Onid_p_0113Changing(value As Integer)
    End Sub
    Partial Private Sub Onid_p_0113Changed()
    End Sub
    Partial Private Sub Onpnu_desChanging(value As String)
    End Sub
    Partial Private Sub Onpnu_desChanged()
    End Sub
    Partial Private Sub Onpnu_estChanging(value As System.Nullable(Of Char))
    End Sub
    Partial Private Sub Onpnu_estChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		Me._chr_cls = New EntitySet(Of chr_cls)(AddressOf Me.attach_chr_cls, AddressOf Me.detach_chr_cls)
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_id_p_0113", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property id_p_0113() As Integer
		Get
			Return Me._id_p_0113
		End Get
		Set
			If ((Me._id_p_0113 = value)  _
						= false) Then
				Me.Onid_p_0113Changing(value)
				Me.SendPropertyChanging
				Me._id_p_0113 = value
				Me.SendPropertyChanged("id_p_0113")
				Me.Onid_p_0113Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pnu_des", DbType:="VarChar(50)")>  _
	Public Property pnu_des() As String
		Get
			Return Me._pnu_des
		End Get
		Set
			If (String.Equals(Me._pnu_des, value) = false) Then
				Me.Onpnu_desChanging(value)
				Me.SendPropertyChanging
				Me._pnu_des = value
				Me.SendPropertyChanged("pnu_des")
				Me.Onpnu_desChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pnu_est", DbType:="Char(1)")>  _
	Public Property pnu_est() As System.Nullable(Of Char)
		Get
			Return Me._pnu_est
		End Get
		Set
			If (Me._pnu_est.Equals(value) = false) Then
				Me.Onpnu_estChanging(value)
				Me.SendPropertyChanging
				Me._pnu_est = value
				Me.SendPropertyChanged("pnu_est")
				Me.Onpnu_estChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="p_0113_cls_chr_cls", Storage:="_chr_cls", ThisKey:="id_p_0113", OtherKey:="id_P_0113")>  _
	Public Property chr_cls() As EntitySet(Of chr_cls)
		Get
			Return Me._chr_cls
		End Get
		Set
			Me._chr_cls.Assign(value)
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
	
	Private Sub attach_chr_cls(ByVal entity As chr_cls)
		Me.SendPropertyChanging
		entity.p_0113_cls = Me
	End Sub
	
	Private Sub detach_chr_cls(ByVal entity As chr_cls)
		Me.SendPropertyChanging
		entity.p_0113_cls = Nothing
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.P_0115")>  _
Partial Public Class P_0115_cls
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _id_P_0115 As Integer
	
	Private _pnu_des As String
	
	Private _pnu_est As System.Nullable(Of Char)
	
	Private _agd_cls As EntitySet(Of agd_cls)
	
    #Region "Definiciones de métodos de extensibilidad"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub Onid_P_0115Changing(value As Integer)
    End Sub
    Partial Private Sub Onid_P_0115Changed()
    End Sub
    Partial Private Sub Onpnu_desChanging(value As String)
    End Sub
    Partial Private Sub Onpnu_desChanged()
    End Sub
    Partial Private Sub Onpnu_estChanging(value As System.Nullable(Of Char))
    End Sub
    Partial Private Sub Onpnu_estChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		Me._agd_cls = New EntitySet(Of agd_cls)(AddressOf Me.attach_agd_cls, AddressOf Me.detach_agd_cls)
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_id_P_0115", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property id_P_0115() As Integer
		Get
			Return Me._id_P_0115
		End Get
		Set
			If ((Me._id_P_0115 = value)  _
						= false) Then
				Me.Onid_P_0115Changing(value)
				Me.SendPropertyChanging
				Me._id_P_0115 = value
				Me.SendPropertyChanged("id_P_0115")
				Me.Onid_P_0115Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pnu_des", DbType:="VarChar(80)")>  _
	Public Property pnu_des() As String
		Get
			Return Me._pnu_des
		End Get
		Set
			If (String.Equals(Me._pnu_des, value) = false) Then
				Me.Onpnu_desChanging(value)
				Me.SendPropertyChanging
				Me._pnu_des = value
				Me.SendPropertyChanged("pnu_des")
				Me.Onpnu_desChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pnu_est", DbType:="Char(1)")>  _
	Public Property pnu_est() As System.Nullable(Of Char)
		Get
			Return Me._pnu_est
		End Get
		Set
			If (Me._pnu_est.Equals(value) = false) Then
				Me.Onpnu_estChanging(value)
				Me.SendPropertyChanging
				Me._pnu_est = value
				Me.SendPropertyChanged("pnu_est")
				Me.Onpnu_estChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="P_0115_cls_agd_cls", Storage:="_agd_cls", ThisKey:="id_P_0115", OtherKey:="id_p_0115")>  _
	Public Property agd_cls() As EntitySet(Of agd_cls)
		Get
			Return Me._agd_cls
		End Get
		Set
			Me._agd_cls.Assign(value)
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
	
	Private Sub attach_agd_cls(ByVal entity As agd_cls)
		Me.SendPropertyChanging
		entity.P_0115_cls = Me
	End Sub
	
	Private Sub detach_agd_cls(ByVal entity As agd_cls)
		Me.SendPropertyChanging
		entity.P_0115_cls = Nothing
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.P_0116")>  _
Partial Public Class P_0116_cls
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _id_P_0116 As Integer
	
	Private _pnu_des As String
	
	Private _pnu_est As System.Nullable(Of Char)
	
	Private _con_cls As EntitySet(Of con_cls)
	
    #Region "Definiciones de métodos de extensibilidad"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub Onid_P_0116Changing(value As Integer)
    End Sub
    Partial Private Sub Onid_P_0116Changed()
    End Sub
    Partial Private Sub Onpnu_desChanging(value As String)
    End Sub
    Partial Private Sub Onpnu_desChanged()
    End Sub
    Partial Private Sub Onpnu_estChanging(value As System.Nullable(Of Char))
    End Sub
    Partial Private Sub Onpnu_estChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		Me._con_cls = New EntitySet(Of con_cls)(AddressOf Me.attach_con_cls, AddressOf Me.detach_con_cls)
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_id_P_0116", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property id_P_0116() As Integer
		Get
			Return Me._id_P_0116
		End Get
		Set
			If ((Me._id_P_0116 = value)  _
						= false) Then
				Me.Onid_P_0116Changing(value)
				Me.SendPropertyChanging
				Me._id_P_0116 = value
				Me.SendPropertyChanged("id_P_0116")
				Me.Onid_P_0116Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pnu_des", DbType:="VarChar(80)")>  _
	Public Property pnu_des() As String
		Get
			Return Me._pnu_des
		End Get
		Set
			If (String.Equals(Me._pnu_des, value) = false) Then
				Me.Onpnu_desChanging(value)
				Me.SendPropertyChanging
				Me._pnu_des = value
				Me.SendPropertyChanged("pnu_des")
				Me.Onpnu_desChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pnu_est", DbType:="Char(1)")>  _
	Public Property pnu_est() As System.Nullable(Of Char)
		Get
			Return Me._pnu_est
		End Get
		Set
			If (Me._pnu_est.Equals(value) = false) Then
				Me.Onpnu_estChanging(value)
				Me.SendPropertyChanging
				Me._pnu_est = value
				Me.SendPropertyChanged("pnu_est")
				Me.Onpnu_estChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="P_0116_cls_con_cls", Storage:="_con_cls", ThisKey:="id_P_0116", OtherKey:="id_p_0116")>  _
	Public Property con_cls() As EntitySet(Of con_cls)
		Get
			Return Me._con_cls
		End Get
		Set
			Me._con_cls.Assign(value)
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
	
	Private Sub attach_con_cls(ByVal entity As con_cls)
		Me.SendPropertyChanging
		entity.P_0116_cls = Me
	End Sub
	
	Private Sub detach_con_cls(ByVal entity As con_cls)
		Me.SendPropertyChanging
		entity.P_0116_cls = Nothing
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.P_0117")>  _
Partial Public Class P_0117_cls
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _id_P_0117 As Integer
	
	Private _pnu_des As String
	
	Private _pnu_est As System.Nullable(Of Char)
	
	Private _con_cls As EntitySet(Of con_cls)
	
    #Region "Definiciones de métodos de extensibilidad"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub Onid_P_0117Changing(value As Integer)
    End Sub
    Partial Private Sub Onid_P_0117Changed()
    End Sub
    Partial Private Sub Onpnu_desChanging(value As String)
    End Sub
    Partial Private Sub Onpnu_desChanged()
    End Sub
    Partial Private Sub Onpnu_estChanging(value As System.Nullable(Of Char))
    End Sub
    Partial Private Sub Onpnu_estChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		Me._con_cls = New EntitySet(Of con_cls)(AddressOf Me.attach_con_cls, AddressOf Me.detach_con_cls)
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_id_P_0117", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property id_P_0117() As Integer
		Get
			Return Me._id_P_0117
		End Get
		Set
			If ((Me._id_P_0117 = value)  _
						= false) Then
				Me.Onid_P_0117Changing(value)
				Me.SendPropertyChanging
				Me._id_P_0117 = value
				Me.SendPropertyChanged("id_P_0117")
				Me.Onid_P_0117Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pnu_des", DbType:="VarChar(80)")>  _
	Public Property pnu_des() As String
		Get
			Return Me._pnu_des
		End Get
		Set
			If (String.Equals(Me._pnu_des, value) = false) Then
				Me.Onpnu_desChanging(value)
				Me.SendPropertyChanging
				Me._pnu_des = value
				Me.SendPropertyChanged("pnu_des")
				Me.Onpnu_desChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pnu_est", DbType:="Char(1)")>  _
	Public Property pnu_est() As System.Nullable(Of Char)
		Get
			Return Me._pnu_est
		End Get
		Set
			If (Me._pnu_est.Equals(value) = false) Then
				Me.Onpnu_estChanging(value)
				Me.SendPropertyChanging
				Me._pnu_est = value
				Me.SendPropertyChanged("pnu_est")
				Me.Onpnu_estChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="P_0117_cls_con_cls", Storage:="_con_cls", ThisKey:="id_P_0117", OtherKey:="id_p_0117")>  _
	Public Property con_cls() As EntitySet(Of con_cls)
		Get
			Return Me._con_cls
		End Get
		Set
			Me._con_cls.Assign(value)
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
	
	Private Sub attach_con_cls(ByVal entity As con_cls)
		Me.SendPropertyChanging
		entity.P_0117_cls = Me
	End Sub
	
	Private Sub detach_con_cls(ByVal entity As con_cls)
		Me.SendPropertyChanging
		entity.P_0117_cls = Nothing
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.P_0118")>  _
Partial Public Class P_0118_cls
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _id_P_0118 As Integer
	
	Private _pnu_des As String
	
	Private _pnu_est As System.Nullable(Of Char)
	
	Private _cli_cls As EntitySet(Of cli_cls)
	
    #Region "Definiciones de métodos de extensibilidad"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub Onid_P_0118Changing(value As Integer)
    End Sub
    Partial Private Sub Onid_P_0118Changed()
    End Sub
    Partial Private Sub Onpnu_desChanging(value As String)
    End Sub
    Partial Private Sub Onpnu_desChanged()
    End Sub
    Partial Private Sub Onpnu_estChanging(value As System.Nullable(Of Char))
    End Sub
    Partial Private Sub Onpnu_estChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		Me._cli_cls = New EntitySet(Of cli_cls)(AddressOf Me.attach_cli_cls, AddressOf Me.detach_cli_cls)
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_id_P_0118", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property id_P_0118() As Integer
		Get
			Return Me._id_P_0118
		End Get
		Set
			If ((Me._id_P_0118 = value)  _
						= false) Then
				Me.Onid_P_0118Changing(value)
				Me.SendPropertyChanging
				Me._id_P_0118 = value
				Me.SendPropertyChanged("id_P_0118")
				Me.Onid_P_0118Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pnu_des", DbType:="VarChar(80)")>  _
	Public Property pnu_des() As String
		Get
			Return Me._pnu_des
		End Get
		Set
			If (String.Equals(Me._pnu_des, value) = false) Then
				Me.Onpnu_desChanging(value)
				Me.SendPropertyChanging
				Me._pnu_des = value
				Me.SendPropertyChanged("pnu_des")
				Me.Onpnu_desChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pnu_est", DbType:="Char(1)")>  _
	Public Property pnu_est() As System.Nullable(Of Char)
		Get
			Return Me._pnu_est
		End Get
		Set
			If (Me._pnu_est.Equals(value) = false) Then
				Me.Onpnu_estChanging(value)
				Me.SendPropertyChanging
				Me._pnu_est = value
				Me.SendPropertyChanged("pnu_est")
				Me.Onpnu_estChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="P_0118_cls_cli_cls", Storage:="_cli_cls", ThisKey:="id_P_0118", OtherKey:="id_p_0118")>  _
	Public Property cli_cls() As EntitySet(Of cli_cls)
		Get
			Return Me._cli_cls
		End Get
		Set
			Me._cli_cls.Assign(value)
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
	
	Private Sub attach_cli_cls(ByVal entity As cli_cls)
		Me.SendPropertyChanging
		entity.P_0118_cls = Me
	End Sub
	
	Private Sub detach_cli_cls(ByVal entity As cli_cls)
		Me.SendPropertyChanging
		entity.P_0118_cls = Nothing
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.P_0119")>  _
Partial Public Class P_0119_cls
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _id_0119 As Integer
	
	Private _pnu_des As String
	
	Private _pnu_cod_bco As Char
	
	Private _pnu_vld_dig As Char
	
	Private _PNU_PAR_EST As System.Nullable(Of Integer)
	
	Private _ID_0119_2 As String
	
	Private _cli_cls As EntitySet(Of cli_cls)
	
	Private _deu_cls As EntitySet(Of deu_cls)
	
    #Region "Definiciones de métodos de extensibilidad"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub Onid_0119Changing(value As Integer)
    End Sub
    Partial Private Sub Onid_0119Changed()
    End Sub
    Partial Private Sub Onpnu_desChanging(value As String)
    End Sub
    Partial Private Sub Onpnu_desChanged()
    End Sub
    Partial Private Sub Onpnu_cod_bcoChanging(value As Char)
    End Sub
    Partial Private Sub Onpnu_cod_bcoChanged()
    End Sub
    Partial Private Sub Onpnu_vld_digChanging(value As Char)
    End Sub
    Partial Private Sub Onpnu_vld_digChanged()
    End Sub
    Partial Private Sub OnPNU_PAR_ESTChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnPNU_PAR_ESTChanged()
    End Sub
    Partial Private Sub OnID_0119_2Changing(value As String)
    End Sub
    Partial Private Sub OnID_0119_2Changed()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		Me._cli_cls = New EntitySet(Of cli_cls)(AddressOf Me.attach_cli_cls, AddressOf Me.detach_cli_cls)
		Me._deu_cls = New EntitySet(Of deu_cls)(AddressOf Me.attach_deu_cls, AddressOf Me.detach_deu_cls)
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_id_0119", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property id_0119() As Integer
		Get
			Return Me._id_0119
		End Get
		Set
			If ((Me._id_0119 = value)  _
						= false) Then
				Me.Onid_0119Changing(value)
				Me.SendPropertyChanging
				Me._id_0119 = value
				Me.SendPropertyChanged("id_0119")
				Me.Onid_0119Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pnu_des", DbType:="VarChar(50) NOT NULL", CanBeNull:=false)>  _
	Public Property pnu_des() As String
		Get
			Return Me._pnu_des
		End Get
		Set
			If (String.Equals(Me._pnu_des, value) = false) Then
				Me.Onpnu_desChanging(value)
				Me.SendPropertyChanging
				Me._pnu_des = value
				Me.SendPropertyChanged("pnu_des")
				Me.Onpnu_desChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pnu_cod_bco", DbType:="Char(1) NOT NULL")>  _
	Public Property pnu_cod_bco() As Char
		Get
			Return Me._pnu_cod_bco
		End Get
		Set
			If ((Me._pnu_cod_bco = value)  _
						= false) Then
				Me.Onpnu_cod_bcoChanging(value)
				Me.SendPropertyChanging
				Me._pnu_cod_bco = value
				Me.SendPropertyChanged("pnu_cod_bco")
				Me.Onpnu_cod_bcoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pnu_vld_dig", DbType:="Char(1) NOT NULL")>  _
	Public Property pnu_vld_dig() As Char
		Get
			Return Me._pnu_vld_dig
		End Get
		Set
			If ((Me._pnu_vld_dig = value)  _
						= false) Then
				Me.Onpnu_vld_digChanging(value)
				Me.SendPropertyChanging
				Me._pnu_vld_dig = value
				Me.SendPropertyChanged("pnu_vld_dig")
				Me.Onpnu_vld_digChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PNU_PAR_EST", DbType:="Int")>  _
	Public Property PNU_PAR_EST() As System.Nullable(Of Integer)
		Get
			Return Me._PNU_PAR_EST
		End Get
		Set
			If (Me._PNU_PAR_EST.Equals(value) = false) Then
				Me.OnPNU_PAR_ESTChanging(value)
				Me.SendPropertyChanging
				Me._PNU_PAR_EST = value
				Me.SendPropertyChanged("PNU_PAR_EST")
				Me.OnPNU_PAR_ESTChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ID_0119_2", DbType:="VarChar(3)")>  _
	Public Property ID_0119_2() As String
		Get
			Return Me._ID_0119_2
		End Get
		Set
			If (String.Equals(Me._ID_0119_2, value) = false) Then
				Me.OnID_0119_2Changing(value)
				Me.SendPropertyChanging
				Me._ID_0119_2 = value
				Me.SendPropertyChanged("ID_0119_2")
				Me.OnID_0119_2Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="P_0119_cls_cli_cls", Storage:="_cli_cls", ThisKey:="id_0119", OtherKey:="id_P_0119")>  _
	Public Property cli_cls() As EntitySet(Of cli_cls)
		Get
			Return Me._cli_cls
		End Get
		Set
			Me._cli_cls.Assign(value)
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="P_0119_cls_deu_cls", Storage:="_deu_cls", ThisKey:="id_0119", OtherKey:="id_p_0119")>  _
	Public Property deu_cls() As EntitySet(Of deu_cls)
		Get
			Return Me._deu_cls
		End Get
		Set
			Me._deu_cls.Assign(value)
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
	
	Private Sub attach_cli_cls(ByVal entity As cli_cls)
		Me.SendPropertyChanging
		entity.P_0119_cls = Me
	End Sub
	
	Private Sub detach_cli_cls(ByVal entity As cli_cls)
		Me.SendPropertyChanging
		entity.P_0119_cls = Nothing
	End Sub
	
	Private Sub attach_deu_cls(ByVal entity As deu_cls)
		Me.SendPropertyChanging
		entity.P_0119_cls = Me
	End Sub
	
	Private Sub detach_deu_cls(ByVal entity As deu_cls)
		Me.SendPropertyChanging
		entity.P_0119_cls = Nothing
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.p_0120")>  _
Partial Public Class p_0120_cls
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _id_p_0120 As Integer
	
	Private _nomenclatura As String
	
	Private _pnu_des As String
	
    #Region "Definiciones de métodos de extensibilidad"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub Onid_p_0120Changing(value As Integer)
    End Sub
    Partial Private Sub Onid_p_0120Changed()
    End Sub
    Partial Private Sub OnnomenclaturaChanging(value As String)
    End Sub
    Partial Private Sub OnnomenclaturaChanged()
    End Sub
    Partial Private Sub Onpnu_desChanging(value As String)
    End Sub
    Partial Private Sub Onpnu_desChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_id_p_0120", DbType:="Int NOT NULL", IsPrimaryKey:=true)>  _
	Public Property id_p_0120() As Integer
		Get
			Return Me._id_p_0120
		End Get
		Set
			If ((Me._id_p_0120 = value)  _
						= false) Then
				Me.Onid_p_0120Changing(value)
				Me.SendPropertyChanging
				Me._id_p_0120 = value
				Me.SendPropertyChanged("id_p_0120")
				Me.Onid_p_0120Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_nomenclatura", DbType:="VarChar(5) NOT NULL", CanBeNull:=false)>  _
	Public Property nomenclatura() As String
		Get
			Return Me._nomenclatura
		End Get
		Set
			If (String.Equals(Me._nomenclatura, value) = false) Then
				Me.OnnomenclaturaChanging(value)
				Me.SendPropertyChanging
				Me._nomenclatura = value
				Me.SendPropertyChanged("nomenclatura")
				Me.OnnomenclaturaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pnu_des", DbType:="VarChar(100)")>  _
	Public Property pnu_des() As String
		Get
			Return Me._pnu_des
		End Get
		Set
			If (String.Equals(Me._pnu_des, value) = false) Then
				Me.Onpnu_desChanging(value)
				Me.SendPropertyChanging
				Me._pnu_des = value
				Me.SendPropertyChanged("pnu_des")
				Me.Onpnu_desChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.p_0121")>  _
Partial Public Class p_0121_cls
	
	Private _id_p_0121 As Integer
	
	Private _nomenclatura As String
	
	Private _pnu_des As String
	
	Public Sub New()
		MyBase.New
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_id_p_0121", AutoSync:=AutoSync.Always, DbType:="Int NOT NULL IDENTITY", IsDbGenerated:=true)>  _
	Public Property id_p_0121() As Integer
		Get
			Return Me._id_p_0121
		End Get
		Set
			If ((Me._id_p_0121 = value)  _
						= false) Then
				Me._id_p_0121 = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_nomenclatura", DbType:="VarChar(10)")>  _
	Public Property nomenclatura() As String
		Get
			Return Me._nomenclatura
		End Get
		Set
			If (String.Equals(Me._nomenclatura, value) = false) Then
				Me._nomenclatura = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pnu_des", DbType:="VarChar(50)")>  _
	Public Property pnu_des() As String
		Get
			Return Me._pnu_des
		End Get
		Set
			If (String.Equals(Me._pnu_des, value) = false) Then
				Me._pnu_des = value
			End If
		End Set
	End Property
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.p_0122")>  _
Partial Public Class p_0122_cls
	
	Private _ID As Integer
	
	Private _DESCRIPCION As String
	
	Private _ESTADO As System.Nullable(Of Boolean)
	
	Public Sub New()
		MyBase.New
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ID", AutoSync:=AutoSync.Always, DbType:="Int NOT NULL IDENTITY", IsDbGenerated:=true)>  _
	Public Property ID() As Integer
		Get
			Return Me._ID
		End Get
		Set
			If ((Me._ID = value)  _
						= false) Then
				Me._ID = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DESCRIPCION", DbType:="VarChar(50)")>  _
	Public Property DESCRIPCION() As String
		Get
			Return Me._DESCRIPCION
		End Get
		Set
			If (String.Equals(Me._DESCRIPCION, value) = false) Then
				Me._DESCRIPCION = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ESTADO", DbType:="Bit")>  _
	Public Property ESTADO() As System.Nullable(Of Boolean)
		Get
			Return Me._ESTADO
		End Get
		Set
			If (Me._ESTADO.Equals(value) = false) Then
				Me._ESTADO = value
			End If
		End Set
	End Property
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.P_0300")>  _
Partial Public Class P_0300_cls
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _id_P_0300 As Integer
	
	Private _pnu_des As String
	
	Private _pnu_est As System.Nullable(Of Char)
	
	Private _pnu_cod_temporal As System.Nullable(Of Integer)
	
    #Region "Definiciones de métodos de extensibilidad"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub Onid_P_0300Changing(value As Integer)
    End Sub
    Partial Private Sub Onid_P_0300Changed()
    End Sub
    Partial Private Sub Onpnu_desChanging(value As String)
    End Sub
    Partial Private Sub Onpnu_desChanged()
    End Sub
    Partial Private Sub Onpnu_estChanging(value As System.Nullable(Of Char))
    End Sub
    Partial Private Sub Onpnu_estChanged()
    End Sub
    Partial Private Sub Onpnu_cod_temporalChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub Onpnu_cod_temporalChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_id_P_0300", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property id_P_0300() As Integer
		Get
			Return Me._id_P_0300
		End Get
		Set
			If ((Me._id_P_0300 = value)  _
						= false) Then
				Me.Onid_P_0300Changing(value)
				Me.SendPropertyChanging
				Me._id_P_0300 = value
				Me.SendPropertyChanged("id_P_0300")
				Me.Onid_P_0300Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pnu_des", DbType:="VarChar(80)")>  _
	Public Property pnu_des() As String
		Get
			Return Me._pnu_des
		End Get
		Set
			If (String.Equals(Me._pnu_des, value) = false) Then
				Me.Onpnu_desChanging(value)
				Me.SendPropertyChanging
				Me._pnu_des = value
				Me.SendPropertyChanged("pnu_des")
				Me.Onpnu_desChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pnu_est", DbType:="Char(1)")>  _
	Public Property pnu_est() As System.Nullable(Of Char)
		Get
			Return Me._pnu_est
		End Get
		Set
			If (Me._pnu_est.Equals(value) = false) Then
				Me.Onpnu_estChanging(value)
				Me.SendPropertyChanging
				Me._pnu_est = value
				Me.SendPropertyChanged("pnu_est")
				Me.Onpnu_estChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pnu_cod_temporal", DbType:="Int")>  _
	Public Property pnu_cod_temporal() As System.Nullable(Of Integer)
		Get
			Return Me._pnu_cod_temporal
		End Get
		Set
			If (Me._pnu_cod_temporal.Equals(value) = false) Then
				Me.Onpnu_cod_temporalChanging(value)
				Me.SendPropertyChanging
				Me._pnu_cod_temporal = value
				Me.SendPropertyChanged("pnu_cod_temporal")
				Me.Onpnu_cod_temporalChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.P_0301")>  _
Partial Public Class P_0301_cls
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _id_P_0301 As Integer
	
	Private _pnu_des As String
	
	Private _pnu_est As System.Nullable(Of Char)
	
	Private _pnu_atr_001 As String
	
	Private _pnu_atr_002 As String
	
    #Region "Definiciones de métodos de extensibilidad"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub Onid_P_0301Changing(value As Integer)
    End Sub
    Partial Private Sub Onid_P_0301Changed()
    End Sub
    Partial Private Sub Onpnu_desChanging(value As String)
    End Sub
    Partial Private Sub Onpnu_desChanged()
    End Sub
    Partial Private Sub Onpnu_estChanging(value As System.Nullable(Of Char))
    End Sub
    Partial Private Sub Onpnu_estChanged()
    End Sub
    Partial Private Sub Onpnu_atr_001Changing(value As String)
    End Sub
    Partial Private Sub Onpnu_atr_001Changed()
    End Sub
    Partial Private Sub Onpnu_atr_002Changing(value As String)
    End Sub
    Partial Private Sub Onpnu_atr_002Changed()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_id_P_0301", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property id_P_0301() As Integer
		Get
			Return Me._id_P_0301
		End Get
		Set
			If ((Me._id_P_0301 = value)  _
						= false) Then
				Me.Onid_P_0301Changing(value)
				Me.SendPropertyChanging
				Me._id_P_0301 = value
				Me.SendPropertyChanged("id_P_0301")
				Me.Onid_P_0301Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pnu_des", DbType:="VarChar(80)")>  _
	Public Property pnu_des() As String
		Get
			Return Me._pnu_des
		End Get
		Set
			If (String.Equals(Me._pnu_des, value) = false) Then
				Me.Onpnu_desChanging(value)
				Me.SendPropertyChanging
				Me._pnu_des = value
				Me.SendPropertyChanged("pnu_des")
				Me.Onpnu_desChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pnu_est", DbType:="Char(1)")>  _
	Public Property pnu_est() As System.Nullable(Of Char)
		Get
			Return Me._pnu_est
		End Get
		Set
			If (Me._pnu_est.Equals(value) = false) Then
				Me.Onpnu_estChanging(value)
				Me.SendPropertyChanging
				Me._pnu_est = value
				Me.SendPropertyChanged("pnu_est")
				Me.Onpnu_estChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pnu_atr_001", DbType:="VarChar(250)")>  _
	Public Property pnu_atr_001() As String
		Get
			Return Me._pnu_atr_001
		End Get
		Set
			If (String.Equals(Me._pnu_atr_001, value) = false) Then
				Me.Onpnu_atr_001Changing(value)
				Me.SendPropertyChanging
				Me._pnu_atr_001 = value
				Me.SendPropertyChanged("pnu_atr_001")
				Me.Onpnu_atr_001Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pnu_atr_002", DbType:="VarChar(250)")>  _
	Public Property pnu_atr_002() As String
		Get
			Return Me._pnu_atr_002
		End Get
		Set
			If (String.Equals(Me._pnu_atr_002, value) = false) Then
				Me.Onpnu_atr_002Changing(value)
				Me.SendPropertyChanging
				Me._pnu_atr_002 = value
				Me.SendPropertyChanged("pnu_atr_002")
				Me.Onpnu_atr_002Changed
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.P_0302")>  _
Partial Public Class P_0302_cls
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _id_P_0302 As Integer
	
	Private _pnu_des As String
	
	Private _pnu_est As System.Nullable(Of Char)
	
	Private _pnu_cod_temporal As System.Nullable(Of Integer)
	
    #Region "Definiciones de métodos de extensibilidad"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub Onid_P_0302Changing(value As Integer)
    End Sub
    Partial Private Sub Onid_P_0302Changed()
    End Sub
    Partial Private Sub Onpnu_desChanging(value As String)
    End Sub
    Partial Private Sub Onpnu_desChanged()
    End Sub
    Partial Private Sub Onpnu_estChanging(value As System.Nullable(Of Char))
    End Sub
    Partial Private Sub Onpnu_estChanged()
    End Sub
    Partial Private Sub Onpnu_cod_temporalChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub Onpnu_cod_temporalChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_id_P_0302", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property id_P_0302() As Integer
		Get
			Return Me._id_P_0302
		End Get
		Set
			If ((Me._id_P_0302 = value)  _
						= false) Then
				Me.Onid_P_0302Changing(value)
				Me.SendPropertyChanging
				Me._id_P_0302 = value
				Me.SendPropertyChanged("id_P_0302")
				Me.Onid_P_0302Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pnu_des", DbType:="VarChar(80)")>  _
	Public Property pnu_des() As String
		Get
			Return Me._pnu_des
		End Get
		Set
			If (String.Equals(Me._pnu_des, value) = false) Then
				Me.Onpnu_desChanging(value)
				Me.SendPropertyChanging
				Me._pnu_des = value
				Me.SendPropertyChanged("pnu_des")
				Me.Onpnu_desChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pnu_est", DbType:="Char(1)")>  _
	Public Property pnu_est() As System.Nullable(Of Char)
		Get
			Return Me._pnu_est
		End Get
		Set
			If (Me._pnu_est.Equals(value) = false) Then
				Me.Onpnu_estChanging(value)
				Me.SendPropertyChanging
				Me._pnu_est = value
				Me.SendPropertyChanged("pnu_est")
				Me.Onpnu_estChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pnu_cod_temporal", DbType:="Int")>  _
	Public Property pnu_cod_temporal() As System.Nullable(Of Integer)
		Get
			Return Me._pnu_cod_temporal
		End Get
		Set
			If (Me._pnu_cod_temporal.Equals(value) = false) Then
				Me.Onpnu_cod_temporalChanging(value)
				Me.SendPropertyChanging
				Me._pnu_cod_temporal = value
				Me.SendPropertyChanged("pnu_cod_temporal")
				Me.Onpnu_cod_temporalChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.P_0303")>  _
Partial Public Class P_0303_cls
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _id_P_0303 As Integer
	
	Private _pnu_des As String
	
	Private _pnu_est As System.Nullable(Of Char)
	
	Private _pnu_cod_temporal As System.Nullable(Of Integer)
	
    #Region "Definiciones de métodos de extensibilidad"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub Onid_P_0303Changing(value As Integer)
    End Sub
    Partial Private Sub Onid_P_0303Changed()
    End Sub
    Partial Private Sub Onpnu_desChanging(value As String)
    End Sub
    Partial Private Sub Onpnu_desChanged()
    End Sub
    Partial Private Sub Onpnu_estChanging(value As System.Nullable(Of Char))
    End Sub
    Partial Private Sub Onpnu_estChanged()
    End Sub
    Partial Private Sub Onpnu_cod_temporalChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub Onpnu_cod_temporalChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_id_P_0303", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property id_P_0303() As Integer
		Get
			Return Me._id_P_0303
		End Get
		Set
			If ((Me._id_P_0303 = value)  _
						= false) Then
				Me.Onid_P_0303Changing(value)
				Me.SendPropertyChanging
				Me._id_P_0303 = value
				Me.SendPropertyChanged("id_P_0303")
				Me.Onid_P_0303Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pnu_des", DbType:="VarChar(80)")>  _
	Public Property pnu_des() As String
		Get
			Return Me._pnu_des
		End Get
		Set
			If (String.Equals(Me._pnu_des, value) = false) Then
				Me.Onpnu_desChanging(value)
				Me.SendPropertyChanging
				Me._pnu_des = value
				Me.SendPropertyChanged("pnu_des")
				Me.Onpnu_desChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pnu_est", DbType:="Char(1)")>  _
	Public Property pnu_est() As System.Nullable(Of Char)
		Get
			Return Me._pnu_est
		End Get
		Set
			If (Me._pnu_est.Equals(value) = false) Then
				Me.Onpnu_estChanging(value)
				Me.SendPropertyChanging
				Me._pnu_est = value
				Me.SendPropertyChanged("pnu_est")
				Me.Onpnu_estChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pnu_cod_temporal", DbType:="Int")>  _
	Public Property pnu_cod_temporal() As System.Nullable(Of Integer)
		Get
			Return Me._pnu_cod_temporal
		End Get
		Set
			If (Me._pnu_cod_temporal.Equals(value) = false) Then
				Me.Onpnu_cod_temporalChanging(value)
				Me.SendPropertyChanging
				Me._pnu_cod_temporal = value
				Me.SendPropertyChanged("pnu_cod_temporal")
				Me.Onpnu_cod_temporalChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.P_0304")>  _
Partial Public Class P_0304_cls
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _id_P_0304 As Integer
	
	Private _pnu_des As String
	
	Private _pnu_est As System.Nullable(Of Char)
	
	Private _pnu_cod_temporal As System.Nullable(Of Integer)
	
    #Region "Definiciones de métodos de extensibilidad"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub Onid_P_0304Changing(value As Integer)
    End Sub
    Partial Private Sub Onid_P_0304Changed()
    End Sub
    Partial Private Sub Onpnu_desChanging(value As String)
    End Sub
    Partial Private Sub Onpnu_desChanged()
    End Sub
    Partial Private Sub Onpnu_estChanging(value As System.Nullable(Of Char))
    End Sub
    Partial Private Sub Onpnu_estChanged()
    End Sub
    Partial Private Sub Onpnu_cod_temporalChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub Onpnu_cod_temporalChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_id_P_0304", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property id_P_0304() As Integer
		Get
			Return Me._id_P_0304
		End Get
		Set
			If ((Me._id_P_0304 = value)  _
						= false) Then
				Me.Onid_P_0304Changing(value)
				Me.SendPropertyChanging
				Me._id_P_0304 = value
				Me.SendPropertyChanged("id_P_0304")
				Me.Onid_P_0304Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pnu_des", DbType:="VarChar(80)")>  _
	Public Property pnu_des() As String
		Get
			Return Me._pnu_des
		End Get
		Set
			If (String.Equals(Me._pnu_des, value) = false) Then
				Me.Onpnu_desChanging(value)
				Me.SendPropertyChanging
				Me._pnu_des = value
				Me.SendPropertyChanged("pnu_des")
				Me.Onpnu_desChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pnu_est", DbType:="Char(1)")>  _
	Public Property pnu_est() As System.Nullable(Of Char)
		Get
			Return Me._pnu_est
		End Get
		Set
			If (Me._pnu_est.Equals(value) = false) Then
				Me.Onpnu_estChanging(value)
				Me.SendPropertyChanging
				Me._pnu_est = value
				Me.SendPropertyChanged("pnu_est")
				Me.Onpnu_estChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pnu_cod_temporal", DbType:="Int")>  _
	Public Property pnu_cod_temporal() As System.Nullable(Of Integer)
		Get
			Return Me._pnu_cod_temporal
		End Get
		Set
			If (Me._pnu_cod_temporal.Equals(value) = false) Then
				Me.Onpnu_cod_temporalChanging(value)
				Me.SendPropertyChanging
				Me._pnu_cod_temporal = value
				Me.SendPropertyChanged("pnu_cod_temporal")
				Me.Onpnu_cod_temporalChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.P_0305")>  _
Partial Public Class P_0305_cls
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _id_P_0305 As Integer
	
	Private _pnu_des As String
	
	Private _pnu_est As System.Nullable(Of Char)
	
	Private _pnu_cod_temporal As System.Nullable(Of Integer)
	
    #Region "Definiciones de métodos de extensibilidad"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub Onid_P_0305Changing(value As Integer)
    End Sub
    Partial Private Sub Onid_P_0305Changed()
    End Sub
    Partial Private Sub Onpnu_desChanging(value As String)
    End Sub
    Partial Private Sub Onpnu_desChanged()
    End Sub
    Partial Private Sub Onpnu_estChanging(value As System.Nullable(Of Char))
    End Sub
    Partial Private Sub Onpnu_estChanged()
    End Sub
    Partial Private Sub Onpnu_cod_temporalChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub Onpnu_cod_temporalChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_id_P_0305", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property id_P_0305() As Integer
		Get
			Return Me._id_P_0305
		End Get
		Set
			If ((Me._id_P_0305 = value)  _
						= false) Then
				Me.Onid_P_0305Changing(value)
				Me.SendPropertyChanging
				Me._id_P_0305 = value
				Me.SendPropertyChanged("id_P_0305")
				Me.Onid_P_0305Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pnu_des", DbType:="VarChar(80)")>  _
	Public Property pnu_des() As String
		Get
			Return Me._pnu_des
		End Get
		Set
			If (String.Equals(Me._pnu_des, value) = false) Then
				Me.Onpnu_desChanging(value)
				Me.SendPropertyChanging
				Me._pnu_des = value
				Me.SendPropertyChanged("pnu_des")
				Me.Onpnu_desChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pnu_est", DbType:="Char(1)")>  _
	Public Property pnu_est() As System.Nullable(Of Char)
		Get
			Return Me._pnu_est
		End Get
		Set
			If (Me._pnu_est.Equals(value) = false) Then
				Me.Onpnu_estChanging(value)
				Me.SendPropertyChanging
				Me._pnu_est = value
				Me.SendPropertyChanged("pnu_est")
				Me.Onpnu_estChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pnu_cod_temporal", DbType:="Int")>  _
	Public Property pnu_cod_temporal() As System.Nullable(Of Integer)
		Get
			Return Me._pnu_cod_temporal
		End Get
		Set
			If (Me._pnu_cod_temporal.Equals(value) = false) Then
				Me.Onpnu_cod_temporalChanging(value)
				Me.SendPropertyChanging
				Me._pnu_cod_temporal = value
				Me.SendPropertyChanged("pnu_cod_temporal")
				Me.Onpnu_cod_temporalChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.P_0306")>  _
Partial Public Class P_0306_cls
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _id_P_0306 As Integer
	
	Private _pnu_des As String
	
	Private _pnu_est As System.Nullable(Of Char)
	
	Private _pnu_cod_temporal As System.Nullable(Of Integer)
	
    #Region "Definiciones de métodos de extensibilidad"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub Onid_P_0306Changing(value As Integer)
    End Sub
    Partial Private Sub Onid_P_0306Changed()
    End Sub
    Partial Private Sub Onpnu_desChanging(value As String)
    End Sub
    Partial Private Sub Onpnu_desChanged()
    End Sub
    Partial Private Sub Onpnu_estChanging(value As System.Nullable(Of Char))
    End Sub
    Partial Private Sub Onpnu_estChanged()
    End Sub
    Partial Private Sub Onpnu_cod_temporalChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub Onpnu_cod_temporalChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_id_P_0306", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property id_P_0306() As Integer
		Get
			Return Me._id_P_0306
		End Get
		Set
			If ((Me._id_P_0306 = value)  _
						= false) Then
				Me.Onid_P_0306Changing(value)
				Me.SendPropertyChanging
				Me._id_P_0306 = value
				Me.SendPropertyChanged("id_P_0306")
				Me.Onid_P_0306Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pnu_des", DbType:="VarChar(80)")>  _
	Public Property pnu_des() As String
		Get
			Return Me._pnu_des
		End Get
		Set
			If (String.Equals(Me._pnu_des, value) = false) Then
				Me.Onpnu_desChanging(value)
				Me.SendPropertyChanging
				Me._pnu_des = value
				Me.SendPropertyChanged("pnu_des")
				Me.Onpnu_desChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pnu_est", DbType:="Char(1)")>  _
	Public Property pnu_est() As System.Nullable(Of Char)
		Get
			Return Me._pnu_est
		End Get
		Set
			If (Me._pnu_est.Equals(value) = false) Then
				Me.Onpnu_estChanging(value)
				Me.SendPropertyChanging
				Me._pnu_est = value
				Me.SendPropertyChanged("pnu_est")
				Me.Onpnu_estChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pnu_cod_temporal", DbType:="Int")>  _
	Public Property pnu_cod_temporal() As System.Nullable(Of Integer)
		Get
			Return Me._pnu_cod_temporal
		End Get
		Set
			If (Me._pnu_cod_temporal.Equals(value) = false) Then
				Me.Onpnu_cod_temporalChanging(value)
				Me.SendPropertyChanging
				Me._pnu_cod_temporal = value
				Me.SendPropertyChanged("pnu_cod_temporal")
				Me.Onpnu_cod_temporalChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.P_0307")>  _
Partial Public Class P_0307_cls
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _id_P_0307 As Integer
	
	Private _pnu_des As String
	
	Private _pnu_est As System.Nullable(Of Char)
	
	Private _pnu_cod_temporal As System.Nullable(Of Integer)
	
    #Region "Definiciones de métodos de extensibilidad"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub Onid_P_0307Changing(value As Integer)
    End Sub
    Partial Private Sub Onid_P_0307Changed()
    End Sub
    Partial Private Sub Onpnu_desChanging(value As String)
    End Sub
    Partial Private Sub Onpnu_desChanged()
    End Sub
    Partial Private Sub Onpnu_estChanging(value As System.Nullable(Of Char))
    End Sub
    Partial Private Sub Onpnu_estChanged()
    End Sub
    Partial Private Sub Onpnu_cod_temporalChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub Onpnu_cod_temporalChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_id_P_0307", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property id_P_0307() As Integer
		Get
			Return Me._id_P_0307
		End Get
		Set
			If ((Me._id_P_0307 = value)  _
						= false) Then
				Me.Onid_P_0307Changing(value)
				Me.SendPropertyChanging
				Me._id_P_0307 = value
				Me.SendPropertyChanged("id_P_0307")
				Me.Onid_P_0307Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pnu_des", DbType:="VarChar(80)")>  _
	Public Property pnu_des() As String
		Get
			Return Me._pnu_des
		End Get
		Set
			If (String.Equals(Me._pnu_des, value) = false) Then
				Me.Onpnu_desChanging(value)
				Me.SendPropertyChanging
				Me._pnu_des = value
				Me.SendPropertyChanged("pnu_des")
				Me.Onpnu_desChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pnu_est", DbType:="Char(1)")>  _
	Public Property pnu_est() As System.Nullable(Of Char)
		Get
			Return Me._pnu_est
		End Get
		Set
			If (Me._pnu_est.Equals(value) = false) Then
				Me.Onpnu_estChanging(value)
				Me.SendPropertyChanging
				Me._pnu_est = value
				Me.SendPropertyChanged("pnu_est")
				Me.Onpnu_estChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pnu_cod_temporal", DbType:="Int")>  _
	Public Property pnu_cod_temporal() As System.Nullable(Of Integer)
		Get
			Return Me._pnu_cod_temporal
		End Get
		Set
			If (Me._pnu_cod_temporal.Equals(value) = false) Then
				Me.Onpnu_cod_temporalChanging(value)
				Me.SendPropertyChanging
				Me._pnu_cod_temporal = value
				Me.SendPropertyChanged("pnu_cod_temporal")
				Me.Onpnu_cod_temporalChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.P_0308")>  _
Partial Public Class P_0308_cls
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _id_P_0308 As Integer
	
	Private _pnu_des As String
	
	Private _pnu_est As System.Nullable(Of Char)
	
	Private _pnu_cod_temporal As System.Nullable(Of Integer)
	
    #Region "Definiciones de métodos de extensibilidad"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub Onid_P_0308Changing(value As Integer)
    End Sub
    Partial Private Sub Onid_P_0308Changed()
    End Sub
    Partial Private Sub Onpnu_desChanging(value As String)
    End Sub
    Partial Private Sub Onpnu_desChanged()
    End Sub
    Partial Private Sub Onpnu_estChanging(value As System.Nullable(Of Char))
    End Sub
    Partial Private Sub Onpnu_estChanged()
    End Sub
    Partial Private Sub Onpnu_cod_temporalChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub Onpnu_cod_temporalChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_id_P_0308", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property id_P_0308() As Integer
		Get
			Return Me._id_P_0308
		End Get
		Set
			If ((Me._id_P_0308 = value)  _
						= false) Then
				Me.Onid_P_0308Changing(value)
				Me.SendPropertyChanging
				Me._id_P_0308 = value
				Me.SendPropertyChanged("id_P_0308")
				Me.Onid_P_0308Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pnu_des", DbType:="VarChar(80)")>  _
	Public Property pnu_des() As String
		Get
			Return Me._pnu_des
		End Get
		Set
			If (String.Equals(Me._pnu_des, value) = false) Then
				Me.Onpnu_desChanging(value)
				Me.SendPropertyChanging
				Me._pnu_des = value
				Me.SendPropertyChanged("pnu_des")
				Me.Onpnu_desChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pnu_est", DbType:="Char(1)")>  _
	Public Property pnu_est() As System.Nullable(Of Char)
		Get
			Return Me._pnu_est
		End Get
		Set
			If (Me._pnu_est.Equals(value) = false) Then
				Me.Onpnu_estChanging(value)
				Me.SendPropertyChanging
				Me._pnu_est = value
				Me.SendPropertyChanged("pnu_est")
				Me.Onpnu_estChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pnu_cod_temporal", DbType:="Int")>  _
	Public Property pnu_cod_temporal() As System.Nullable(Of Integer)
		Get
			Return Me._pnu_cod_temporal
		End Get
		Set
			If (Me._pnu_cod_temporal.Equals(value) = false) Then
				Me.Onpnu_cod_temporalChanging(value)
				Me.SendPropertyChanging
				Me._pnu_cod_temporal = value
				Me.SendPropertyChanged("pnu_cod_temporal")
				Me.Onpnu_cod_temporalChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.P_0309")>  _
Partial Public Class P_0309_cls
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _id_P_0309 As Integer
	
	Private _pnu_des As String
	
	Private _pnu_est As System.Nullable(Of Char)
	
	Private _pnu_cod_temporal As System.Nullable(Of Integer)
	
    #Region "Definiciones de métodos de extensibilidad"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub Onid_P_0309Changing(value As Integer)
    End Sub
    Partial Private Sub Onid_P_0309Changed()
    End Sub
    Partial Private Sub Onpnu_desChanging(value As String)
    End Sub
    Partial Private Sub Onpnu_desChanged()
    End Sub
    Partial Private Sub Onpnu_estChanging(value As System.Nullable(Of Char))
    End Sub
    Partial Private Sub Onpnu_estChanged()
    End Sub
    Partial Private Sub Onpnu_cod_temporalChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub Onpnu_cod_temporalChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_id_P_0309", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property id_P_0309() As Integer
		Get
			Return Me._id_P_0309
		End Get
		Set
			If ((Me._id_P_0309 = value)  _
						= false) Then
				Me.Onid_P_0309Changing(value)
				Me.SendPropertyChanging
				Me._id_P_0309 = value
				Me.SendPropertyChanged("id_P_0309")
				Me.Onid_P_0309Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pnu_des", DbType:="VarChar(80)")>  _
	Public Property pnu_des() As String
		Get
			Return Me._pnu_des
		End Get
		Set
			If (String.Equals(Me._pnu_des, value) = false) Then
				Me.Onpnu_desChanging(value)
				Me.SendPropertyChanging
				Me._pnu_des = value
				Me.SendPropertyChanged("pnu_des")
				Me.Onpnu_desChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pnu_est", DbType:="Char(1)")>  _
	Public Property pnu_est() As System.Nullable(Of Char)
		Get
			Return Me._pnu_est
		End Get
		Set
			If (Me._pnu_est.Equals(value) = false) Then
				Me.Onpnu_estChanging(value)
				Me.SendPropertyChanging
				Me._pnu_est = value
				Me.SendPropertyChanged("pnu_est")
				Me.Onpnu_estChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pnu_cod_temporal", DbType:="Int")>  _
	Public Property pnu_cod_temporal() As System.Nullable(Of Integer)
		Get
			Return Me._pnu_cod_temporal
		End Get
		Set
			If (Me._pnu_cod_temporal.Equals(value) = false) Then
				Me.Onpnu_cod_temporalChanging(value)
				Me.SendPropertyChanging
				Me._pnu_cod_temporal = value
				Me.SendPropertyChanged("pnu_cod_temporal")
				Me.Onpnu_cod_temporalChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.P_0310")>  _
Partial Public Class P_0310_cls
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _id_P_0310 As Integer
	
	Private _pnu_des As String
	
	Private _pnu_est As System.Nullable(Of Char)
	
	Private _pnu_cod_temporal As System.Nullable(Of Integer)
	
    #Region "Definiciones de métodos de extensibilidad"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub Onid_P_0310Changing(value As Integer)
    End Sub
    Partial Private Sub Onid_P_0310Changed()
    End Sub
    Partial Private Sub Onpnu_desChanging(value As String)
    End Sub
    Partial Private Sub Onpnu_desChanged()
    End Sub
    Partial Private Sub Onpnu_estChanging(value As System.Nullable(Of Char))
    End Sub
    Partial Private Sub Onpnu_estChanged()
    End Sub
    Partial Private Sub Onpnu_cod_temporalChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub Onpnu_cod_temporalChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_id_P_0310", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property id_P_0310() As Integer
		Get
			Return Me._id_P_0310
		End Get
		Set
			If ((Me._id_P_0310 = value)  _
						= false) Then
				Me.Onid_P_0310Changing(value)
				Me.SendPropertyChanging
				Me._id_P_0310 = value
				Me.SendPropertyChanged("id_P_0310")
				Me.Onid_P_0310Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pnu_des", DbType:="VarChar(80)")>  _
	Public Property pnu_des() As String
		Get
			Return Me._pnu_des
		End Get
		Set
			If (String.Equals(Me._pnu_des, value) = false) Then
				Me.Onpnu_desChanging(value)
				Me.SendPropertyChanging
				Me._pnu_des = value
				Me.SendPropertyChanged("pnu_des")
				Me.Onpnu_desChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pnu_est", DbType:="Char(1)")>  _
	Public Property pnu_est() As System.Nullable(Of Char)
		Get
			Return Me._pnu_est
		End Get
		Set
			If (Me._pnu_est.Equals(value) = false) Then
				Me.Onpnu_estChanging(value)
				Me.SendPropertyChanging
				Me._pnu_est = value
				Me.SendPropertyChanged("pnu_est")
				Me.Onpnu_estChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pnu_cod_temporal", DbType:="Int")>  _
	Public Property pnu_cod_temporal() As System.Nullable(Of Integer)
		Get
			Return Me._pnu_cod_temporal
		End Get
		Set
			If (Me._pnu_cod_temporal.Equals(value) = false) Then
				Me.Onpnu_cod_temporalChanging(value)
				Me.SendPropertyChanging
				Me._pnu_cod_temporal = value
				Me.SendPropertyChanged("pnu_cod_temporal")
				Me.Onpnu_cod_temporalChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.P_0311")>  _
Partial Public Class P_0311_cls
	
	Private _par_cod_par As Integer
	
	Private _par_des_par As String
	
	Private _par_est_par As System.Nullable(Of Short)
	
	Private _par_sis_par As System.Nullable(Of Short)
	
	Private _par_cod_aux As String
	
	Public Sub New()
		MyBase.New
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_par_cod_par", DbType:="Int NOT NULL")>  _
	Public Property par_cod_par() As Integer
		Get
			Return Me._par_cod_par
		End Get
		Set
			If ((Me._par_cod_par = value)  _
						= false) Then
				Me._par_cod_par = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_par_des_par", DbType:="VarChar(50)")>  _
	Public Property par_des_par() As String
		Get
			Return Me._par_des_par
		End Get
		Set
			If (String.Equals(Me._par_des_par, value) = false) Then
				Me._par_des_par = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_par_est_par", DbType:="SmallInt")>  _
	Public Property par_est_par() As System.Nullable(Of Short)
		Get
			Return Me._par_est_par
		End Get
		Set
			If (Me._par_est_par.Equals(value) = false) Then
				Me._par_est_par = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_par_sis_par", DbType:="SmallInt")>  _
	Public Property par_sis_par() As System.Nullable(Of Short)
		Get
			Return Me._par_sis_par
		End Get
		Set
			If (Me._par_sis_par.Equals(value) = false) Then
				Me._par_sis_par = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_par_cod_aux", DbType:="VarChar(16)")>  _
	Public Property par_cod_aux() As String
		Get
			Return Me._par_cod_aux
		End Get
		Set
			If (String.Equals(Me._par_cod_aux, value) = false) Then
				Me._par_cod_aux = value
			End If
		End Set
	End Property
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.P_0312")>  _
Partial Public Class P_0312_cls
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _id_P_0312 As Integer
	
	Private _pnu_des As String
	
	Private _pnu_est As String
	
	Private _nbc_cls As EntitySet(Of nbc_cls)
	
    #Region "Definiciones de métodos de extensibilidad"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub Onid_P_0312Changing(value As Integer)
    End Sub
    Partial Private Sub Onid_P_0312Changed()
    End Sub
    Partial Private Sub Onpnu_desChanging(value As String)
    End Sub
    Partial Private Sub Onpnu_desChanged()
    End Sub
    Partial Private Sub Onpnu_estChanging(value As String)
    End Sub
    Partial Private Sub Onpnu_estChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		Me._nbc_cls = New EntitySet(Of nbc_cls)(AddressOf Me.attach_nbc_cls, AddressOf Me.detach_nbc_cls)
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_id_P_0312", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property id_P_0312() As Integer
		Get
			Return Me._id_P_0312
		End Get
		Set
			If ((Me._id_P_0312 = value)  _
						= false) Then
				Me.Onid_P_0312Changing(value)
				Me.SendPropertyChanging
				Me._id_P_0312 = value
				Me.SendPropertyChanged("id_P_0312")
				Me.Onid_P_0312Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pnu_des", DbType:="Char(50) NOT NULL", CanBeNull:=false)>  _
	Public Property pnu_des() As String
		Get
			Return Me._pnu_des
		End Get
		Set
			If (String.Equals(Me._pnu_des, value) = false) Then
				Me.Onpnu_desChanging(value)
				Me.SendPropertyChanging
				Me._pnu_des = value
				Me.SendPropertyChanged("pnu_des")
				Me.Onpnu_desChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pnu_est", DbType:="Char(5)")>  _
	Public Property pnu_est() As String
		Get
			Return Me._pnu_est
		End Get
		Set
			If (String.Equals(Me._pnu_est, value) = false) Then
				Me.Onpnu_estChanging(value)
				Me.SendPropertyChanging
				Me._pnu_est = value
				Me.SendPropertyChanged("pnu_est")
				Me.Onpnu_estChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="P_0312_cls_nbc_cls", Storage:="_nbc_cls", ThisKey:="id_P_0312", OtherKey:="id_P_0312")>  _
	Public Property nbc_cls() As EntitySet(Of nbc_cls)
		Get
			Return Me._nbc_cls
		End Get
		Set
			Me._nbc_cls.Assign(value)
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
	
	Private Sub attach_nbc_cls(ByVal entity As nbc_cls)
		Me.SendPropertyChanging
		entity.P_0312_cls = Me
	End Sub
	
	Private Sub detach_nbc_cls(ByVal entity As nbc_cls)
		Me.SendPropertyChanging
		entity.P_0312_cls = Nothing
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.P_0313")>  _
Partial Public Class P_0313_cls
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _id_P_0313 As Integer
	
	Private _pnu_des As String
	
	Private _pnu_atr_001 As String
	
	Private _pnu_est As String
	
	Private _cli_cls As EntitySet(Of cli_cls)
	
    #Region "Definiciones de métodos de extensibilidad"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub Onid_P_0313Changing(value As Integer)
    End Sub
    Partial Private Sub Onid_P_0313Changed()
    End Sub
    Partial Private Sub Onpnu_desChanging(value As String)
    End Sub
    Partial Private Sub Onpnu_desChanged()
    End Sub
    Partial Private Sub Onpnu_atr_001Changing(value As String)
    End Sub
    Partial Private Sub Onpnu_atr_001Changed()
    End Sub
    Partial Private Sub Onpnu_estChanging(value As String)
    End Sub
    Partial Private Sub Onpnu_estChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		Me._cli_cls = New EntitySet(Of cli_cls)(AddressOf Me.attach_cli_cls, AddressOf Me.detach_cli_cls)
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_id_P_0313", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property id_P_0313() As Integer
		Get
			Return Me._id_P_0313
		End Get
		Set
			If ((Me._id_P_0313 = value)  _
						= false) Then
				Me.Onid_P_0313Changing(value)
				Me.SendPropertyChanging
				Me._id_P_0313 = value
				Me.SendPropertyChanged("id_P_0313")
				Me.Onid_P_0313Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pnu_des", DbType:="VarChar(50)")>  _
	Public Property pnu_des() As String
		Get
			Return Me._pnu_des
		End Get
		Set
			If (String.Equals(Me._pnu_des, value) = false) Then
				Me.Onpnu_desChanging(value)
				Me.SendPropertyChanging
				Me._pnu_des = value
				Me.SendPropertyChanged("pnu_des")
				Me.Onpnu_desChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pnu_atr_001", DbType:="VarChar(50)")>  _
	Public Property pnu_atr_001() As String
		Get
			Return Me._pnu_atr_001
		End Get
		Set
			If (String.Equals(Me._pnu_atr_001, value) = false) Then
				Me.Onpnu_atr_001Changing(value)
				Me.SendPropertyChanging
				Me._pnu_atr_001 = value
				Me.SendPropertyChanged("pnu_atr_001")
				Me.Onpnu_atr_001Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pnu_est", DbType:="Char(5)")>  _
	Public Property pnu_est() As String
		Get
			Return Me._pnu_est
		End Get
		Set
			If (String.Equals(Me._pnu_est, value) = false) Then
				Me.Onpnu_estChanging(value)
				Me.SendPropertyChanging
				Me._pnu_est = value
				Me.SendPropertyChanged("pnu_est")
				Me.Onpnu_estChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="P_0313_cls_cli_cls", Storage:="_cli_cls", ThisKey:="id_P_0313", OtherKey:="id_P_0313")>  _
	Public Property cli_cls() As EntitySet(Of cli_cls)
		Get
			Return Me._cli_cls
		End Get
		Set
			Me._cli_cls.Assign(value)
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
	
	Private Sub attach_cli_cls(ByVal entity As cli_cls)
		Me.SendPropertyChanging
		entity.P_0313_cls = Me
	End Sub
	
	Private Sub detach_cli_cls(ByVal entity As cli_cls)
		Me.SendPropertyChanging
		entity.P_0313_cls = Nothing
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.P_0314")>  _
Partial Public Class P_0314_cls
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _id_P_0314 As Integer
	
	Private _pnu_des As String
	
	Private _pnu_est As System.Nullable(Of Char)
	
	Private _pnu_cod_temporal As System.Nullable(Of Integer)
	
	Private _pnu_comi As System.Nullable(Of Decimal)
	
	Private _pnu_hora_inicio As System.Nullable(Of Date)
	
	Private _pnu_hora_termino As System.Nullable(Of Date)
	
    #Region "Definiciones de métodos de extensibilidad"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub Onid_P_0314Changing(value As Integer)
    End Sub
    Partial Private Sub Onid_P_0314Changed()
    End Sub
    Partial Private Sub Onpnu_desChanging(value As String)
    End Sub
    Partial Private Sub Onpnu_desChanged()
    End Sub
    Partial Private Sub Onpnu_estChanging(value As System.Nullable(Of Char))
    End Sub
    Partial Private Sub Onpnu_estChanged()
    End Sub
    Partial Private Sub Onpnu_cod_temporalChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub Onpnu_cod_temporalChanged()
    End Sub
    Partial Private Sub Onpnu_comiChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub Onpnu_comiChanged()
    End Sub
    Partial Private Sub Onpnu_hora_inicioChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub Onpnu_hora_inicioChanged()
    End Sub
    Partial Private Sub Onpnu_hora_terminoChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub Onpnu_hora_terminoChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_id_P_0314", DbType:="Int NOT NULL", IsPrimaryKey:=true)>  _
	Public Property id_P_0314() As Integer
		Get
			Return Me._id_P_0314
		End Get
		Set
			If ((Me._id_P_0314 = value)  _
						= false) Then
				Me.Onid_P_0314Changing(value)
				Me.SendPropertyChanging
				Me._id_P_0314 = value
				Me.SendPropertyChanged("id_P_0314")
				Me.Onid_P_0314Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pnu_des", DbType:="VarChar(80)")>  _
	Public Property pnu_des() As String
		Get
			Return Me._pnu_des
		End Get
		Set
			If (String.Equals(Me._pnu_des, value) = false) Then
				Me.Onpnu_desChanging(value)
				Me.SendPropertyChanging
				Me._pnu_des = value
				Me.SendPropertyChanged("pnu_des")
				Me.Onpnu_desChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pnu_est", DbType:="Char(1)")>  _
	Public Property pnu_est() As System.Nullable(Of Char)
		Get
			Return Me._pnu_est
		End Get
		Set
			If (Me._pnu_est.Equals(value) = false) Then
				Me.Onpnu_estChanging(value)
				Me.SendPropertyChanging
				Me._pnu_est = value
				Me.SendPropertyChanged("pnu_est")
				Me.Onpnu_estChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pnu_cod_temporal", DbType:="Int")>  _
	Public Property pnu_cod_temporal() As System.Nullable(Of Integer)
		Get
			Return Me._pnu_cod_temporal
		End Get
		Set
			If (Me._pnu_cod_temporal.Equals(value) = false) Then
				Me.Onpnu_cod_temporalChanging(value)
				Me.SendPropertyChanging
				Me._pnu_cod_temporal = value
				Me.SendPropertyChanged("pnu_cod_temporal")
				Me.Onpnu_cod_temporalChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pnu_comi", DbType:="Decimal(4,2)")>  _
	Public Property pnu_comi() As System.Nullable(Of Decimal)
		Get
			Return Me._pnu_comi
		End Get
		Set
			If (Me._pnu_comi.Equals(value) = false) Then
				Me.Onpnu_comiChanging(value)
				Me.SendPropertyChanging
				Me._pnu_comi = value
				Me.SendPropertyChanged("pnu_comi")
				Me.Onpnu_comiChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pnu_hora_inicio", DbType:="DateTime")>  _
	Public Property pnu_hora_inicio() As System.Nullable(Of Date)
		Get
			Return Me._pnu_hora_inicio
		End Get
		Set
			If (Me._pnu_hora_inicio.Equals(value) = false) Then
				Me.Onpnu_hora_inicioChanging(value)
				Me.SendPropertyChanging
				Me._pnu_hora_inicio = value
				Me.SendPropertyChanged("pnu_hora_inicio")
				Me.Onpnu_hora_inicioChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pnu_hora_termino", DbType:="DateTime")>  _
	Public Property pnu_hora_termino() As System.Nullable(Of Date)
		Get
			Return Me._pnu_hora_termino
		End Get
		Set
			If (Me._pnu_hora_termino.Equals(value) = false) Then
				Me.Onpnu_hora_terminoChanging(value)
				Me.SendPropertyChanging
				Me._pnu_hora_termino = value
				Me.SendPropertyChanged("pnu_hora_termino")
				Me.Onpnu_hora_terminoChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.P_0315")>  _
Partial Public Class P_0315_cls
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _id_P_0315 As Integer
	
	Private _pnu_des As String
	
	Private _pnu_est As System.Nullable(Of Char)
	
	Private _pnu_atr_002 As String
	
    #Region "Definiciones de métodos de extensibilidad"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub Onid_P_0315Changing(value As Integer)
    End Sub
    Partial Private Sub Onid_P_0315Changed()
    End Sub
    Partial Private Sub Onpnu_desChanging(value As String)
    End Sub
    Partial Private Sub Onpnu_desChanged()
    End Sub
    Partial Private Sub Onpnu_estChanging(value As System.Nullable(Of Char))
    End Sub
    Partial Private Sub Onpnu_estChanged()
    End Sub
    Partial Private Sub Onpnu_atr_002Changing(value As String)
    End Sub
    Partial Private Sub Onpnu_atr_002Changed()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_id_P_0315", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property id_P_0315() As Integer
		Get
			Return Me._id_P_0315
		End Get
		Set
			If ((Me._id_P_0315 = value)  _
						= false) Then
				Me.Onid_P_0315Changing(value)
				Me.SendPropertyChanging
				Me._id_P_0315 = value
				Me.SendPropertyChanged("id_P_0315")
				Me.Onid_P_0315Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pnu_des", DbType:="VarChar(80)")>  _
	Public Property pnu_des() As String
		Get
			Return Me._pnu_des
		End Get
		Set
			If (String.Equals(Me._pnu_des, value) = false) Then
				Me.Onpnu_desChanging(value)
				Me.SendPropertyChanging
				Me._pnu_des = value
				Me.SendPropertyChanged("pnu_des")
				Me.Onpnu_desChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pnu_est", DbType:="Char(1)")>  _
	Public Property pnu_est() As System.Nullable(Of Char)
		Get
			Return Me._pnu_est
		End Get
		Set
			If (Me._pnu_est.Equals(value) = false) Then
				Me.Onpnu_estChanging(value)
				Me.SendPropertyChanging
				Me._pnu_est = value
				Me.SendPropertyChanged("pnu_est")
				Me.Onpnu_estChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pnu_atr_002", DbType:="Text", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property pnu_atr_002() As String
		Get
			Return Me._pnu_atr_002
		End Get
		Set
			If (String.Equals(Me._pnu_atr_002, value) = false) Then
				Me.Onpnu_atr_002Changing(value)
				Me.SendPropertyChanging
				Me._pnu_atr_002 = value
				Me.SendPropertyChanged("pnu_atr_002")
				Me.Onpnu_atr_002Changed
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.P_0316")>  _
Partial Public Class P_0316_cls
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _id_P_0316 As Integer
	
	Private _pnu_des As String
	
	Private _pnu_est As System.Nullable(Of Char)
	
	Private _pnu_cod_temporal As System.Nullable(Of Integer)
	
    #Region "Definiciones de métodos de extensibilidad"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub Onid_P_0316Changing(value As Integer)
    End Sub
    Partial Private Sub Onid_P_0316Changed()
    End Sub
    Partial Private Sub Onpnu_desChanging(value As String)
    End Sub
    Partial Private Sub Onpnu_desChanged()
    End Sub
    Partial Private Sub Onpnu_estChanging(value As System.Nullable(Of Char))
    End Sub
    Partial Private Sub Onpnu_estChanged()
    End Sub
    Partial Private Sub Onpnu_cod_temporalChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub Onpnu_cod_temporalChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_id_P_0316", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property id_P_0316() As Integer
		Get
			Return Me._id_P_0316
		End Get
		Set
			If ((Me._id_P_0316 = value)  _
						= false) Then
				Me.Onid_P_0316Changing(value)
				Me.SendPropertyChanging
				Me._id_P_0316 = value
				Me.SendPropertyChanged("id_P_0316")
				Me.Onid_P_0316Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pnu_des", DbType:="VarChar(80)")>  _
	Public Property pnu_des() As String
		Get
			Return Me._pnu_des
		End Get
		Set
			If (String.Equals(Me._pnu_des, value) = false) Then
				Me.Onpnu_desChanging(value)
				Me.SendPropertyChanging
				Me._pnu_des = value
				Me.SendPropertyChanged("pnu_des")
				Me.Onpnu_desChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pnu_est", DbType:="Char(1)")>  _
	Public Property pnu_est() As System.Nullable(Of Char)
		Get
			Return Me._pnu_est
		End Get
		Set
			If (Me._pnu_est.Equals(value) = false) Then
				Me.Onpnu_estChanging(value)
				Me.SendPropertyChanging
				Me._pnu_est = value
				Me.SendPropertyChanged("pnu_est")
				Me.Onpnu_estChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pnu_cod_temporal", DbType:="Int")>  _
	Public Property pnu_cod_temporal() As System.Nullable(Of Integer)
		Get
			Return Me._pnu_cod_temporal
		End Get
		Set
			If (Me._pnu_cod_temporal.Equals(value) = false) Then
				Me.Onpnu_cod_temporalChanging(value)
				Me.SendPropertyChanging
				Me._pnu_cod_temporal = value
				Me.SendPropertyChanged("pnu_cod_temporal")
				Me.Onpnu_cod_temporalChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.p_0317")>  _
Partial Public Class p_0317_cls
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _id_correlativo As Integer
	
	Private _id_sistema As Integer
	
	Private _mensaje As String
	
	Private _descripcion As String
	
	Private _estado As System.Nullable(Of Boolean)
	
    #Region "Definiciones de métodos de extensibilidad"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub Onid_correlativoChanging(value As Integer)
    End Sub
    Partial Private Sub Onid_correlativoChanged()
    End Sub
    Partial Private Sub Onid_sistemaChanging(value As Integer)
    End Sub
    Partial Private Sub Onid_sistemaChanged()
    End Sub
    Partial Private Sub OnmensajeChanging(value As String)
    End Sub
    Partial Private Sub OnmensajeChanged()
    End Sub
    Partial Private Sub OndescripcionChanging(value As String)
    End Sub
    Partial Private Sub OndescripcionChanged()
    End Sub
    Partial Private Sub OnestadoChanging(value As System.Nullable(Of Boolean))
    End Sub
    Partial Private Sub OnestadoChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_id_correlativo", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property id_correlativo() As Integer
		Get
			Return Me._id_correlativo
		End Get
		Set
			If ((Me._id_correlativo = value)  _
						= false) Then
				Me.Onid_correlativoChanging(value)
				Me.SendPropertyChanging
				Me._id_correlativo = value
				Me.SendPropertyChanged("id_correlativo")
				Me.Onid_correlativoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_id_sistema", DbType:="Int NOT NULL")>  _
	Public Property id_sistema() As Integer
		Get
			Return Me._id_sistema
		End Get
		Set
			If ((Me._id_sistema = value)  _
						= false) Then
				Me.Onid_sistemaChanging(value)
				Me.SendPropertyChanging
				Me._id_sistema = value
				Me.SendPropertyChanged("id_sistema")
				Me.Onid_sistemaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_mensaje", DbType:="VarChar(MAX)")>  _
	Public Property mensaje() As String
		Get
			Return Me._mensaje
		End Get
		Set
			If (String.Equals(Me._mensaje, value) = false) Then
				Me.OnmensajeChanging(value)
				Me.SendPropertyChanging
				Me._mensaje = value
				Me.SendPropertyChanged("mensaje")
				Me.OnmensajeChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_descripcion", DbType:="VarChar(30)")>  _
	Public Property descripcion() As String
		Get
			Return Me._descripcion
		End Get
		Set
			If (String.Equals(Me._descripcion, value) = false) Then
				Me.OndescripcionChanging(value)
				Me.SendPropertyChanging
				Me._descripcion = value
				Me.SendPropertyChanged("descripcion")
				Me.OndescripcionChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_estado", DbType:="Bit")>  _
	Public Property estado() As System.Nullable(Of Boolean)
		Get
			Return Me._estado
		End Get
		Set
			If (Me._estado.Equals(value) = false) Then
				Me.OnestadoChanging(value)
				Me.SendPropertyChanging
				Me._estado = value
				Me.SendPropertyChanged("estado")
				Me.OnestadoChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.P_0318")>  _
Partial Public Class P_0318_cls
	
	Private _id_0318 As Integer
	
	Private _pnu_des_ibs As String
	
	Private _pnu_par_est_ibs As System.Nullable(Of Integer)
	
	Public Sub New()
		MyBase.New
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_id_0318", AutoSync:=AutoSync.Always, DbType:="Int NOT NULL IDENTITY", IsDbGenerated:=true)>  _
	Public Property id_0318() As Integer
		Get
			Return Me._id_0318
		End Get
		Set
			If ((Me._id_0318 = value)  _
						= false) Then
				Me._id_0318 = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pnu_des_ibs", DbType:="VarChar(4)")>  _
	Public Property pnu_des_ibs() As String
		Get
			Return Me._pnu_des_ibs
		End Get
		Set
			If (String.Equals(Me._pnu_des_ibs, value) = false) Then
				Me._pnu_des_ibs = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pnu_par_est_ibs", DbType:="Int")>  _
	Public Property pnu_par_est_ibs() As System.Nullable(Of Integer)
		Get
			Return Me._pnu_par_est_ibs
		End Get
		Set
			If (Me._pnu_par_est_ibs.Equals(value) = false) Then
				Me._pnu_par_est_ibs = value
			End If
		End Set
	End Property
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.par")>  _
Partial Public Class par_cls
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _id_par As Integer
	
	Private _id_P_0023 As Integer
	
	Private _par_fec As Date
	
	Private _par_val As System.Nullable(Of Decimal)
	
	Private _par_val_cob As System.Nullable(Of Decimal)
	
	Private _fec_corta As System.Nullable(Of Date)
	
	Private _P_0023_cls As EntityRef(Of P_0023_cls)
	
    #Region "Definiciones de métodos de extensibilidad"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub Onid_parChanging(value As Integer)
    End Sub
    Partial Private Sub Onid_parChanged()
    End Sub
    Partial Private Sub Onid_P_0023Changing(value As Integer)
    End Sub
    Partial Private Sub Onid_P_0023Changed()
    End Sub
    Partial Private Sub Onpar_fecChanging(value As Date)
    End Sub
    Partial Private Sub Onpar_fecChanged()
    End Sub
    Partial Private Sub Onpar_valChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub Onpar_valChanged()
    End Sub
    Partial Private Sub Onpar_val_cobChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub Onpar_val_cobChanged()
    End Sub
    Partial Private Sub Onfec_cortaChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub Onfec_cortaChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		Me._P_0023_cls = CType(Nothing, EntityRef(Of P_0023_cls))
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_id_par", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property id_par() As Integer
		Get
			Return Me._id_par
		End Get
		Set
			If ((Me._id_par = value)  _
						= false) Then
				Me.Onid_parChanging(value)
				Me.SendPropertyChanging
				Me._id_par = value
				Me.SendPropertyChanged("id_par")
				Me.Onid_parChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_id_P_0023", DbType:="Int NOT NULL")>  _
	Public Property id_P_0023() As Integer
		Get
			Return Me._id_P_0023
		End Get
		Set
			If ((Me._id_P_0023 = value)  _
						= false) Then
				If Me._P_0023_cls.HasLoadedOrAssignedValue Then
					Throw New System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException()
				End If
				Me.Onid_P_0023Changing(value)
				Me.SendPropertyChanging
				Me._id_P_0023 = value
				Me.SendPropertyChanged("id_P_0023")
				Me.Onid_P_0023Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_par_fec", DbType:="DateTime NOT NULL")>  _
	Public Property par_fec() As Date
		Get
			Return Me._par_fec
		End Get
		Set
			If ((Me._par_fec = value)  _
						= false) Then
				Me.Onpar_fecChanging(value)
				Me.SendPropertyChanging
				Me._par_fec = value
				Me.SendPropertyChanged("par_fec")
				Me.Onpar_fecChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_par_val", DbType:="Money")>  _
	Public Property par_val() As System.Nullable(Of Decimal)
		Get
			Return Me._par_val
		End Get
		Set
			If (Me._par_val.Equals(value) = false) Then
				Me.Onpar_valChanging(value)
				Me.SendPropertyChanging
				Me._par_val = value
				Me.SendPropertyChanged("par_val")
				Me.Onpar_valChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_par_val_cob", DbType:="Money")>  _
	Public Property par_val_cob() As System.Nullable(Of Decimal)
		Get
			Return Me._par_val_cob
		End Get
		Set
			If (Me._par_val_cob.Equals(value) = false) Then
				Me.Onpar_val_cobChanging(value)
				Me.SendPropertyChanging
				Me._par_val_cob = value
				Me.SendPropertyChanged("par_val_cob")
				Me.Onpar_val_cobChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_fec_corta", DbType:="DateTime")>  _
	Public Property fec_corta() As System.Nullable(Of Date)
		Get
			Return Me._fec_corta
		End Get
		Set
			If (Me._fec_corta.Equals(value) = false) Then
				Me.Onfec_cortaChanging(value)
				Me.SendPropertyChanging
				Me._fec_corta = value
				Me.SendPropertyChanged("fec_corta")
				Me.Onfec_cortaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="P_0023_cls_par_cls", Storage:="_P_0023_cls", ThisKey:="id_P_0023", OtherKey:="id_P_0023", IsForeignKey:=true)>  _
	Public Property P_0023_cls() As P_0023_cls
		Get
			Return Me._P_0023_cls.Entity
		End Get
		Set
			Dim previousValue As P_0023_cls = Me._P_0023_cls.Entity
			If ((Object.Equals(previousValue, value) = false)  _
						OrElse (Me._P_0023_cls.HasLoadedOrAssignedValue = false)) Then
				Me.SendPropertyChanging
				If ((previousValue Is Nothing)  _
							= false) Then
					Me._P_0023_cls.Entity = Nothing
					previousValue.par_cls.Remove(Me)
				End If
				Me._P_0023_cls.Entity = value
				If ((value Is Nothing)  _
							= false) Then
					value.par_cls.Add(Me)
					Me._id_P_0023 = value.id_P_0023
				Else
					Me._id_P_0023 = CType(Nothing, Integer)
				End If
				Me.SendPropertyChanged("P_0023_cls")
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.par_mda")>  _
Partial Public Class par_mda_cls
	
	Private _par_cod_par As System.Nullable(Of Short)
	
	Private _par_con_dec As System.Nullable(Of Boolean)
	
	Private _par_sel_mda As System.Nullable(Of Boolean)
	
	Public Sub New()
		MyBase.New
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_par_cod_par", DbType:="SmallInt")>  _
	Public Property par_cod_par() As System.Nullable(Of Short)
		Get
			Return Me._par_cod_par
		End Get
		Set
			If (Me._par_cod_par.Equals(value) = false) Then
				Me._par_cod_par = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_par_con_dec", DbType:="Bit")>  _
	Public Property par_con_dec() As System.Nullable(Of Boolean)
		Get
			Return Me._par_con_dec
		End Get
		Set
			If (Me._par_con_dec.Equals(value) = false) Then
				Me._par_con_dec = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_par_sel_mda", DbType:="Bit")>  _
	Public Property par_sel_mda() As System.Nullable(Of Boolean)
		Get
			Return Me._par_sel_mda
		End Get
		Set
			If (Me._par_sel_mda.Equals(value) = false) Then
				Me._par_sel_mda = value
			End If
		End Set
	End Property
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.PASO_MONTO_DOCTOS_NO_CEDIDOS")>  _
Partial Public Class PASO_MONTO_DOCTOS_NO_CEDIDOS_cls
	
	Private _DNC_RUT_CLI As String
	
	Private _DNC_MTO_DNC As System.Nullable(Of Decimal)
	
	Public Sub New()
		MyBase.New
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DNC_RUT_CLI", DbType:="VarChar(12)")>  _
	Public Property DNC_RUT_CLI() As String
		Get
			Return Me._DNC_RUT_CLI
		End Get
		Set
			If (String.Equals(Me._DNC_RUT_CLI, value) = false) Then
				Me._DNC_RUT_CLI = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DNC_MTO_DNC", DbType:="Decimal(20,0)")>  _
	Public Property DNC_MTO_DNC() As System.Nullable(Of Decimal)
		Get
			Return Me._DNC_MTO_DNC
		End Get
		Set
			If (Me._DNC_MTO_DNC.Equals(value) = false) Then
				Me._DNC_MTO_DNC = value
			End If
		End Set
	End Property
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.PASO_TOTALES_REPORTE_LISTA_ANTICIPO_DOC")>  _
Partial Public Class PASO_TOTALES_REPORTE_LISTA_ANTICIPO_DOC_cls
	
	Private _COD_MON As System.Nullable(Of Integer)
	
	Private _MTO_DOC As System.Nullable(Of Decimal)
	
	Private _DES_MON As String
	
	Public Sub New()
		MyBase.New
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_COD_MON", DbType:="Int")>  _
	Public Property COD_MON() As System.Nullable(Of Integer)
		Get
			Return Me._COD_MON
		End Get
		Set
			If (Me._COD_MON.Equals(value) = false) Then
				Me._COD_MON = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_MTO_DOC", DbType:="Money")>  _
	Public Property MTO_DOC() As System.Nullable(Of Decimal)
		Get
			Return Me._MTO_DOC
		End Get
		Set
			If (Me._MTO_DOC.Equals(value) = false) Then
				Me._MTO_DOC = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DES_MON", DbType:="VarChar(20)")>  _
	Public Property DES_MON() As String
		Get
			Return Me._DES_MON
		End Get
		Set
			If (String.Equals(Me._DES_MON, value) = false) Then
				Me._DES_MON = value
			End If
		End Set
	End Property
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.PASO_TRAMOS")>  _
Partial Public Class PASO_TRAMOS_cls
	
	Private _NIT_PVR As String
	
	Private _DV_PVR As System.Nullable(Of Char)
	
	Private _NOMBRE_PVR As String
	
	Private _ID_TIP As System.Nullable(Of Integer)
	
	Private _TIPO_DOC As String
	
	Private _TIP_MON As String
	
	Private _MONTO_DOCTOS As System.Nullable(Of Decimal)
	
	Private _COD_MON As System.Nullable(Of Integer)
	
	Public Sub New()
		MyBase.New
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NIT_PVR", DbType:="Char(12)")>  _
	Public Property NIT_PVR() As String
		Get
			Return Me._NIT_PVR
		End Get
		Set
			If (String.Equals(Me._NIT_PVR, value) = false) Then
				Me._NIT_PVR = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DV_PVR", DbType:="Char(1)")>  _
	Public Property DV_PVR() As System.Nullable(Of Char)
		Get
			Return Me._DV_PVR
		End Get
		Set
			If (Me._DV_PVR.Equals(value) = false) Then
				Me._DV_PVR = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NOMBRE_PVR", DbType:="VarChar(110)")>  _
	Public Property NOMBRE_PVR() As String
		Get
			Return Me._NOMBRE_PVR
		End Get
		Set
			If (String.Equals(Me._NOMBRE_PVR, value) = false) Then
				Me._NOMBRE_PVR = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ID_TIP", DbType:="Int")>  _
	Public Property ID_TIP() As System.Nullable(Of Integer)
		Get
			Return Me._ID_TIP
		End Get
		Set
			If (Me._ID_TIP.Equals(value) = false) Then
				Me._ID_TIP = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TIPO_DOC", DbType:="VarChar(10)")>  _
	Public Property TIPO_DOC() As String
		Get
			Return Me._TIPO_DOC
		End Get
		Set
			If (String.Equals(Me._TIPO_DOC, value) = false) Then
				Me._TIPO_DOC = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TIP_MON", DbType:="VarChar(15)")>  _
	Public Property TIP_MON() As String
		Get
			Return Me._TIP_MON
		End Get
		Set
			If (String.Equals(Me._TIP_MON, value) = false) Then
				Me._TIP_MON = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_MONTO_DOCTOS", DbType:="Decimal(20,4)")>  _
	Public Property MONTO_DOCTOS() As System.Nullable(Of Decimal)
		Get
			Return Me._MONTO_DOCTOS
		End Get
		Set
			If (Me._MONTO_DOCTOS.Equals(value) = false) Then
				Me._MONTO_DOCTOS = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_COD_MON", DbType:="Int")>  _
	Public Property COD_MON() As System.Nullable(Of Integer)
		Get
			Return Me._COD_MON
		End Get
		Set
			If (Me._COD_MON.Equals(value) = false) Then
				Me._COD_MON = value
			End If
		End Set
	End Property
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.Paso_Tramos_Deu")>  _
Partial Public Class Paso_Tramos_Deu_cls
	
	Private _NIT_CLI As String
	
	Private _DV_CLI As System.Nullable(Of Char)
	
	Private _NOMBRE_CLI As String
	
	Private _TIPO As String
	
	Private _MONTO_DOCTOS As System.Nullable(Of Decimal)
	
	Public Sub New()
		MyBase.New
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NIT_CLI", DbType:="Char(12)")>  _
	Public Property NIT_CLI() As String
		Get
			Return Me._NIT_CLI
		End Get
		Set
			If (String.Equals(Me._NIT_CLI, value) = false) Then
				Me._NIT_CLI = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DV_CLI", DbType:="Char(1)")>  _
	Public Property DV_CLI() As System.Nullable(Of Char)
		Get
			Return Me._DV_CLI
		End Get
		Set
			If (Me._DV_CLI.Equals(value) = false) Then
				Me._DV_CLI = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NOMBRE_CLI", DbType:="VarChar(110)")>  _
	Public Property NOMBRE_CLI() As String
		Get
			Return Me._NOMBRE_CLI
		End Get
		Set
			If (String.Equals(Me._NOMBRE_CLI, value) = false) Then
				Me._NOMBRE_CLI = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TIPO", DbType:="VarChar(10)")>  _
	Public Property TIPO() As String
		Get
			Return Me._TIPO
		End Get
		Set
			If (String.Equals(Me._TIPO, value) = false) Then
				Me._TIPO = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_MONTO_DOCTOS", DbType:="Decimal(20,4)")>  _
	Public Property MONTO_DOCTOS() As System.Nullable(Of Decimal)
		Get
			Return Me._MONTO_DOCTOS
		End Get
		Set
			If (Me._MONTO_DOCTOS.Equals(value) = false) Then
				Me._MONTO_DOCTOS = value
			End If
		End Set
	End Property
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.pca")>  _
Partial Public Class pca_cls
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _id_pca As Integer
	
	Private _pca_des As String
	
	Private _pca_est As System.Nullable(Of Char)
	
    #Region "Definiciones de métodos de extensibilidad"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub Onid_pcaChanging(value As Integer)
    End Sub
    Partial Private Sub Onid_pcaChanged()
    End Sub
    Partial Private Sub Onpca_desChanging(value As String)
    End Sub
    Partial Private Sub Onpca_desChanged()
    End Sub
    Partial Private Sub Onpca_estChanging(value As System.Nullable(Of Char))
    End Sub
    Partial Private Sub Onpca_estChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_id_pca", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property id_pca() As Integer
		Get
			Return Me._id_pca
		End Get
		Set
			If ((Me._id_pca = value)  _
						= false) Then
				Me.Onid_pcaChanging(value)
				Me.SendPropertyChanging
				Me._id_pca = value
				Me.SendPropertyChanged("id_pca")
				Me.Onid_pcaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pca_des", DbType:="VarChar(50)")>  _
	Public Property pca_des() As String
		Get
			Return Me._pca_des
		End Get
		Set
			If (String.Equals(Me._pca_des, value) = false) Then
				Me.Onpca_desChanging(value)
				Me.SendPropertyChanging
				Me._pca_des = value
				Me.SendPropertyChanged("pca_des")
				Me.Onpca_desChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pca_est", DbType:="Char(1)")>  _
	Public Property pca_est() As System.Nullable(Of Char)
		Get
			Return Me._pca_est
		End Get
		Set
			If (Me._pca_est.Equals(value) = false) Then
				Me.Onpca_estChanging(value)
				Me.SendPropertyChanging
				Me._pca_est = value
				Me.SendPropertyChanged("pca_est")
				Me.Onpca_estChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.pci")>  _
Partial Public Class pci_cls
	
	Private _pci_tip_pla As String
	
	Private _pci_cod_pla As String
	
	Private _pci_num_lin As Integer
	
	Private _pci_tip_val As String
	
	Private _pci_glo_val As String
	
	Private _pci_cod_cta As System.Nullable(Of Decimal)
	
	Private _pci_deb_hab As System.Nullable(Of Char)
	
	Private _pci_cod_cta_mx As System.Nullable(Of Decimal)
	
	Private _pci_cod_cta_uf As System.Nullable(Of Decimal)
	
	Private _pci_cod_cta_re As System.Nullable(Of Decimal)
	
	Private _pci_mon_cta As String
	
	Private _pci_tra_cod As System.Nullable(Of Decimal)
	
	Private _pci_cta_csr As System.Nullable(Of Decimal)
	
	Private _pci_cta_csr_uf As System.Nullable(Of Decimal)
	
	Public Sub New()
		MyBase.New
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pci_tip_pla", DbType:="Char(2) NOT NULL", CanBeNull:=false)>  _
	Public Property pci_tip_pla() As String
		Get
			Return Me._pci_tip_pla
		End Get
		Set
			If (String.Equals(Me._pci_tip_pla, value) = false) Then
				Me._pci_tip_pla = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pci_cod_pla", DbType:="Char(2) NOT NULL", CanBeNull:=false)>  _
	Public Property pci_cod_pla() As String
		Get
			Return Me._pci_cod_pla
		End Get
		Set
			If (String.Equals(Me._pci_cod_pla, value) = false) Then
				Me._pci_cod_pla = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pci_num_lin", DbType:="Int NOT NULL")>  _
	Public Property pci_num_lin() As Integer
		Get
			Return Me._pci_num_lin
		End Get
		Set
			If ((Me._pci_num_lin = value)  _
						= false) Then
				Me._pci_num_lin = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pci_tip_val", DbType:="Char(2) NOT NULL", CanBeNull:=false)>  _
	Public Property pci_tip_val() As String
		Get
			Return Me._pci_tip_val
		End Get
		Set
			If (String.Equals(Me._pci_tip_val, value) = false) Then
				Me._pci_tip_val = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pci_glo_val", DbType:="VarChar(250)")>  _
	Public Property pci_glo_val() As String
		Get
			Return Me._pci_glo_val
		End Get
		Set
			If (String.Equals(Me._pci_glo_val, value) = false) Then
				Me._pci_glo_val = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pci_cod_cta", DbType:="Decimal(10,0)")>  _
	Public Property pci_cod_cta() As System.Nullable(Of Decimal)
		Get
			Return Me._pci_cod_cta
		End Get
		Set
			If (Me._pci_cod_cta.Equals(value) = false) Then
				Me._pci_cod_cta = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pci_deb_hab", DbType:="Char(1)")>  _
	Public Property pci_deb_hab() As System.Nullable(Of Char)
		Get
			Return Me._pci_deb_hab
		End Get
		Set
			If (Me._pci_deb_hab.Equals(value) = false) Then
				Me._pci_deb_hab = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pci_cod_cta_mx", DbType:="Decimal(10,0)")>  _
	Public Property pci_cod_cta_mx() As System.Nullable(Of Decimal)
		Get
			Return Me._pci_cod_cta_mx
		End Get
		Set
			If (Me._pci_cod_cta_mx.Equals(value) = false) Then
				Me._pci_cod_cta_mx = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pci_cod_cta_uf", DbType:="Decimal(10,0)")>  _
	Public Property pci_cod_cta_uf() As System.Nullable(Of Decimal)
		Get
			Return Me._pci_cod_cta_uf
		End Get
		Set
			If (Me._pci_cod_cta_uf.Equals(value) = false) Then
				Me._pci_cod_cta_uf = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pci_cod_cta_re", DbType:="Decimal(10,0)")>  _
	Public Property pci_cod_cta_re() As System.Nullable(Of Decimal)
		Get
			Return Me._pci_cod_cta_re
		End Get
		Set
			If (Me._pci_cod_cta_re.Equals(value) = false) Then
				Me._pci_cod_cta_re = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pci_mon_cta", DbType:="NVarChar(2)")>  _
	Public Property pci_mon_cta() As String
		Get
			Return Me._pci_mon_cta
		End Get
		Set
			If (String.Equals(Me._pci_mon_cta, value) = false) Then
				Me._pci_mon_cta = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pci_tra_cod", DbType:="Decimal(9,0)")>  _
	Public Property pci_tra_cod() As System.Nullable(Of Decimal)
		Get
			Return Me._pci_tra_cod
		End Get
		Set
			If (Me._pci_tra_cod.Equals(value) = false) Then
				Me._pci_tra_cod = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pci_cta_csr", DbType:="Decimal(10,0)")>  _
	Public Property pci_cta_csr() As System.Nullable(Of Decimal)
		Get
			Return Me._pci_cta_csr
		End Get
		Set
			If (Me._pci_cta_csr.Equals(value) = false) Then
				Me._pci_cta_csr = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pci_cta_csr_uf", DbType:="Decimal(10,0)")>  _
	Public Property pci_cta_csr_uf() As System.Nullable(Of Decimal)
		Get
			Return Me._pci_cta_csr_uf
		End Get
		Set
			If (Me._pci_cta_csr_uf.Equals(value) = false) Then
				Me._pci_cta_csr_uf = value
			End If
		End Set
	End Property
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.PCI_OLD")>  _
Partial Public Class PCI_OLD_cls
	
	Private _pci_tip_pla As String
	
	Private _pci_cod_pla As String
	
	Private _pci_num_lin As Integer
	
	Private _pci_tip_val As String
	
	Private _pci_glo_val As String
	
	Private _pci_cod_cta As System.Nullable(Of Decimal)
	
	Private _pci_deb_hab As System.Nullable(Of Char)
	
	Private _pci_cod_cta_mx As System.Nullable(Of Decimal)
	
	Private _pci_cod_cta_uf As System.Nullable(Of Decimal)
	
	Private _pci_cod_cta_re As System.Nullable(Of Decimal)
	
	Private _pci_mon_cta As String
	
	Private _pci_tra_cod As System.Nullable(Of Decimal)
	
	Private _pci_cta_csr As System.Nullable(Of Decimal)
	
	Private _pci_cta_csr_uf As System.Nullable(Of Decimal)
	
	Public Sub New()
		MyBase.New
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pci_tip_pla", DbType:="Char(2) NOT NULL", CanBeNull:=false)>  _
	Public Property pci_tip_pla() As String
		Get
			Return Me._pci_tip_pla
		End Get
		Set
			If (String.Equals(Me._pci_tip_pla, value) = false) Then
				Me._pci_tip_pla = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pci_cod_pla", DbType:="Char(2) NOT NULL", CanBeNull:=false)>  _
	Public Property pci_cod_pla() As String
		Get
			Return Me._pci_cod_pla
		End Get
		Set
			If (String.Equals(Me._pci_cod_pla, value) = false) Then
				Me._pci_cod_pla = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pci_num_lin", DbType:="Int NOT NULL")>  _
	Public Property pci_num_lin() As Integer
		Get
			Return Me._pci_num_lin
		End Get
		Set
			If ((Me._pci_num_lin = value)  _
						= false) Then
				Me._pci_num_lin = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pci_tip_val", DbType:="Char(2) NOT NULL", CanBeNull:=false)>  _
	Public Property pci_tip_val() As String
		Get
			Return Me._pci_tip_val
		End Get
		Set
			If (String.Equals(Me._pci_tip_val, value) = false) Then
				Me._pci_tip_val = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pci_glo_val", DbType:="VarChar(100)")>  _
	Public Property pci_glo_val() As String
		Get
			Return Me._pci_glo_val
		End Get
		Set
			If (String.Equals(Me._pci_glo_val, value) = false) Then
				Me._pci_glo_val = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pci_cod_cta", DbType:="Decimal(10,0)")>  _
	Public Property pci_cod_cta() As System.Nullable(Of Decimal)
		Get
			Return Me._pci_cod_cta
		End Get
		Set
			If (Me._pci_cod_cta.Equals(value) = false) Then
				Me._pci_cod_cta = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pci_deb_hab", DbType:="Char(1)")>  _
	Public Property pci_deb_hab() As System.Nullable(Of Char)
		Get
			Return Me._pci_deb_hab
		End Get
		Set
			If (Me._pci_deb_hab.Equals(value) = false) Then
				Me._pci_deb_hab = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pci_cod_cta_mx", DbType:="Decimal(10,0)")>  _
	Public Property pci_cod_cta_mx() As System.Nullable(Of Decimal)
		Get
			Return Me._pci_cod_cta_mx
		End Get
		Set
			If (Me._pci_cod_cta_mx.Equals(value) = false) Then
				Me._pci_cod_cta_mx = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pci_cod_cta_uf", DbType:="Decimal(10,0)")>  _
	Public Property pci_cod_cta_uf() As System.Nullable(Of Decimal)
		Get
			Return Me._pci_cod_cta_uf
		End Get
		Set
			If (Me._pci_cod_cta_uf.Equals(value) = false) Then
				Me._pci_cod_cta_uf = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pci_cod_cta_re", DbType:="Decimal(10,0)")>  _
	Public Property pci_cod_cta_re() As System.Nullable(Of Decimal)
		Get
			Return Me._pci_cod_cta_re
		End Get
		Set
			If (Me._pci_cod_cta_re.Equals(value) = false) Then
				Me._pci_cod_cta_re = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pci_mon_cta", DbType:="NVarChar(2)")>  _
	Public Property pci_mon_cta() As String
		Get
			Return Me._pci_mon_cta
		End Get
		Set
			If (String.Equals(Me._pci_mon_cta, value) = false) Then
				Me._pci_mon_cta = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pci_tra_cod", DbType:="Decimal(9,0)")>  _
	Public Property pci_tra_cod() As System.Nullable(Of Decimal)
		Get
			Return Me._pci_tra_cod
		End Get
		Set
			If (Me._pci_tra_cod.Equals(value) = false) Then
				Me._pci_tra_cod = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pci_cta_csr", DbType:="Decimal(10,0)")>  _
	Public Property pci_cta_csr() As System.Nullable(Of Decimal)
		Get
			Return Me._pci_cta_csr
		End Get
		Set
			If (Me._pci_cta_csr.Equals(value) = false) Then
				Me._pci_cta_csr = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pci_cta_csr_uf", DbType:="Decimal(10,0)")>  _
	Public Property pci_cta_csr_uf() As System.Nullable(Of Decimal)
		Get
			Return Me._pci_cta_csr_uf
		End Get
		Set
			If (Me._pci_cta_csr_uf.Equals(value) = false) Then
				Me._pci_cta_csr_uf = value
			End If
		End Set
	End Property
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.pds")>  _
Partial Public Class pds_cls
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _id_pds As Integer
	
	Private _id_suc As Integer
	
	Private _id_PL_000047 As String
	
	Private _pds_ret As System.Nullable(Of Integer)
	
	Private _pds_comi As System.Nullable(Of Decimal)
	
	Private _pds_est As System.Nullable(Of Char)
	
	Private _pds_user As String
	
	Private _PL_000047_cls As EntityRef(Of PL_000047_cls)
	
	Private _suc_cls As EntityRef(Of suc_cls)
	
    #Region "Definiciones de métodos de extensibilidad"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub Onid_pdsChanging(value As Integer)
    End Sub
    Partial Private Sub Onid_pdsChanged()
    End Sub
    Partial Private Sub Onid_sucChanging(value As Integer)
    End Sub
    Partial Private Sub Onid_sucChanged()
    End Sub
    Partial Private Sub Onid_PL_000047Changing(value As String)
    End Sub
    Partial Private Sub Onid_PL_000047Changed()
    End Sub
    Partial Private Sub Onpds_retChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub Onpds_retChanged()
    End Sub
    Partial Private Sub Onpds_comiChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub Onpds_comiChanged()
    End Sub
    Partial Private Sub Onpds_estChanging(value As System.Nullable(Of Char))
    End Sub
    Partial Private Sub Onpds_estChanged()
    End Sub
    Partial Private Sub Onpds_userChanging(value As String)
    End Sub
    Partial Private Sub Onpds_userChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		Me._PL_000047_cls = CType(Nothing, EntityRef(Of PL_000047_cls))
		Me._suc_cls = CType(Nothing, EntityRef(Of suc_cls))
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_id_pds", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property id_pds() As Integer
		Get
			Return Me._id_pds
		End Get
		Set
			If ((Me._id_pds = value)  _
						= false) Then
				Me.Onid_pdsChanging(value)
				Me.SendPropertyChanging
				Me._id_pds = value
				Me.SendPropertyChanged("id_pds")
				Me.Onid_pdsChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_id_suc", DbType:="Int NOT NULL")>  _
	Public Property id_suc() As Integer
		Get
			Return Me._id_suc
		End Get
		Set
			If ((Me._id_suc = value)  _
						= false) Then
				If Me._suc_cls.HasLoadedOrAssignedValue Then
					Throw New System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException()
				End If
				Me.Onid_sucChanging(value)
				Me.SendPropertyChanging
				Me._id_suc = value
				Me.SendPropertyChanged("id_suc")
				Me.Onid_sucChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_id_PL_000047", DbType:="Char(6) NOT NULL", CanBeNull:=false)>  _
	Public Property id_PL_000047() As String
		Get
			Return Me._id_PL_000047
		End Get
		Set
			If (String.Equals(Me._id_PL_000047, value) = false) Then
				If Me._PL_000047_cls.HasLoadedOrAssignedValue Then
					Throw New System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException()
				End If
				Me.Onid_PL_000047Changing(value)
				Me.SendPropertyChanging
				Me._id_PL_000047 = value
				Me.SendPropertyChanged("id_PL_000047")
				Me.Onid_PL_000047Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pds_ret", DbType:="Int")>  _
	Public Property pds_ret() As System.Nullable(Of Integer)
		Get
			Return Me._pds_ret
		End Get
		Set
			If (Me._pds_ret.Equals(value) = false) Then
				Me.Onpds_retChanging(value)
				Me.SendPropertyChanging
				Me._pds_ret = value
				Me.SendPropertyChanged("pds_ret")
				Me.Onpds_retChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pds_comi", DbType:="Money")>  _
	Public Property pds_comi() As System.Nullable(Of Decimal)
		Get
			Return Me._pds_comi
		End Get
		Set
			If (Me._pds_comi.Equals(value) = false) Then
				Me.Onpds_comiChanging(value)
				Me.SendPropertyChanging
				Me._pds_comi = value
				Me.SendPropertyChanged("pds_comi")
				Me.Onpds_comiChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pds_est", DbType:="Char(1)")>  _
	Public Property pds_est() As System.Nullable(Of Char)
		Get
			Return Me._pds_est
		End Get
		Set
			If (Me._pds_est.Equals(value) = false) Then
				Me.Onpds_estChanging(value)
				Me.SendPropertyChanging
				Me._pds_est = value
				Me.SendPropertyChanged("pds_est")
				Me.Onpds_estChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pds_user", DbType:="VarChar(50)")>  _
	Public Property pds_user() As String
		Get
			Return Me._pds_user
		End Get
		Set
			If (String.Equals(Me._pds_user, value) = false) Then
				Me.Onpds_userChanging(value)
				Me.SendPropertyChanging
				Me._pds_user = value
				Me.SendPropertyChanged("pds_user")
				Me.Onpds_userChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="PL_000047_cls_pds_cls", Storage:="_PL_000047_cls", ThisKey:="id_PL_000047", OtherKey:="id_PL_000047", IsForeignKey:=true)>  _
	Public Property PL_000047_cls() As PL_000047_cls
		Get
			Return Me._PL_000047_cls.Entity
		End Get
		Set
			Dim previousValue As PL_000047_cls = Me._PL_000047_cls.Entity
			If ((Object.Equals(previousValue, value) = false)  _
						OrElse (Me._PL_000047_cls.HasLoadedOrAssignedValue = false)) Then
				Me.SendPropertyChanging
				If ((previousValue Is Nothing)  _
							= false) Then
					Me._PL_000047_cls.Entity = Nothing
					previousValue.pds_cls.Remove(Me)
				End If
				Me._PL_000047_cls.Entity = value
				If ((value Is Nothing)  _
							= false) Then
					value.pds_cls.Add(Me)
					Me._id_PL_000047 = value.id_PL_000047
				Else
					Me._id_PL_000047 = CType(Nothing, String)
				End If
				Me.SendPropertyChanged("PL_000047_cls")
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="suc_cls_pds_cls", Storage:="_suc_cls", ThisKey:="id_suc", OtherKey:="id_suc", IsForeignKey:=true)>  _
	Public Property suc_cls() As suc_cls
		Get
			Return Me._suc_cls.Entity
		End Get
		Set
			Dim previousValue As suc_cls = Me._suc_cls.Entity
			If ((Object.Equals(previousValue, value) = false)  _
						OrElse (Me._suc_cls.HasLoadedOrAssignedValue = false)) Then
				Me.SendPropertyChanging
				If ((previousValue Is Nothing)  _
							= false) Then
					Me._suc_cls.Entity = Nothing
					previousValue.pds_cls.Remove(Me)
				End If
				Me._suc_cls.Entity = value
				If ((value Is Nothing)  _
							= false) Then
					value.pds_cls.Add(Me)
					Me._id_suc = value.id_suc
				Else
					Me._id_suc = CType(Nothing, Integer)
				End If
				Me.SendPropertyChanged("suc_cls")
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.pgr")>  _
Partial Public Class pgr_cls
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _id_pgr As Integer
	
	Private _cli_idc As String
	
	Private _pgr_num As String
	
	Private _id_ope As System.Nullable(Of Decimal)
	
	Private _id_cxc As System.Nullable(Of Decimal)
	
	Private _id_P_0021 As System.Nullable(Of Integer)
	
	Private _id_P_0023 As System.Nullable(Of Integer)
	
	Private _id_P_0022 As System.Nullable(Of Integer)
	
	Private _id_P_0061 As System.Nullable(Of Integer)
	
	Private _pgr_fec_ing As System.Nullable(Of Date)
	
	Private _pgr_ftm As System.Nullable(Of Date)
	
	Private _pgr_fev As System.Nullable(Of Date)
	
	Private _pgr_fec_otv As System.Nullable(Of Date)
	
	Private _pgr_fec_prt As System.Nullable(Of Date)
	
	Private _pgr_mto As System.Nullable(Of Decimal)
	
	Private _pgr_anc As String
	
	Private _pgr_mdt As String
	
	Private _pgr_imp As System.Nullable(Of Decimal)
	
	Private _pgr_tim As System.Nullable(Of Decimal)
	
	Private _pgr_pag_tye As System.Nullable(Of Decimal)
	
	Private _PgrAsoc As System.Nullable(Of Integer)
	
	Private _cli_cls As EntityRef(Of cli_cls)
	
	Private _cxc_cls As EntityRef(Of cxc_cls)
	
	Private _ope_cls As EntityRef(Of ope_cls)
	
	Private _P_0021_cls As EntityRef(Of P_0021_cls)
	
	Private _P_0022_cls As EntityRef(Of P_0022_cls)
	
	Private _P_0023_cls As EntityRef(Of P_0023_cls)
	
	Private _P_0061_cls As EntityRef(Of P_0061_cls)
	
    #Region "Definiciones de métodos de extensibilidad"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub Onid_pgrChanging(value As Integer)
    End Sub
    Partial Private Sub Onid_pgrChanged()
    End Sub
    Partial Private Sub Oncli_idcChanging(value As String)
    End Sub
    Partial Private Sub Oncli_idcChanged()
    End Sub
    Partial Private Sub Onpgr_numChanging(value As String)
    End Sub
    Partial Private Sub Onpgr_numChanged()
    End Sub
    Partial Private Sub Onid_opeChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub Onid_opeChanged()
    End Sub
    Partial Private Sub Onid_cxcChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub Onid_cxcChanged()
    End Sub
    Partial Private Sub Onid_P_0021Changing(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub Onid_P_0021Changed()
    End Sub
    Partial Private Sub Onid_P_0023Changing(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub Onid_P_0023Changed()
    End Sub
    Partial Private Sub Onid_P_0022Changing(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub Onid_P_0022Changed()
    End Sub
    Partial Private Sub Onid_P_0061Changing(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub Onid_P_0061Changed()
    End Sub
    Partial Private Sub Onpgr_fec_ingChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub Onpgr_fec_ingChanged()
    End Sub
    Partial Private Sub Onpgr_ftmChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub Onpgr_ftmChanged()
    End Sub
    Partial Private Sub Onpgr_fevChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub Onpgr_fevChanged()
    End Sub
    Partial Private Sub Onpgr_fec_otvChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub Onpgr_fec_otvChanged()
    End Sub
    Partial Private Sub Onpgr_fec_prtChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub Onpgr_fec_prtChanged()
    End Sub
    Partial Private Sub Onpgr_mtoChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub Onpgr_mtoChanged()
    End Sub
    Partial Private Sub Onpgr_ancChanging(value As String)
    End Sub
    Partial Private Sub Onpgr_ancChanged()
    End Sub
    Partial Private Sub Onpgr_mdtChanging(value As String)
    End Sub
    Partial Private Sub Onpgr_mdtChanged()
    End Sub
    Partial Private Sub Onpgr_impChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub Onpgr_impChanged()
    End Sub
    Partial Private Sub Onpgr_timChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub Onpgr_timChanged()
    End Sub
    Partial Private Sub Onpgr_pag_tyeChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub Onpgr_pag_tyeChanged()
    End Sub
    Partial Private Sub OnPgrAsocChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnPgrAsocChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		Me._cli_cls = CType(Nothing, EntityRef(Of cli_cls))
		Me._cxc_cls = CType(Nothing, EntityRef(Of cxc_cls))
		Me._ope_cls = CType(Nothing, EntityRef(Of ope_cls))
		Me._P_0021_cls = CType(Nothing, EntityRef(Of P_0021_cls))
		Me._P_0022_cls = CType(Nothing, EntityRef(Of P_0022_cls))
		Me._P_0023_cls = CType(Nothing, EntityRef(Of P_0023_cls))
		Me._P_0061_cls = CType(Nothing, EntityRef(Of P_0061_cls))
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_id_pgr", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property id_pgr() As Integer
		Get
			Return Me._id_pgr
		End Get
		Set
			If ((Me._id_pgr = value)  _
						= false) Then
				Me.Onid_pgrChanging(value)
				Me.SendPropertyChanging
				Me._id_pgr = value
				Me.SendPropertyChanged("id_pgr")
				Me.Onid_pgrChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_cli_idc", DbType:="Char(12) NOT NULL", CanBeNull:=false)>  _
	Public Property cli_idc() As String
		Get
			Return Me._cli_idc
		End Get
		Set
			If (String.Equals(Me._cli_idc, value) = false) Then
				If Me._cli_cls.HasLoadedOrAssignedValue Then
					Throw New System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException()
				End If
				Me.Oncli_idcChanging(value)
				Me.SendPropertyChanging
				Me._cli_idc = value
				Me.SendPropertyChanged("cli_idc")
				Me.Oncli_idcChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pgr_num", DbType:="VarChar(20) NOT NULL", CanBeNull:=false)>  _
	Public Property pgr_num() As String
		Get
			Return Me._pgr_num
		End Get
		Set
			If (String.Equals(Me._pgr_num, value) = false) Then
				Me.Onpgr_numChanging(value)
				Me.SendPropertyChanging
				Me._pgr_num = value
				Me.SendPropertyChanged("pgr_num")
				Me.Onpgr_numChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_id_ope", DbType:="Decimal(10,0)")>  _
	Public Property id_ope() As System.Nullable(Of Decimal)
		Get
			Return Me._id_ope
		End Get
		Set
			If (Me._id_ope.Equals(value) = false) Then
				If Me._ope_cls.HasLoadedOrAssignedValue Then
					Throw New System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException()
				End If
				Me.Onid_opeChanging(value)
				Me.SendPropertyChanging
				Me._id_ope = value
				Me.SendPropertyChanged("id_ope")
				Me.Onid_opeChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_id_cxc", DbType:="Decimal(10,0)")>  _
	Public Property id_cxc() As System.Nullable(Of Decimal)
		Get
			Return Me._id_cxc
		End Get
		Set
			If (Me._id_cxc.Equals(value) = false) Then
				If Me._cxc_cls.HasLoadedOrAssignedValue Then
					Throw New System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException()
				End If
				Me.Onid_cxcChanging(value)
				Me.SendPropertyChanging
				Me._id_cxc = value
				Me.SendPropertyChanged("id_cxc")
				Me.Onid_cxcChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_id_P_0021", DbType:="Int")>  _
	Public Property id_P_0021() As System.Nullable(Of Integer)
		Get
			Return Me._id_P_0021
		End Get
		Set
			If (Me._id_P_0021.Equals(value) = false) Then
				If Me._P_0021_cls.HasLoadedOrAssignedValue Then
					Throw New System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException()
				End If
				Me.Onid_P_0021Changing(value)
				Me.SendPropertyChanging
				Me._id_P_0021 = value
				Me.SendPropertyChanged("id_P_0021")
				Me.Onid_P_0021Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_id_P_0023", DbType:="Int")>  _
	Public Property id_P_0023() As System.Nullable(Of Integer)
		Get
			Return Me._id_P_0023
		End Get
		Set
			If (Me._id_P_0023.Equals(value) = false) Then
				If Me._P_0023_cls.HasLoadedOrAssignedValue Then
					Throw New System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException()
				End If
				Me.Onid_P_0023Changing(value)
				Me.SendPropertyChanging
				Me._id_P_0023 = value
				Me.SendPropertyChanged("id_P_0023")
				Me.Onid_P_0023Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_id_P_0022", DbType:="Int")>  _
	Public Property id_P_0022() As System.Nullable(Of Integer)
		Get
			Return Me._id_P_0022
		End Get
		Set
			If (Me._id_P_0022.Equals(value) = false) Then
				If Me._P_0022_cls.HasLoadedOrAssignedValue Then
					Throw New System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException()
				End If
				Me.Onid_P_0022Changing(value)
				Me.SendPropertyChanging
				Me._id_P_0022 = value
				Me.SendPropertyChanged("id_P_0022")
				Me.Onid_P_0022Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_id_P_0061", DbType:="Int")>  _
	Public Property id_P_0061() As System.Nullable(Of Integer)
		Get
			Return Me._id_P_0061
		End Get
		Set
			If (Me._id_P_0061.Equals(value) = false) Then
				If Me._P_0061_cls.HasLoadedOrAssignedValue Then
					Throw New System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException()
				End If
				Me.Onid_P_0061Changing(value)
				Me.SendPropertyChanging
				Me._id_P_0061 = value
				Me.SendPropertyChanged("id_P_0061")
				Me.Onid_P_0061Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pgr_fec_ing", DbType:="DateTime")>  _
	Public Property pgr_fec_ing() As System.Nullable(Of Date)
		Get
			Return Me._pgr_fec_ing
		End Get
		Set
			If (Me._pgr_fec_ing.Equals(value) = false) Then
				Me.Onpgr_fec_ingChanging(value)
				Me.SendPropertyChanging
				Me._pgr_fec_ing = value
				Me.SendPropertyChanged("pgr_fec_ing")
				Me.Onpgr_fec_ingChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pgr_ftm", DbType:="DateTime")>  _
	Public Property pgr_ftm() As System.Nullable(Of Date)
		Get
			Return Me._pgr_ftm
		End Get
		Set
			If (Me._pgr_ftm.Equals(value) = false) Then
				Me.Onpgr_ftmChanging(value)
				Me.SendPropertyChanging
				Me._pgr_ftm = value
				Me.SendPropertyChanged("pgr_ftm")
				Me.Onpgr_ftmChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pgr_fev", DbType:="DateTime")>  _
	Public Property pgr_fev() As System.Nullable(Of Date)
		Get
			Return Me._pgr_fev
		End Get
		Set
			If (Me._pgr_fev.Equals(value) = false) Then
				Me.Onpgr_fevChanging(value)
				Me.SendPropertyChanging
				Me._pgr_fev = value
				Me.SendPropertyChanged("pgr_fev")
				Me.Onpgr_fevChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pgr_fec_otv", DbType:="DateTime")>  _
	Public Property pgr_fec_otv() As System.Nullable(Of Date)
		Get
			Return Me._pgr_fec_otv
		End Get
		Set
			If (Me._pgr_fec_otv.Equals(value) = false) Then
				Me.Onpgr_fec_otvChanging(value)
				Me.SendPropertyChanging
				Me._pgr_fec_otv = value
				Me.SendPropertyChanged("pgr_fec_otv")
				Me.Onpgr_fec_otvChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pgr_fec_prt", DbType:="DateTime")>  _
	Public Property pgr_fec_prt() As System.Nullable(Of Date)
		Get
			Return Me._pgr_fec_prt
		End Get
		Set
			If (Me._pgr_fec_prt.Equals(value) = false) Then
				Me.Onpgr_fec_prtChanging(value)
				Me.SendPropertyChanging
				Me._pgr_fec_prt = value
				Me.SendPropertyChanged("pgr_fec_prt")
				Me.Onpgr_fec_prtChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pgr_mto", DbType:="Money")>  _
	Public Property pgr_mto() As System.Nullable(Of Decimal)
		Get
			Return Me._pgr_mto
		End Get
		Set
			If (Me._pgr_mto.Equals(value) = false) Then
				Me.Onpgr_mtoChanging(value)
				Me.SendPropertyChanging
				Me._pgr_mto = value
				Me.SendPropertyChanged("pgr_mto")
				Me.Onpgr_mtoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pgr_anc", DbType:="VarChar(255)")>  _
	Public Property pgr_anc() As String
		Get
			Return Me._pgr_anc
		End Get
		Set
			If (String.Equals(Me._pgr_anc, value) = false) Then
				Me.Onpgr_ancChanging(value)
				Me.SendPropertyChanging
				Me._pgr_anc = value
				Me.SendPropertyChanged("pgr_anc")
				Me.Onpgr_ancChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pgr_mdt", DbType:="VarChar(1)")>  _
	Public Property pgr_mdt() As String
		Get
			Return Me._pgr_mdt
		End Get
		Set
			If (String.Equals(Me._pgr_mdt, value) = false) Then
				Me.Onpgr_mdtChanging(value)
				Me.SendPropertyChanging
				Me._pgr_mdt = value
				Me.SendPropertyChanged("pgr_mdt")
				Me.Onpgr_mdtChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pgr_imp", DbType:="Money")>  _
	Public Property pgr_imp() As System.Nullable(Of Decimal)
		Get
			Return Me._pgr_imp
		End Get
		Set
			If (Me._pgr_imp.Equals(value) = false) Then
				Me.Onpgr_impChanging(value)
				Me.SendPropertyChanging
				Me._pgr_imp = value
				Me.SendPropertyChanged("pgr_imp")
				Me.Onpgr_impChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pgr_tim", DbType:="Decimal(5,2)")>  _
	Public Property pgr_tim() As System.Nullable(Of Decimal)
		Get
			Return Me._pgr_tim
		End Get
		Set
			If (Me._pgr_tim.Equals(value) = false) Then
				Me.Onpgr_timChanging(value)
				Me.SendPropertyChanging
				Me._pgr_tim = value
				Me.SendPropertyChanged("pgr_tim")
				Me.Onpgr_timChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pgr_pag_tye", DbType:="Decimal(10,0)")>  _
	Public Property pgr_pag_tye() As System.Nullable(Of Decimal)
		Get
			Return Me._pgr_pag_tye
		End Get
		Set
			If (Me._pgr_pag_tye.Equals(value) = false) Then
				Me.Onpgr_pag_tyeChanging(value)
				Me.SendPropertyChanging
				Me._pgr_pag_tye = value
				Me.SendPropertyChanged("pgr_pag_tye")
				Me.Onpgr_pag_tyeChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PgrAsoc", DbType:="Int")>  _
	Public Property PgrAsoc() As System.Nullable(Of Integer)
		Get
			Return Me._PgrAsoc
		End Get
		Set
			If (Me._PgrAsoc.Equals(value) = false) Then
				Me.OnPgrAsocChanging(value)
				Me.SendPropertyChanging
				Me._PgrAsoc = value
				Me.SendPropertyChanged("PgrAsoc")
				Me.OnPgrAsocChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="cli_cls_pgr_cls", Storage:="_cli_cls", ThisKey:="cli_idc", OtherKey:="cli_idc", IsForeignKey:=true)>  _
	Public Property cli_cls() As cli_cls
		Get
			Return Me._cli_cls.Entity
		End Get
		Set
			Dim previousValue As cli_cls = Me._cli_cls.Entity
			If ((Object.Equals(previousValue, value) = false)  _
						OrElse (Me._cli_cls.HasLoadedOrAssignedValue = false)) Then
				Me.SendPropertyChanging
				If ((previousValue Is Nothing)  _
							= false) Then
					Me._cli_cls.Entity = Nothing
					previousValue.pgr_cls.Remove(Me)
				End If
				Me._cli_cls.Entity = value
				If ((value Is Nothing)  _
							= false) Then
					value.pgr_cls.Add(Me)
					Me._cli_idc = value.cli_idc
				Else
					Me._cli_idc = CType(Nothing, String)
				End If
				Me.SendPropertyChanged("cli_cls")
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="cxc_cls_pgr_cls", Storage:="_cxc_cls", ThisKey:="id_cxc", OtherKey:="id_cxc", IsForeignKey:=true)>  _
	Public Property cxc_cls() As cxc_cls
		Get
			Return Me._cxc_cls.Entity
		End Get
		Set
			Dim previousValue As cxc_cls = Me._cxc_cls.Entity
			If ((Object.Equals(previousValue, value) = false)  _
						OrElse (Me._cxc_cls.HasLoadedOrAssignedValue = false)) Then
				Me.SendPropertyChanging
				If ((previousValue Is Nothing)  _
							= false) Then
					Me._cxc_cls.Entity = Nothing
					previousValue.pgr_cls.Remove(Me)
				End If
				Me._cxc_cls.Entity = value
				If ((value Is Nothing)  _
							= false) Then
					value.pgr_cls.Add(Me)
					Me._id_cxc = value.id_cxc
				Else
					Me._id_cxc = CType(Nothing, Nullable(Of Decimal))
				End If
				Me.SendPropertyChanged("cxc_cls")
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="ope_cls_pgr_cls", Storage:="_ope_cls", ThisKey:="id_ope", OtherKey:="id_ope", IsForeignKey:=true)>  _
	Public Property ope_cls() As ope_cls
		Get
			Return Me._ope_cls.Entity
		End Get
		Set
			Dim previousValue As ope_cls = Me._ope_cls.Entity
			If ((Object.Equals(previousValue, value) = false)  _
						OrElse (Me._ope_cls.HasLoadedOrAssignedValue = false)) Then
				Me.SendPropertyChanging
				If ((previousValue Is Nothing)  _
							= false) Then
					Me._ope_cls.Entity = Nothing
					previousValue.pgr_cls.Remove(Me)
				End If
				Me._ope_cls.Entity = value
				If ((value Is Nothing)  _
							= false) Then
					value.pgr_cls.Add(Me)
					Me._id_ope = value.id_ope
				Else
					Me._id_ope = CType(Nothing, Nullable(Of Decimal))
				End If
				Me.SendPropertyChanged("ope_cls")
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="P_0021_cls_pgr_cls", Storage:="_P_0021_cls", ThisKey:="id_P_0021", OtherKey:="id_P_0021", IsForeignKey:=true)>  _
	Public Property P_0021_cls() As P_0021_cls
		Get
			Return Me._P_0021_cls.Entity
		End Get
		Set
			Dim previousValue As P_0021_cls = Me._P_0021_cls.Entity
			If ((Object.Equals(previousValue, value) = false)  _
						OrElse (Me._P_0021_cls.HasLoadedOrAssignedValue = false)) Then
				Me.SendPropertyChanging
				If ((previousValue Is Nothing)  _
							= false) Then
					Me._P_0021_cls.Entity = Nothing
					previousValue.pgr_cls.Remove(Me)
				End If
				Me._P_0021_cls.Entity = value
				If ((value Is Nothing)  _
							= false) Then
					value.pgr_cls.Add(Me)
					Me._id_P_0021 = value.id_P_0021
				Else
					Me._id_P_0021 = CType(Nothing, Nullable(Of Integer))
				End If
				Me.SendPropertyChanged("P_0021_cls")
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="P_0022_cls_pgr_cls", Storage:="_P_0022_cls", ThisKey:="id_P_0022", OtherKey:="id_P_0022", IsForeignKey:=true)>  _
	Public Property P_0022_cls() As P_0022_cls
		Get
			Return Me._P_0022_cls.Entity
		End Get
		Set
			Dim previousValue As P_0022_cls = Me._P_0022_cls.Entity
			If ((Object.Equals(previousValue, value) = false)  _
						OrElse (Me._P_0022_cls.HasLoadedOrAssignedValue = false)) Then
				Me.SendPropertyChanging
				If ((previousValue Is Nothing)  _
							= false) Then
					Me._P_0022_cls.Entity = Nothing
					previousValue.pgr_cls.Remove(Me)
				End If
				Me._P_0022_cls.Entity = value
				If ((value Is Nothing)  _
							= false) Then
					value.pgr_cls.Add(Me)
					Me._id_P_0022 = value.id_P_0022
				Else
					Me._id_P_0022 = CType(Nothing, Nullable(Of Integer))
				End If
				Me.SendPropertyChanged("P_0022_cls")
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="P_0023_cls_pgr_cls", Storage:="_P_0023_cls", ThisKey:="id_P_0023", OtherKey:="id_P_0023", IsForeignKey:=true)>  _
	Public Property P_0023_cls() As P_0023_cls
		Get
			Return Me._P_0023_cls.Entity
		End Get
		Set
			Dim previousValue As P_0023_cls = Me._P_0023_cls.Entity
			If ((Object.Equals(previousValue, value) = false)  _
						OrElse (Me._P_0023_cls.HasLoadedOrAssignedValue = false)) Then
				Me.SendPropertyChanging
				If ((previousValue Is Nothing)  _
							= false) Then
					Me._P_0023_cls.Entity = Nothing
					previousValue.pgr_cls.Remove(Me)
				End If
				Me._P_0023_cls.Entity = value
				If ((value Is Nothing)  _
							= false) Then
					value.pgr_cls.Add(Me)
					Me._id_P_0023 = value.id_P_0023
				Else
					Me._id_P_0023 = CType(Nothing, Nullable(Of Integer))
				End If
				Me.SendPropertyChanged("P_0023_cls")
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="P_0061_cls_pgr_cls", Storage:="_P_0061_cls", ThisKey:="id_P_0061", OtherKey:="id_P_0061", IsForeignKey:=true)>  _
	Public Property P_0061_cls() As P_0061_cls
		Get
			Return Me._P_0061_cls.Entity
		End Get
		Set
			Dim previousValue As P_0061_cls = Me._P_0061_cls.Entity
			If ((Object.Equals(previousValue, value) = false)  _
						OrElse (Me._P_0061_cls.HasLoadedOrAssignedValue = false)) Then
				Me.SendPropertyChanging
				If ((previousValue Is Nothing)  _
							= false) Then
					Me._P_0061_cls.Entity = Nothing
					previousValue.pgr_cls.Remove(Me)
				End If
				Me._P_0061_cls.Entity = value
				If ((value Is Nothing)  _
							= false) Then
					value.pgr_cls.Add(Me)
					Me._id_P_0061 = value.id_P_0061
				Else
					Me._id_P_0061 = CType(Nothing, Nullable(Of Integer))
				End If
				Me.SendPropertyChanged("P_0061_cls")
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.pgr_temp")>  _
Partial Public Class pgr_temp_cls
	
	Private _cli_idc As String
	
	Private _cli_rso As String
	
	Private _cli_ape_ptn As String
	
	Private _cli_ape_mtn As String
	
	Private _cli_dig_ito As String
	
	Private _id_eje_cod_eje As System.Nullable(Of Integer)
	
	Private _mto_ope As System.Nullable(Of Decimal)
	
	Private _mto_pgr As System.Nullable(Of Decimal)
	
	Public Sub New()
		MyBase.New
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_cli_idc", DbType:="Char(12) NOT NULL", CanBeNull:=false)>  _
	Public Property cli_idc() As String
		Get
			Return Me._cli_idc
		End Get
		Set
			If (String.Equals(Me._cli_idc, value) = false) Then
				Me._cli_idc = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_cli_rso", DbType:="VarChar(50)")>  _
	Public Property cli_rso() As String
		Get
			Return Me._cli_rso
		End Get
		Set
			If (String.Equals(Me._cli_rso, value) = false) Then
				Me._cli_rso = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_cli_ape_ptn", DbType:="VarChar(20)")>  _
	Public Property cli_ape_ptn() As String
		Get
			Return Me._cli_ape_ptn
		End Get
		Set
			If (String.Equals(Me._cli_ape_ptn, value) = false) Then
				Me._cli_ape_ptn = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_cli_ape_mtn", DbType:="VarChar(20)")>  _
	Public Property cli_ape_mtn() As String
		Get
			Return Me._cli_ape_mtn
		End Get
		Set
			If (String.Equals(Me._cli_ape_mtn, value) = false) Then
				Me._cli_ape_mtn = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_cli_dig_ito", DbType:="VarChar(1)")>  _
	Public Property cli_dig_ito() As String
		Get
			Return Me._cli_dig_ito
		End Get
		Set
			If (String.Equals(Me._cli_dig_ito, value) = false) Then
				Me._cli_dig_ito = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_id_eje_cod_eje", DbType:="Int")>  _
	Public Property id_eje_cod_eje() As System.Nullable(Of Integer)
		Get
			Return Me._id_eje_cod_eje
		End Get
		Set
			If (Me._id_eje_cod_eje.Equals(value) = false) Then
				Me._id_eje_cod_eje = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_mto_ope", DbType:="Decimal(25,0)")>  _
	Public Property mto_ope() As System.Nullable(Of Decimal)
		Get
			Return Me._mto_ope
		End Get
		Set
			If (Me._mto_ope.Equals(value) = false) Then
				Me._mto_ope = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_mto_pgr", DbType:="Decimal(25,0)")>  _
	Public Property mto_pgr() As System.Nullable(Of Decimal)
		Get
			Return Me._mto_pgr
		End Get
		Set
			If (Me._mto_pgr.Equals(value) = false) Then
				Me._mto_pgr = value
			End If
		End Set
	End Property
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.PL_000006")>  _
Partial Public Class PL_000006_cls
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _id_PL_000006 As String
	
	Private _pal_des As String
	
	Private _pal_est As System.Nullable(Of Char)
	
	Private _pal_sis As System.Nullable(Of Char)
	
	Private _id_p_0064 As System.Nullable(Of Integer)
	
	Private _cli_cls As EntitySet(Of cli_cls)
	
    #Region "Definiciones de métodos de extensibilidad"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub Onid_PL_000006Changing(value As String)
    End Sub
    Partial Private Sub Onid_PL_000006Changed()
    End Sub
    Partial Private Sub Onpal_desChanging(value As String)
    End Sub
    Partial Private Sub Onpal_desChanged()
    End Sub
    Partial Private Sub Onpal_estChanging(value As System.Nullable(Of Char))
    End Sub
    Partial Private Sub Onpal_estChanged()
    End Sub
    Partial Private Sub Onpal_sisChanging(value As System.Nullable(Of Char))
    End Sub
    Partial Private Sub Onpal_sisChanged()
    End Sub
    Partial Private Sub Onid_p_0064Changing(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub Onid_p_0064Changed()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		Me._cli_cls = New EntitySet(Of cli_cls)(AddressOf Me.attach_cli_cls, AddressOf Me.detach_cli_cls)
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_id_PL_000006", DbType:="Char(11) NOT NULL", CanBeNull:=false, IsPrimaryKey:=true)>  _
	Public Property id_PL_000006() As String
		Get
			Return Me._id_PL_000006
		End Get
		Set
			If (String.Equals(Me._id_PL_000006, value) = false) Then
				Me.Onid_PL_000006Changing(value)
				Me.SendPropertyChanging
				Me._id_PL_000006 = value
				Me.SendPropertyChanged("id_PL_000006")
				Me.Onid_PL_000006Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pal_des", DbType:="VarChar(200)")>  _
	Public Property pal_des() As String
		Get
			Return Me._pal_des
		End Get
		Set
			If (String.Equals(Me._pal_des, value) = false) Then
				Me.Onpal_desChanging(value)
				Me.SendPropertyChanging
				Me._pal_des = value
				Me.SendPropertyChanged("pal_des")
				Me.Onpal_desChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pal_est", DbType:="Char(1)")>  _
	Public Property pal_est() As System.Nullable(Of Char)
		Get
			Return Me._pal_est
		End Get
		Set
			If (Me._pal_est.Equals(value) = false) Then
				Me.Onpal_estChanging(value)
				Me.SendPropertyChanging
				Me._pal_est = value
				Me.SendPropertyChanged("pal_est")
				Me.Onpal_estChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pal_sis", DbType:="Char(1)")>  _
	Public Property pal_sis() As System.Nullable(Of Char)
		Get
			Return Me._pal_sis
		End Get
		Set
			If (Me._pal_sis.Equals(value) = false) Then
				Me.Onpal_sisChanging(value)
				Me.SendPropertyChanging
				Me._pal_sis = value
				Me.SendPropertyChanged("pal_sis")
				Me.Onpal_sisChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_id_p_0064", DbType:="Int")>  _
	Public Property id_p_0064() As System.Nullable(Of Integer)
		Get
			Return Me._id_p_0064
		End Get
		Set
			If (Me._id_p_0064.Equals(value) = false) Then
				Me.Onid_p_0064Changing(value)
				Me.SendPropertyChanging
				Me._id_p_0064 = value
				Me.SendPropertyChanged("id_p_0064")
				Me.Onid_p_0064Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="PL_000006_cls_cli_cls", Storage:="_cli_cls", ThisKey:="id_PL_000006", OtherKey:="id_PL_000006")>  _
	Public Property cli_cls() As EntitySet(Of cli_cls)
		Get
			Return Me._cli_cls
		End Get
		Set
			Me._cli_cls.Assign(value)
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
	
	Private Sub attach_cli_cls(ByVal entity As cli_cls)
		Me.SendPropertyChanging
		entity.PL_000006_cls = Me
	End Sub
	
	Private Sub detach_cli_cls(ByVal entity As cli_cls)
		Me.SendPropertyChanging
		entity.PL_000006_cls = Nothing
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.PL_000047")>  _
Partial Public Class PL_000047_cls
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _id_PL_000047 As String
	
	Private _pal_des As String
	
	Private _pal_est As System.Nullable(Of Char)
	
	Private _pal_sis As System.Nullable(Of Char)
	
	Private _pal_reg As System.Nullable(Of Integer)
	
	Private _chr_cls As EntitySet(Of chr_cls)
	
	Private _dpo_cls As EntitySet(Of dpo_cls)
	
	Private _dsi_cls As EntitySet(Of dsi_cls)
	
	Private _opn_cls As EntitySet(Of opn_cls)
	
	Private _pds_cls As EntitySet(Of pds_cls)
	
	Private _sbc_cls As EntitySet(Of sbc_cls)
	
    #Region "Definiciones de métodos de extensibilidad"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub Onid_PL_000047Changing(value As String)
    End Sub
    Partial Private Sub Onid_PL_000047Changed()
    End Sub
    Partial Private Sub Onpal_desChanging(value As String)
    End Sub
    Partial Private Sub Onpal_desChanged()
    End Sub
    Partial Private Sub Onpal_estChanging(value As System.Nullable(Of Char))
    End Sub
    Partial Private Sub Onpal_estChanged()
    End Sub
    Partial Private Sub Onpal_sisChanging(value As System.Nullable(Of Char))
    End Sub
    Partial Private Sub Onpal_sisChanged()
    End Sub
    Partial Private Sub Onpal_regChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub Onpal_regChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		Me._chr_cls = New EntitySet(Of chr_cls)(AddressOf Me.attach_chr_cls, AddressOf Me.detach_chr_cls)
		Me._dpo_cls = New EntitySet(Of dpo_cls)(AddressOf Me.attach_dpo_cls, AddressOf Me.detach_dpo_cls)
		Me._dsi_cls = New EntitySet(Of dsi_cls)(AddressOf Me.attach_dsi_cls, AddressOf Me.detach_dsi_cls)
		Me._opn_cls = New EntitySet(Of opn_cls)(AddressOf Me.attach_opn_cls, AddressOf Me.detach_opn_cls)
		Me._pds_cls = New EntitySet(Of pds_cls)(AddressOf Me.attach_pds_cls, AddressOf Me.detach_pds_cls)
		Me._sbc_cls = New EntitySet(Of sbc_cls)(AddressOf Me.attach_sbc_cls, AddressOf Me.detach_sbc_cls)
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_id_PL_000047", DbType:="Char(6) NOT NULL", CanBeNull:=false, IsPrimaryKey:=true)>  _
	Public Property id_PL_000047() As String
		Get
			Return Me._id_PL_000047
		End Get
		Set
			If (String.Equals(Me._id_PL_000047, value) = false) Then
				Me.Onid_PL_000047Changing(value)
				Me.SendPropertyChanging
				Me._id_PL_000047 = value
				Me.SendPropertyChanged("id_PL_000047")
				Me.Onid_PL_000047Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pal_des", DbType:="Char(50)")>  _
	Public Property pal_des() As String
		Get
			Return Me._pal_des
		End Get
		Set
			If (String.Equals(Me._pal_des, value) = false) Then
				Me.Onpal_desChanging(value)
				Me.SendPropertyChanging
				Me._pal_des = value
				Me.SendPropertyChanged("pal_des")
				Me.Onpal_desChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pal_est", DbType:="Char(1)")>  _
	Public Property pal_est() As System.Nullable(Of Char)
		Get
			Return Me._pal_est
		End Get
		Set
			If (Me._pal_est.Equals(value) = false) Then
				Me.Onpal_estChanging(value)
				Me.SendPropertyChanging
				Me._pal_est = value
				Me.SendPropertyChanged("pal_est")
				Me.Onpal_estChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pal_sis", DbType:="Char(1)")>  _
	Public Property pal_sis() As System.Nullable(Of Char)
		Get
			Return Me._pal_sis
		End Get
		Set
			If (Me._pal_sis.Equals(value) = false) Then
				Me.Onpal_sisChanging(value)
				Me.SendPropertyChanging
				Me._pal_sis = value
				Me.SendPropertyChanged("pal_sis")
				Me.Onpal_sisChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pal_reg", DbType:="Int")>  _
	Public Property pal_reg() As System.Nullable(Of Integer)
		Get
			Return Me._pal_reg
		End Get
		Set
			If (Me._pal_reg.Equals(value) = false) Then
				Me.Onpal_regChanging(value)
				Me.SendPropertyChanging
				Me._pal_reg = value
				Me.SendPropertyChanged("pal_reg")
				Me.Onpal_regChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="PL_000047_cls_chr_cls", Storage:="_chr_cls", ThisKey:="id_PL_000047", OtherKey:="id_PL_000047")>  _
	Public Property chr_cls() As EntitySet(Of chr_cls)
		Get
			Return Me._chr_cls
		End Get
		Set
			Me._chr_cls.Assign(value)
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="PL_000047_cls_dpo_cls", Storage:="_dpo_cls", ThisKey:="id_PL_000047", OtherKey:="id_PL_000047")>  _
	Public Property dpo_cls() As EntitySet(Of dpo_cls)
		Get
			Return Me._dpo_cls
		End Get
		Set
			Me._dpo_cls.Assign(value)
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="PL_000047_cls_dsi_cls", Storage:="_dsi_cls", ThisKey:="id_PL_000047", OtherKey:="id_PL_000047")>  _
	Public Property dsi_cls() As EntitySet(Of dsi_cls)
		Get
			Return Me._dsi_cls
		End Get
		Set
			Me._dsi_cls.Assign(value)
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="PL_000047_cls_opn_cls", Storage:="_opn_cls", ThisKey:="id_PL_000047", OtherKey:="id_PL_000047")>  _
	Public Property opn_cls() As EntitySet(Of opn_cls)
		Get
			Return Me._opn_cls
		End Get
		Set
			Me._opn_cls.Assign(value)
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="PL_000047_cls_pds_cls", Storage:="_pds_cls", ThisKey:="id_PL_000047", OtherKey:="id_PL_000047")>  _
	Public Property pds_cls() As EntitySet(Of pds_cls)
		Get
			Return Me._pds_cls
		End Get
		Set
			Me._pds_cls.Assign(value)
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="PL_000047_cls_sbc_cls", Storage:="_sbc_cls", ThisKey:="id_PL_000047", OtherKey:="id_pl_000047")>  _
	Public Property sbc_cls() As EntitySet(Of sbc_cls)
		Get
			Return Me._sbc_cls
		End Get
		Set
			Me._sbc_cls.Assign(value)
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
	
	Private Sub attach_chr_cls(ByVal entity As chr_cls)
		Me.SendPropertyChanging
		entity.PL_000047_cls = Me
	End Sub
	
	Private Sub detach_chr_cls(ByVal entity As chr_cls)
		Me.SendPropertyChanging
		entity.PL_000047_cls = Nothing
	End Sub
	
	Private Sub attach_dpo_cls(ByVal entity As dpo_cls)
		Me.SendPropertyChanging
		entity.PL_000047_cls = Me
	End Sub
	
	Private Sub detach_dpo_cls(ByVal entity As dpo_cls)
		Me.SendPropertyChanging
		entity.PL_000047_cls = Nothing
	End Sub
	
	Private Sub attach_dsi_cls(ByVal entity As dsi_cls)
		Me.SendPropertyChanging
		entity.PL_000047_cls = Me
	End Sub
	
	Private Sub detach_dsi_cls(ByVal entity As dsi_cls)
		Me.SendPropertyChanging
		entity.PL_000047_cls = Nothing
	End Sub
	
	Private Sub attach_opn_cls(ByVal entity As opn_cls)
		Me.SendPropertyChanging
		entity.PL_000047_cls = Me
	End Sub
	
	Private Sub detach_opn_cls(ByVal entity As opn_cls)
		Me.SendPropertyChanging
		entity.PL_000047_cls = Nothing
	End Sub
	
	Private Sub attach_pds_cls(ByVal entity As pds_cls)
		Me.SendPropertyChanging
		entity.PL_000047_cls = Me
	End Sub
	
	Private Sub detach_pds_cls(ByVal entity As pds_cls)
		Me.SendPropertyChanging
		entity.PL_000047_cls = Nothing
	End Sub
	
	Private Sub attach_sbc_cls(ByVal entity As sbc_cls)
		Me.SendPropertyChanging
		entity.PL_000047_cls = Me
	End Sub
	
	Private Sub detach_sbc_cls(ByVal entity As sbc_cls)
		Me.SendPropertyChanging
		entity.PL_000047_cls = Nothing
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.PL_000066")>  _
Partial Public Class PL_000066_cls
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _id_PL_000066 As String
	
	Private _pal_des As String
	
	Private _pal_est As System.Nullable(Of Char)
	
	Private _pal_sis As System.Nullable(Of Char)
	
	Private _cli_cls As EntitySet(Of cli_cls)
	
    #Region "Definiciones de métodos de extensibilidad"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub Onid_PL_000066Changing(value As String)
    End Sub
    Partial Private Sub Onid_PL_000066Changed()
    End Sub
    Partial Private Sub Onpal_desChanging(value As String)
    End Sub
    Partial Private Sub Onpal_desChanged()
    End Sub
    Partial Private Sub Onpal_estChanging(value As System.Nullable(Of Char))
    End Sub
    Partial Private Sub Onpal_estChanged()
    End Sub
    Partial Private Sub Onpal_sisChanging(value As System.Nullable(Of Char))
    End Sub
    Partial Private Sub Onpal_sisChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		Me._cli_cls = New EntitySet(Of cli_cls)(AddressOf Me.attach_cli_cls, AddressOf Me.detach_cli_cls)
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_id_PL_000066", DbType:="Char(6) NOT NULL", CanBeNull:=false, IsPrimaryKey:=true)>  _
	Public Property id_PL_000066() As String
		Get
			Return Me._id_PL_000066
		End Get
		Set
			If (String.Equals(Me._id_PL_000066, value) = false) Then
				Me.Onid_PL_000066Changing(value)
				Me.SendPropertyChanging
				Me._id_PL_000066 = value
				Me.SendPropertyChanged("id_PL_000066")
				Me.Onid_PL_000066Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pal_des", DbType:="Char(50)")>  _
	Public Property pal_des() As String
		Get
			Return Me._pal_des
		End Get
		Set
			If (String.Equals(Me._pal_des, value) = false) Then
				Me.Onpal_desChanging(value)
				Me.SendPropertyChanging
				Me._pal_des = value
				Me.SendPropertyChanged("pal_des")
				Me.Onpal_desChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pal_est", DbType:="Char(1)")>  _
	Public Property pal_est() As System.Nullable(Of Char)
		Get
			Return Me._pal_est
		End Get
		Set
			If (Me._pal_est.Equals(value) = false) Then
				Me.Onpal_estChanging(value)
				Me.SendPropertyChanging
				Me._pal_est = value
				Me.SendPropertyChanged("pal_est")
				Me.Onpal_estChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pal_sis", DbType:="Char(1)")>  _
	Public Property pal_sis() As System.Nullable(Of Char)
		Get
			Return Me._pal_sis
		End Get
		Set
			If (Me._pal_sis.Equals(value) = false) Then
				Me.Onpal_sisChanging(value)
				Me.SendPropertyChanging
				Me._pal_sis = value
				Me.SendPropertyChanged("pal_sis")
				Me.Onpal_sisChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="PL_000066_cls_cli_cls", Storage:="_cli_cls", ThisKey:="id_PL_000066", OtherKey:="id_PL_000066")>  _
	Public Property cli_cls() As EntitySet(Of cli_cls)
		Get
			Return Me._cli_cls
		End Get
		Set
			Me._cli_cls.Assign(value)
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
	
	Private Sub attach_cli_cls(ByVal entity As cli_cls)
		Me.SendPropertyChanging
		entity.PL_000066_cls = Me
	End Sub
	
	Private Sub detach_cli_cls(ByVal entity As cli_cls)
		Me.SendPropertyChanging
		entity.PL_000066_cls = Nothing
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.PL_000069")>  _
Partial Public Class PL_000069_cls
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _id_PL_000069 As String
	
	Private _pal_des As String
	
	Private _pal_est As Char
	
	Private _pal_sis As System.Nullable(Of Char)
	
	Private _nce_cls As EntitySet(Of nce_cls)
	
    #Region "Definiciones de métodos de extensibilidad"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub Onid_PL_000069Changing(value As String)
    End Sub
    Partial Private Sub Onid_PL_000069Changed()
    End Sub
    Partial Private Sub Onpal_desChanging(value As String)
    End Sub
    Partial Private Sub Onpal_desChanged()
    End Sub
    Partial Private Sub Onpal_estChanging(value As Char)
    End Sub
    Partial Private Sub Onpal_estChanged()
    End Sub
    Partial Private Sub Onpal_sisChanging(value As System.Nullable(Of Char))
    End Sub
    Partial Private Sub Onpal_sisChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		Me._nce_cls = New EntitySet(Of nce_cls)(AddressOf Me.attach_nce_cls, AddressOf Me.detach_nce_cls)
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_id_PL_000069", DbType:="Char(6) NOT NULL", CanBeNull:=false, IsPrimaryKey:=true)>  _
	Public Property id_PL_000069() As String
		Get
			Return Me._id_PL_000069
		End Get
		Set
			If (String.Equals(Me._id_PL_000069, value) = false) Then
				Me.Onid_PL_000069Changing(value)
				Me.SendPropertyChanging
				Me._id_PL_000069 = value
				Me.SendPropertyChanged("id_PL_000069")
				Me.Onid_PL_000069Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pal_des", DbType:="Char(50)")>  _
	Public Property pal_des() As String
		Get
			Return Me._pal_des
		End Get
		Set
			If (String.Equals(Me._pal_des, value) = false) Then
				Me.Onpal_desChanging(value)
				Me.SendPropertyChanging
				Me._pal_des = value
				Me.SendPropertyChanged("pal_des")
				Me.Onpal_desChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pal_est", DbType:="Char(1) NOT NULL")>  _
	Public Property pal_est() As Char
		Get
			Return Me._pal_est
		End Get
		Set
			If ((Me._pal_est = value)  _
						= false) Then
				Me.Onpal_estChanging(value)
				Me.SendPropertyChanging
				Me._pal_est = value
				Me.SendPropertyChanged("pal_est")
				Me.Onpal_estChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pal_sis", DbType:="Char(1)")>  _
	Public Property pal_sis() As System.Nullable(Of Char)
		Get
			Return Me._pal_sis
		End Get
		Set
			If (Me._pal_sis.Equals(value) = false) Then
				Me.Onpal_sisChanging(value)
				Me.SendPropertyChanging
				Me._pal_sis = value
				Me.SendPropertyChanged("pal_sis")
				Me.Onpal_sisChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="PL_000069_cls_nce_cls", Storage:="_nce_cls", ThisKey:="id_PL_000069", OtherKey:="id_PL_000069")>  _
	Public Property nce_cls() As EntitySet(Of nce_cls)
		Get
			Return Me._nce_cls
		End Get
		Set
			Me._nce_cls.Assign(value)
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
	
	Private Sub attach_nce_cls(ByVal entity As nce_cls)
		Me.SendPropertyChanging
		entity.PL_000069_cls = Me
	End Sub
	
	Private Sub detach_nce_cls(ByVal entity As nce_cls)
		Me.SendPropertyChanging
		entity.PL_000069_cls = Nothing
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.pld")>  _
Partial Public Class pld_cls
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _id_pld As Integer
	
	Private _pld_fec As System.Nullable(Of Date)
	
	Private _id_P_0112 As System.Nullable(Of Integer)
	
	Private _Nchr_pld As EntitySet(Of Nchr_pld)
	
    #Region "Definiciones de métodos de extensibilidad"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub Onid_pldChanging(value As Integer)
    End Sub
    Partial Private Sub Onid_pldChanged()
    End Sub
    Partial Private Sub Onpld_fecChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub Onpld_fecChanged()
    End Sub
    Partial Private Sub Onid_P_0112Changing(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub Onid_P_0112Changed()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		Me._Nchr_pld = New EntitySet(Of Nchr_pld)(AddressOf Me.attach_Nchr_pld, AddressOf Me.detach_Nchr_pld)
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_id_pld", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property id_pld() As Integer
		Get
			Return Me._id_pld
		End Get
		Set
			If ((Me._id_pld = value)  _
						= false) Then
				Me.Onid_pldChanging(value)
				Me.SendPropertyChanging
				Me._id_pld = value
				Me.SendPropertyChanged("id_pld")
				Me.Onid_pldChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pld_fec", DbType:="DateTime")>  _
	Public Property pld_fec() As System.Nullable(Of Date)
		Get
			Return Me._pld_fec
		End Get
		Set
			If (Me._pld_fec.Equals(value) = false) Then
				Me.Onpld_fecChanging(value)
				Me.SendPropertyChanging
				Me._pld_fec = value
				Me.SendPropertyChanged("pld_fec")
				Me.Onpld_fecChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_id_P_0112", DbType:="Int")>  _
	Public Property id_P_0112() As System.Nullable(Of Integer)
		Get
			Return Me._id_P_0112
		End Get
		Set
			If (Me._id_P_0112.Equals(value) = false) Then
				Me.Onid_P_0112Changing(value)
				Me.SendPropertyChanging
				Me._id_P_0112 = value
				Me.SendPropertyChanged("id_P_0112")
				Me.Onid_P_0112Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="pld_cls_Nchr_pld", Storage:="_Nchr_pld", ThisKey:="id_pld", OtherKey:="id_pld")>  _
	Public Property Nchr_pld() As EntitySet(Of Nchr_pld)
		Get
			Return Me._Nchr_pld
		End Get
		Set
			Me._Nchr_pld.Assign(value)
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
	
	Private Sub attach_Nchr_pld(ByVal entity As Nchr_pld)
		Me.SendPropertyChanging
		entity.pld_cls = Me
	End Sub
	
	Private Sub detach_Nchr_pld(ByVal entity As Nchr_pld)
		Me.SendPropertyChanging
		entity.pld_cls = Nothing
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.prc")>  _
Partial Public Class prc_cls
	
	Private _id_prc As Integer
	
	Private _prc_sec As Integer
	
	Private _prc_nom_spr As String
	
	Private _prc_des_cor As String
	
	Private _prc_des As String
	
	Private _prc_est_eje As System.Nullable(Of Char)
	
	Private _prc_est As System.Nullable(Of Char)
	
	Private _prc_tip As System.Nullable(Of Char)
	
	Private _prc_eje As System.Nullable(Of Char)
	
	Private _prc_fec As System.Nullable(Of Date)
	
	Private _prc_hra_ini As System.Nullable(Of Date)
	
	Private _prc_hra_fin As System.Nullable(Of Date)
	
	Private _prc_fec_rea As System.Nullable(Of Date)
	
	Private _prc_par As String
	
	Public Sub New()
		MyBase.New
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_id_prc", AutoSync:=AutoSync.Always, DbType:="Int NOT NULL IDENTITY", IsDbGenerated:=true)>  _
	Public Property id_prc() As Integer
		Get
			Return Me._id_prc
		End Get
		Set
			If ((Me._id_prc = value)  _
						= false) Then
				Me._id_prc = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_prc_sec", DbType:="Int NOT NULL")>  _
	Public Property prc_sec() As Integer
		Get
			Return Me._prc_sec
		End Get
		Set
			If ((Me._prc_sec = value)  _
						= false) Then
				Me._prc_sec = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_prc_nom_spr", DbType:="VarChar(18)")>  _
	Public Property prc_nom_spr() As String
		Get
			Return Me._prc_nom_spr
		End Get
		Set
			If (String.Equals(Me._prc_nom_spr, value) = false) Then
				Me._prc_nom_spr = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_prc_des_cor", DbType:="VarChar(25)")>  _
	Public Property prc_des_cor() As String
		Get
			Return Me._prc_des_cor
		End Get
		Set
			If (String.Equals(Me._prc_des_cor, value) = false) Then
				Me._prc_des_cor = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_prc_des", DbType:="VarChar(250)")>  _
	Public Property prc_des() As String
		Get
			Return Me._prc_des
		End Get
		Set
			If (String.Equals(Me._prc_des, value) = false) Then
				Me._prc_des = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_prc_est_eje", DbType:="Char(1)")>  _
	Public Property prc_est_eje() As System.Nullable(Of Char)
		Get
			Return Me._prc_est_eje
		End Get
		Set
			If (Me._prc_est_eje.Equals(value) = false) Then
				Me._prc_est_eje = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_prc_est", DbType:="Char(1)")>  _
	Public Property prc_est() As System.Nullable(Of Char)
		Get
			Return Me._prc_est
		End Get
		Set
			If (Me._prc_est.Equals(value) = false) Then
				Me._prc_est = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_prc_tip", DbType:="Char(1)")>  _
	Public Property prc_tip() As System.Nullable(Of Char)
		Get
			Return Me._prc_tip
		End Get
		Set
			If (Me._prc_tip.Equals(value) = false) Then
				Me._prc_tip = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_prc_eje", DbType:="Char(1)")>  _
	Public Property prc_eje() As System.Nullable(Of Char)
		Get
			Return Me._prc_eje
		End Get
		Set
			If (Me._prc_eje.Equals(value) = false) Then
				Me._prc_eje = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_prc_fec", DbType:="DateTime")>  _
	Public Property prc_fec() As System.Nullable(Of Date)
		Get
			Return Me._prc_fec
		End Get
		Set
			If (Me._prc_fec.Equals(value) = false) Then
				Me._prc_fec = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_prc_hra_ini", DbType:="DateTime")>  _
	Public Property prc_hra_ini() As System.Nullable(Of Date)
		Get
			Return Me._prc_hra_ini
		End Get
		Set
			If (Me._prc_hra_ini.Equals(value) = false) Then
				Me._prc_hra_ini = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_prc_hra_fin", DbType:="DateTime")>  _
	Public Property prc_hra_fin() As System.Nullable(Of Date)
		Get
			Return Me._prc_hra_fin
		End Get
		Set
			If (Me._prc_hra_fin.Equals(value) = false) Then
				Me._prc_hra_fin = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_prc_fec_rea", DbType:="DateTime")>  _
	Public Property prc_fec_rea() As System.Nullable(Of Date)
		Get
			Return Me._prc_fec_rea
		End Get
		Set
			If (Me._prc_fec_rea.Equals(value) = false) Then
				Me._prc_fec_rea = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_prc_par", DbType:="VarChar(250)")>  _
	Public Property prc_par() As String
		Get
			Return Me._prc_par
		End Get
		Set
			If (String.Equals(Me._prc_par, value) = false) Then
				Me._prc_par = value
			End If
		End Set
	End Property
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.PRO")>  _
Partial Public Class PRO_cls
	
	Private _CONTRATO As String
	
	Private _NUEVA_FECHA As System.Nullable(Of Date)
	
	Public Sub New()
		MyBase.New
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CONTRATO", DbType:="VarChar(20)")>  _
	Public Property CONTRATO() As String
		Get
			Return Me._CONTRATO
		End Get
		Set
			If (String.Equals(Me._CONTRATO, value) = false) Then
				Me._CONTRATO = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NUEVA_FECHA", DbType:="DateTime")>  _
	Public Property NUEVA_FECHA() As System.Nullable(Of Date)
		Get
			Return Me._NUEVA_FECHA
		End Get
		Set
			If (Me._NUEVA_FECHA.Equals(value) = false) Then
				Me._NUEVA_FECHA = value
			End If
		End Set
	End Property
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.PRO_ESP")>  _
Partial Public Class PRO_ESP_cls
	
	Private _ID_PRO_ESP As Integer
	
	Private _RUT_CLI As String
	
	Private _COD_PRODUCTO As String
	
	Private _ID_ROL As String
	
	Private _PRO_ESP_VINC As String
	
	Private _PRO_ESP_OTO_RGO As String
	
	Private _PRO_ESP_GAR_ESP As String
	
	Private _PRO_ESP_MAT As String
	
	Private _PRO_ESP_END_DOC As String
	
	Private _PRO_ESP_NOT As String
	
	Private _PRO_ESP_ACEP As String
	
	Private _PRO_ESP_CONF As String
	
	Private _PRO_ESP_REC_PAG As String
	
	Private _PRO_ESP_OTRS As String
	
	Private _PRO_PAR_EST As System.Nullable(Of Integer)
	
	Public Sub New()
		MyBase.New
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ID_PRO_ESP", AutoSync:=AutoSync.Always, DbType:="Int NOT NULL IDENTITY", IsDbGenerated:=true)>  _
	Public Property ID_PRO_ESP() As Integer
		Get
			Return Me._ID_PRO_ESP
		End Get
		Set
			If ((Me._ID_PRO_ESP = value)  _
						= false) Then
				Me._ID_PRO_ESP = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_RUT_CLI", DbType:="VarChar(12)")>  _
	Public Property RUT_CLI() As String
		Get
			Return Me._RUT_CLI
		End Get
		Set
			If (String.Equals(Me._RUT_CLI, value) = false) Then
				Me._RUT_CLI = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_COD_PRODUCTO", DbType:="VarChar(3)")>  _
	Public Property COD_PRODUCTO() As String
		Get
			Return Me._COD_PRODUCTO
		End Get
		Set
			If (String.Equals(Me._COD_PRODUCTO, value) = false) Then
				Me._COD_PRODUCTO = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ID_ROL", DbType:="VarChar(20)")>  _
	Public Property ID_ROL() As String
		Get
			Return Me._ID_ROL
		End Get
		Set
			If (String.Equals(Me._ID_ROL, value) = false) Then
				Me._ID_ROL = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PRO_ESP_VINC", DbType:="Text", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property PRO_ESP_VINC() As String
		Get
			Return Me._PRO_ESP_VINC
		End Get
		Set
			If (String.Equals(Me._PRO_ESP_VINC, value) = false) Then
				Me._PRO_ESP_VINC = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PRO_ESP_OTO_RGO", DbType:="Text", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property PRO_ESP_OTO_RGO() As String
		Get
			Return Me._PRO_ESP_OTO_RGO
		End Get
		Set
			If (String.Equals(Me._PRO_ESP_OTO_RGO, value) = false) Then
				Me._PRO_ESP_OTO_RGO = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PRO_ESP_GAR_ESP", DbType:="Text", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property PRO_ESP_GAR_ESP() As String
		Get
			Return Me._PRO_ESP_GAR_ESP
		End Get
		Set
			If (String.Equals(Me._PRO_ESP_GAR_ESP, value) = false) Then
				Me._PRO_ESP_GAR_ESP = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PRO_ESP_MAT", DbType:="Text", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property PRO_ESP_MAT() As String
		Get
			Return Me._PRO_ESP_MAT
		End Get
		Set
			If (String.Equals(Me._PRO_ESP_MAT, value) = false) Then
				Me._PRO_ESP_MAT = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PRO_ESP_END_DOC", DbType:="Text", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property PRO_ESP_END_DOC() As String
		Get
			Return Me._PRO_ESP_END_DOC
		End Get
		Set
			If (String.Equals(Me._PRO_ESP_END_DOC, value) = false) Then
				Me._PRO_ESP_END_DOC = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PRO_ESP_NOT", DbType:="Text", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property PRO_ESP_NOT() As String
		Get
			Return Me._PRO_ESP_NOT
		End Get
		Set
			If (String.Equals(Me._PRO_ESP_NOT, value) = false) Then
				Me._PRO_ESP_NOT = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PRO_ESP_ACEP", DbType:="Text", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property PRO_ESP_ACEP() As String
		Get
			Return Me._PRO_ESP_ACEP
		End Get
		Set
			If (String.Equals(Me._PRO_ESP_ACEP, value) = false) Then
				Me._PRO_ESP_ACEP = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PRO_ESP_CONF", DbType:="Text", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property PRO_ESP_CONF() As String
		Get
			Return Me._PRO_ESP_CONF
		End Get
		Set
			If (String.Equals(Me._PRO_ESP_CONF, value) = false) Then
				Me._PRO_ESP_CONF = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PRO_ESP_REC_PAG", DbType:="Text", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property PRO_ESP_REC_PAG() As String
		Get
			Return Me._PRO_ESP_REC_PAG
		End Get
		Set
			If (String.Equals(Me._PRO_ESP_REC_PAG, value) = false) Then
				Me._PRO_ESP_REC_PAG = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PRO_ESP_OTRS", DbType:="Text", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property PRO_ESP_OTRS() As String
		Get
			Return Me._PRO_ESP_OTRS
		End Get
		Set
			If (String.Equals(Me._PRO_ESP_OTRS, value) = false) Then
				Me._PRO_ESP_OTRS = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PRO_PAR_EST", DbType:="Int")>  _
	Public Property PRO_PAR_EST() As System.Nullable(Of Integer)
		Get
			Return Me._PRO_PAR_EST
		End Get
		Set
			If (Me._PRO_PAR_EST.Equals(value) = false) Then
				Me._PRO_PAR_EST = value
			End If
		End Set
	End Property
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.PRO_ESP_IMA")>  _
Partial Public Class PRO_ESP_IMA_cls
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _ID_PRO_ESP_IMA As Integer
	
	Private _ID_PRO_ESP As System.Nullable(Of Integer)
	
	Private _RUT_CLI As String
	
	Private _COD_PRODUCTO As String
	
	Private _ID_ROL As String
	
	Private _ACT_LCR_DES As String
	
	Private _ACT_NOM_ARC As String
	
	Private _ACT_IMG_FILE As System.Data.Linq.Binary
	
    #Region "Definiciones de métodos de extensibilidad"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnID_PRO_ESP_IMAChanging(value As Integer)
    End Sub
    Partial Private Sub OnID_PRO_ESP_IMAChanged()
    End Sub
    Partial Private Sub OnID_PRO_ESPChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnID_PRO_ESPChanged()
    End Sub
    Partial Private Sub OnRUT_CLIChanging(value As String)
    End Sub
    Partial Private Sub OnRUT_CLIChanged()
    End Sub
    Partial Private Sub OnCOD_PRODUCTOChanging(value As String)
    End Sub
    Partial Private Sub OnCOD_PRODUCTOChanged()
    End Sub
    Partial Private Sub OnID_ROLChanging(value As String)
    End Sub
    Partial Private Sub OnID_ROLChanged()
    End Sub
    Partial Private Sub OnACT_LCR_DESChanging(value As String)
    End Sub
    Partial Private Sub OnACT_LCR_DESChanged()
    End Sub
    Partial Private Sub OnACT_NOM_ARCChanging(value As String)
    End Sub
    Partial Private Sub OnACT_NOM_ARCChanged()
    End Sub
    Partial Private Sub OnACT_IMG_FILEChanging(value As System.Data.Linq.Binary)
    End Sub
    Partial Private Sub OnACT_IMG_FILEChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ID_PRO_ESP_IMA", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property ID_PRO_ESP_IMA() As Integer
		Get
			Return Me._ID_PRO_ESP_IMA
		End Get
		Set
			If ((Me._ID_PRO_ESP_IMA = value)  _
						= false) Then
				Me.OnID_PRO_ESP_IMAChanging(value)
				Me.SendPropertyChanging
				Me._ID_PRO_ESP_IMA = value
				Me.SendPropertyChanged("ID_PRO_ESP_IMA")
				Me.OnID_PRO_ESP_IMAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ID_PRO_ESP", DbType:="Int")>  _
	Public Property ID_PRO_ESP() As System.Nullable(Of Integer)
		Get
			Return Me._ID_PRO_ESP
		End Get
		Set
			If (Me._ID_PRO_ESP.Equals(value) = false) Then
				Me.OnID_PRO_ESPChanging(value)
				Me.SendPropertyChanging
				Me._ID_PRO_ESP = value
				Me.SendPropertyChanged("ID_PRO_ESP")
				Me.OnID_PRO_ESPChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_RUT_CLI", DbType:="VarChar(12)")>  _
	Public Property RUT_CLI() As String
		Get
			Return Me._RUT_CLI
		End Get
		Set
			If (String.Equals(Me._RUT_CLI, value) = false) Then
				Me.OnRUT_CLIChanging(value)
				Me.SendPropertyChanging
				Me._RUT_CLI = value
				Me.SendPropertyChanged("RUT_CLI")
				Me.OnRUT_CLIChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_COD_PRODUCTO", DbType:="VarChar(3)")>  _
	Public Property COD_PRODUCTO() As String
		Get
			Return Me._COD_PRODUCTO
		End Get
		Set
			If (String.Equals(Me._COD_PRODUCTO, value) = false) Then
				Me.OnCOD_PRODUCTOChanging(value)
				Me.SendPropertyChanging
				Me._COD_PRODUCTO = value
				Me.SendPropertyChanged("COD_PRODUCTO")
				Me.OnCOD_PRODUCTOChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ID_ROL", DbType:="VarChar(20)")>  _
	Public Property ID_ROL() As String
		Get
			Return Me._ID_ROL
		End Get
		Set
			If (String.Equals(Me._ID_ROL, value) = false) Then
				Me.OnID_ROLChanging(value)
				Me.SendPropertyChanging
				Me._ID_ROL = value
				Me.SendPropertyChanged("ID_ROL")
				Me.OnID_ROLChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ACT_LCR_DES", DbType:="VarChar(100)")>  _
	Public Property ACT_LCR_DES() As String
		Get
			Return Me._ACT_LCR_DES
		End Get
		Set
			If (String.Equals(Me._ACT_LCR_DES, value) = false) Then
				Me.OnACT_LCR_DESChanging(value)
				Me.SendPropertyChanging
				Me._ACT_LCR_DES = value
				Me.SendPropertyChanged("ACT_LCR_DES")
				Me.OnACT_LCR_DESChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ACT_NOM_ARC", DbType:="VarChar(100)")>  _
	Public Property ACT_NOM_ARC() As String
		Get
			Return Me._ACT_NOM_ARC
		End Get
		Set
			If (String.Equals(Me._ACT_NOM_ARC, value) = false) Then
				Me.OnACT_NOM_ARCChanging(value)
				Me.SendPropertyChanging
				Me._ACT_NOM_ARC = value
				Me.SendPropertyChanged("ACT_NOM_ARC")
				Me.OnACT_NOM_ARCChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ACT_IMG_FILE", DbType:="Image", CanBeNull:=true, UpdateCheck:=UpdateCheck.Never)>  _
	Public Property ACT_IMG_FILE() As System.Data.Linq.Binary
		Get
			Return Me._ACT_IMG_FILE
		End Get
		Set
			If (Object.Equals(Me._ACT_IMG_FILE, value) = false) Then
				Me.OnACT_IMG_FILEChanging(value)
				Me.SendPropertyChanging
				Me._ACT_IMG_FILE = value
				Me.SendPropertyChanged("ACT_IMG_FILE")
				Me.OnACT_IMG_FILEChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.pta")>  _
Partial Public Class pta_cls
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _id_pta As Integer
	
	Private _id_eje As Integer
	
	Private _pta_dia_ven As System.Nullable(Of Integer)
	
	Private _pta_dia_mor As System.Nullable(Of Integer)
	
	Private _pta_dia_pgr As System.Nullable(Of Integer)
	
	Private _pta_dia_vst As System.Nullable(Of Integer)
	
	Private _pta_dia_lin As System.Nullable(Of Integer)
	
	Private _pta_dia_car As System.Nullable(Of Integer)
	
	Private _eje_cls As EntityRef(Of eje_cls)
	
    #Region "Definiciones de métodos de extensibilidad"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub Onid_ptaChanging(value As Integer)
    End Sub
    Partial Private Sub Onid_ptaChanged()
    End Sub
    Partial Private Sub Onid_ejeChanging(value As Integer)
    End Sub
    Partial Private Sub Onid_ejeChanged()
    End Sub
    Partial Private Sub Onpta_dia_venChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub Onpta_dia_venChanged()
    End Sub
    Partial Private Sub Onpta_dia_morChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub Onpta_dia_morChanged()
    End Sub
    Partial Private Sub Onpta_dia_pgrChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub Onpta_dia_pgrChanged()
    End Sub
    Partial Private Sub Onpta_dia_vstChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub Onpta_dia_vstChanged()
    End Sub
    Partial Private Sub Onpta_dia_linChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub Onpta_dia_linChanged()
    End Sub
    Partial Private Sub Onpta_dia_carChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub Onpta_dia_carChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		Me._eje_cls = CType(Nothing, EntityRef(Of eje_cls))
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_id_pta", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property id_pta() As Integer
		Get
			Return Me._id_pta
		End Get
		Set
			If ((Me._id_pta = value)  _
						= false) Then
				Me.Onid_ptaChanging(value)
				Me.SendPropertyChanging
				Me._id_pta = value
				Me.SendPropertyChanged("id_pta")
				Me.Onid_ptaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_id_eje", DbType:="Int NOT NULL")>  _
	Public Property id_eje() As Integer
		Get
			Return Me._id_eje
		End Get
		Set
			If ((Me._id_eje = value)  _
						= false) Then
				If Me._eje_cls.HasLoadedOrAssignedValue Then
					Throw New System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException()
				End If
				Me.Onid_ejeChanging(value)
				Me.SendPropertyChanging
				Me._id_eje = value
				Me.SendPropertyChanged("id_eje")
				Me.Onid_ejeChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pta_dia_ven", DbType:="Int")>  _
	Public Property pta_dia_ven() As System.Nullable(Of Integer)
		Get
			Return Me._pta_dia_ven
		End Get
		Set
			If (Me._pta_dia_ven.Equals(value) = false) Then
				Me.Onpta_dia_venChanging(value)
				Me.SendPropertyChanging
				Me._pta_dia_ven = value
				Me.SendPropertyChanged("pta_dia_ven")
				Me.Onpta_dia_venChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pta_dia_mor", DbType:="Int")>  _
	Public Property pta_dia_mor() As System.Nullable(Of Integer)
		Get
			Return Me._pta_dia_mor
		End Get
		Set
			If (Me._pta_dia_mor.Equals(value) = false) Then
				Me.Onpta_dia_morChanging(value)
				Me.SendPropertyChanging
				Me._pta_dia_mor = value
				Me.SendPropertyChanged("pta_dia_mor")
				Me.Onpta_dia_morChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pta_dia_pgr", DbType:="Int")>  _
	Public Property pta_dia_pgr() As System.Nullable(Of Integer)
		Get
			Return Me._pta_dia_pgr
		End Get
		Set
			If (Me._pta_dia_pgr.Equals(value) = false) Then
				Me.Onpta_dia_pgrChanging(value)
				Me.SendPropertyChanging
				Me._pta_dia_pgr = value
				Me.SendPropertyChanged("pta_dia_pgr")
				Me.Onpta_dia_pgrChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pta_dia_vst", DbType:="Int")>  _
	Public Property pta_dia_vst() As System.Nullable(Of Integer)
		Get
			Return Me._pta_dia_vst
		End Get
		Set
			If (Me._pta_dia_vst.Equals(value) = false) Then
				Me.Onpta_dia_vstChanging(value)
				Me.SendPropertyChanging
				Me._pta_dia_vst = value
				Me.SendPropertyChanged("pta_dia_vst")
				Me.Onpta_dia_vstChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pta_dia_lin", DbType:="Int")>  _
	Public Property pta_dia_lin() As System.Nullable(Of Integer)
		Get
			Return Me._pta_dia_lin
		End Get
		Set
			If (Me._pta_dia_lin.Equals(value) = false) Then
				Me.Onpta_dia_linChanging(value)
				Me.SendPropertyChanging
				Me._pta_dia_lin = value
				Me.SendPropertyChanged("pta_dia_lin")
				Me.Onpta_dia_linChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pta_dia_car", DbType:="Int")>  _
	Public Property pta_dia_car() As System.Nullable(Of Integer)
		Get
			Return Me._pta_dia_car
		End Get
		Set
			If (Me._pta_dia_car.Equals(value) = false) Then
				Me.Onpta_dia_carChanging(value)
				Me.SendPropertyChanging
				Me._pta_dia_car = value
				Me.SendPropertyChanged("pta_dia_car")
				Me.Onpta_dia_carChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="eje_cls_pta_cls", Storage:="_eje_cls", ThisKey:="id_eje", OtherKey:="id_eje", IsForeignKey:=true)>  _
	Public Property eje_cls() As eje_cls
		Get
			Return Me._eje_cls.Entity
		End Get
		Set
			Dim previousValue As eje_cls = Me._eje_cls.Entity
			If ((Object.Equals(previousValue, value) = false)  _
						OrElse (Me._eje_cls.HasLoadedOrAssignedValue = false)) Then
				Me.SendPropertyChanging
				If ((previousValue Is Nothing)  _
							= false) Then
					Me._eje_cls.Entity = Nothing
					previousValue.pta_cls.Remove(Me)
				End If
				Me._eje_cls.Entity = value
				If ((value Is Nothing)  _
							= false) Then
					value.pta_cls.Add(Me)
					Me._id_eje = value.id_eje
				Else
					Me._id_eje = CType(Nothing, Integer)
				End If
				Me.SendPropertyChanged("eje_cls")
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.Relacion_GC")>  _
Partial Public Class Relacion_GC_cls
	
	Private _id_num As Integer
	
	Private _id_eje_Cash As System.Nullable(Of Integer)
	
	Private _id_ej_Cuenta As System.Nullable(Of Integer)
	
	Private _ID_EJ_FACT As System.Nullable(Of Integer)
	
	Public Sub New()
		MyBase.New
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_id_num", AutoSync:=AutoSync.Always, DbType:="Int NOT NULL IDENTITY", IsDbGenerated:=true)>  _
	Public Property id_num() As Integer
		Get
			Return Me._id_num
		End Get
		Set
			If ((Me._id_num = value)  _
						= false) Then
				Me._id_num = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_id_eje_Cash", DbType:="Int")>  _
	Public Property id_eje_Cash() As System.Nullable(Of Integer)
		Get
			Return Me._id_eje_Cash
		End Get
		Set
			If (Me._id_eje_Cash.Equals(value) = false) Then
				Me._id_eje_Cash = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_id_ej_Cuenta", DbType:="Int")>  _
	Public Property id_ej_Cuenta() As System.Nullable(Of Integer)
		Get
			Return Me._id_ej_Cuenta
		End Get
		Set
			If (Me._id_ej_Cuenta.Equals(value) = false) Then
				Me._id_ej_Cuenta = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ID_EJ_FACT", DbType:="Int")>  _
	Public Property ID_EJ_FACT() As System.Nullable(Of Integer)
		Get
			Return Me._ID_EJ_FACT
		End Get
		Set
			If (Me._ID_EJ_FACT.Equals(value) = false) Then
				Me._ID_EJ_FACT = value
			End If
		End Set
	End Property
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.REP_LIS_OPE")>  _
Partial Public Class REP_LIS_OPE_cls
	
	Private _NIT As String
	
	Private _DIGITO As String
	
	Private _OPER_OPE As System.Nullable(Of Decimal)
	
	Private _OPER_OPN As System.Nullable(Of Decimal)
	
	Private _PRODUCTO As System.Nullable(Of Integer)
	
	Private _ESTADO As System.Nullable(Of Integer)
	
	Private _USR As String
	
	Public Sub New()
		MyBase.New
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NIT", DbType:="VarChar(12)")>  _
	Public Property NIT() As String
		Get
			Return Me._NIT
		End Get
		Set
			If (String.Equals(Me._NIT, value) = false) Then
				Me._NIT = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DIGITO", DbType:="VarChar(1)")>  _
	Public Property DIGITO() As String
		Get
			Return Me._DIGITO
		End Get
		Set
			If (String.Equals(Me._DIGITO, value) = false) Then
				Me._DIGITO = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_OPER_OPE", DbType:="Decimal(10,0)")>  _
	Public Property OPER_OPE() As System.Nullable(Of Decimal)
		Get
			Return Me._OPER_OPE
		End Get
		Set
			If (Me._OPER_OPE.Equals(value) = false) Then
				Me._OPER_OPE = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_OPER_OPN", DbType:="Decimal(10,0)")>  _
	Public Property OPER_OPN() As System.Nullable(Of Decimal)
		Get
			Return Me._OPER_OPN
		End Get
		Set
			If (Me._OPER_OPN.Equals(value) = false) Then
				Me._OPER_OPN = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PRODUCTO", DbType:="Int")>  _
	Public Property PRODUCTO() As System.Nullable(Of Integer)
		Get
			Return Me._PRODUCTO
		End Get
		Set
			If (Me._PRODUCTO.Equals(value) = false) Then
				Me._PRODUCTO = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ESTADO", DbType:="Int")>  _
	Public Property ESTADO() As System.Nullable(Of Integer)
		Get
			Return Me._ESTADO
		End Get
		Set
			If (Me._ESTADO.Equals(value) = false) Then
				Me._ESTADO = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_USR", DbType:="VarChar(20)")>  _
	Public Property USR() As String
		Get
			Return Me._USR
		End Get
		Set
			If (String.Equals(Me._USR, value) = false) Then
				Me._USR = value
			End If
		End Set
	End Property
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.REP_LIS_PAG")>  _
Partial Public Class REP_LIS_PAG_cls
	
	Private _NIT As String
	
	Private _DIGITO As String
	
	Private _RAZON As String
	
	Private _PRODUCTO As System.Nullable(Of Integer)
	
	Private _TIPO As System.Nullable(Of Integer)
	
	Private _NIT_PVR As String
	
	Private _USR As String
	
	Public Sub New()
		MyBase.New
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NIT", DbType:="VarChar(12)")>  _
	Public Property NIT() As String
		Get
			Return Me._NIT
		End Get
		Set
			If (String.Equals(Me._NIT, value) = false) Then
				Me._NIT = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DIGITO", DbType:="VarChar(1)")>  _
	Public Property DIGITO() As String
		Get
			Return Me._DIGITO
		End Get
		Set
			If (String.Equals(Me._DIGITO, value) = false) Then
				Me._DIGITO = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_RAZON", DbType:="VarChar(200)")>  _
	Public Property RAZON() As String
		Get
			Return Me._RAZON
		End Get
		Set
			If (String.Equals(Me._RAZON, value) = false) Then
				Me._RAZON = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PRODUCTO", DbType:="Int")>  _
	Public Property PRODUCTO() As System.Nullable(Of Integer)
		Get
			Return Me._PRODUCTO
		End Get
		Set
			If (Me._PRODUCTO.Equals(value) = false) Then
				Me._PRODUCTO = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TIPO", DbType:="Int")>  _
	Public Property TIPO() As System.Nullable(Of Integer)
		Get
			Return Me._TIPO
		End Get
		Set
			If (Me._TIPO.Equals(value) = false) Then
				Me._TIPO = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NIT_PVR", DbType:="VarChar(12)")>  _
	Public Property NIT_PVR() As String
		Get
			Return Me._NIT_PVR
		End Get
		Set
			If (String.Equals(Me._NIT_PVR, value) = false) Then
				Me._NIT_PVR = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_USR", DbType:="VarChar(20)")>  _
	Public Property USR() As String
		Get
			Return Me._USR
		End Get
		Set
			If (String.Equals(Me._USR, value) = false) Then
				Me._USR = value
			End If
		End Set
	End Property
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.REP_LIS_PVR")>  _
Partial Public Class REP_LIS_PVR_cls
	
	Private _NIT As String
	
	Private _DIGITO As String
	
	Private _RAZON As String
	
	Private _PRODUCTO As System.Nullable(Of Integer)
	
	Private _TIPO As System.Nullable(Of Integer)
	
	Private _USR As String
	
	Public Sub New()
		MyBase.New
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NIT", DbType:="VarChar(12)")>  _
	Public Property NIT() As String
		Get
			Return Me._NIT
		End Get
		Set
			If (String.Equals(Me._NIT, value) = false) Then
				Me._NIT = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DIGITO", DbType:="VarChar(1)")>  _
	Public Property DIGITO() As String
		Get
			Return Me._DIGITO
		End Get
		Set
			If (String.Equals(Me._DIGITO, value) = false) Then
				Me._DIGITO = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_RAZON", DbType:="VarChar(200)")>  _
	Public Property RAZON() As String
		Get
			Return Me._RAZON
		End Get
		Set
			If (String.Equals(Me._RAZON, value) = false) Then
				Me._RAZON = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PRODUCTO", DbType:="Int")>  _
	Public Property PRODUCTO() As System.Nullable(Of Integer)
		Get
			Return Me._PRODUCTO
		End Get
		Set
			If (Me._PRODUCTO.Equals(value) = false) Then
				Me._PRODUCTO = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TIPO", DbType:="Int")>  _
	Public Property TIPO() As System.Nullable(Of Integer)
		Get
			Return Me._TIPO
		End Get
		Set
			If (Me._TIPO.Equals(value) = false) Then
				Me._TIPO = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_USR", DbType:="VarChar(20)")>  _
	Public Property USR() As String
		Get
			Return Me._USR
		End Get
		Set
			If (String.Equals(Me._USR, value) = false) Then
				Me._USR = value
			End If
		End Set
	End Property
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.req")>  _
Partial Public Class req_cls
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _id_req As Integer
	
	Private _req_des As String
	
	Private _req_est As Char
	
	Private _rxd_cls As EntitySet(Of rxd_cls)
	
    #Region "Definiciones de métodos de extensibilidad"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub Onid_reqChanging(value As Integer)
    End Sub
    Partial Private Sub Onid_reqChanged()
    End Sub
    Partial Private Sub Onreq_desChanging(value As String)
    End Sub
    Partial Private Sub Onreq_desChanged()
    End Sub
    Partial Private Sub Onreq_estChanging(value As Char)
    End Sub
    Partial Private Sub Onreq_estChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		Me._rxd_cls = New EntitySet(Of rxd_cls)(AddressOf Me.attach_rxd_cls, AddressOf Me.detach_rxd_cls)
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_id_req", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property id_req() As Integer
		Get
			Return Me._id_req
		End Get
		Set
			If ((Me._id_req = value)  _
						= false) Then
				Me.Onid_reqChanging(value)
				Me.SendPropertyChanging
				Me._id_req = value
				Me.SendPropertyChanged("id_req")
				Me.Onid_reqChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_req_des", DbType:="VarChar(50) NOT NULL", CanBeNull:=false)>  _
	Public Property req_des() As String
		Get
			Return Me._req_des
		End Get
		Set
			If (String.Equals(Me._req_des, value) = false) Then
				Me.Onreq_desChanging(value)
				Me.SendPropertyChanging
				Me._req_des = value
				Me.SendPropertyChanged("req_des")
				Me.Onreq_desChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_req_est", DbType:="Char(1) NOT NULL")>  _
	Public Property req_est() As Char
		Get
			Return Me._req_est
		End Get
		Set
			If ((Me._req_est = value)  _
						= false) Then
				Me.Onreq_estChanging(value)
				Me.SendPropertyChanging
				Me._req_est = value
				Me.SendPropertyChanged("req_est")
				Me.Onreq_estChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="req_cls_rxd_cls", Storage:="_rxd_cls", ThisKey:="id_req", OtherKey:="id_req")>  _
	Public Property rxd_cls() As EntitySet(Of rxd_cls)
		Get
			Return Me._rxd_cls
		End Get
		Set
			Me._rxd_cls.Assign(value)
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
	
	Private Sub attach_rxd_cls(ByVal entity As rxd_cls)
		Me.SendPropertyChanging
		entity.req_cls = Me
	End Sub
	
	Private Sub detach_rxd_cls(ByVal entity As rxd_cls)
		Me.SendPropertyChanging
		entity.req_cls = Nothing
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.rgh")>  _
Partial Public Class rgh_cls
	
	Private _id_eje As System.Nullable(Of Integer)
	
	Private _rgh_fec As System.Nullable(Of Date)
	
	Private _rgh_ddr_tot As System.Nullable(Of Decimal)
	
	Private _rgh_ddr_pag As System.Nullable(Of Decimal)
	
	Private _rgh_doc_tot As System.Nullable(Of Decimal)
	
	Private _rgh_doc_pag As System.Nullable(Of Decimal)
	
	Private _rgh_gto_tot As System.Nullable(Of Decimal)
	
	Public Sub New()
		MyBase.New
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_id_eje", DbType:="Int")>  _
	Public Property id_eje() As System.Nullable(Of Integer)
		Get
			Return Me._id_eje
		End Get
		Set
			If (Me._id_eje.Equals(value) = false) Then
				Me._id_eje = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_rgh_fec", DbType:="DateTime")>  _
	Public Property rgh_fec() As System.Nullable(Of Date)
		Get
			Return Me._rgh_fec
		End Get
		Set
			If (Me._rgh_fec.Equals(value) = false) Then
				Me._rgh_fec = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_rgh_ddr_tot", DbType:="Decimal(18,0)")>  _
	Public Property rgh_ddr_tot() As System.Nullable(Of Decimal)
		Get
			Return Me._rgh_ddr_tot
		End Get
		Set
			If (Me._rgh_ddr_tot.Equals(value) = false) Then
				Me._rgh_ddr_tot = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_rgh_ddr_pag", DbType:="Decimal(18,0)")>  _
	Public Property rgh_ddr_pag() As System.Nullable(Of Decimal)
		Get
			Return Me._rgh_ddr_pag
		End Get
		Set
			If (Me._rgh_ddr_pag.Equals(value) = false) Then
				Me._rgh_ddr_pag = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_rgh_doc_tot", DbType:="Decimal(18,0)")>  _
	Public Property rgh_doc_tot() As System.Nullable(Of Decimal)
		Get
			Return Me._rgh_doc_tot
		End Get
		Set
			If (Me._rgh_doc_tot.Equals(value) = false) Then
				Me._rgh_doc_tot = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_rgh_doc_pag", DbType:="Decimal(18,0)")>  _
	Public Property rgh_doc_pag() As System.Nullable(Of Decimal)
		Get
			Return Me._rgh_doc_pag
		End Get
		Set
			If (Me._rgh_doc_pag.Equals(value) = false) Then
				Me._rgh_doc_pag = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_rgh_gto_tot", DbType:="Decimal(18,0)")>  _
	Public Property rgh_gto_tot() As System.Nullable(Of Decimal)
		Get
			Return Me._rgh_gto_tot
		End Get
		Set
			If (Me._rgh_gto_tot.Equals(value) = false) Then
				Me._rgh_gto_tot = value
			End If
		End Set
	End Property
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.rgo")>  _
Partial Public Class rgo_cls
	
	Private _cli_idc As String
	
	Private _num_cli As System.Nullable(Of Decimal)
	
	Private _rgo_mar_det_cli As System.Nullable(Of Char)
	
	Private _rgo_fec_det As System.Nullable(Of Date)
	
	Private _rgo_cli_ind As String
	
	Private _rgo_per_cla_ind As System.Nullable(Of Integer)
	
	Private _rgo_cod_ant As String
	
	Private _rgo_cod_pu As System.Nullable(Of Decimal)
	
	Private _rgo_cla_ind_gru As System.Nullable(Of Char)
	
	Private _rgo_mar_ope_det As System.Nullable(Of Char)
	
	Private _rgo_cod_ope_det As System.Nullable(Of Char)
	
	Private _rgo_cod_ope_sus As System.Nullable(Of Integer)
	
	Private _rgo_cod_sus_cli As System.Nullable(Of Char)
	
	Private _rgo_gar_deu_det As System.Nullable(Of Decimal)
	
	Private _rgo_fec_ing_sus As System.Nullable(Of Date)
	
	Private _rgo_fec_pro As System.Nullable(Of Date)
	
	Private _rgo_gar_deu_dia As System.Nullable(Of Decimal)
	
	Public Sub New()
		MyBase.New
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_cli_idc", DbType:="VarChar(12)")>  _
	Public Property cli_idc() As String
		Get
			Return Me._cli_idc
		End Get
		Set
			If (String.Equals(Me._cli_idc, value) = false) Then
				Me._cli_idc = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_num_cli", DbType:="Decimal(10,0)")>  _
	Public Property num_cli() As System.Nullable(Of Decimal)
		Get
			Return Me._num_cli
		End Get
		Set
			If (Me._num_cli.Equals(value) = false) Then
				Me._num_cli = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_rgo_mar_det_cli", DbType:="Char(1)")>  _
	Public Property rgo_mar_det_cli() As System.Nullable(Of Char)
		Get
			Return Me._rgo_mar_det_cli
		End Get
		Set
			If (Me._rgo_mar_det_cli.Equals(value) = false) Then
				Me._rgo_mar_det_cli = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_rgo_fec_det", DbType:="DateTime")>  _
	Public Property rgo_fec_det() As System.Nullable(Of Date)
		Get
			Return Me._rgo_fec_det
		End Get
		Set
			If (Me._rgo_fec_det.Equals(value) = false) Then
				Me._rgo_fec_det = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_rgo_cli_ind", DbType:="Char(2)")>  _
	Public Property rgo_cli_ind() As String
		Get
			Return Me._rgo_cli_ind
		End Get
		Set
			If (String.Equals(Me._rgo_cli_ind, value) = false) Then
				Me._rgo_cli_ind = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_rgo_per_cla_ind", DbType:="Int")>  _
	Public Property rgo_per_cla_ind() As System.Nullable(Of Integer)
		Get
			Return Me._rgo_per_cla_ind
		End Get
		Set
			If (Me._rgo_per_cla_ind.Equals(value) = false) Then
				Me._rgo_per_cla_ind = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_rgo_cod_ant", DbType:="VarChar(13)")>  _
	Public Property rgo_cod_ant() As String
		Get
			Return Me._rgo_cod_ant
		End Get
		Set
			If (String.Equals(Me._rgo_cod_ant, value) = false) Then
				Me._rgo_cod_ant = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_rgo_cod_pu", DbType:="Decimal(18,0)")>  _
	Public Property rgo_cod_pu() As System.Nullable(Of Decimal)
		Get
			Return Me._rgo_cod_pu
		End Get
		Set
			If (Me._rgo_cod_pu.Equals(value) = false) Then
				Me._rgo_cod_pu = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_rgo_cla_ind_gru", DbType:="Char(1)")>  _
	Public Property rgo_cla_ind_gru() As System.Nullable(Of Char)
		Get
			Return Me._rgo_cla_ind_gru
		End Get
		Set
			If (Me._rgo_cla_ind_gru.Equals(value) = false) Then
				Me._rgo_cla_ind_gru = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_rgo_mar_ope_det", DbType:="Char(1)")>  _
	Public Property rgo_mar_ope_det() As System.Nullable(Of Char)
		Get
			Return Me._rgo_mar_ope_det
		End Get
		Set
			If (Me._rgo_mar_ope_det.Equals(value) = false) Then
				Me._rgo_mar_ope_det = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_rgo_cod_ope_det", DbType:="Char(1)")>  _
	Public Property rgo_cod_ope_det() As System.Nullable(Of Char)
		Get
			Return Me._rgo_cod_ope_det
		End Get
		Set
			If (Me._rgo_cod_ope_det.Equals(value) = false) Then
				Me._rgo_cod_ope_det = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_rgo_cod_ope_sus", DbType:="Int")>  _
	Public Property rgo_cod_ope_sus() As System.Nullable(Of Integer)
		Get
			Return Me._rgo_cod_ope_sus
		End Get
		Set
			If (Me._rgo_cod_ope_sus.Equals(value) = false) Then
				Me._rgo_cod_ope_sus = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_rgo_cod_sus_cli", DbType:="Char(1)")>  _
	Public Property rgo_cod_sus_cli() As System.Nullable(Of Char)
		Get
			Return Me._rgo_cod_sus_cli
		End Get
		Set
			If (Me._rgo_cod_sus_cli.Equals(value) = false) Then
				Me._rgo_cod_sus_cli = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_rgo_gar_deu_det", DbType:="Decimal(10,0)")>  _
	Public Property rgo_gar_deu_det() As System.Nullable(Of Decimal)
		Get
			Return Me._rgo_gar_deu_det
		End Get
		Set
			If (Me._rgo_gar_deu_det.Equals(value) = false) Then
				Me._rgo_gar_deu_det = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_rgo_fec_ing_sus", DbType:="DateTime")>  _
	Public Property rgo_fec_ing_sus() As System.Nullable(Of Date)
		Get
			Return Me._rgo_fec_ing_sus
		End Get
		Set
			If (Me._rgo_fec_ing_sus.Equals(value) = false) Then
				Me._rgo_fec_ing_sus = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_rgo_fec_pro", DbType:="DateTime")>  _
	Public Property rgo_fec_pro() As System.Nullable(Of Date)
		Get
			Return Me._rgo_fec_pro
		End Get
		Set
			If (Me._rgo_fec_pro.Equals(value) = false) Then
				Me._rgo_fec_pro = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_rgo_gar_deu_dia", DbType:="Decimal(9,0)")>  _
	Public Property rgo_gar_deu_dia() As System.Nullable(Of Decimal)
		Get
			Return Me._rgo_gar_deu_dia
		End Get
		Set
			If (Me._rgo_gar_deu_dia.Equals(value) = false) Then
				Me._rgo_gar_deu_dia = value
			End If
		End Set
	End Property
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.rsc")>  _
Partial Public Class rsc_cls
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _id_rsc As Decimal
	
	Private _cli_idc As String
	
	Private _rsc_col_001 As System.Nullable(Of Decimal)
	
	Private _rsc_col_002 As System.Nullable(Of Decimal)
	
	Private _rsc_col_003 As System.Nullable(Of Decimal)
	
	Private _rsc_col_004 As System.Nullable(Of Decimal)
	
	Private _rsc_col_005 As System.Nullable(Of Decimal)
	
	Private _rsc_col_006 As System.Nullable(Of Decimal)
	
	Private _rsc_col_007 As System.Nullable(Of Decimal)
	
	Private _rsc_col_008 As System.Nullable(Of Decimal)
	
	Private _rsc_col_009 As System.Nullable(Of Decimal)
	
	Private _rsc_col_010 As System.Nullable(Of Decimal)
	
	Private _rsc_col_011 As System.Nullable(Of Decimal)
	
	Private _rsc_col_012 As System.Nullable(Of Decimal)
	
	Private _rsc_col_tot As System.Nullable(Of Decimal)
	
	Private _rsc_ddr_ctd As System.Nullable(Of Decimal)
	
	Private _rsc_ctd_doc As System.Nullable(Of Decimal)
	
	Private _rsc_prm_dia_pag As System.Nullable(Of Decimal)
	
	Private _rsc_mto_prt As System.Nullable(Of Decimal)
	
	Private _rsc_mto_cbz As System.Nullable(Of Decimal)
	
	Private _rsc_mto_cxc As System.Nullable(Of Decimal)
	
	Private _rsc_mto_exd As System.Nullable(Of Decimal)
	
	Private _rsc_mto_cxp As System.Nullable(Of Decimal)
	
	Private _rsc_mto_dnc As System.Nullable(Of Decimal)
	
	Private _rsc_mto_int_dev As System.Nullable(Of Decimal)
	
	Private _rsc_mto_ocu As System.Nullable(Of Decimal)
	
	Private _rsc_ctd_mor As System.Nullable(Of Integer)
	
	Private _rsc_ctd_prt As System.Nullable(Of Integer)
	
	Private _rsc_ctd_cbz As System.Nullable(Of Integer)
	
	Private _rsc_ctd_dnc As System.Nullable(Of Integer)
	
	Private _rsc_pro As System.Nullable(Of Char)
	
	Private _rsc_mto_vig As System.Nullable(Of Decimal)
	
	Private _rsc_mto_cob_jud As System.Nullable(Of Decimal)
	
	Private _rsc_mto_cnj_mpl As System.Nullable(Of Decimal)
	
	Private _rsc_mto_cnj_opl As System.Nullable(Of Decimal)
	
	Private _rsc_mto_che_prt As System.Nullable(Of Decimal)
	
	Private _rsc_mto_let_prt As System.Nullable(Of Decimal)
	
	Private _rsc_mto_pgr_prt As System.Nullable(Of Decimal)
	
	Private _rsc_ctd_vig As System.Nullable(Of Integer)
	
	Private _rsc_ctd_mpl As System.Nullable(Of Integer)
	
	Private _rsc_ctd_opl As System.Nullable(Of Integer)
	
	Private _rsc_ctd_che_prt As System.Nullable(Of Integer)
	
	Private _rsc_ctd_let_prt As System.Nullable(Of Integer)
	
	Private _rsc_ctd_pgr_prt As System.Nullable(Of Integer)
	
	Private _rsc_mto_ant As System.Nullable(Of Decimal)
	
	Private _rsc_ctd_ope As System.Nullable(Of Integer)
	
	Private _rsc_mto_pgr_vig As System.Nullable(Of Decimal)
	
	Private _rsc_ctd_doc_cob_jud As System.Nullable(Of Integer)
	
	Private _rsc_ctd_pgr_vig As System.Nullable(Of Integer)
	
	Private _rsc_mto_int_cal As System.Nullable(Of Decimal)
	
	Private _rsc_mto_let_mor As System.Nullable(Of Decimal)
	
	Private _rsc_ctd_let_mor As System.Nullable(Of Decimal)
	
	Private _rsc_ctd_vig_500 As System.Nullable(Of Decimal)
	
	Private _rsc_ctd_mor_500 As System.Nullable(Of Decimal)
	
	Private _rsc_mto_mor_otr As System.Nullable(Of Decimal)
	
	Private _rsc_deu_efa As System.Nullable(Of Decimal)
	
	Private _rsc_can_doc_efa As System.Nullable(Of Decimal)
	
	Private _rsc_sdo_exc As System.Nullable(Of Decimal)
	
	Private _pro_dia_fac_vig As System.Nullable(Of Decimal)
	
	Private _pro_dia_let_vig As System.Nullable(Of Decimal)
	
	Private _pro_dia_otr_vig As System.Nullable(Of Decimal)
	
	Private _rsc_deu_cli_fac As System.Nullable(Of Decimal)
	
	Private _rsc_deu_cli_let As System.Nullable(Of Decimal)
	
	Private _rsc_deu_cli_otr As System.Nullable(Of Decimal)
	
	Private _rsc_doc_pro_fac As System.Nullable(Of Decimal)
	
	Private _rsc_doc_pro_let As System.Nullable(Of Decimal)
	
	Private _rsc_doc_pro_otr As System.Nullable(Of Decimal)
	
	Private _rsc_deu_ven_fac As System.Nullable(Of Decimal)
	
	Private _rsc_deu_ven_let As System.Nullable(Of Decimal)
	
	Private _rsc_deu_ven_otr As System.Nullable(Of Decimal)
	
	Private _cli_cls As EntityRef(Of cli_cls)
	
    #Region "Definiciones de métodos de extensibilidad"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub Onid_rscChanging(value As Decimal)
    End Sub
    Partial Private Sub Onid_rscChanged()
    End Sub
    Partial Private Sub Oncli_idcChanging(value As String)
    End Sub
    Partial Private Sub Oncli_idcChanged()
    End Sub
    Partial Private Sub Onrsc_col_001Changing(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub Onrsc_col_001Changed()
    End Sub
    Partial Private Sub Onrsc_col_002Changing(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub Onrsc_col_002Changed()
    End Sub
    Partial Private Sub Onrsc_col_003Changing(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub Onrsc_col_003Changed()
    End Sub
    Partial Private Sub Onrsc_col_004Changing(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub Onrsc_col_004Changed()
    End Sub
    Partial Private Sub Onrsc_col_005Changing(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub Onrsc_col_005Changed()
    End Sub
    Partial Private Sub Onrsc_col_006Changing(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub Onrsc_col_006Changed()
    End Sub
    Partial Private Sub Onrsc_col_007Changing(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub Onrsc_col_007Changed()
    End Sub
    Partial Private Sub Onrsc_col_008Changing(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub Onrsc_col_008Changed()
    End Sub
    Partial Private Sub Onrsc_col_009Changing(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub Onrsc_col_009Changed()
    End Sub
    Partial Private Sub Onrsc_col_010Changing(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub Onrsc_col_010Changed()
    End Sub
    Partial Private Sub Onrsc_col_011Changing(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub Onrsc_col_011Changed()
    End Sub
    Partial Private Sub Onrsc_col_012Changing(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub Onrsc_col_012Changed()
    End Sub
    Partial Private Sub Onrsc_col_totChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub Onrsc_col_totChanged()
    End Sub
    Partial Private Sub Onrsc_ddr_ctdChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub Onrsc_ddr_ctdChanged()
    End Sub
    Partial Private Sub Onrsc_ctd_docChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub Onrsc_ctd_docChanged()
    End Sub
    Partial Private Sub Onrsc_prm_dia_pagChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub Onrsc_prm_dia_pagChanged()
    End Sub
    Partial Private Sub Onrsc_mto_prtChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub Onrsc_mto_prtChanged()
    End Sub
    Partial Private Sub Onrsc_mto_cbzChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub Onrsc_mto_cbzChanged()
    End Sub
    Partial Private Sub Onrsc_mto_cxcChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub Onrsc_mto_cxcChanged()
    End Sub
    Partial Private Sub Onrsc_mto_exdChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub Onrsc_mto_exdChanged()
    End Sub
    Partial Private Sub Onrsc_mto_cxpChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub Onrsc_mto_cxpChanged()
    End Sub
    Partial Private Sub Onrsc_mto_dncChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub Onrsc_mto_dncChanged()
    End Sub
    Partial Private Sub Onrsc_mto_int_devChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub Onrsc_mto_int_devChanged()
    End Sub
    Partial Private Sub Onrsc_mto_ocuChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub Onrsc_mto_ocuChanged()
    End Sub
    Partial Private Sub Onrsc_ctd_morChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub Onrsc_ctd_morChanged()
    End Sub
    Partial Private Sub Onrsc_ctd_prtChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub Onrsc_ctd_prtChanged()
    End Sub
    Partial Private Sub Onrsc_ctd_cbzChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub Onrsc_ctd_cbzChanged()
    End Sub
    Partial Private Sub Onrsc_ctd_dncChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub Onrsc_ctd_dncChanged()
    End Sub
    Partial Private Sub Onrsc_proChanging(value As System.Nullable(Of Char))
    End Sub
    Partial Private Sub Onrsc_proChanged()
    End Sub
    Partial Private Sub Onrsc_mto_vigChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub Onrsc_mto_vigChanged()
    End Sub
    Partial Private Sub Onrsc_mto_cob_judChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub Onrsc_mto_cob_judChanged()
    End Sub
    Partial Private Sub Onrsc_mto_cnj_mplChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub Onrsc_mto_cnj_mplChanged()
    End Sub
    Partial Private Sub Onrsc_mto_cnj_oplChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub Onrsc_mto_cnj_oplChanged()
    End Sub
    Partial Private Sub Onrsc_mto_che_prtChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub Onrsc_mto_che_prtChanged()
    End Sub
    Partial Private Sub Onrsc_mto_let_prtChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub Onrsc_mto_let_prtChanged()
    End Sub
    Partial Private Sub Onrsc_mto_pgr_prtChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub Onrsc_mto_pgr_prtChanged()
    End Sub
    Partial Private Sub Onrsc_ctd_vigChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub Onrsc_ctd_vigChanged()
    End Sub
    Partial Private Sub Onrsc_ctd_mplChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub Onrsc_ctd_mplChanged()
    End Sub
    Partial Private Sub Onrsc_ctd_oplChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub Onrsc_ctd_oplChanged()
    End Sub
    Partial Private Sub Onrsc_ctd_che_prtChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub Onrsc_ctd_che_prtChanged()
    End Sub
    Partial Private Sub Onrsc_ctd_let_prtChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub Onrsc_ctd_let_prtChanged()
    End Sub
    Partial Private Sub Onrsc_ctd_pgr_prtChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub Onrsc_ctd_pgr_prtChanged()
    End Sub
    Partial Private Sub Onrsc_mto_antChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub Onrsc_mto_antChanged()
    End Sub
    Partial Private Sub Onrsc_ctd_opeChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub Onrsc_ctd_opeChanged()
    End Sub
    Partial Private Sub Onrsc_mto_pgr_vigChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub Onrsc_mto_pgr_vigChanged()
    End Sub
    Partial Private Sub Onrsc_ctd_doc_cob_judChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub Onrsc_ctd_doc_cob_judChanged()
    End Sub
    Partial Private Sub Onrsc_ctd_pgr_vigChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub Onrsc_ctd_pgr_vigChanged()
    End Sub
    Partial Private Sub Onrsc_mto_int_calChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub Onrsc_mto_int_calChanged()
    End Sub
    Partial Private Sub Onrsc_mto_let_morChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub Onrsc_mto_let_morChanged()
    End Sub
    Partial Private Sub Onrsc_ctd_let_morChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub Onrsc_ctd_let_morChanged()
    End Sub
    Partial Private Sub Onrsc_ctd_vig_500Changing(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub Onrsc_ctd_vig_500Changed()
    End Sub
    Partial Private Sub Onrsc_ctd_mor_500Changing(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub Onrsc_ctd_mor_500Changed()
    End Sub
    Partial Private Sub Onrsc_mto_mor_otrChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub Onrsc_mto_mor_otrChanged()
    End Sub
    Partial Private Sub Onrsc_deu_efaChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub Onrsc_deu_efaChanged()
    End Sub
    Partial Private Sub Onrsc_can_doc_efaChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub Onrsc_can_doc_efaChanged()
    End Sub
    Partial Private Sub Onrsc_sdo_excChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub Onrsc_sdo_excChanged()
    End Sub
    Partial Private Sub Onpro_dia_fac_vigChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub Onpro_dia_fac_vigChanged()
    End Sub
    Partial Private Sub Onpro_dia_let_vigChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub Onpro_dia_let_vigChanged()
    End Sub
    Partial Private Sub Onpro_dia_otr_vigChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub Onpro_dia_otr_vigChanged()
    End Sub
    Partial Private Sub Onrsc_deu_cli_facChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub Onrsc_deu_cli_facChanged()
    End Sub
    Partial Private Sub Onrsc_deu_cli_letChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub Onrsc_deu_cli_letChanged()
    End Sub
    Partial Private Sub Onrsc_deu_cli_otrChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub Onrsc_deu_cli_otrChanged()
    End Sub
    Partial Private Sub Onrsc_doc_pro_facChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub Onrsc_doc_pro_facChanged()
    End Sub
    Partial Private Sub Onrsc_doc_pro_letChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub Onrsc_doc_pro_letChanged()
    End Sub
    Partial Private Sub Onrsc_doc_pro_otrChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub Onrsc_doc_pro_otrChanged()
    End Sub
    Partial Private Sub Onrsc_deu_ven_facChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub Onrsc_deu_ven_facChanged()
    End Sub
    Partial Private Sub Onrsc_deu_ven_letChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub Onrsc_deu_ven_letChanged()
    End Sub
    Partial Private Sub Onrsc_deu_ven_otrChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub Onrsc_deu_ven_otrChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		Me._cli_cls = CType(Nothing, EntityRef(Of cli_cls))
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_id_rsc", AutoSync:=AutoSync.OnInsert, DbType:="Decimal(18,0) NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property id_rsc() As Decimal
		Get
			Return Me._id_rsc
		End Get
		Set
			If ((Me._id_rsc = value)  _
						= false) Then
				Me.Onid_rscChanging(value)
				Me.SendPropertyChanging
				Me._id_rsc = value
				Me.SendPropertyChanged("id_rsc")
				Me.Onid_rscChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_cli_idc", DbType:="Char(12) NOT NULL", CanBeNull:=false)>  _
	Public Property cli_idc() As String
		Get
			Return Me._cli_idc
		End Get
		Set
			If (String.Equals(Me._cli_idc, value) = false) Then
				If Me._cli_cls.HasLoadedOrAssignedValue Then
					Throw New System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException()
				End If
				Me.Oncli_idcChanging(value)
				Me.SendPropertyChanging
				Me._cli_idc = value
				Me.SendPropertyChanged("cli_idc")
				Me.Oncli_idcChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_rsc_col_001", DbType:="Money")>  _
	Public Property rsc_col_001() As System.Nullable(Of Decimal)
		Get
			Return Me._rsc_col_001
		End Get
		Set
			If (Me._rsc_col_001.Equals(value) = false) Then
				Me.Onrsc_col_001Changing(value)
				Me.SendPropertyChanging
				Me._rsc_col_001 = value
				Me.SendPropertyChanged("rsc_col_001")
				Me.Onrsc_col_001Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_rsc_col_002", DbType:="Money")>  _
	Public Property rsc_col_002() As System.Nullable(Of Decimal)
		Get
			Return Me._rsc_col_002
		End Get
		Set
			If (Me._rsc_col_002.Equals(value) = false) Then
				Me.Onrsc_col_002Changing(value)
				Me.SendPropertyChanging
				Me._rsc_col_002 = value
				Me.SendPropertyChanged("rsc_col_002")
				Me.Onrsc_col_002Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_rsc_col_003", DbType:="Money")>  _
	Public Property rsc_col_003() As System.Nullable(Of Decimal)
		Get
			Return Me._rsc_col_003
		End Get
		Set
			If (Me._rsc_col_003.Equals(value) = false) Then
				Me.Onrsc_col_003Changing(value)
				Me.SendPropertyChanging
				Me._rsc_col_003 = value
				Me.SendPropertyChanged("rsc_col_003")
				Me.Onrsc_col_003Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_rsc_col_004", DbType:="Money")>  _
	Public Property rsc_col_004() As System.Nullable(Of Decimal)
		Get
			Return Me._rsc_col_004
		End Get
		Set
			If (Me._rsc_col_004.Equals(value) = false) Then
				Me.Onrsc_col_004Changing(value)
				Me.SendPropertyChanging
				Me._rsc_col_004 = value
				Me.SendPropertyChanged("rsc_col_004")
				Me.Onrsc_col_004Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_rsc_col_005", DbType:="Money")>  _
	Public Property rsc_col_005() As System.Nullable(Of Decimal)
		Get
			Return Me._rsc_col_005
		End Get
		Set
			If (Me._rsc_col_005.Equals(value) = false) Then
				Me.Onrsc_col_005Changing(value)
				Me.SendPropertyChanging
				Me._rsc_col_005 = value
				Me.SendPropertyChanged("rsc_col_005")
				Me.Onrsc_col_005Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_rsc_col_006", DbType:="Money")>  _
	Public Property rsc_col_006() As System.Nullable(Of Decimal)
		Get
			Return Me._rsc_col_006
		End Get
		Set
			If (Me._rsc_col_006.Equals(value) = false) Then
				Me.Onrsc_col_006Changing(value)
				Me.SendPropertyChanging
				Me._rsc_col_006 = value
				Me.SendPropertyChanged("rsc_col_006")
				Me.Onrsc_col_006Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_rsc_col_007", DbType:="Money")>  _
	Public Property rsc_col_007() As System.Nullable(Of Decimal)
		Get
			Return Me._rsc_col_007
		End Get
		Set
			If (Me._rsc_col_007.Equals(value) = false) Then
				Me.Onrsc_col_007Changing(value)
				Me.SendPropertyChanging
				Me._rsc_col_007 = value
				Me.SendPropertyChanged("rsc_col_007")
				Me.Onrsc_col_007Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_rsc_col_008", DbType:="Money")>  _
	Public Property rsc_col_008() As System.Nullable(Of Decimal)
		Get
			Return Me._rsc_col_008
		End Get
		Set
			If (Me._rsc_col_008.Equals(value) = false) Then
				Me.Onrsc_col_008Changing(value)
				Me.SendPropertyChanging
				Me._rsc_col_008 = value
				Me.SendPropertyChanged("rsc_col_008")
				Me.Onrsc_col_008Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_rsc_col_009", DbType:="Money")>  _
	Public Property rsc_col_009() As System.Nullable(Of Decimal)
		Get
			Return Me._rsc_col_009
		End Get
		Set
			If (Me._rsc_col_009.Equals(value) = false) Then
				Me.Onrsc_col_009Changing(value)
				Me.SendPropertyChanging
				Me._rsc_col_009 = value
				Me.SendPropertyChanged("rsc_col_009")
				Me.Onrsc_col_009Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_rsc_col_010", DbType:="Money")>  _
	Public Property rsc_col_010() As System.Nullable(Of Decimal)
		Get
			Return Me._rsc_col_010
		End Get
		Set
			If (Me._rsc_col_010.Equals(value) = false) Then
				Me.Onrsc_col_010Changing(value)
				Me.SendPropertyChanging
				Me._rsc_col_010 = value
				Me.SendPropertyChanged("rsc_col_010")
				Me.Onrsc_col_010Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_rsc_col_011", DbType:="Money")>  _
	Public Property rsc_col_011() As System.Nullable(Of Decimal)
		Get
			Return Me._rsc_col_011
		End Get
		Set
			If (Me._rsc_col_011.Equals(value) = false) Then
				Me.Onrsc_col_011Changing(value)
				Me.SendPropertyChanging
				Me._rsc_col_011 = value
				Me.SendPropertyChanged("rsc_col_011")
				Me.Onrsc_col_011Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_rsc_col_012", DbType:="Money")>  _
	Public Property rsc_col_012() As System.Nullable(Of Decimal)
		Get
			Return Me._rsc_col_012
		End Get
		Set
			If (Me._rsc_col_012.Equals(value) = false) Then
				Me.Onrsc_col_012Changing(value)
				Me.SendPropertyChanging
				Me._rsc_col_012 = value
				Me.SendPropertyChanged("rsc_col_012")
				Me.Onrsc_col_012Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_rsc_col_tot", DbType:="Money")>  _
	Public Property rsc_col_tot() As System.Nullable(Of Decimal)
		Get
			Return Me._rsc_col_tot
		End Get
		Set
			If (Me._rsc_col_tot.Equals(value) = false) Then
				Me.Onrsc_col_totChanging(value)
				Me.SendPropertyChanging
				Me._rsc_col_tot = value
				Me.SendPropertyChanged("rsc_col_tot")
				Me.Onrsc_col_totChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_rsc_ddr_ctd", DbType:="Decimal(10,0)")>  _
	Public Property rsc_ddr_ctd() As System.Nullable(Of Decimal)
		Get
			Return Me._rsc_ddr_ctd
		End Get
		Set
			If (Me._rsc_ddr_ctd.Equals(value) = false) Then
				Me.Onrsc_ddr_ctdChanging(value)
				Me.SendPropertyChanging
				Me._rsc_ddr_ctd = value
				Me.SendPropertyChanged("rsc_ddr_ctd")
				Me.Onrsc_ddr_ctdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_rsc_ctd_doc", DbType:="Decimal(10,0)")>  _
	Public Property rsc_ctd_doc() As System.Nullable(Of Decimal)
		Get
			Return Me._rsc_ctd_doc
		End Get
		Set
			If (Me._rsc_ctd_doc.Equals(value) = false) Then
				Me.Onrsc_ctd_docChanging(value)
				Me.SendPropertyChanging
				Me._rsc_ctd_doc = value
				Me.SendPropertyChanged("rsc_ctd_doc")
				Me.Onrsc_ctd_docChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_rsc_prm_dia_pag", DbType:="Decimal(5,0)")>  _
	Public Property rsc_prm_dia_pag() As System.Nullable(Of Decimal)
		Get
			Return Me._rsc_prm_dia_pag
		End Get
		Set
			If (Me._rsc_prm_dia_pag.Equals(value) = false) Then
				Me.Onrsc_prm_dia_pagChanging(value)
				Me.SendPropertyChanging
				Me._rsc_prm_dia_pag = value
				Me.SendPropertyChanged("rsc_prm_dia_pag")
				Me.Onrsc_prm_dia_pagChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_rsc_mto_prt", DbType:="Money")>  _
	Public Property rsc_mto_prt() As System.Nullable(Of Decimal)
		Get
			Return Me._rsc_mto_prt
		End Get
		Set
			If (Me._rsc_mto_prt.Equals(value) = false) Then
				Me.Onrsc_mto_prtChanging(value)
				Me.SendPropertyChanging
				Me._rsc_mto_prt = value
				Me.SendPropertyChanged("rsc_mto_prt")
				Me.Onrsc_mto_prtChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_rsc_mto_cbz", DbType:="Money")>  _
	Public Property rsc_mto_cbz() As System.Nullable(Of Decimal)
		Get
			Return Me._rsc_mto_cbz
		End Get
		Set
			If (Me._rsc_mto_cbz.Equals(value) = false) Then
				Me.Onrsc_mto_cbzChanging(value)
				Me.SendPropertyChanging
				Me._rsc_mto_cbz = value
				Me.SendPropertyChanged("rsc_mto_cbz")
				Me.Onrsc_mto_cbzChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_rsc_mto_cxc", DbType:="Money")>  _
	Public Property rsc_mto_cxc() As System.Nullable(Of Decimal)
		Get
			Return Me._rsc_mto_cxc
		End Get
		Set
			If (Me._rsc_mto_cxc.Equals(value) = false) Then
				Me.Onrsc_mto_cxcChanging(value)
				Me.SendPropertyChanging
				Me._rsc_mto_cxc = value
				Me.SendPropertyChanged("rsc_mto_cxc")
				Me.Onrsc_mto_cxcChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_rsc_mto_exd", DbType:="Money")>  _
	Public Property rsc_mto_exd() As System.Nullable(Of Decimal)
		Get
			Return Me._rsc_mto_exd
		End Get
		Set
			If (Me._rsc_mto_exd.Equals(value) = false) Then
				Me.Onrsc_mto_exdChanging(value)
				Me.SendPropertyChanging
				Me._rsc_mto_exd = value
				Me.SendPropertyChanged("rsc_mto_exd")
				Me.Onrsc_mto_exdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_rsc_mto_cxp", DbType:="Money")>  _
	Public Property rsc_mto_cxp() As System.Nullable(Of Decimal)
		Get
			Return Me._rsc_mto_cxp
		End Get
		Set
			If (Me._rsc_mto_cxp.Equals(value) = false) Then
				Me.Onrsc_mto_cxpChanging(value)
				Me.SendPropertyChanging
				Me._rsc_mto_cxp = value
				Me.SendPropertyChanged("rsc_mto_cxp")
				Me.Onrsc_mto_cxpChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_rsc_mto_dnc", DbType:="Money")>  _
	Public Property rsc_mto_dnc() As System.Nullable(Of Decimal)
		Get
			Return Me._rsc_mto_dnc
		End Get
		Set
			If (Me._rsc_mto_dnc.Equals(value) = false) Then
				Me.Onrsc_mto_dncChanging(value)
				Me.SendPropertyChanging
				Me._rsc_mto_dnc = value
				Me.SendPropertyChanged("rsc_mto_dnc")
				Me.Onrsc_mto_dncChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_rsc_mto_int_dev", DbType:="Money")>  _
	Public Property rsc_mto_int_dev() As System.Nullable(Of Decimal)
		Get
			Return Me._rsc_mto_int_dev
		End Get
		Set
			If (Me._rsc_mto_int_dev.Equals(value) = false) Then
				Me.Onrsc_mto_int_devChanging(value)
				Me.SendPropertyChanging
				Me._rsc_mto_int_dev = value
				Me.SendPropertyChanged("rsc_mto_int_dev")
				Me.Onrsc_mto_int_devChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_rsc_mto_ocu", DbType:="Money")>  _
	Public Property rsc_mto_ocu() As System.Nullable(Of Decimal)
		Get
			Return Me._rsc_mto_ocu
		End Get
		Set
			If (Me._rsc_mto_ocu.Equals(value) = false) Then
				Me.Onrsc_mto_ocuChanging(value)
				Me.SendPropertyChanging
				Me._rsc_mto_ocu = value
				Me.SendPropertyChanged("rsc_mto_ocu")
				Me.Onrsc_mto_ocuChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_rsc_ctd_mor", DbType:="Int")>  _
	Public Property rsc_ctd_mor() As System.Nullable(Of Integer)
		Get
			Return Me._rsc_ctd_mor
		End Get
		Set
			If (Me._rsc_ctd_mor.Equals(value) = false) Then
				Me.Onrsc_ctd_morChanging(value)
				Me.SendPropertyChanging
				Me._rsc_ctd_mor = value
				Me.SendPropertyChanged("rsc_ctd_mor")
				Me.Onrsc_ctd_morChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_rsc_ctd_prt", DbType:="Int")>  _
	Public Property rsc_ctd_prt() As System.Nullable(Of Integer)
		Get
			Return Me._rsc_ctd_prt
		End Get
		Set
			If (Me._rsc_ctd_prt.Equals(value) = false) Then
				Me.Onrsc_ctd_prtChanging(value)
				Me.SendPropertyChanging
				Me._rsc_ctd_prt = value
				Me.SendPropertyChanged("rsc_ctd_prt")
				Me.Onrsc_ctd_prtChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_rsc_ctd_cbz", DbType:="Int")>  _
	Public Property rsc_ctd_cbz() As System.Nullable(Of Integer)
		Get
			Return Me._rsc_ctd_cbz
		End Get
		Set
			If (Me._rsc_ctd_cbz.Equals(value) = false) Then
				Me.Onrsc_ctd_cbzChanging(value)
				Me.SendPropertyChanging
				Me._rsc_ctd_cbz = value
				Me.SendPropertyChanged("rsc_ctd_cbz")
				Me.Onrsc_ctd_cbzChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_rsc_ctd_dnc", DbType:="Int")>  _
	Public Property rsc_ctd_dnc() As System.Nullable(Of Integer)
		Get
			Return Me._rsc_ctd_dnc
		End Get
		Set
			If (Me._rsc_ctd_dnc.Equals(value) = false) Then
				Me.Onrsc_ctd_dncChanging(value)
				Me.SendPropertyChanging
				Me._rsc_ctd_dnc = value
				Me.SendPropertyChanged("rsc_ctd_dnc")
				Me.Onrsc_ctd_dncChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_rsc_pro", DbType:="Char(1)")>  _
	Public Property rsc_pro() As System.Nullable(Of Char)
		Get
			Return Me._rsc_pro
		End Get
		Set
			If (Me._rsc_pro.Equals(value) = false) Then
				Me.Onrsc_proChanging(value)
				Me.SendPropertyChanging
				Me._rsc_pro = value
				Me.SendPropertyChanged("rsc_pro")
				Me.Onrsc_proChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_rsc_mto_vig", DbType:="Money")>  _
	Public Property rsc_mto_vig() As System.Nullable(Of Decimal)
		Get
			Return Me._rsc_mto_vig
		End Get
		Set
			If (Me._rsc_mto_vig.Equals(value) = false) Then
				Me.Onrsc_mto_vigChanging(value)
				Me.SendPropertyChanging
				Me._rsc_mto_vig = value
				Me.SendPropertyChanged("rsc_mto_vig")
				Me.Onrsc_mto_vigChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_rsc_mto_cob_jud", DbType:="Money")>  _
	Public Property rsc_mto_cob_jud() As System.Nullable(Of Decimal)
		Get
			Return Me._rsc_mto_cob_jud
		End Get
		Set
			If (Me._rsc_mto_cob_jud.Equals(value) = false) Then
				Me.Onrsc_mto_cob_judChanging(value)
				Me.SendPropertyChanging
				Me._rsc_mto_cob_jud = value
				Me.SendPropertyChanged("rsc_mto_cob_jud")
				Me.Onrsc_mto_cob_judChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_rsc_mto_cnj_mpl", DbType:="Money")>  _
	Public Property rsc_mto_cnj_mpl() As System.Nullable(Of Decimal)
		Get
			Return Me._rsc_mto_cnj_mpl
		End Get
		Set
			If (Me._rsc_mto_cnj_mpl.Equals(value) = false) Then
				Me.Onrsc_mto_cnj_mplChanging(value)
				Me.SendPropertyChanging
				Me._rsc_mto_cnj_mpl = value
				Me.SendPropertyChanged("rsc_mto_cnj_mpl")
				Me.Onrsc_mto_cnj_mplChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_rsc_mto_cnj_opl", DbType:="Money")>  _
	Public Property rsc_mto_cnj_opl() As System.Nullable(Of Decimal)
		Get
			Return Me._rsc_mto_cnj_opl
		End Get
		Set
			If (Me._rsc_mto_cnj_opl.Equals(value) = false) Then
				Me.Onrsc_mto_cnj_oplChanging(value)
				Me.SendPropertyChanging
				Me._rsc_mto_cnj_opl = value
				Me.SendPropertyChanged("rsc_mto_cnj_opl")
				Me.Onrsc_mto_cnj_oplChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_rsc_mto_che_prt", DbType:="Money")>  _
	Public Property rsc_mto_che_prt() As System.Nullable(Of Decimal)
		Get
			Return Me._rsc_mto_che_prt
		End Get
		Set
			If (Me._rsc_mto_che_prt.Equals(value) = false) Then
				Me.Onrsc_mto_che_prtChanging(value)
				Me.SendPropertyChanging
				Me._rsc_mto_che_prt = value
				Me.SendPropertyChanged("rsc_mto_che_prt")
				Me.Onrsc_mto_che_prtChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_rsc_mto_let_prt", DbType:="Money")>  _
	Public Property rsc_mto_let_prt() As System.Nullable(Of Decimal)
		Get
			Return Me._rsc_mto_let_prt
		End Get
		Set
			If (Me._rsc_mto_let_prt.Equals(value) = false) Then
				Me.Onrsc_mto_let_prtChanging(value)
				Me.SendPropertyChanging
				Me._rsc_mto_let_prt = value
				Me.SendPropertyChanged("rsc_mto_let_prt")
				Me.Onrsc_mto_let_prtChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_rsc_mto_pgr_prt", DbType:="Money")>  _
	Public Property rsc_mto_pgr_prt() As System.Nullable(Of Decimal)
		Get
			Return Me._rsc_mto_pgr_prt
		End Get
		Set
			If (Me._rsc_mto_pgr_prt.Equals(value) = false) Then
				Me.Onrsc_mto_pgr_prtChanging(value)
				Me.SendPropertyChanging
				Me._rsc_mto_pgr_prt = value
				Me.SendPropertyChanged("rsc_mto_pgr_prt")
				Me.Onrsc_mto_pgr_prtChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_rsc_ctd_vig", DbType:="Int")>  _
	Public Property rsc_ctd_vig() As System.Nullable(Of Integer)
		Get
			Return Me._rsc_ctd_vig
		End Get
		Set
			If (Me._rsc_ctd_vig.Equals(value) = false) Then
				Me.Onrsc_ctd_vigChanging(value)
				Me.SendPropertyChanging
				Me._rsc_ctd_vig = value
				Me.SendPropertyChanged("rsc_ctd_vig")
				Me.Onrsc_ctd_vigChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_rsc_ctd_mpl", DbType:="Int")>  _
	Public Property rsc_ctd_mpl() As System.Nullable(Of Integer)
		Get
			Return Me._rsc_ctd_mpl
		End Get
		Set
			If (Me._rsc_ctd_mpl.Equals(value) = false) Then
				Me.Onrsc_ctd_mplChanging(value)
				Me.SendPropertyChanging
				Me._rsc_ctd_mpl = value
				Me.SendPropertyChanged("rsc_ctd_mpl")
				Me.Onrsc_ctd_mplChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_rsc_ctd_opl", DbType:="Int")>  _
	Public Property rsc_ctd_opl() As System.Nullable(Of Integer)
		Get
			Return Me._rsc_ctd_opl
		End Get
		Set
			If (Me._rsc_ctd_opl.Equals(value) = false) Then
				Me.Onrsc_ctd_oplChanging(value)
				Me.SendPropertyChanging
				Me._rsc_ctd_opl = value
				Me.SendPropertyChanged("rsc_ctd_opl")
				Me.Onrsc_ctd_oplChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_rsc_ctd_che_prt", DbType:="Int")>  _
	Public Property rsc_ctd_che_prt() As System.Nullable(Of Integer)
		Get
			Return Me._rsc_ctd_che_prt
		End Get
		Set
			If (Me._rsc_ctd_che_prt.Equals(value) = false) Then
				Me.Onrsc_ctd_che_prtChanging(value)
				Me.SendPropertyChanging
				Me._rsc_ctd_che_prt = value
				Me.SendPropertyChanged("rsc_ctd_che_prt")
				Me.Onrsc_ctd_che_prtChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_rsc_ctd_let_prt", DbType:="Int")>  _
	Public Property rsc_ctd_let_prt() As System.Nullable(Of Integer)
		Get
			Return Me._rsc_ctd_let_prt
		End Get
		Set
			If (Me._rsc_ctd_let_prt.Equals(value) = false) Then
				Me.Onrsc_ctd_let_prtChanging(value)
				Me.SendPropertyChanging
				Me._rsc_ctd_let_prt = value
				Me.SendPropertyChanged("rsc_ctd_let_prt")
				Me.Onrsc_ctd_let_prtChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_rsc_ctd_pgr_prt", DbType:="Int")>  _
	Public Property rsc_ctd_pgr_prt() As System.Nullable(Of Integer)
		Get
			Return Me._rsc_ctd_pgr_prt
		End Get
		Set
			If (Me._rsc_ctd_pgr_prt.Equals(value) = false) Then
				Me.Onrsc_ctd_pgr_prtChanging(value)
				Me.SendPropertyChanging
				Me._rsc_ctd_pgr_prt = value
				Me.SendPropertyChanged("rsc_ctd_pgr_prt")
				Me.Onrsc_ctd_pgr_prtChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_rsc_mto_ant", DbType:="Money")>  _
	Public Property rsc_mto_ant() As System.Nullable(Of Decimal)
		Get
			Return Me._rsc_mto_ant
		End Get
		Set
			If (Me._rsc_mto_ant.Equals(value) = false) Then
				Me.Onrsc_mto_antChanging(value)
				Me.SendPropertyChanging
				Me._rsc_mto_ant = value
				Me.SendPropertyChanged("rsc_mto_ant")
				Me.Onrsc_mto_antChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_rsc_ctd_ope", DbType:="Int")>  _
	Public Property rsc_ctd_ope() As System.Nullable(Of Integer)
		Get
			Return Me._rsc_ctd_ope
		End Get
		Set
			If (Me._rsc_ctd_ope.Equals(value) = false) Then
				Me.Onrsc_ctd_opeChanging(value)
				Me.SendPropertyChanging
				Me._rsc_ctd_ope = value
				Me.SendPropertyChanged("rsc_ctd_ope")
				Me.Onrsc_ctd_opeChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_rsc_mto_pgr_vig", DbType:="Money")>  _
	Public Property rsc_mto_pgr_vig() As System.Nullable(Of Decimal)
		Get
			Return Me._rsc_mto_pgr_vig
		End Get
		Set
			If (Me._rsc_mto_pgr_vig.Equals(value) = false) Then
				Me.Onrsc_mto_pgr_vigChanging(value)
				Me.SendPropertyChanging
				Me._rsc_mto_pgr_vig = value
				Me.SendPropertyChanged("rsc_mto_pgr_vig")
				Me.Onrsc_mto_pgr_vigChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_rsc_ctd_doc_cob_jud", DbType:="Int")>  _
	Public Property rsc_ctd_doc_cob_jud() As System.Nullable(Of Integer)
		Get
			Return Me._rsc_ctd_doc_cob_jud
		End Get
		Set
			If (Me._rsc_ctd_doc_cob_jud.Equals(value) = false) Then
				Me.Onrsc_ctd_doc_cob_judChanging(value)
				Me.SendPropertyChanging
				Me._rsc_ctd_doc_cob_jud = value
				Me.SendPropertyChanged("rsc_ctd_doc_cob_jud")
				Me.Onrsc_ctd_doc_cob_judChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_rsc_ctd_pgr_vig", DbType:="Int")>  _
	Public Property rsc_ctd_pgr_vig() As System.Nullable(Of Integer)
		Get
			Return Me._rsc_ctd_pgr_vig
		End Get
		Set
			If (Me._rsc_ctd_pgr_vig.Equals(value) = false) Then
				Me.Onrsc_ctd_pgr_vigChanging(value)
				Me.SendPropertyChanging
				Me._rsc_ctd_pgr_vig = value
				Me.SendPropertyChanged("rsc_ctd_pgr_vig")
				Me.Onrsc_ctd_pgr_vigChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_rsc_mto_int_cal", DbType:="Money")>  _
	Public Property rsc_mto_int_cal() As System.Nullable(Of Decimal)
		Get
			Return Me._rsc_mto_int_cal
		End Get
		Set
			If (Me._rsc_mto_int_cal.Equals(value) = false) Then
				Me.Onrsc_mto_int_calChanging(value)
				Me.SendPropertyChanging
				Me._rsc_mto_int_cal = value
				Me.SendPropertyChanged("rsc_mto_int_cal")
				Me.Onrsc_mto_int_calChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_rsc_mto_let_mor", DbType:="Money")>  _
	Public Property rsc_mto_let_mor() As System.Nullable(Of Decimal)
		Get
			Return Me._rsc_mto_let_mor
		End Get
		Set
			If (Me._rsc_mto_let_mor.Equals(value) = false) Then
				Me.Onrsc_mto_let_morChanging(value)
				Me.SendPropertyChanging
				Me._rsc_mto_let_mor = value
				Me.SendPropertyChanged("rsc_mto_let_mor")
				Me.Onrsc_mto_let_morChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_rsc_ctd_let_mor", DbType:="Money")>  _
	Public Property rsc_ctd_let_mor() As System.Nullable(Of Decimal)
		Get
			Return Me._rsc_ctd_let_mor
		End Get
		Set
			If (Me._rsc_ctd_let_mor.Equals(value) = false) Then
				Me.Onrsc_ctd_let_morChanging(value)
				Me.SendPropertyChanging
				Me._rsc_ctd_let_mor = value
				Me.SendPropertyChanged("rsc_ctd_let_mor")
				Me.Onrsc_ctd_let_morChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_rsc_ctd_vig_500", DbType:="Decimal(10,0)")>  _
	Public Property rsc_ctd_vig_500() As System.Nullable(Of Decimal)
		Get
			Return Me._rsc_ctd_vig_500
		End Get
		Set
			If (Me._rsc_ctd_vig_500.Equals(value) = false) Then
				Me.Onrsc_ctd_vig_500Changing(value)
				Me.SendPropertyChanging
				Me._rsc_ctd_vig_500 = value
				Me.SendPropertyChanged("rsc_ctd_vig_500")
				Me.Onrsc_ctd_vig_500Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_rsc_ctd_mor_500", DbType:="Decimal(10,0)")>  _
	Public Property rsc_ctd_mor_500() As System.Nullable(Of Decimal)
		Get
			Return Me._rsc_ctd_mor_500
		End Get
		Set
			If (Me._rsc_ctd_mor_500.Equals(value) = false) Then
				Me.Onrsc_ctd_mor_500Changing(value)
				Me.SendPropertyChanging
				Me._rsc_ctd_mor_500 = value
				Me.SendPropertyChanged("rsc_ctd_mor_500")
				Me.Onrsc_ctd_mor_500Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_rsc_mto_mor_otr", DbType:="Money")>  _
	Public Property rsc_mto_mor_otr() As System.Nullable(Of Decimal)
		Get
			Return Me._rsc_mto_mor_otr
		End Get
		Set
			If (Me._rsc_mto_mor_otr.Equals(value) = false) Then
				Me.Onrsc_mto_mor_otrChanging(value)
				Me.SendPropertyChanging
				Me._rsc_mto_mor_otr = value
				Me.SendPropertyChanged("rsc_mto_mor_otr")
				Me.Onrsc_mto_mor_otrChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_rsc_deu_efa", DbType:="Money")>  _
	Public Property rsc_deu_efa() As System.Nullable(Of Decimal)
		Get
			Return Me._rsc_deu_efa
		End Get
		Set
			If (Me._rsc_deu_efa.Equals(value) = false) Then
				Me.Onrsc_deu_efaChanging(value)
				Me.SendPropertyChanging
				Me._rsc_deu_efa = value
				Me.SendPropertyChanged("rsc_deu_efa")
				Me.Onrsc_deu_efaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_rsc_can_doc_efa", DbType:="Decimal(10,0)")>  _
	Public Property rsc_can_doc_efa() As System.Nullable(Of Decimal)
		Get
			Return Me._rsc_can_doc_efa
		End Get
		Set
			If (Me._rsc_can_doc_efa.Equals(value) = false) Then
				Me.Onrsc_can_doc_efaChanging(value)
				Me.SendPropertyChanging
				Me._rsc_can_doc_efa = value
				Me.SendPropertyChanged("rsc_can_doc_efa")
				Me.Onrsc_can_doc_efaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_rsc_sdo_exc", DbType:="Money")>  _
	Public Property rsc_sdo_exc() As System.Nullable(Of Decimal)
		Get
			Return Me._rsc_sdo_exc
		End Get
		Set
			If (Me._rsc_sdo_exc.Equals(value) = false) Then
				Me.Onrsc_sdo_excChanging(value)
				Me.SendPropertyChanging
				Me._rsc_sdo_exc = value
				Me.SendPropertyChanged("rsc_sdo_exc")
				Me.Onrsc_sdo_excChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pro_dia_fac_vig", DbType:="Decimal(6,0)")>  _
	Public Property pro_dia_fac_vig() As System.Nullable(Of Decimal)
		Get
			Return Me._pro_dia_fac_vig
		End Get
		Set
			If (Me._pro_dia_fac_vig.Equals(value) = false) Then
				Me.Onpro_dia_fac_vigChanging(value)
				Me.SendPropertyChanging
				Me._pro_dia_fac_vig = value
				Me.SendPropertyChanged("pro_dia_fac_vig")
				Me.Onpro_dia_fac_vigChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pro_dia_let_vig", DbType:="Decimal(6,0)")>  _
	Public Property pro_dia_let_vig() As System.Nullable(Of Decimal)
		Get
			Return Me._pro_dia_let_vig
		End Get
		Set
			If (Me._pro_dia_let_vig.Equals(value) = false) Then
				Me.Onpro_dia_let_vigChanging(value)
				Me.SendPropertyChanging
				Me._pro_dia_let_vig = value
				Me.SendPropertyChanged("pro_dia_let_vig")
				Me.Onpro_dia_let_vigChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pro_dia_otr_vig", DbType:="Decimal(6,0)")>  _
	Public Property pro_dia_otr_vig() As System.Nullable(Of Decimal)
		Get
			Return Me._pro_dia_otr_vig
		End Get
		Set
			If (Me._pro_dia_otr_vig.Equals(value) = false) Then
				Me.Onpro_dia_otr_vigChanging(value)
				Me.SendPropertyChanging
				Me._pro_dia_otr_vig = value
				Me.SendPropertyChanged("pro_dia_otr_vig")
				Me.Onpro_dia_otr_vigChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_rsc_deu_cli_fac", DbType:="Money")>  _
	Public Property rsc_deu_cli_fac() As System.Nullable(Of Decimal)
		Get
			Return Me._rsc_deu_cli_fac
		End Get
		Set
			If (Me._rsc_deu_cli_fac.Equals(value) = false) Then
				Me.Onrsc_deu_cli_facChanging(value)
				Me.SendPropertyChanging
				Me._rsc_deu_cli_fac = value
				Me.SendPropertyChanged("rsc_deu_cli_fac")
				Me.Onrsc_deu_cli_facChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_rsc_deu_cli_let", DbType:="Money")>  _
	Public Property rsc_deu_cli_let() As System.Nullable(Of Decimal)
		Get
			Return Me._rsc_deu_cli_let
		End Get
		Set
			If (Me._rsc_deu_cli_let.Equals(value) = false) Then
				Me.Onrsc_deu_cli_letChanging(value)
				Me.SendPropertyChanging
				Me._rsc_deu_cli_let = value
				Me.SendPropertyChanged("rsc_deu_cli_let")
				Me.Onrsc_deu_cli_letChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_rsc_deu_cli_otr", DbType:="Money")>  _
	Public Property rsc_deu_cli_otr() As System.Nullable(Of Decimal)
		Get
			Return Me._rsc_deu_cli_otr
		End Get
		Set
			If (Me._rsc_deu_cli_otr.Equals(value) = false) Then
				Me.Onrsc_deu_cli_otrChanging(value)
				Me.SendPropertyChanging
				Me._rsc_deu_cli_otr = value
				Me.SendPropertyChanged("rsc_deu_cli_otr")
				Me.Onrsc_deu_cli_otrChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_rsc_doc_pro_fac", DbType:="Money")>  _
	Public Property rsc_doc_pro_fac() As System.Nullable(Of Decimal)
		Get
			Return Me._rsc_doc_pro_fac
		End Get
		Set
			If (Me._rsc_doc_pro_fac.Equals(value) = false) Then
				Me.Onrsc_doc_pro_facChanging(value)
				Me.SendPropertyChanging
				Me._rsc_doc_pro_fac = value
				Me.SendPropertyChanged("rsc_doc_pro_fac")
				Me.Onrsc_doc_pro_facChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_rsc_doc_pro_let", DbType:="Money")>  _
	Public Property rsc_doc_pro_let() As System.Nullable(Of Decimal)
		Get
			Return Me._rsc_doc_pro_let
		End Get
		Set
			If (Me._rsc_doc_pro_let.Equals(value) = false) Then
				Me.Onrsc_doc_pro_letChanging(value)
				Me.SendPropertyChanging
				Me._rsc_doc_pro_let = value
				Me.SendPropertyChanged("rsc_doc_pro_let")
				Me.Onrsc_doc_pro_letChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_rsc_doc_pro_otr", DbType:="Money")>  _
	Public Property rsc_doc_pro_otr() As System.Nullable(Of Decimal)
		Get
			Return Me._rsc_doc_pro_otr
		End Get
		Set
			If (Me._rsc_doc_pro_otr.Equals(value) = false) Then
				Me.Onrsc_doc_pro_otrChanging(value)
				Me.SendPropertyChanging
				Me._rsc_doc_pro_otr = value
				Me.SendPropertyChanged("rsc_doc_pro_otr")
				Me.Onrsc_doc_pro_otrChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_rsc_deu_ven_fac", DbType:="Money")>  _
	Public Property rsc_deu_ven_fac() As System.Nullable(Of Decimal)
		Get
			Return Me._rsc_deu_ven_fac
		End Get
		Set
			If (Me._rsc_deu_ven_fac.Equals(value) = false) Then
				Me.Onrsc_deu_ven_facChanging(value)
				Me.SendPropertyChanging
				Me._rsc_deu_ven_fac = value
				Me.SendPropertyChanged("rsc_deu_ven_fac")
				Me.Onrsc_deu_ven_facChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_rsc_deu_ven_let", DbType:="Money")>  _
	Public Property rsc_deu_ven_let() As System.Nullable(Of Decimal)
		Get
			Return Me._rsc_deu_ven_let
		End Get
		Set
			If (Me._rsc_deu_ven_let.Equals(value) = false) Then
				Me.Onrsc_deu_ven_letChanging(value)
				Me.SendPropertyChanging
				Me._rsc_deu_ven_let = value
				Me.SendPropertyChanged("rsc_deu_ven_let")
				Me.Onrsc_deu_ven_letChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_rsc_deu_ven_otr", DbType:="Money")>  _
	Public Property rsc_deu_ven_otr() As System.Nullable(Of Decimal)
		Get
			Return Me._rsc_deu_ven_otr
		End Get
		Set
			If (Me._rsc_deu_ven_otr.Equals(value) = false) Then
				Me.Onrsc_deu_ven_otrChanging(value)
				Me.SendPropertyChanging
				Me._rsc_deu_ven_otr = value
				Me.SendPropertyChanged("rsc_deu_ven_otr")
				Me.Onrsc_deu_ven_otrChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="cli_cls_rsc_cls", Storage:="_cli_cls", ThisKey:="cli_idc", OtherKey:="cli_idc", IsForeignKey:=true)>  _
	Public Property cli_cls() As cli_cls
		Get
			Return Me._cli_cls.Entity
		End Get
		Set
			Dim previousValue As cli_cls = Me._cli_cls.Entity
			If ((Object.Equals(previousValue, value) = false)  _
						OrElse (Me._cli_cls.HasLoadedOrAssignedValue = false)) Then
				Me.SendPropertyChanging
				If ((previousValue Is Nothing)  _
							= false) Then
					Me._cli_cls.Entity = Nothing
					previousValue.rsc_cls.Remove(Me)
				End If
				Me._cli_cls.Entity = value
				If ((value Is Nothing)  _
							= false) Then
					value.rsc_cls.Add(Me)
					Me._cli_idc = value.cli_idc
				Else
					Me._cli_idc = CType(Nothing, String)
				End If
				Me.SendPropertyChanged("cli_cls")
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.rsd")>  _
Partial Public Class rsd_cls
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _id_rsd As Decimal
	
	Private _id_ddr As Decimal
	
	Private _id_p_0031 As System.Nullable(Of Integer)
	
	Private _rsd_ctd_doc As System.Nullable(Of Decimal)
	
	Private _rsd_mto_ope As System.Nullable(Of Decimal)
	
	Private _rsd_mto_ocu As System.Nullable(Of Decimal)
	
	Private _rsd_mto_mor As System.Nullable(Of Decimal)
	
	Private _rsd_sdo_ddr As System.Nullable(Of Decimal)
	
	Private _rsd_mto_ant As System.Nullable(Of Decimal)
	
	Private _rsd_mto_cnj As System.Nullable(Of Decimal)
	
	Private _rsd_pro As System.Nullable(Of Char)
	
	Private _rsd_mto_hpc As System.Nullable(Of Decimal)
	
	Private _rsd_his_pag As System.Nullable(Of Decimal)
	
	Private _rsd_doc_pro_deu As System.Nullable(Of Decimal)
	
	Private _ddr_cls As EntityRef(Of ddr_cls)
	
	Private _P_0031_cls As EntityRef(Of P_0031_cls)
	
    #Region "Definiciones de métodos de extensibilidad"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub Onid_rsdChanging(value As Decimal)
    End Sub
    Partial Private Sub Onid_rsdChanged()
    End Sub
    Partial Private Sub Onid_ddrChanging(value As Decimal)
    End Sub
    Partial Private Sub Onid_ddrChanged()
    End Sub
    Partial Private Sub Onid_p_0031Changing(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub Onid_p_0031Changed()
    End Sub
    Partial Private Sub Onrsd_ctd_docChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub Onrsd_ctd_docChanged()
    End Sub
    Partial Private Sub Onrsd_mto_opeChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub Onrsd_mto_opeChanged()
    End Sub
    Partial Private Sub Onrsd_mto_ocuChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub Onrsd_mto_ocuChanged()
    End Sub
    Partial Private Sub Onrsd_mto_morChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub Onrsd_mto_morChanged()
    End Sub
    Partial Private Sub Onrsd_sdo_ddrChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub Onrsd_sdo_ddrChanged()
    End Sub
    Partial Private Sub Onrsd_mto_antChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub Onrsd_mto_antChanged()
    End Sub
    Partial Private Sub Onrsd_mto_cnjChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub Onrsd_mto_cnjChanged()
    End Sub
    Partial Private Sub Onrsd_proChanging(value As System.Nullable(Of Char))
    End Sub
    Partial Private Sub Onrsd_proChanged()
    End Sub
    Partial Private Sub Onrsd_mto_hpcChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub Onrsd_mto_hpcChanged()
    End Sub
    Partial Private Sub Onrsd_his_pagChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub Onrsd_his_pagChanged()
    End Sub
    Partial Private Sub Onrsd_doc_pro_deuChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub Onrsd_doc_pro_deuChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		Me._ddr_cls = CType(Nothing, EntityRef(Of ddr_cls))
		Me._P_0031_cls = CType(Nothing, EntityRef(Of P_0031_cls))
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_id_rsd", AutoSync:=AutoSync.OnInsert, DbType:="Decimal(18,0) NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property id_rsd() As Decimal
		Get
			Return Me._id_rsd
		End Get
		Set
			If ((Me._id_rsd = value)  _
						= false) Then
				Me.Onid_rsdChanging(value)
				Me.SendPropertyChanging
				Me._id_rsd = value
				Me.SendPropertyChanged("id_rsd")
				Me.Onid_rsdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_id_ddr", DbType:="Decimal(10,0) NOT NULL")>  _
	Public Property id_ddr() As Decimal
		Get
			Return Me._id_ddr
		End Get
		Set
			If ((Me._id_ddr = value)  _
						= false) Then
				If Me._ddr_cls.HasLoadedOrAssignedValue Then
					Throw New System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException()
				End If
				Me.Onid_ddrChanging(value)
				Me.SendPropertyChanging
				Me._id_ddr = value
				Me.SendPropertyChanged("id_ddr")
				Me.Onid_ddrChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_id_p_0031", DbType:="Int")>  _
	Public Property id_p_0031() As System.Nullable(Of Integer)
		Get
			Return Me._id_p_0031
		End Get
		Set
			If (Me._id_p_0031.Equals(value) = false) Then
				If Me._P_0031_cls.HasLoadedOrAssignedValue Then
					Throw New System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException()
				End If
				Me.Onid_p_0031Changing(value)
				Me.SendPropertyChanging
				Me._id_p_0031 = value
				Me.SendPropertyChanged("id_p_0031")
				Me.Onid_p_0031Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_rsd_ctd_doc", DbType:="Decimal(10,0)")>  _
	Public Property rsd_ctd_doc() As System.Nullable(Of Decimal)
		Get
			Return Me._rsd_ctd_doc
		End Get
		Set
			If (Me._rsd_ctd_doc.Equals(value) = false) Then
				Me.Onrsd_ctd_docChanging(value)
				Me.SendPropertyChanging
				Me._rsd_ctd_doc = value
				Me.SendPropertyChanged("rsd_ctd_doc")
				Me.Onrsd_ctd_docChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_rsd_mto_ope", DbType:="Money")>  _
	Public Property rsd_mto_ope() As System.Nullable(Of Decimal)
		Get
			Return Me._rsd_mto_ope
		End Get
		Set
			If (Me._rsd_mto_ope.Equals(value) = false) Then
				Me.Onrsd_mto_opeChanging(value)
				Me.SendPropertyChanging
				Me._rsd_mto_ope = value
				Me.SendPropertyChanged("rsd_mto_ope")
				Me.Onrsd_mto_opeChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_rsd_mto_ocu", DbType:="Money")>  _
	Public Property rsd_mto_ocu() As System.Nullable(Of Decimal)
		Get
			Return Me._rsd_mto_ocu
		End Get
		Set
			If (Me._rsd_mto_ocu.Equals(value) = false) Then
				Me.Onrsd_mto_ocuChanging(value)
				Me.SendPropertyChanging
				Me._rsd_mto_ocu = value
				Me.SendPropertyChanged("rsd_mto_ocu")
				Me.Onrsd_mto_ocuChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_rsd_mto_mor", DbType:="Money")>  _
	Public Property rsd_mto_mor() As System.Nullable(Of Decimal)
		Get
			Return Me._rsd_mto_mor
		End Get
		Set
			If (Me._rsd_mto_mor.Equals(value) = false) Then
				Me.Onrsd_mto_morChanging(value)
				Me.SendPropertyChanging
				Me._rsd_mto_mor = value
				Me.SendPropertyChanged("rsd_mto_mor")
				Me.Onrsd_mto_morChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_rsd_sdo_ddr", DbType:="Money")>  _
	Public Property rsd_sdo_ddr() As System.Nullable(Of Decimal)
		Get
			Return Me._rsd_sdo_ddr
		End Get
		Set
			If (Me._rsd_sdo_ddr.Equals(value) = false) Then
				Me.Onrsd_sdo_ddrChanging(value)
				Me.SendPropertyChanging
				Me._rsd_sdo_ddr = value
				Me.SendPropertyChanged("rsd_sdo_ddr")
				Me.Onrsd_sdo_ddrChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_rsd_mto_ant", DbType:="Money")>  _
	Public Property rsd_mto_ant() As System.Nullable(Of Decimal)
		Get
			Return Me._rsd_mto_ant
		End Get
		Set
			If (Me._rsd_mto_ant.Equals(value) = false) Then
				Me.Onrsd_mto_antChanging(value)
				Me.SendPropertyChanging
				Me._rsd_mto_ant = value
				Me.SendPropertyChanged("rsd_mto_ant")
				Me.Onrsd_mto_antChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_rsd_mto_cnj", DbType:="Money")>  _
	Public Property rsd_mto_cnj() As System.Nullable(Of Decimal)
		Get
			Return Me._rsd_mto_cnj
		End Get
		Set
			If (Me._rsd_mto_cnj.Equals(value) = false) Then
				Me.Onrsd_mto_cnjChanging(value)
				Me.SendPropertyChanging
				Me._rsd_mto_cnj = value
				Me.SendPropertyChanged("rsd_mto_cnj")
				Me.Onrsd_mto_cnjChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_rsd_pro", DbType:="Char(1)")>  _
	Public Property rsd_pro() As System.Nullable(Of Char)
		Get
			Return Me._rsd_pro
		End Get
		Set
			If (Me._rsd_pro.Equals(value) = false) Then
				Me.Onrsd_proChanging(value)
				Me.SendPropertyChanging
				Me._rsd_pro = value
				Me.SendPropertyChanged("rsd_pro")
				Me.Onrsd_proChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_rsd_mto_hpc", DbType:="Money")>  _
	Public Property rsd_mto_hpc() As System.Nullable(Of Decimal)
		Get
			Return Me._rsd_mto_hpc
		End Get
		Set
			If (Me._rsd_mto_hpc.Equals(value) = false) Then
				Me.Onrsd_mto_hpcChanging(value)
				Me.SendPropertyChanging
				Me._rsd_mto_hpc = value
				Me.SendPropertyChanged("rsd_mto_hpc")
				Me.Onrsd_mto_hpcChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_rsd_his_pag", DbType:="Money")>  _
	Public Property rsd_his_pag() As System.Nullable(Of Decimal)
		Get
			Return Me._rsd_his_pag
		End Get
		Set
			If (Me._rsd_his_pag.Equals(value) = false) Then
				Me.Onrsd_his_pagChanging(value)
				Me.SendPropertyChanging
				Me._rsd_his_pag = value
				Me.SendPropertyChanged("rsd_his_pag")
				Me.Onrsd_his_pagChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_rsd_doc_pro_deu", DbType:="Money")>  _
	Public Property rsd_doc_pro_deu() As System.Nullable(Of Decimal)
		Get
			Return Me._rsd_doc_pro_deu
		End Get
		Set
			If (Me._rsd_doc_pro_deu.Equals(value) = false) Then
				Me.Onrsd_doc_pro_deuChanging(value)
				Me.SendPropertyChanging
				Me._rsd_doc_pro_deu = value
				Me.SendPropertyChanged("rsd_doc_pro_deu")
				Me.Onrsd_doc_pro_deuChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="ddr_cls_rsd_cls", Storage:="_ddr_cls", ThisKey:="id_ddr", OtherKey:="id_ddr", IsForeignKey:=true)>  _
	Public Property ddr_cls() As ddr_cls
		Get
			Return Me._ddr_cls.Entity
		End Get
		Set
			Dim previousValue As ddr_cls = Me._ddr_cls.Entity
			If ((Object.Equals(previousValue, value) = false)  _
						OrElse (Me._ddr_cls.HasLoadedOrAssignedValue = false)) Then
				Me.SendPropertyChanging
				If ((previousValue Is Nothing)  _
							= false) Then
					Me._ddr_cls.Entity = Nothing
					previousValue.rsd_cls.Remove(Me)
				End If
				Me._ddr_cls.Entity = value
				If ((value Is Nothing)  _
							= false) Then
					value.rsd_cls.Add(Me)
					Me._id_ddr = value.id_ddr
				Else
					Me._id_ddr = CType(Nothing, Decimal)
				End If
				Me.SendPropertyChanged("ddr_cls")
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="P_0031_cls_rsd_cls", Storage:="_P_0031_cls", ThisKey:="id_p_0031", OtherKey:="id_P_0031", IsForeignKey:=true)>  _
	Public Property P_0031_cls() As P_0031_cls
		Get
			Return Me._P_0031_cls.Entity
		End Get
		Set
			Dim previousValue As P_0031_cls = Me._P_0031_cls.Entity
			If ((Object.Equals(previousValue, value) = false)  _
						OrElse (Me._P_0031_cls.HasLoadedOrAssignedValue = false)) Then
				Me.SendPropertyChanging
				If ((previousValue Is Nothing)  _
							= false) Then
					Me._P_0031_cls.Entity = Nothing
					previousValue.rsd_cls.Remove(Me)
				End If
				Me._P_0031_cls.Entity = value
				If ((value Is Nothing)  _
							= false) Then
					value.rsd_cls.Add(Me)
					Me._id_p_0031 = value.id_P_0031
				Else
					Me._id_p_0031 = CType(Nothing, Nullable(Of Integer))
				End If
				Me.SendPropertyChanged("P_0031_cls")
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.rxd")>  _
Partial Public Class rxd_cls
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _id_rxd As Integer
	
	Private _id_req As System.Nullable(Of Integer)
	
	Private _id_p_0031 As System.Nullable(Of Integer)
	
	Private _rxo_cls As EntitySet(Of rxo_cls)
	
	Private _P_0031_cls As EntityRef(Of P_0031_cls)
	
	Private _req_cls As EntityRef(Of req_cls)
	
    #Region "Definiciones de métodos de extensibilidad"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub Onid_rxdChanging(value As Integer)
    End Sub
    Partial Private Sub Onid_rxdChanged()
    End Sub
    Partial Private Sub Onid_reqChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub Onid_reqChanged()
    End Sub
    Partial Private Sub Onid_p_0031Changing(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub Onid_p_0031Changed()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		Me._rxo_cls = New EntitySet(Of rxo_cls)(AddressOf Me.attach_rxo_cls, AddressOf Me.detach_rxo_cls)
		Me._P_0031_cls = CType(Nothing, EntityRef(Of P_0031_cls))
		Me._req_cls = CType(Nothing, EntityRef(Of req_cls))
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_id_rxd", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property id_rxd() As Integer
		Get
			Return Me._id_rxd
		End Get
		Set
			If ((Me._id_rxd = value)  _
						= false) Then
				Me.Onid_rxdChanging(value)
				Me.SendPropertyChanging
				Me._id_rxd = value
				Me.SendPropertyChanged("id_rxd")
				Me.Onid_rxdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_id_req", DbType:="Int")>  _
	Public Property id_req() As System.Nullable(Of Integer)
		Get
			Return Me._id_req
		End Get
		Set
			If (Me._id_req.Equals(value) = false) Then
				If Me._req_cls.HasLoadedOrAssignedValue Then
					Throw New System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException()
				End If
				Me.Onid_reqChanging(value)
				Me.SendPropertyChanging
				Me._id_req = value
				Me.SendPropertyChanged("id_req")
				Me.Onid_reqChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_id_p_0031", DbType:="Int")>  _
	Public Property id_p_0031() As System.Nullable(Of Integer)
		Get
			Return Me._id_p_0031
		End Get
		Set
			If (Me._id_p_0031.Equals(value) = false) Then
				If Me._P_0031_cls.HasLoadedOrAssignedValue Then
					Throw New System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException()
				End If
				Me.Onid_p_0031Changing(value)
				Me.SendPropertyChanging
				Me._id_p_0031 = value
				Me.SendPropertyChanged("id_p_0031")
				Me.Onid_p_0031Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="rxd_cls_rxo_cls", Storage:="_rxo_cls", ThisKey:="id_rxd", OtherKey:="id_rxd")>  _
	Public Property rxo_cls() As EntitySet(Of rxo_cls)
		Get
			Return Me._rxo_cls
		End Get
		Set
			Me._rxo_cls.Assign(value)
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="P_0031_cls_rxd_cls", Storage:="_P_0031_cls", ThisKey:="id_p_0031", OtherKey:="id_P_0031", IsForeignKey:=true)>  _
	Public Property P_0031_cls() As P_0031_cls
		Get
			Return Me._P_0031_cls.Entity
		End Get
		Set
			Dim previousValue As P_0031_cls = Me._P_0031_cls.Entity
			If ((Object.Equals(previousValue, value) = false)  _
						OrElse (Me._P_0031_cls.HasLoadedOrAssignedValue = false)) Then
				Me.SendPropertyChanging
				If ((previousValue Is Nothing)  _
							= false) Then
					Me._P_0031_cls.Entity = Nothing
					previousValue.rxd_cls.Remove(Me)
				End If
				Me._P_0031_cls.Entity = value
				If ((value Is Nothing)  _
							= false) Then
					value.rxd_cls.Add(Me)
					Me._id_p_0031 = value.id_P_0031
				Else
					Me._id_p_0031 = CType(Nothing, Nullable(Of Integer))
				End If
				Me.SendPropertyChanged("P_0031_cls")
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="req_cls_rxd_cls", Storage:="_req_cls", ThisKey:="id_req", OtherKey:="id_req", IsForeignKey:=true)>  _
	Public Property req_cls() As req_cls
		Get
			Return Me._req_cls.Entity
		End Get
		Set
			Dim previousValue As req_cls = Me._req_cls.Entity
			If ((Object.Equals(previousValue, value) = false)  _
						OrElse (Me._req_cls.HasLoadedOrAssignedValue = false)) Then
				Me.SendPropertyChanging
				If ((previousValue Is Nothing)  _
							= false) Then
					Me._req_cls.Entity = Nothing
					previousValue.rxd_cls.Remove(Me)
				End If
				Me._req_cls.Entity = value
				If ((value Is Nothing)  _
							= false) Then
					value.rxd_cls.Add(Me)
					Me._id_req = value.id_req
				Else
					Me._id_req = CType(Nothing, Nullable(Of Integer))
				End If
				Me.SendPropertyChanged("req_cls")
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
	
	Private Sub attach_rxo_cls(ByVal entity As rxo_cls)
		Me.SendPropertyChanging
		entity.rxd_cls = Me
	End Sub
	
	Private Sub detach_rxo_cls(ByVal entity As rxo_cls)
		Me.SendPropertyChanging
		entity.rxd_cls = Nothing
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.rxo")>  _
Partial Public Class rxo_cls
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _id_rxo As Integer
	
	Private _id_ope As Decimal
	
	Private _id_rxd As Integer
	
	Private _id_eje As System.Nullable(Of Integer)
	
	Private _rxo_est As Char
	
	Private _rxo_fec_apb As System.Nullable(Of Date)
	
	Private _ope_cls As EntityRef(Of ope_cls)
	
	Private _rxd_cls As EntityRef(Of rxd_cls)
	
	Private _eje_cls As EntityRef(Of eje_cls)
	
    #Region "Definiciones de métodos de extensibilidad"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub Onid_rxoChanging(value As Integer)
    End Sub
    Partial Private Sub Onid_rxoChanged()
    End Sub
    Partial Private Sub Onid_opeChanging(value As Decimal)
    End Sub
    Partial Private Sub Onid_opeChanged()
    End Sub
    Partial Private Sub Onid_rxdChanging(value As Integer)
    End Sub
    Partial Private Sub Onid_rxdChanged()
    End Sub
    Partial Private Sub Onid_ejeChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub Onid_ejeChanged()
    End Sub
    Partial Private Sub Onrxo_estChanging(value As Char)
    End Sub
    Partial Private Sub Onrxo_estChanged()
    End Sub
    Partial Private Sub Onrxo_fec_apbChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub Onrxo_fec_apbChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		Me._ope_cls = CType(Nothing, EntityRef(Of ope_cls))
		Me._rxd_cls = CType(Nothing, EntityRef(Of rxd_cls))
		Me._eje_cls = CType(Nothing, EntityRef(Of eje_cls))
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_id_rxo", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property id_rxo() As Integer
		Get
			Return Me._id_rxo
		End Get
		Set
			If ((Me._id_rxo = value)  _
						= false) Then
				Me.Onid_rxoChanging(value)
				Me.SendPropertyChanging
				Me._id_rxo = value
				Me.SendPropertyChanged("id_rxo")
				Me.Onid_rxoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_id_ope", DbType:="Decimal(10,0) NOT NULL")>  _
	Public Property id_ope() As Decimal
		Get
			Return Me._id_ope
		End Get
		Set
			If ((Me._id_ope = value)  _
						= false) Then
				If Me._ope_cls.HasLoadedOrAssignedValue Then
					Throw New System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException()
				End If
				Me.Onid_opeChanging(value)
				Me.SendPropertyChanging
				Me._id_ope = value
				Me.SendPropertyChanged("id_ope")
				Me.Onid_opeChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_id_rxd", DbType:="Int NOT NULL")>  _
	Public Property id_rxd() As Integer
		Get
			Return Me._id_rxd
		End Get
		Set
			If ((Me._id_rxd = value)  _
						= false) Then
				If Me._rxd_cls.HasLoadedOrAssignedValue Then
					Throw New System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException()
				End If
				Me.Onid_rxdChanging(value)
				Me.SendPropertyChanging
				Me._id_rxd = value
				Me.SendPropertyChanged("id_rxd")
				Me.Onid_rxdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_id_eje", DbType:="Int")>  _
	Public Property id_eje() As System.Nullable(Of Integer)
		Get
			Return Me._id_eje
		End Get
		Set
			If (Me._id_eje.Equals(value) = false) Then
				If Me._eje_cls.HasLoadedOrAssignedValue Then
					Throw New System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException()
				End If
				Me.Onid_ejeChanging(value)
				Me.SendPropertyChanging
				Me._id_eje = value
				Me.SendPropertyChanged("id_eje")
				Me.Onid_ejeChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_rxo_est", DbType:="Char(1) NOT NULL")>  _
	Public Property rxo_est() As Char
		Get
			Return Me._rxo_est
		End Get
		Set
			If ((Me._rxo_est = value)  _
						= false) Then
				Me.Onrxo_estChanging(value)
				Me.SendPropertyChanging
				Me._rxo_est = value
				Me.SendPropertyChanged("rxo_est")
				Me.Onrxo_estChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_rxo_fec_apb", DbType:="DateTime")>  _
	Public Property rxo_fec_apb() As System.Nullable(Of Date)
		Get
			Return Me._rxo_fec_apb
		End Get
		Set
			If (Me._rxo_fec_apb.Equals(value) = false) Then
				Me.Onrxo_fec_apbChanging(value)
				Me.SendPropertyChanging
				Me._rxo_fec_apb = value
				Me.SendPropertyChanged("rxo_fec_apb")
				Me.Onrxo_fec_apbChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="ope_cls_rxo_cls", Storage:="_ope_cls", ThisKey:="id_ope", OtherKey:="id_ope", IsForeignKey:=true)>  _
	Public Property ope_cls() As ope_cls
		Get
			Return Me._ope_cls.Entity
		End Get
		Set
			Dim previousValue As ope_cls = Me._ope_cls.Entity
			If ((Object.Equals(previousValue, value) = false)  _
						OrElse (Me._ope_cls.HasLoadedOrAssignedValue = false)) Then
				Me.SendPropertyChanging
				If ((previousValue Is Nothing)  _
							= false) Then
					Me._ope_cls.Entity = Nothing
					previousValue.rxo_cls.Remove(Me)
				End If
				Me._ope_cls.Entity = value
				If ((value Is Nothing)  _
							= false) Then
					value.rxo_cls.Add(Me)
					Me._id_ope = value.id_ope
				Else
					Me._id_ope = CType(Nothing, Decimal)
				End If
				Me.SendPropertyChanged("ope_cls")
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="rxd_cls_rxo_cls", Storage:="_rxd_cls", ThisKey:="id_rxd", OtherKey:="id_rxd", IsForeignKey:=true)>  _
	Public Property rxd_cls() As rxd_cls
		Get
			Return Me._rxd_cls.Entity
		End Get
		Set
			Dim previousValue As rxd_cls = Me._rxd_cls.Entity
			If ((Object.Equals(previousValue, value) = false)  _
						OrElse (Me._rxd_cls.HasLoadedOrAssignedValue = false)) Then
				Me.SendPropertyChanging
				If ((previousValue Is Nothing)  _
							= false) Then
					Me._rxd_cls.Entity = Nothing
					previousValue.rxo_cls.Remove(Me)
				End If
				Me._rxd_cls.Entity = value
				If ((value Is Nothing)  _
							= false) Then
					value.rxo_cls.Add(Me)
					Me._id_rxd = value.id_rxd
				Else
					Me._id_rxd = CType(Nothing, Integer)
				End If
				Me.SendPropertyChanged("rxd_cls")
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="eje_cls_rxo_cls", Storage:="_eje_cls", ThisKey:="id_eje", OtherKey:="id_eje", IsForeignKey:=true)>  _
	Public Property eje_cls() As eje_cls
		Get
			Return Me._eje_cls.Entity
		End Get
		Set
			Dim previousValue As eje_cls = Me._eje_cls.Entity
			If ((Object.Equals(previousValue, value) = false)  _
						OrElse (Me._eje_cls.HasLoadedOrAssignedValue = false)) Then
				Me.SendPropertyChanging
				If ((previousValue Is Nothing)  _
							= false) Then
					Me._eje_cls.Entity = Nothing
					previousValue.rxo_cls.Remove(Me)
				End If
				Me._eje_cls.Entity = value
				If ((value Is Nothing)  _
							= false) Then
					value.rxo_cls.Add(Me)
					Me._id_eje = value.id_eje
				Else
					Me._id_eje = CType(Nothing, Nullable(Of Integer))
				End If
				Me.SendPropertyChanged("eje_cls")
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.sbc")>  _
Partial Public Class sbc_cls
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _id_sbc As Integer
	
	Private _id_bco As Integer
	
	Private _id_pl_000047 As String
	
	Private _sbc_des As String
	
	Private _nbc_cls As EntitySet(Of nbc_cls)
	
	Private _bco_cls As EntityRef(Of bco_cls)
	
	Private _PL_000047_cls As EntityRef(Of PL_000047_cls)
	
    #Region "Definiciones de métodos de extensibilidad"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub Onid_sbcChanging(value As Integer)
    End Sub
    Partial Private Sub Onid_sbcChanged()
    End Sub
    Partial Private Sub Onid_bcoChanging(value As Integer)
    End Sub
    Partial Private Sub Onid_bcoChanged()
    End Sub
    Partial Private Sub Onid_pl_000047Changing(value As String)
    End Sub
    Partial Private Sub Onid_pl_000047Changed()
    End Sub
    Partial Private Sub Onsbc_desChanging(value As String)
    End Sub
    Partial Private Sub Onsbc_desChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		Me._nbc_cls = New EntitySet(Of nbc_cls)(AddressOf Me.attach_nbc_cls, AddressOf Me.detach_nbc_cls)
		Me._bco_cls = CType(Nothing, EntityRef(Of bco_cls))
		Me._PL_000047_cls = CType(Nothing, EntityRef(Of PL_000047_cls))
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_id_sbc", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property id_sbc() As Integer
		Get
			Return Me._id_sbc
		End Get
		Set
			If ((Me._id_sbc = value)  _
						= false) Then
				Me.Onid_sbcChanging(value)
				Me.SendPropertyChanging
				Me._id_sbc = value
				Me.SendPropertyChanged("id_sbc")
				Me.Onid_sbcChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_id_bco", DbType:="Int NOT NULL")>  _
	Public Property id_bco() As Integer
		Get
			Return Me._id_bco
		End Get
		Set
			If ((Me._id_bco = value)  _
						= false) Then
				If Me._bco_cls.HasLoadedOrAssignedValue Then
					Throw New System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException()
				End If
				Me.Onid_bcoChanging(value)
				Me.SendPropertyChanging
				Me._id_bco = value
				Me.SendPropertyChanged("id_bco")
				Me.Onid_bcoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_id_pl_000047", DbType:="Char(6)")>  _
	Public Property id_pl_000047() As String
		Get
			Return Me._id_pl_000047
		End Get
		Set
			If (String.Equals(Me._id_pl_000047, value) = false) Then
				If Me._PL_000047_cls.HasLoadedOrAssignedValue Then
					Throw New System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException()
				End If
				Me.Onid_pl_000047Changing(value)
				Me.SendPropertyChanging
				Me._id_pl_000047 = value
				Me.SendPropertyChanged("id_pl_000047")
				Me.Onid_pl_000047Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_sbc_des", DbType:="VarChar(50)")>  _
	Public Property sbc_des() As String
		Get
			Return Me._sbc_des
		End Get
		Set
			If (String.Equals(Me._sbc_des, value) = false) Then
				Me.Onsbc_desChanging(value)
				Me.SendPropertyChanging
				Me._sbc_des = value
				Me.SendPropertyChanged("sbc_des")
				Me.Onsbc_desChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="sbc_cls_nbc_cls", Storage:="_nbc_cls", ThisKey:="id_sbc", OtherKey:="id_sbc")>  _
	Public Property nbc_cls() As EntitySet(Of nbc_cls)
		Get
			Return Me._nbc_cls
		End Get
		Set
			Me._nbc_cls.Assign(value)
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="bco_cls_sbc_cls", Storage:="_bco_cls", ThisKey:="id_bco", OtherKey:="id_bco", IsForeignKey:=true)>  _
	Public Property bco_cls() As bco_cls
		Get
			Return Me._bco_cls.Entity
		End Get
		Set
			Dim previousValue As bco_cls = Me._bco_cls.Entity
			If ((Object.Equals(previousValue, value) = false)  _
						OrElse (Me._bco_cls.HasLoadedOrAssignedValue = false)) Then
				Me.SendPropertyChanging
				If ((previousValue Is Nothing)  _
							= false) Then
					Me._bco_cls.Entity = Nothing
					previousValue.sbc_cls.Remove(Me)
				End If
				Me._bco_cls.Entity = value
				If ((value Is Nothing)  _
							= false) Then
					value.sbc_cls.Add(Me)
					Me._id_bco = value.id_bco
				Else
					Me._id_bco = CType(Nothing, Integer)
				End If
				Me.SendPropertyChanged("bco_cls")
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="PL_000047_cls_sbc_cls", Storage:="_PL_000047_cls", ThisKey:="id_pl_000047", OtherKey:="id_PL_000047", IsForeignKey:=true)>  _
	Public Property PL_000047_cls() As PL_000047_cls
		Get
			Return Me._PL_000047_cls.Entity
		End Get
		Set
			Dim previousValue As PL_000047_cls = Me._PL_000047_cls.Entity
			If ((Object.Equals(previousValue, value) = false)  _
						OrElse (Me._PL_000047_cls.HasLoadedOrAssignedValue = false)) Then
				Me.SendPropertyChanging
				If ((previousValue Is Nothing)  _
							= false) Then
					Me._PL_000047_cls.Entity = Nothing
					previousValue.sbc_cls.Remove(Me)
				End If
				Me._PL_000047_cls.Entity = value
				If ((value Is Nothing)  _
							= false) Then
					value.sbc_cls.Add(Me)
					Me._id_pl_000047 = value.id_PL_000047
				Else
					Me._id_pl_000047 = CType(Nothing, String)
				End If
				Me.SendPropertyChanged("PL_000047_cls")
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
	
	Private Sub attach_nbc_cls(ByVal entity As nbc_cls)
		Me.SendPropertyChanging
		entity.sbc_cls = Me
	End Sub
	
	Private Sub detach_nbc_cls(ByVal entity As nbc_cls)
		Me.SendPropertyChanging
		entity.sbc_cls = Nothing
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.sbl")>  _
Partial Public Class sbl_cls
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _id_sbl As Decimal
	
	Private _id_ldc As Decimal
	
	Private _sbl_tip As String
	
	Private _deu_ide As String
	
	Private _id_P_0031 As System.Nullable(Of Integer)
	
	Private _sbl_mto As System.Nullable(Of Decimal)
	
	Private _sbl_mto_ocu As System.Nullable(Of Decimal)
	
	Private _sbl_tip_pct_mto As System.Nullable(Of Char)
	
	Private _sbl_pct As System.Nullable(Of Decimal)
	
	Private _deu_cls As EntityRef(Of deu_cls)
	
	Private _ldc_cls As EntityRef(Of ldc_cls)
	
	Private _P_0031_cls As EntityRef(Of P_0031_cls)
	
    #Region "Definiciones de métodos de extensibilidad"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub Onid_sblChanging(value As Decimal)
    End Sub
    Partial Private Sub Onid_sblChanged()
    End Sub
    Partial Private Sub Onid_ldcChanging(value As Decimal)
    End Sub
    Partial Private Sub Onid_ldcChanged()
    End Sub
    Partial Private Sub Onsbl_tipChanging(value As String)
    End Sub
    Partial Private Sub Onsbl_tipChanged()
    End Sub
    Partial Private Sub Ondeu_ideChanging(value As String)
    End Sub
    Partial Private Sub Ondeu_ideChanged()
    End Sub
    Partial Private Sub Onid_P_0031Changing(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub Onid_P_0031Changed()
    End Sub
    Partial Private Sub Onsbl_mtoChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub Onsbl_mtoChanged()
    End Sub
    Partial Private Sub Onsbl_mto_ocuChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub Onsbl_mto_ocuChanged()
    End Sub
    Partial Private Sub Onsbl_tip_pct_mtoChanging(value As System.Nullable(Of Char))
    End Sub
    Partial Private Sub Onsbl_tip_pct_mtoChanged()
    End Sub
    Partial Private Sub Onsbl_pctChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub Onsbl_pctChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		Me._deu_cls = CType(Nothing, EntityRef(Of deu_cls))
		Me._ldc_cls = CType(Nothing, EntityRef(Of ldc_cls))
		Me._P_0031_cls = CType(Nothing, EntityRef(Of P_0031_cls))
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_id_sbl", AutoSync:=AutoSync.OnInsert, DbType:="Decimal(18,0) NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property id_sbl() As Decimal
		Get
			Return Me._id_sbl
		End Get
		Set
			If ((Me._id_sbl = value)  _
						= false) Then
				Me.Onid_sblChanging(value)
				Me.SendPropertyChanging
				Me._id_sbl = value
				Me.SendPropertyChanged("id_sbl")
				Me.Onid_sblChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_id_ldc", DbType:="Decimal(18,0) NOT NULL")>  _
	Public Property id_ldc() As Decimal
		Get
			Return Me._id_ldc
		End Get
		Set
			If ((Me._id_ldc = value)  _
						= false) Then
				If Me._ldc_cls.HasLoadedOrAssignedValue Then
					Throw New System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException()
				End If
				Me.Onid_ldcChanging(value)
				Me.SendPropertyChanging
				Me._id_ldc = value
				Me.SendPropertyChanged("id_ldc")
				Me.Onid_ldcChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_sbl_tip", DbType:="VarChar(1) NOT NULL", CanBeNull:=false)>  _
	Public Property sbl_tip() As String
		Get
			Return Me._sbl_tip
		End Get
		Set
			If (String.Equals(Me._sbl_tip, value) = false) Then
				Me.Onsbl_tipChanging(value)
				Me.SendPropertyChanging
				Me._sbl_tip = value
				Me.SendPropertyChanged("sbl_tip")
				Me.Onsbl_tipChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_deu_ide", DbType:="Char(12)")>  _
	Public Property deu_ide() As String
		Get
			Return Me._deu_ide
		End Get
		Set
			If (String.Equals(Me._deu_ide, value) = false) Then
				If Me._deu_cls.HasLoadedOrAssignedValue Then
					Throw New System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException()
				End If
				Me.Ondeu_ideChanging(value)
				Me.SendPropertyChanging
				Me._deu_ide = value
				Me.SendPropertyChanged("deu_ide")
				Me.Ondeu_ideChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_id_P_0031", DbType:="Int")>  _
	Public Property id_P_0031() As System.Nullable(Of Integer)
		Get
			Return Me._id_P_0031
		End Get
		Set
			If (Me._id_P_0031.Equals(value) = false) Then
				If Me._P_0031_cls.HasLoadedOrAssignedValue Then
					Throw New System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException()
				End If
				Me.Onid_P_0031Changing(value)
				Me.SendPropertyChanging
				Me._id_P_0031 = value
				Me.SendPropertyChanged("id_P_0031")
				Me.Onid_P_0031Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_sbl_mto", DbType:="Money")>  _
	Public Property sbl_mto() As System.Nullable(Of Decimal)
		Get
			Return Me._sbl_mto
		End Get
		Set
			If (Me._sbl_mto.Equals(value) = false) Then
				Me.Onsbl_mtoChanging(value)
				Me.SendPropertyChanging
				Me._sbl_mto = value
				Me.SendPropertyChanged("sbl_mto")
				Me.Onsbl_mtoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_sbl_mto_ocu", DbType:="Money")>  _
	Public Property sbl_mto_ocu() As System.Nullable(Of Decimal)
		Get
			Return Me._sbl_mto_ocu
		End Get
		Set
			If (Me._sbl_mto_ocu.Equals(value) = false) Then
				Me.Onsbl_mto_ocuChanging(value)
				Me.SendPropertyChanging
				Me._sbl_mto_ocu = value
				Me.SendPropertyChanged("sbl_mto_ocu")
				Me.Onsbl_mto_ocuChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_sbl_tip_pct_mto", DbType:="Char(1)")>  _
	Public Property sbl_tip_pct_mto() As System.Nullable(Of Char)
		Get
			Return Me._sbl_tip_pct_mto
		End Get
		Set
			If (Me._sbl_tip_pct_mto.Equals(value) = false) Then
				Me.Onsbl_tip_pct_mtoChanging(value)
				Me.SendPropertyChanging
				Me._sbl_tip_pct_mto = value
				Me.SendPropertyChanged("sbl_tip_pct_mto")
				Me.Onsbl_tip_pct_mtoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_sbl_pct", DbType:="Decimal(5,2)")>  _
	Public Property sbl_pct() As System.Nullable(Of Decimal)
		Get
			Return Me._sbl_pct
		End Get
		Set
			If (Me._sbl_pct.Equals(value) = false) Then
				Me.Onsbl_pctChanging(value)
				Me.SendPropertyChanging
				Me._sbl_pct = value
				Me.SendPropertyChanged("sbl_pct")
				Me.Onsbl_pctChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="deu_cls_sbl_cls", Storage:="_deu_cls", ThisKey:="deu_ide", OtherKey:="deu_ide", IsForeignKey:=true)>  _
	Public Property deu_cls() As deu_cls
		Get
			Return Me._deu_cls.Entity
		End Get
		Set
			Dim previousValue As deu_cls = Me._deu_cls.Entity
			If ((Object.Equals(previousValue, value) = false)  _
						OrElse (Me._deu_cls.HasLoadedOrAssignedValue = false)) Then
				Me.SendPropertyChanging
				If ((previousValue Is Nothing)  _
							= false) Then
					Me._deu_cls.Entity = Nothing
					previousValue.sbl_cls.Remove(Me)
				End If
				Me._deu_cls.Entity = value
				If ((value Is Nothing)  _
							= false) Then
					value.sbl_cls.Add(Me)
					Me._deu_ide = value.deu_ide
				Else
					Me._deu_ide = CType(Nothing, String)
				End If
				Me.SendPropertyChanged("deu_cls")
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="ldc_cls_sbl_cls", Storage:="_ldc_cls", ThisKey:="id_ldc", OtherKey:="id_ldc", IsForeignKey:=true)>  _
	Public Property ldc_cls() As ldc_cls
		Get
			Return Me._ldc_cls.Entity
		End Get
		Set
			Dim previousValue As ldc_cls = Me._ldc_cls.Entity
			If ((Object.Equals(previousValue, value) = false)  _
						OrElse (Me._ldc_cls.HasLoadedOrAssignedValue = false)) Then
				Me.SendPropertyChanging
				If ((previousValue Is Nothing)  _
							= false) Then
					Me._ldc_cls.Entity = Nothing
					previousValue.sbl_cls.Remove(Me)
				End If
				Me._ldc_cls.Entity = value
				If ((value Is Nothing)  _
							= false) Then
					value.sbl_cls.Add(Me)
					Me._id_ldc = value.id_ldc
				Else
					Me._id_ldc = CType(Nothing, Decimal)
				End If
				Me.SendPropertyChanged("ldc_cls")
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="P_0031_cls_sbl_cls", Storage:="_P_0031_cls", ThisKey:="id_P_0031", OtherKey:="id_P_0031", IsForeignKey:=true)>  _
	Public Property P_0031_cls() As P_0031_cls
		Get
			Return Me._P_0031_cls.Entity
		End Get
		Set
			Dim previousValue As P_0031_cls = Me._P_0031_cls.Entity
			If ((Object.Equals(previousValue, value) = false)  _
						OrElse (Me._P_0031_cls.HasLoadedOrAssignedValue = false)) Then
				Me.SendPropertyChanging
				If ((previousValue Is Nothing)  _
							= false) Then
					Me._P_0031_cls.Entity = Nothing
					previousValue.sbl_cls.Remove(Me)
				End If
				Me._P_0031_cls.Entity = value
				If ((value Is Nothing)  _
							= false) Then
					value.sbl_cls.Add(Me)
					Me._id_P_0031 = value.id_P_0031
				Else
					Me._id_P_0031 = CType(Nothing, Nullable(Of Integer))
				End If
				Me.SendPropertyChanged("P_0031_cls")
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.sim_cxc")>  _
Partial Public Class sim_cxc_cls
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _id_ope As Decimal
	
	Private _id_cxc As Decimal
	
	Private _cxc_cls As EntityRef(Of cxc_cls)
	
	Private _ope_cls As EntityRef(Of ope_cls)
	
    #Region "Definiciones de métodos de extensibilidad"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub Onid_opeChanging(value As Decimal)
    End Sub
    Partial Private Sub Onid_opeChanged()
    End Sub
    Partial Private Sub Onid_cxcChanging(value As Decimal)
    End Sub
    Partial Private Sub Onid_cxcChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		Me._cxc_cls = CType(Nothing, EntityRef(Of cxc_cls))
		Me._ope_cls = CType(Nothing, EntityRef(Of ope_cls))
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_id_ope", DbType:="Decimal(10,0) NOT NULL", IsPrimaryKey:=true)>  _
	Public Property id_ope() As Decimal
		Get
			Return Me._id_ope
		End Get
		Set
			If ((Me._id_ope = value)  _
						= false) Then
				If Me._ope_cls.HasLoadedOrAssignedValue Then
					Throw New System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException()
				End If
				Me.Onid_opeChanging(value)
				Me.SendPropertyChanging
				Me._id_ope = value
				Me.SendPropertyChanged("id_ope")
				Me.Onid_opeChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_id_cxc", DbType:="Decimal(10,0) NOT NULL", IsPrimaryKey:=true)>  _
	Public Property id_cxc() As Decimal
		Get
			Return Me._id_cxc
		End Get
		Set
			If ((Me._id_cxc = value)  _
						= false) Then
				If Me._cxc_cls.HasLoadedOrAssignedValue Then
					Throw New System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException()
				End If
				Me.Onid_cxcChanging(value)
				Me.SendPropertyChanging
				Me._id_cxc = value
				Me.SendPropertyChanged("id_cxc")
				Me.Onid_cxcChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="cxc_cls_sim_cxc_cls", Storage:="_cxc_cls", ThisKey:="id_cxc", OtherKey:="id_cxc", IsForeignKey:=true)>  _
	Public Property cxc_cls() As cxc_cls
		Get
			Return Me._cxc_cls.Entity
		End Get
		Set
			Dim previousValue As cxc_cls = Me._cxc_cls.Entity
			If ((Object.Equals(previousValue, value) = false)  _
						OrElse (Me._cxc_cls.HasLoadedOrAssignedValue = false)) Then
				Me.SendPropertyChanging
				If ((previousValue Is Nothing)  _
							= false) Then
					Me._cxc_cls.Entity = Nothing
					previousValue.sim_cxc_cls.Remove(Me)
				End If
				Me._cxc_cls.Entity = value
				If ((value Is Nothing)  _
							= false) Then
					value.sim_cxc_cls.Add(Me)
					Me._id_cxc = value.id_cxc
				Else
					Me._id_cxc = CType(Nothing, Decimal)
				End If
				Me.SendPropertyChanged("cxc_cls")
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="ope_cls_sim_cxc_cls", Storage:="_ope_cls", ThisKey:="id_ope", OtherKey:="id_ope", IsForeignKey:=true)>  _
	Public Property ope_cls() As ope_cls
		Get
			Return Me._ope_cls.Entity
		End Get
		Set
			Dim previousValue As ope_cls = Me._ope_cls.Entity
			If ((Object.Equals(previousValue, value) = false)  _
						OrElse (Me._ope_cls.HasLoadedOrAssignedValue = false)) Then
				Me.SendPropertyChanging
				If ((previousValue Is Nothing)  _
							= false) Then
					Me._ope_cls.Entity = Nothing
					previousValue.sim_cxc_cls.Remove(Me)
				End If
				Me._ope_cls.Entity = value
				If ((value Is Nothing)  _
							= false) Then
					value.sim_cxc_cls.Add(Me)
					Me._id_ope = value.id_ope
				Else
					Me._id_ope = CType(Nothing, Decimal)
				End If
				Me.SendPropertyChanged("ope_cls")
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.sim_cxp")>  _
Partial Public Class sim_cxp_cls
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _id_ope As Decimal
	
	Private _id_cxp As Decimal
	
	Private _cxp_cls As EntityRef(Of cxp_cls)
	
	Private _ope_cls As EntityRef(Of ope_cls)
	
    #Region "Definiciones de métodos de extensibilidad"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub Onid_opeChanging(value As Decimal)
    End Sub
    Partial Private Sub Onid_opeChanged()
    End Sub
    Partial Private Sub Onid_cxpChanging(value As Decimal)
    End Sub
    Partial Private Sub Onid_cxpChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		Me._cxp_cls = CType(Nothing, EntityRef(Of cxp_cls))
		Me._ope_cls = CType(Nothing, EntityRef(Of ope_cls))
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_id_ope", DbType:="Decimal(10,0) NOT NULL", IsPrimaryKey:=true)>  _
	Public Property id_ope() As Decimal
		Get
			Return Me._id_ope
		End Get
		Set
			If ((Me._id_ope = value)  _
						= false) Then
				If Me._ope_cls.HasLoadedOrAssignedValue Then
					Throw New System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException()
				End If
				Me.Onid_opeChanging(value)
				Me.SendPropertyChanging
				Me._id_ope = value
				Me.SendPropertyChanged("id_ope")
				Me.Onid_opeChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_id_cxp", DbType:="Decimal(10,0) NOT NULL", IsPrimaryKey:=true)>  _
	Public Property id_cxp() As Decimal
		Get
			Return Me._id_cxp
		End Get
		Set
			If ((Me._id_cxp = value)  _
						= false) Then
				If Me._cxp_cls.HasLoadedOrAssignedValue Then
					Throw New System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException()
				End If
				Me.Onid_cxpChanging(value)
				Me.SendPropertyChanging
				Me._id_cxp = value
				Me.SendPropertyChanged("id_cxp")
				Me.Onid_cxpChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="cxp_cls_sim_cxp_cls", Storage:="_cxp_cls", ThisKey:="id_cxp", OtherKey:="id_cxp", IsForeignKey:=true)>  _
	Public Property cxp_cls() As cxp_cls
		Get
			Return Me._cxp_cls.Entity
		End Get
		Set
			Dim previousValue As cxp_cls = Me._cxp_cls.Entity
			If ((Object.Equals(previousValue, value) = false)  _
						OrElse (Me._cxp_cls.HasLoadedOrAssignedValue = false)) Then
				Me.SendPropertyChanging
				If ((previousValue Is Nothing)  _
							= false) Then
					Me._cxp_cls.Entity = Nothing
					previousValue.sim_cxp_cls.Remove(Me)
				End If
				Me._cxp_cls.Entity = value
				If ((value Is Nothing)  _
							= false) Then
					value.sim_cxp_cls.Add(Me)
					Me._id_cxp = value.id_cxp
				Else
					Me._id_cxp = CType(Nothing, Decimal)
				End If
				Me.SendPropertyChanged("cxp_cls")
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="ope_cls_sim_cxp_cls", Storage:="_ope_cls", ThisKey:="id_ope", OtherKey:="id_ope", IsForeignKey:=true)>  _
	Public Property ope_cls() As ope_cls
		Get
			Return Me._ope_cls.Entity
		End Get
		Set
			Dim previousValue As ope_cls = Me._ope_cls.Entity
			If ((Object.Equals(previousValue, value) = false)  _
						OrElse (Me._ope_cls.HasLoadedOrAssignedValue = false)) Then
				Me.SendPropertyChanging
				If ((previousValue Is Nothing)  _
							= false) Then
					Me._ope_cls.Entity = Nothing
					previousValue.sim_cxp_cls.Remove(Me)
				End If
				Me._ope_cls.Entity = value
				If ((value Is Nothing)  _
							= false) Then
					value.sim_cxp_cls.Add(Me)
					Me._id_ope = value.id_ope
				Else
					Me._id_ope = CType(Nothing, Decimal)
				End If
				Me.SendPropertyChanged("ope_cls")
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.sim_egr")>  _
Partial Public Class sim_egr_cls
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _id_ope As Decimal
	
	Private _id_egr As Decimal
	
	Private _egr_cls As EntityRef(Of egr_cls)
	
	Private _ope_cls As EntityRef(Of ope_cls)
	
    #Region "Definiciones de métodos de extensibilidad"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub Onid_opeChanging(value As Decimal)
    End Sub
    Partial Private Sub Onid_opeChanged()
    End Sub
    Partial Private Sub Onid_egrChanging(value As Decimal)
    End Sub
    Partial Private Sub Onid_egrChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		Me._egr_cls = CType(Nothing, EntityRef(Of egr_cls))
		Me._ope_cls = CType(Nothing, EntityRef(Of ope_cls))
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_id_ope", DbType:="Decimal(10,0) NOT NULL", IsPrimaryKey:=true)>  _
	Public Property id_ope() As Decimal
		Get
			Return Me._id_ope
		End Get
		Set
			If ((Me._id_ope = value)  _
						= false) Then
				If Me._ope_cls.HasLoadedOrAssignedValue Then
					Throw New System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException()
				End If
				Me.Onid_opeChanging(value)
				Me.SendPropertyChanging
				Me._id_ope = value
				Me.SendPropertyChanged("id_ope")
				Me.Onid_opeChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_id_egr", DbType:="Decimal(10,0) NOT NULL", IsPrimaryKey:=true)>  _
	Public Property id_egr() As Decimal
		Get
			Return Me._id_egr
		End Get
		Set
			If ((Me._id_egr = value)  _
						= false) Then
				If Me._egr_cls.HasLoadedOrAssignedValue Then
					Throw New System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException()
				End If
				Me.Onid_egrChanging(value)
				Me.SendPropertyChanging
				Me._id_egr = value
				Me.SendPropertyChanged("id_egr")
				Me.Onid_egrChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="egr_cls_sim_egr_cls", Storage:="_egr_cls", ThisKey:="id_egr", OtherKey:="id_egr", IsForeignKey:=true)>  _
	Public Property egr_cls() As egr_cls
		Get
			Return Me._egr_cls.Entity
		End Get
		Set
			Dim previousValue As egr_cls = Me._egr_cls.Entity
			If ((Object.Equals(previousValue, value) = false)  _
						OrElse (Me._egr_cls.HasLoadedOrAssignedValue = false)) Then
				Me.SendPropertyChanging
				If ((previousValue Is Nothing)  _
							= false) Then
					Me._egr_cls.Entity = Nothing
					previousValue.sim_egr_cls.Remove(Me)
				End If
				Me._egr_cls.Entity = value
				If ((value Is Nothing)  _
							= false) Then
					value.sim_egr_cls.Add(Me)
					Me._id_egr = value.id_egr
				Else
					Me._id_egr = CType(Nothing, Decimal)
				End If
				Me.SendPropertyChanged("egr_cls")
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="ope_cls_sim_egr_cls", Storage:="_ope_cls", ThisKey:="id_ope", OtherKey:="id_ope", IsForeignKey:=true)>  _
	Public Property ope_cls() As ope_cls
		Get
			Return Me._ope_cls.Entity
		End Get
		Set
			Dim previousValue As ope_cls = Me._ope_cls.Entity
			If ((Object.Equals(previousValue, value) = false)  _
						OrElse (Me._ope_cls.HasLoadedOrAssignedValue = false)) Then
				Me.SendPropertyChanging
				If ((previousValue Is Nothing)  _
							= false) Then
					Me._ope_cls.Entity = Nothing
					previousValue.sim_egr_cls.Remove(Me)
				End If
				Me._ope_cls.Entity = value
				If ((value Is Nothing)  _
							= false) Then
					value.sim_egr_cls.Add(Me)
					Me._id_ope = value.id_ope
				Else
					Me._id_ope = CType(Nothing, Decimal)
				End If
				Me.SendPropertyChanged("ope_cls")
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.sis")>  _
Partial Public Class sis_cls
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _id_sis As Integer
	
	Private _sis_iva As System.Nullable(Of Decimal)
	
	Private _sis_dia_dev As System.Nullable(Of Integer)
	
	Private _sis_dia_eli_cli As System.Nullable(Of Integer)
	
	Private _sis_emp_fac As System.Nullable(Of Integer)
	
	Private _sis_rut_emp As String
	
	Private _sis_nom_emp As String
	
	Private _sis_dir_emp As String
	
	Private _sis_cmn_emp As String
	
	Private _sis_ciu_emp As String
	
	Private _sis_tel_emp As String
	
	Private _sis_val_mar As System.Nullable(Of Integer)
	
	Private _sis_val_fec_gsn As System.Nullable(Of Integer)
	
	Private _sis_ope_ptl As System.Nullable(Of Decimal)
	
	Private _sis_num_ctb As System.Nullable(Of Decimal)
	
	Private _sis_ful_dvg_ant As System.Nullable(Of Date)
	
	Private _sis_ful_dvg As System.Nullable(Of Date)
	
	Private _sis_dia_vto As System.Nullable(Of Integer)
	
	Private _sis_pag_oen As String
	
	Private _sis_bco_pag_oen As String
	
	Private _sis_ema_ils As String
	
	Private _sis_dia_pro As System.Nullable(Of Integer)
	
	Private _id_bco_emp As System.Nullable(Of Integer)
	
	Private _sis_can_gmf As System.Nullable(Of Integer)
	
	Private _sis_vto_ldc As System.Nullable(Of Integer)
	
	Private _sis_vld_lin As System.Nullable(Of Char)
	
	Private _sis_lnk_tas As String
	
    #Region "Definiciones de métodos de extensibilidad"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub Onid_sisChanging(value As Integer)
    End Sub
    Partial Private Sub Onid_sisChanged()
    End Sub
    Partial Private Sub Onsis_ivaChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub Onsis_ivaChanged()
    End Sub
    Partial Private Sub Onsis_dia_devChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub Onsis_dia_devChanged()
    End Sub
    Partial Private Sub Onsis_dia_eli_cliChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub Onsis_dia_eli_cliChanged()
    End Sub
    Partial Private Sub Onsis_emp_facChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub Onsis_emp_facChanged()
    End Sub
    Partial Private Sub Onsis_rut_empChanging(value As String)
    End Sub
    Partial Private Sub Onsis_rut_empChanged()
    End Sub
    Partial Private Sub Onsis_nom_empChanging(value As String)
    End Sub
    Partial Private Sub Onsis_nom_empChanged()
    End Sub
    Partial Private Sub Onsis_dir_empChanging(value As String)
    End Sub
    Partial Private Sub Onsis_dir_empChanged()
    End Sub
    Partial Private Sub Onsis_cmn_empChanging(value As String)
    End Sub
    Partial Private Sub Onsis_cmn_empChanged()
    End Sub
    Partial Private Sub Onsis_ciu_empChanging(value As String)
    End Sub
    Partial Private Sub Onsis_ciu_empChanged()
    End Sub
    Partial Private Sub Onsis_tel_empChanging(value As String)
    End Sub
    Partial Private Sub Onsis_tel_empChanged()
    End Sub
    Partial Private Sub Onsis_val_marChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub Onsis_val_marChanged()
    End Sub
    Partial Private Sub Onsis_val_fec_gsnChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub Onsis_val_fec_gsnChanged()
    End Sub
    Partial Private Sub Onsis_ope_ptlChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub Onsis_ope_ptlChanged()
    End Sub
    Partial Private Sub Onsis_num_ctbChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub Onsis_num_ctbChanged()
    End Sub
    Partial Private Sub Onsis_ful_dvg_antChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub Onsis_ful_dvg_antChanged()
    End Sub
    Partial Private Sub Onsis_ful_dvgChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub Onsis_ful_dvgChanged()
    End Sub
    Partial Private Sub Onsis_dia_vtoChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub Onsis_dia_vtoChanged()
    End Sub
    Partial Private Sub Onsis_pag_oenChanging(value As String)
    End Sub
    Partial Private Sub Onsis_pag_oenChanged()
    End Sub
    Partial Private Sub Onsis_bco_pag_oenChanging(value As String)
    End Sub
    Partial Private Sub Onsis_bco_pag_oenChanged()
    End Sub
    Partial Private Sub Onsis_ema_ilsChanging(value As String)
    End Sub
    Partial Private Sub Onsis_ema_ilsChanged()
    End Sub
    Partial Private Sub Onsis_dia_proChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub Onsis_dia_proChanged()
    End Sub
    Partial Private Sub Onid_bco_empChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub Onid_bco_empChanged()
    End Sub
    Partial Private Sub Onsis_can_gmfChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub Onsis_can_gmfChanged()
    End Sub
    Partial Private Sub Onsis_vto_ldcChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub Onsis_vto_ldcChanged()
    End Sub
    Partial Private Sub Onsis_vld_linChanging(value As System.Nullable(Of Char))
    End Sub
    Partial Private Sub Onsis_vld_linChanged()
    End Sub
    Partial Private Sub Onsis_lnk_tasChanging(value As String)
    End Sub
    Partial Private Sub Onsis_lnk_tasChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_id_sis", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property id_sis() As Integer
		Get
			Return Me._id_sis
		End Get
		Set
			If ((Me._id_sis = value)  _
						= false) Then
				Me.Onid_sisChanging(value)
				Me.SendPropertyChanging
				Me._id_sis = value
				Me.SendPropertyChanged("id_sis")
				Me.Onid_sisChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_sis_iva", DbType:="Decimal(5,2)")>  _
	Public Property sis_iva() As System.Nullable(Of Decimal)
		Get
			Return Me._sis_iva
		End Get
		Set
			If (Me._sis_iva.Equals(value) = false) Then
				Me.Onsis_ivaChanging(value)
				Me.SendPropertyChanging
				Me._sis_iva = value
				Me.SendPropertyChanged("sis_iva")
				Me.Onsis_ivaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_sis_dia_dev", DbType:="Int")>  _
	Public Property sis_dia_dev() As System.Nullable(Of Integer)
		Get
			Return Me._sis_dia_dev
		End Get
		Set
			If (Me._sis_dia_dev.Equals(value) = false) Then
				Me.Onsis_dia_devChanging(value)
				Me.SendPropertyChanging
				Me._sis_dia_dev = value
				Me.SendPropertyChanged("sis_dia_dev")
				Me.Onsis_dia_devChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_sis_dia_eli_cli", DbType:="Int")>  _
	Public Property sis_dia_eli_cli() As System.Nullable(Of Integer)
		Get
			Return Me._sis_dia_eli_cli
		End Get
		Set
			If (Me._sis_dia_eli_cli.Equals(value) = false) Then
				Me.Onsis_dia_eli_cliChanging(value)
				Me.SendPropertyChanging
				Me._sis_dia_eli_cli = value
				Me.SendPropertyChanged("sis_dia_eli_cli")
				Me.Onsis_dia_eli_cliChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_sis_emp_fac", DbType:="Int")>  _
	Public Property sis_emp_fac() As System.Nullable(Of Integer)
		Get
			Return Me._sis_emp_fac
		End Get
		Set
			If (Me._sis_emp_fac.Equals(value) = false) Then
				Me.Onsis_emp_facChanging(value)
				Me.SendPropertyChanging
				Me._sis_emp_fac = value
				Me.SendPropertyChanged("sis_emp_fac")
				Me.Onsis_emp_facChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_sis_rut_emp", DbType:="VarChar(12)")>  _
	Public Property sis_rut_emp() As String
		Get
			Return Me._sis_rut_emp
		End Get
		Set
			If (String.Equals(Me._sis_rut_emp, value) = false) Then
				Me.Onsis_rut_empChanging(value)
				Me.SendPropertyChanging
				Me._sis_rut_emp = value
				Me.SendPropertyChanged("sis_rut_emp")
				Me.Onsis_rut_empChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_sis_nom_emp", DbType:="VarChar(50)")>  _
	Public Property sis_nom_emp() As String
		Get
			Return Me._sis_nom_emp
		End Get
		Set
			If (String.Equals(Me._sis_nom_emp, value) = false) Then
				Me.Onsis_nom_empChanging(value)
				Me.SendPropertyChanging
				Me._sis_nom_emp = value
				Me.SendPropertyChanged("sis_nom_emp")
				Me.Onsis_nom_empChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_sis_dir_emp", DbType:="VarChar(50)")>  _
	Public Property sis_dir_emp() As String
		Get
			Return Me._sis_dir_emp
		End Get
		Set
			If (String.Equals(Me._sis_dir_emp, value) = false) Then
				Me.Onsis_dir_empChanging(value)
				Me.SendPropertyChanging
				Me._sis_dir_emp = value
				Me.SendPropertyChanged("sis_dir_emp")
				Me.Onsis_dir_empChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_sis_cmn_emp", DbType:="VarChar(50)")>  _
	Public Property sis_cmn_emp() As String
		Get
			Return Me._sis_cmn_emp
		End Get
		Set
			If (String.Equals(Me._sis_cmn_emp, value) = false) Then
				Me.Onsis_cmn_empChanging(value)
				Me.SendPropertyChanging
				Me._sis_cmn_emp = value
				Me.SendPropertyChanged("sis_cmn_emp")
				Me.Onsis_cmn_empChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_sis_ciu_emp", DbType:="VarChar(50)")>  _
	Public Property sis_ciu_emp() As String
		Get
			Return Me._sis_ciu_emp
		End Get
		Set
			If (String.Equals(Me._sis_ciu_emp, value) = false) Then
				Me.Onsis_ciu_empChanging(value)
				Me.SendPropertyChanging
				Me._sis_ciu_emp = value
				Me.SendPropertyChanged("sis_ciu_emp")
				Me.Onsis_ciu_empChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_sis_tel_emp", DbType:="VarChar(50)")>  _
	Public Property sis_tel_emp() As String
		Get
			Return Me._sis_tel_emp
		End Get
		Set
			If (String.Equals(Me._sis_tel_emp, value) = false) Then
				Me.Onsis_tel_empChanging(value)
				Me.SendPropertyChanging
				Me._sis_tel_emp = value
				Me.SendPropertyChanged("sis_tel_emp")
				Me.Onsis_tel_empChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_sis_val_mar", DbType:="Int")>  _
	Public Property sis_val_mar() As System.Nullable(Of Integer)
		Get
			Return Me._sis_val_mar
		End Get
		Set
			If (Me._sis_val_mar.Equals(value) = false) Then
				Me.Onsis_val_marChanging(value)
				Me.SendPropertyChanging
				Me._sis_val_mar = value
				Me.SendPropertyChanged("sis_val_mar")
				Me.Onsis_val_marChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_sis_val_fec_gsn", DbType:="Int")>  _
	Public Property sis_val_fec_gsn() As System.Nullable(Of Integer)
		Get
			Return Me._sis_val_fec_gsn
		End Get
		Set
			If (Me._sis_val_fec_gsn.Equals(value) = false) Then
				Me.Onsis_val_fec_gsnChanging(value)
				Me.SendPropertyChanging
				Me._sis_val_fec_gsn = value
				Me.SendPropertyChanged("sis_val_fec_gsn")
				Me.Onsis_val_fec_gsnChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_sis_ope_ptl", DbType:="Decimal(10,0)")>  _
	Public Property sis_ope_ptl() As System.Nullable(Of Decimal)
		Get
			Return Me._sis_ope_ptl
		End Get
		Set
			If (Me._sis_ope_ptl.Equals(value) = false) Then
				Me.Onsis_ope_ptlChanging(value)
				Me.SendPropertyChanging
				Me._sis_ope_ptl = value
				Me.SendPropertyChanged("sis_ope_ptl")
				Me.Onsis_ope_ptlChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_sis_num_ctb", DbType:="Decimal(10,0)")>  _
	Public Property sis_num_ctb() As System.Nullable(Of Decimal)
		Get
			Return Me._sis_num_ctb
		End Get
		Set
			If (Me._sis_num_ctb.Equals(value) = false) Then
				Me.Onsis_num_ctbChanging(value)
				Me.SendPropertyChanging
				Me._sis_num_ctb = value
				Me.SendPropertyChanged("sis_num_ctb")
				Me.Onsis_num_ctbChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_sis_ful_dvg_ant", DbType:="DateTime")>  _
	Public Property sis_ful_dvg_ant() As System.Nullable(Of Date)
		Get
			Return Me._sis_ful_dvg_ant
		End Get
		Set
			If (Me._sis_ful_dvg_ant.Equals(value) = false) Then
				Me.Onsis_ful_dvg_antChanging(value)
				Me.SendPropertyChanging
				Me._sis_ful_dvg_ant = value
				Me.SendPropertyChanged("sis_ful_dvg_ant")
				Me.Onsis_ful_dvg_antChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_sis_ful_dvg", DbType:="DateTime")>  _
	Public Property sis_ful_dvg() As System.Nullable(Of Date)
		Get
			Return Me._sis_ful_dvg
		End Get
		Set
			If (Me._sis_ful_dvg.Equals(value) = false) Then
				Me.Onsis_ful_dvgChanging(value)
				Me.SendPropertyChanging
				Me._sis_ful_dvg = value
				Me.SendPropertyChanged("sis_ful_dvg")
				Me.Onsis_ful_dvgChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_sis_dia_vto", DbType:="Int")>  _
	Public Property sis_dia_vto() As System.Nullable(Of Integer)
		Get
			Return Me._sis_dia_vto
		End Get
		Set
			If (Me._sis_dia_vto.Equals(value) = false) Then
				Me.Onsis_dia_vtoChanging(value)
				Me.SendPropertyChanging
				Me._sis_dia_vto = value
				Me.SendPropertyChanged("sis_dia_vto")
				Me.Onsis_dia_vtoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_sis_pag_oen", DbType:="VarChar(250)")>  _
	Public Property sis_pag_oen() As String
		Get
			Return Me._sis_pag_oen
		End Get
		Set
			If (String.Equals(Me._sis_pag_oen, value) = false) Then
				Me.Onsis_pag_oenChanging(value)
				Me.SendPropertyChanging
				Me._sis_pag_oen = value
				Me.SendPropertyChanged("sis_pag_oen")
				Me.Onsis_pag_oenChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_sis_bco_pag_oen", DbType:="VarChar(250)")>  _
	Public Property sis_bco_pag_oen() As String
		Get
			Return Me._sis_bco_pag_oen
		End Get
		Set
			If (String.Equals(Me._sis_bco_pag_oen, value) = false) Then
				Me.Onsis_bco_pag_oenChanging(value)
				Me.SendPropertyChanging
				Me._sis_bco_pag_oen = value
				Me.SendPropertyChanged("sis_bco_pag_oen")
				Me.Onsis_bco_pag_oenChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_sis_ema_ils", DbType:="VarChar(250)")>  _
	Public Property sis_ema_ils() As String
		Get
			Return Me._sis_ema_ils
		End Get
		Set
			If (String.Equals(Me._sis_ema_ils, value) = false) Then
				Me.Onsis_ema_ilsChanging(value)
				Me.SendPropertyChanging
				Me._sis_ema_ils = value
				Me.SendPropertyChanged("sis_ema_ils")
				Me.Onsis_ema_ilsChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_sis_dia_pro", DbType:="Int")>  _
	Public Property sis_dia_pro() As System.Nullable(Of Integer)
		Get
			Return Me._sis_dia_pro
		End Get
		Set
			If (Me._sis_dia_pro.Equals(value) = false) Then
				Me.Onsis_dia_proChanging(value)
				Me.SendPropertyChanging
				Me._sis_dia_pro = value
				Me.SendPropertyChanged("sis_dia_pro")
				Me.Onsis_dia_proChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_id_bco_emp", DbType:="Int")>  _
	Public Property id_bco_emp() As System.Nullable(Of Integer)
		Get
			Return Me._id_bco_emp
		End Get
		Set
			If (Me._id_bco_emp.Equals(value) = false) Then
				Me.Onid_bco_empChanging(value)
				Me.SendPropertyChanging
				Me._id_bco_emp = value
				Me.SendPropertyChanged("id_bco_emp")
				Me.Onid_bco_empChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_sis_can_gmf", DbType:="Int")>  _
	Public Property sis_can_gmf() As System.Nullable(Of Integer)
		Get
			Return Me._sis_can_gmf
		End Get
		Set
			If (Me._sis_can_gmf.Equals(value) = false) Then
				Me.Onsis_can_gmfChanging(value)
				Me.SendPropertyChanging
				Me._sis_can_gmf = value
				Me.SendPropertyChanged("sis_can_gmf")
				Me.Onsis_can_gmfChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_sis_vto_ldc", DbType:="Int")>  _
	Public Property sis_vto_ldc() As System.Nullable(Of Integer)
		Get
			Return Me._sis_vto_ldc
		End Get
		Set
			If (Me._sis_vto_ldc.Equals(value) = false) Then
				Me.Onsis_vto_ldcChanging(value)
				Me.SendPropertyChanging
				Me._sis_vto_ldc = value
				Me.SendPropertyChanged("sis_vto_ldc")
				Me.Onsis_vto_ldcChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_sis_vld_lin", DbType:="Char(1)")>  _
	Public Property sis_vld_lin() As System.Nullable(Of Char)
		Get
			Return Me._sis_vld_lin
		End Get
		Set
			If (Me._sis_vld_lin.Equals(value) = false) Then
				Me.Onsis_vld_linChanging(value)
				Me.SendPropertyChanging
				Me._sis_vld_lin = value
				Me.SendPropertyChanged("sis_vld_lin")
				Me.Onsis_vld_linChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_sis_lnk_tas", DbType:="VarChar(500)")>  _
	Public Property sis_lnk_tas() As String
		Get
			Return Me._sis_lnk_tas
		End Get
		Set
			If (String.Equals(Me._sis_lnk_tas, value) = false) Then
				Me.Onsis_lnk_tasChanging(value)
				Me.SendPropertyChanging
				Me._sis_lnk_tas = value
				Me.SendPropertyChanged("sis_lnk_tas")
				Me.Onsis_lnk_tasChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.Sis_Bases")>  _
Partial Public Class Sis_Bases_cls
	
	Private _Nombre_Sistema As String
	
	Private _Id_Sistema As Decimal
	
	Public Sub New()
		MyBase.New
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Nombre_Sistema", DbType:="VarChar(50) NOT NULL", CanBeNull:=false)>  _
	Public Property Nombre_Sistema() As String
		Get
			Return Me._Nombre_Sistema
		End Get
		Set
			If (String.Equals(Me._Nombre_Sistema, value) = false) Then
				Me._Nombre_Sistema = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Id_Sistema", DbType:="Decimal(2,0) NOT NULL")>  _
	Public Property Id_Sistema() As Decimal
		Get
			Return Me._Id_Sistema
		End Get
		Set
			If ((Me._Id_Sistema = value)  _
						= false) Then
				Me._Id_Sistema = value
			End If
		End Set
	End Property
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.sld_med")>  _
Partial Public Class sld_med
	
	Private _id_doc As System.Nullable(Of Decimal)
	
	Private _fecha As System.Nullable(Of Date)
	
	Private _saldo As System.Nullable(Of Decimal)
	
	Public Sub New()
		MyBase.New
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_id_doc", DbType:="Decimal(18,0)")>  _
	Public Property id_doc() As System.Nullable(Of Decimal)
		Get
			Return Me._id_doc
		End Get
		Set
			If (Me._id_doc.Equals(value) = false) Then
				Me._id_doc = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_fecha", DbType:="DateTime")>  _
	Public Property fecha() As System.Nullable(Of Date)
		Get
			Return Me._fecha
		End Get
		Set
			If (Me._fecha.Equals(value) = false) Then
				Me._fecha = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_saldo", DbType:="Money")>  _
	Public Property saldo() As System.Nullable(Of Decimal)
		Get
			Return Me._saldo
		End Get
		Set
			If (Me._saldo.Equals(value) = false) Then
				Me._saldo = value
			End If
		End Set
	End Property
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.spb")>  _
Partial Public Class spb_cls
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _spb_cod_bca As String
	
	Private _spb_ori As Char
	
	Private _spb_spr As String
	
    #Region "Definiciones de métodos de extensibilidad"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub Onspb_cod_bcaChanging(value As String)
    End Sub
    Partial Private Sub Onspb_cod_bcaChanged()
    End Sub
    Partial Private Sub Onspb_oriChanging(value As Char)
    End Sub
    Partial Private Sub Onspb_oriChanged()
    End Sub
    Partial Private Sub Onspb_sprChanging(value As String)
    End Sub
    Partial Private Sub Onspb_sprChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_spb_cod_bca", DbType:="VarChar(50) NOT NULL", CanBeNull:=false, IsPrimaryKey:=true)>  _
	Public Property spb_cod_bca() As String
		Get
			Return Me._spb_cod_bca
		End Get
		Set
			If (String.Equals(Me._spb_cod_bca, value) = false) Then
				Me.Onspb_cod_bcaChanging(value)
				Me.SendPropertyChanging
				Me._spb_cod_bca = value
				Me.SendPropertyChanged("spb_cod_bca")
				Me.Onspb_cod_bcaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_spb_ori", DbType:="Char(1) NOT NULL")>  _
	Public Property spb_ori() As Char
		Get
			Return Me._spb_ori
		End Get
		Set
			If ((Me._spb_ori = value)  _
						= false) Then
				Me.Onspb_oriChanging(value)
				Me.SendPropertyChanging
				Me._spb_ori = value
				Me.SendPropertyChanged("spb_ori")
				Me.Onspb_oriChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_spb_spr", DbType:="Char(6) NOT NULL", CanBeNull:=false)>  _
	Public Property spb_spr() As String
		Get
			Return Me._spb_spr
		End Get
		Set
			If (String.Equals(Me._spb_spr, value) = false) Then
				Me.Onspb_sprChanging(value)
				Me.SendPropertyChanging
				Me._spb_spr = value
				Me.SendPropertyChanged("spb_spr")
				Me.Onspb_sprChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.spg")>  _
Partial Public Class spg_cls
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _id_spg As Decimal
	
	Private _cli_idc As String
	
	Private _spg_fec As System.Nullable(Of Date)
	
	Private _id_eje_sol As System.Nullable(Of Integer)
	
	Private _spg_tas As System.Nullable(Of Decimal)
	
	Private _spg_com As System.Nullable(Of Decimal)
	
	Private _id_eje_apb As System.Nullable(Of Integer)
	
	Private _spg_obs As String
	
	Private _spg_fec_apb As System.Nullable(Of Date)
	
	Private _spg_est As System.Nullable(Of Integer)
	
	Private _spg_obs_vb As String
	
	Private _dpg_cls As EntitySet(Of dpg_cls)
	
	Private _cli_cls As EntityRef(Of cli_cls)
	
	Private _eje As EntityRef(Of eje_cls)
	
	Private _eje_cls As EntityRef(Of eje_cls)
	
    #Region "Definiciones de métodos de extensibilidad"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub Onid_spgChanging(value As Decimal)
    End Sub
    Partial Private Sub Onid_spgChanged()
    End Sub
    Partial Private Sub Oncli_idcChanging(value As String)
    End Sub
    Partial Private Sub Oncli_idcChanged()
    End Sub
    Partial Private Sub Onspg_fecChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub Onspg_fecChanged()
    End Sub
    Partial Private Sub Onid_eje_solChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub Onid_eje_solChanged()
    End Sub
    Partial Private Sub Onspg_tasChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub Onspg_tasChanged()
    End Sub
    Partial Private Sub Onspg_comChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub Onspg_comChanged()
    End Sub
    Partial Private Sub Onid_eje_apbChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub Onid_eje_apbChanged()
    End Sub
    Partial Private Sub Onspg_obsChanging(value As String)
    End Sub
    Partial Private Sub Onspg_obsChanged()
    End Sub
    Partial Private Sub Onspg_fec_apbChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub Onspg_fec_apbChanged()
    End Sub
    Partial Private Sub Onspg_estChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub Onspg_estChanged()
    End Sub
    Partial Private Sub Onspg_obs_vbChanging(value As String)
    End Sub
    Partial Private Sub Onspg_obs_vbChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		Me._dpg_cls = New EntitySet(Of dpg_cls)(AddressOf Me.attach_dpg_cls, AddressOf Me.detach_dpg_cls)
		Me._cli_cls = CType(Nothing, EntityRef(Of cli_cls))
		Me._eje = CType(Nothing, EntityRef(Of eje_cls))
		Me._eje_cls = CType(Nothing, EntityRef(Of eje_cls))
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_id_spg", AutoSync:=AutoSync.OnInsert, DbType:="Decimal(18,0) NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property id_spg() As Decimal
		Get
			Return Me._id_spg
		End Get
		Set
			If ((Me._id_spg = value)  _
						= false) Then
				Me.Onid_spgChanging(value)
				Me.SendPropertyChanging
				Me._id_spg = value
				Me.SendPropertyChanged("id_spg")
				Me.Onid_spgChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_cli_idc", DbType:="Char(12) NOT NULL", CanBeNull:=false)>  _
	Public Property cli_idc() As String
		Get
			Return Me._cli_idc
		End Get
		Set
			If (String.Equals(Me._cli_idc, value) = false) Then
				If Me._cli_cls.HasLoadedOrAssignedValue Then
					Throw New System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException()
				End If
				Me.Oncli_idcChanging(value)
				Me.SendPropertyChanging
				Me._cli_idc = value
				Me.SendPropertyChanged("cli_idc")
				Me.Oncli_idcChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_spg_fec", DbType:="DateTime")>  _
	Public Property spg_fec() As System.Nullable(Of Date)
		Get
			Return Me._spg_fec
		End Get
		Set
			If (Me._spg_fec.Equals(value) = false) Then
				Me.Onspg_fecChanging(value)
				Me.SendPropertyChanging
				Me._spg_fec = value
				Me.SendPropertyChanged("spg_fec")
				Me.Onspg_fecChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_id_eje_sol", DbType:="Int")>  _
	Public Property id_eje_sol() As System.Nullable(Of Integer)
		Get
			Return Me._id_eje_sol
		End Get
		Set
			If (Me._id_eje_sol.Equals(value) = false) Then
				If Me._eje.HasLoadedOrAssignedValue Then
					Throw New System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException()
				End If
				Me.Onid_eje_solChanging(value)
				Me.SendPropertyChanging
				Me._id_eje_sol = value
				Me.SendPropertyChanged("id_eje_sol")
				Me.Onid_eje_solChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_spg_tas", DbType:="Decimal(5,2)")>  _
	Public Property spg_tas() As System.Nullable(Of Decimal)
		Get
			Return Me._spg_tas
		End Get
		Set
			If (Me._spg_tas.Equals(value) = false) Then
				Me.Onspg_tasChanging(value)
				Me.SendPropertyChanging
				Me._spg_tas = value
				Me.SendPropertyChanged("spg_tas")
				Me.Onspg_tasChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_spg_com", DbType:="Money")>  _
	Public Property spg_com() As System.Nullable(Of Decimal)
		Get
			Return Me._spg_com
		End Get
		Set
			If (Me._spg_com.Equals(value) = false) Then
				Me.Onspg_comChanging(value)
				Me.SendPropertyChanging
				Me._spg_com = value
				Me.SendPropertyChanged("spg_com")
				Me.Onspg_comChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_id_eje_apb", DbType:="Int")>  _
	Public Property id_eje_apb() As System.Nullable(Of Integer)
		Get
			Return Me._id_eje_apb
		End Get
		Set
			If (Me._id_eje_apb.Equals(value) = false) Then
				If Me._eje_cls.HasLoadedOrAssignedValue Then
					Throw New System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException()
				End If
				Me.Onid_eje_apbChanging(value)
				Me.SendPropertyChanging
				Me._id_eje_apb = value
				Me.SendPropertyChanged("id_eje_apb")
				Me.Onid_eje_apbChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_spg_obs", DbType:="VarChar(250)")>  _
	Public Property spg_obs() As String
		Get
			Return Me._spg_obs
		End Get
		Set
			If (String.Equals(Me._spg_obs, value) = false) Then
				Me.Onspg_obsChanging(value)
				Me.SendPropertyChanging
				Me._spg_obs = value
				Me.SendPropertyChanged("spg_obs")
				Me.Onspg_obsChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_spg_fec_apb", DbType:="DateTime")>  _
	Public Property spg_fec_apb() As System.Nullable(Of Date)
		Get
			Return Me._spg_fec_apb
		End Get
		Set
			If (Me._spg_fec_apb.Equals(value) = false) Then
				Me.Onspg_fec_apbChanging(value)
				Me.SendPropertyChanging
				Me._spg_fec_apb = value
				Me.SendPropertyChanged("spg_fec_apb")
				Me.Onspg_fec_apbChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_spg_est", DbType:="Int")>  _
	Public Property spg_est() As System.Nullable(Of Integer)
		Get
			Return Me._spg_est
		End Get
		Set
			If (Me._spg_est.Equals(value) = false) Then
				Me.Onspg_estChanging(value)
				Me.SendPropertyChanging
				Me._spg_est = value
				Me.SendPropertyChanged("spg_est")
				Me.Onspg_estChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_spg_obs_vb", DbType:="VarChar(250)")>  _
	Public Property spg_obs_vb() As String
		Get
			Return Me._spg_obs_vb
		End Get
		Set
			If (String.Equals(Me._spg_obs_vb, value) = false) Then
				Me.Onspg_obs_vbChanging(value)
				Me.SendPropertyChanging
				Me._spg_obs_vb = value
				Me.SendPropertyChanged("spg_obs_vb")
				Me.Onspg_obs_vbChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="spg_cls_dpg_cls", Storage:="_dpg_cls", ThisKey:="id_spg", OtherKey:="id_spg")>  _
	Public Property dpg_cls() As EntitySet(Of dpg_cls)
		Get
			Return Me._dpg_cls
		End Get
		Set
			Me._dpg_cls.Assign(value)
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="cli_cls_spg_cls", Storage:="_cli_cls", ThisKey:="cli_idc", OtherKey:="cli_idc", IsForeignKey:=true)>  _
	Public Property cli_cls() As cli_cls
		Get
			Return Me._cli_cls.Entity
		End Get
		Set
			Dim previousValue As cli_cls = Me._cli_cls.Entity
			If ((Object.Equals(previousValue, value) = false)  _
						OrElse (Me._cli_cls.HasLoadedOrAssignedValue = false)) Then
				Me.SendPropertyChanging
				If ((previousValue Is Nothing)  _
							= false) Then
					Me._cli_cls.Entity = Nothing
					previousValue.spg_cls.Remove(Me)
				End If
				Me._cli_cls.Entity = value
				If ((value Is Nothing)  _
							= false) Then
					value.spg_cls.Add(Me)
					Me._cli_idc = value.cli_idc
				Else
					Me._cli_idc = CType(Nothing, String)
				End If
				Me.SendPropertyChanged("cli_cls")
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="eje_cls_spg_cls", Storage:="_eje", ThisKey:="id_eje_sol", OtherKey:="id_eje", IsForeignKey:=true)>  _
	Public Property eje() As eje_cls
		Get
			Return Me._eje.Entity
		End Get
		Set
			Dim previousValue As eje_cls = Me._eje.Entity
			If ((Object.Equals(previousValue, value) = false)  _
						OrElse (Me._eje.HasLoadedOrAssignedValue = false)) Then
				Me.SendPropertyChanging
				If ((previousValue Is Nothing)  _
							= false) Then
					Me._eje.Entity = Nothing
					previousValue.spg_cls.Remove(Me)
				End If
				Me._eje.Entity = value
				If ((value Is Nothing)  _
							= false) Then
					value.spg_cls.Add(Me)
					Me._id_eje_sol = value.id_eje
				Else
					Me._id_eje_sol = CType(Nothing, Nullable(Of Integer))
				End If
				Me.SendPropertyChanged("eje")
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="eje_cls_spg_cls1", Storage:="_eje_cls", ThisKey:="id_eje_apb", OtherKey:="id_eje", IsForeignKey:=true)>  _
	Public Property eje_cls() As eje_cls
		Get
			Return Me._eje_cls.Entity
		End Get
		Set
			Dim previousValue As eje_cls = Me._eje_cls.Entity
			If ((Object.Equals(previousValue, value) = false)  _
						OrElse (Me._eje_cls.HasLoadedOrAssignedValue = false)) Then
				Me.SendPropertyChanging
				If ((previousValue Is Nothing)  _
							= false) Then
					Me._eje_cls.Entity = Nothing
					previousValue.spg_cls1.Remove(Me)
				End If
				Me._eje_cls.Entity = value
				If ((value Is Nothing)  _
							= false) Then
					value.spg_cls1.Add(Me)
					Me._id_eje_apb = value.id_eje
				Else
					Me._id_eje_apb = CType(Nothing, Nullable(Of Integer))
				End If
				Me.SendPropertyChanged("eje_cls")
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
	
	Private Sub attach_dpg_cls(ByVal entity As dpg_cls)
		Me.SendPropertyChanging
		entity.spg_cls = Me
	End Sub
	
	Private Sub detach_dpg_cls(ByVal entity As dpg_cls)
		Me.SendPropertyChanging
		entity.spg_cls = Nothing
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.suc")>  _
Partial Public Class suc_cls
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _id_suc As Integer
	
	Private _suc_cod_ftg As String
	
	Private _suc_nom As String
	
	Private _suc_des_cra As String
	
	Private _suc_dir As String
	
	Private _suc_tel As String
	
	Private _suc_fax As String
	
	Private _suc_cod_reg As String
	
	Private _suc_cod_loc As String
	
	Private _SUC_TIP_UNI As System.Nullable(Of Decimal)
	
	Private _SUC_TERR_ITO As String
	
	Private _SUC_DUG As String
	
	Private _suc_dir_reg As String
	
	Private _suc_area_ope As String
	
	Private _suc_sup_area As String
	
	Private _suc_ofi_neg As String
	
	Private _SUC_FEC_CIE As System.Nullable(Of Date)
	
	Private _suc_par_est As System.Nullable(Of Integer)
	
	Private _ID_CIU As System.Nullable(Of Integer)
	
	Private _cli_cls As EntitySet(Of cli_cls)
	
	Private _cxs_cls As EntitySet(Of cxs_cls)
	
	Private _deu_cls As EntitySet(Of deu_cls)
	
	Private _doc As EntitySet(Of doc_cls)
	
	Private _doc_cls As EntitySet(Of doc_cls)
	
	Private _dor As EntitySet(Of dor_cls)
	
	Private _dor_cls As EntitySet(Of dor_cls)
	
	Private _gto_cls As EntitySet(Of gto_cls)
	
	Private _nes_cls As EntitySet(Of nes_cls)
	
	Private _nnc_cls As EntitySet(Of nnc_cls)
	
	Private _ntr_cls As EntitySet(Of ntr_cls)
	
	Private _opn_cls As EntitySet(Of opn_cls)
	
	Private _pds_cls As EntitySet(Of pds_cls)
	
	Private _sxa_cls As EntitySet(Of sxa_cls)
	
	Private _zon_cls As EntitySet(Of zon_cls)
	
	Private _eje_cls As EntitySet(Of eje_cls)
	
    #Region "Definiciones de métodos de extensibilidad"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub Onid_sucChanging(value As Integer)
    End Sub
    Partial Private Sub Onid_sucChanged()
    End Sub
    Partial Private Sub Onsuc_cod_ftgChanging(value As String)
    End Sub
    Partial Private Sub Onsuc_cod_ftgChanged()
    End Sub
    Partial Private Sub Onsuc_nomChanging(value As String)
    End Sub
    Partial Private Sub Onsuc_nomChanged()
    End Sub
    Partial Private Sub Onsuc_des_craChanging(value As String)
    End Sub
    Partial Private Sub Onsuc_des_craChanged()
    End Sub
    Partial Private Sub Onsuc_dirChanging(value As String)
    End Sub
    Partial Private Sub Onsuc_dirChanged()
    End Sub
    Partial Private Sub Onsuc_telChanging(value As String)
    End Sub
    Partial Private Sub Onsuc_telChanged()
    End Sub
    Partial Private Sub Onsuc_faxChanging(value As String)
    End Sub
    Partial Private Sub Onsuc_faxChanged()
    End Sub
    Partial Private Sub Onsuc_cod_regChanging(value As String)
    End Sub
    Partial Private Sub Onsuc_cod_regChanged()
    End Sub
    Partial Private Sub Onsuc_cod_locChanging(value As String)
    End Sub
    Partial Private Sub Onsuc_cod_locChanged()
    End Sub
    Partial Private Sub OnSUC_TIP_UNIChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnSUC_TIP_UNIChanged()
    End Sub
    Partial Private Sub OnSUC_TERR_ITOChanging(value As String)
    End Sub
    Partial Private Sub OnSUC_TERR_ITOChanged()
    End Sub
    Partial Private Sub OnSUC_DUGChanging(value As String)
    End Sub
    Partial Private Sub OnSUC_DUGChanged()
    End Sub
    Partial Private Sub Onsuc_dir_regChanging(value As String)
    End Sub
    Partial Private Sub Onsuc_dir_regChanged()
    End Sub
    Partial Private Sub Onsuc_area_opeChanging(value As String)
    End Sub
    Partial Private Sub Onsuc_area_opeChanged()
    End Sub
    Partial Private Sub Onsuc_sup_areaChanging(value As String)
    End Sub
    Partial Private Sub Onsuc_sup_areaChanged()
    End Sub
    Partial Private Sub Onsuc_ofi_negChanging(value As String)
    End Sub
    Partial Private Sub Onsuc_ofi_negChanged()
    End Sub
    Partial Private Sub OnSUC_FEC_CIEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnSUC_FEC_CIEChanged()
    End Sub
    Partial Private Sub Onsuc_par_estChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub Onsuc_par_estChanged()
    End Sub
    Partial Private Sub OnID_CIUChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnID_CIUChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		Me._cli_cls = New EntitySet(Of cli_cls)(AddressOf Me.attach_cli_cls, AddressOf Me.detach_cli_cls)
		Me._cxs_cls = New EntitySet(Of cxs_cls)(AddressOf Me.attach_cxs_cls, AddressOf Me.detach_cxs_cls)
		Me._deu_cls = New EntitySet(Of deu_cls)(AddressOf Me.attach_deu_cls, AddressOf Me.detach_deu_cls)
		Me._doc = New EntitySet(Of doc_cls)(AddressOf Me.attach_doc, AddressOf Me.detach_doc)
		Me._doc_cls = New EntitySet(Of doc_cls)(AddressOf Me.attach_doc_cls, AddressOf Me.detach_doc_cls)
		Me._dor = New EntitySet(Of dor_cls)(AddressOf Me.attach_dor, AddressOf Me.detach_dor)
		Me._dor_cls = New EntitySet(Of dor_cls)(AddressOf Me.attach_dor_cls, AddressOf Me.detach_dor_cls)
		Me._gto_cls = New EntitySet(Of gto_cls)(AddressOf Me.attach_gto_cls, AddressOf Me.detach_gto_cls)
		Me._nes_cls = New EntitySet(Of nes_cls)(AddressOf Me.attach_nes_cls, AddressOf Me.detach_nes_cls)
		Me._nnc_cls = New EntitySet(Of nnc_cls)(AddressOf Me.attach_nnc_cls, AddressOf Me.detach_nnc_cls)
		Me._ntr_cls = New EntitySet(Of ntr_cls)(AddressOf Me.attach_ntr_cls, AddressOf Me.detach_ntr_cls)
		Me._opn_cls = New EntitySet(Of opn_cls)(AddressOf Me.attach_opn_cls, AddressOf Me.detach_opn_cls)
		Me._pds_cls = New EntitySet(Of pds_cls)(AddressOf Me.attach_pds_cls, AddressOf Me.detach_pds_cls)
		Me._sxa_cls = New EntitySet(Of sxa_cls)(AddressOf Me.attach_sxa_cls, AddressOf Me.detach_sxa_cls)
		Me._zon_cls = New EntitySet(Of zon_cls)(AddressOf Me.attach_zon_cls, AddressOf Me.detach_zon_cls)
		Me._eje_cls = New EntitySet(Of eje_cls)(AddressOf Me.attach_eje_cls, AddressOf Me.detach_eje_cls)
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_id_suc", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property id_suc() As Integer
		Get
			Return Me._id_suc
		End Get
		Set
			If ((Me._id_suc = value)  _
						= false) Then
				Me.Onid_sucChanging(value)
				Me.SendPropertyChanging
				Me._id_suc = value
				Me.SendPropertyChanged("id_suc")
				Me.Onid_sucChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_suc_cod_ftg", DbType:="Char(4)")>  _
	Public Property suc_cod_ftg() As String
		Get
			Return Me._suc_cod_ftg
		End Get
		Set
			If (String.Equals(Me._suc_cod_ftg, value) = false) Then
				Me.Onsuc_cod_ftgChanging(value)
				Me.SendPropertyChanging
				Me._suc_cod_ftg = value
				Me.SendPropertyChanged("suc_cod_ftg")
				Me.Onsuc_cod_ftgChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_suc_nom", DbType:="VarChar(50)")>  _
	Public Property suc_nom() As String
		Get
			Return Me._suc_nom
		End Get
		Set
			If (String.Equals(Me._suc_nom, value) = false) Then
				Me.Onsuc_nomChanging(value)
				Me.SendPropertyChanging
				Me._suc_nom = value
				Me.SendPropertyChanged("suc_nom")
				Me.Onsuc_nomChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_suc_des_cra", DbType:="VarChar(50)")>  _
	Public Property suc_des_cra() As String
		Get
			Return Me._suc_des_cra
		End Get
		Set
			If (String.Equals(Me._suc_des_cra, value) = false) Then
				Me.Onsuc_des_craChanging(value)
				Me.SendPropertyChanging
				Me._suc_des_cra = value
				Me.SendPropertyChanged("suc_des_cra")
				Me.Onsuc_des_craChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_suc_dir", DbType:="VarChar(250)")>  _
	Public Property suc_dir() As String
		Get
			Return Me._suc_dir
		End Get
		Set
			If (String.Equals(Me._suc_dir, value) = false) Then
				Me.Onsuc_dirChanging(value)
				Me.SendPropertyChanging
				Me._suc_dir = value
				Me.SendPropertyChanged("suc_dir")
				Me.Onsuc_dirChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_suc_tel", DbType:="VarChar(20)")>  _
	Public Property suc_tel() As String
		Get
			Return Me._suc_tel
		End Get
		Set
			If (String.Equals(Me._suc_tel, value) = false) Then
				Me.Onsuc_telChanging(value)
				Me.SendPropertyChanging
				Me._suc_tel = value
				Me.SendPropertyChanged("suc_tel")
				Me.Onsuc_telChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_suc_fax", DbType:="VarChar(20)")>  _
	Public Property suc_fax() As String
		Get
			Return Me._suc_fax
		End Get
		Set
			If (String.Equals(Me._suc_fax, value) = false) Then
				Me.Onsuc_faxChanging(value)
				Me.SendPropertyChanging
				Me._suc_fax = value
				Me.SendPropertyChanged("suc_fax")
				Me.Onsuc_faxChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_suc_cod_reg", DbType:="Char(5)")>  _
	Public Property suc_cod_reg() As String
		Get
			Return Me._suc_cod_reg
		End Get
		Set
			If (String.Equals(Me._suc_cod_reg, value) = false) Then
				Me.Onsuc_cod_regChanging(value)
				Me.SendPropertyChanging
				Me._suc_cod_reg = value
				Me.SendPropertyChanged("suc_cod_reg")
				Me.Onsuc_cod_regChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_suc_cod_loc", DbType:="Char(6)")>  _
	Public Property suc_cod_loc() As String
		Get
			Return Me._suc_cod_loc
		End Get
		Set
			If (String.Equals(Me._suc_cod_loc, value) = false) Then
				Me.Onsuc_cod_locChanging(value)
				Me.SendPropertyChanging
				Me._suc_cod_loc = value
				Me.SendPropertyChanged("suc_cod_loc")
				Me.Onsuc_cod_locChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SUC_TIP_UNI", DbType:="Decimal(10,0)")>  _
	Public Property SUC_TIP_UNI() As System.Nullable(Of Decimal)
		Get
			Return Me._SUC_TIP_UNI
		End Get
		Set
			If (Me._SUC_TIP_UNI.Equals(value) = false) Then
				Me.OnSUC_TIP_UNIChanging(value)
				Me.SendPropertyChanging
				Me._SUC_TIP_UNI = value
				Me.SendPropertyChanged("SUC_TIP_UNI")
				Me.OnSUC_TIP_UNIChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SUC_TERR_ITO", DbType:="Char(4)")>  _
	Public Property SUC_TERR_ITO() As String
		Get
			Return Me._SUC_TERR_ITO
		End Get
		Set
			If (String.Equals(Me._SUC_TERR_ITO, value) = false) Then
				Me.OnSUC_TERR_ITOChanging(value)
				Me.SendPropertyChanging
				Me._SUC_TERR_ITO = value
				Me.SendPropertyChanged("SUC_TERR_ITO")
				Me.OnSUC_TERR_ITOChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SUC_DUG", DbType:="Char(4)")>  _
	Public Property SUC_DUG() As String
		Get
			Return Me._SUC_DUG
		End Get
		Set
			If (String.Equals(Me._SUC_DUG, value) = false) Then
				Me.OnSUC_DUGChanging(value)
				Me.SendPropertyChanging
				Me._SUC_DUG = value
				Me.SendPropertyChanged("SUC_DUG")
				Me.OnSUC_DUGChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_suc_dir_reg", DbType:="Char(4)")>  _
	Public Property suc_dir_reg() As String
		Get
			Return Me._suc_dir_reg
		End Get
		Set
			If (String.Equals(Me._suc_dir_reg, value) = false) Then
				Me.Onsuc_dir_regChanging(value)
				Me.SendPropertyChanging
				Me._suc_dir_reg = value
				Me.SendPropertyChanged("suc_dir_reg")
				Me.Onsuc_dir_regChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_suc_area_ope", DbType:="Char(4)")>  _
	Public Property suc_area_ope() As String
		Get
			Return Me._suc_area_ope
		End Get
		Set
			If (String.Equals(Me._suc_area_ope, value) = false) Then
				Me.Onsuc_area_opeChanging(value)
				Me.SendPropertyChanging
				Me._suc_area_ope = value
				Me.SendPropertyChanged("suc_area_ope")
				Me.Onsuc_area_opeChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_suc_sup_area", DbType:="Char(4)")>  _
	Public Property suc_sup_area() As String
		Get
			Return Me._suc_sup_area
		End Get
		Set
			If (String.Equals(Me._suc_sup_area, value) = false) Then
				Me.Onsuc_sup_areaChanging(value)
				Me.SendPropertyChanging
				Me._suc_sup_area = value
				Me.SendPropertyChanged("suc_sup_area")
				Me.Onsuc_sup_areaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_suc_ofi_neg", DbType:="Char(4)")>  _
	Public Property suc_ofi_neg() As String
		Get
			Return Me._suc_ofi_neg
		End Get
		Set
			If (String.Equals(Me._suc_ofi_neg, value) = false) Then
				Me.Onsuc_ofi_negChanging(value)
				Me.SendPropertyChanging
				Me._suc_ofi_neg = value
				Me.SendPropertyChanged("suc_ofi_neg")
				Me.Onsuc_ofi_negChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SUC_FEC_CIE", DbType:="DateTime")>  _
	Public Property SUC_FEC_CIE() As System.Nullable(Of Date)
		Get
			Return Me._SUC_FEC_CIE
		End Get
		Set
			If (Me._SUC_FEC_CIE.Equals(value) = false) Then
				Me.OnSUC_FEC_CIEChanging(value)
				Me.SendPropertyChanging
				Me._SUC_FEC_CIE = value
				Me.SendPropertyChanged("SUC_FEC_CIE")
				Me.OnSUC_FEC_CIEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_suc_par_est", DbType:="Int")>  _
	Public Property suc_par_est() As System.Nullable(Of Integer)
		Get
			Return Me._suc_par_est
		End Get
		Set
			If (Me._suc_par_est.Equals(value) = false) Then
				Me.Onsuc_par_estChanging(value)
				Me.SendPropertyChanging
				Me._suc_par_est = value
				Me.SendPropertyChanged("suc_par_est")
				Me.Onsuc_par_estChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ID_CIU", DbType:="Int")>  _
	Public Property ID_CIU() As System.Nullable(Of Integer)
		Get
			Return Me._ID_CIU
		End Get
		Set
			If (Me._ID_CIU.Equals(value) = false) Then
				Me.OnID_CIUChanging(value)
				Me.SendPropertyChanging
				Me._ID_CIU = value
				Me.SendPropertyChanged("ID_CIU")
				Me.OnID_CIUChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="suc_cls_cli_cls", Storage:="_cli_cls", ThisKey:="id_suc", OtherKey:="id_suc")>  _
	Public Property cli_cls() As EntitySet(Of cli_cls)
		Get
			Return Me._cli_cls
		End Get
		Set
			Me._cli_cls.Assign(value)
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="suc_cls_cxs_cls", Storage:="_cxs_cls", ThisKey:="id_suc", OtherKey:="id_suc")>  _
	Public Property cxs_cls() As EntitySet(Of cxs_cls)
		Get
			Return Me._cxs_cls
		End Get
		Set
			Me._cxs_cls.Assign(value)
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="suc_cls_deu_cls", Storage:="_deu_cls", ThisKey:="id_suc", OtherKey:="id_suc")>  _
	Public Property deu_cls() As EntitySet(Of deu_cls)
		Get
			Return Me._deu_cls
		End Get
		Set
			Me._deu_cls.Assign(value)
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="suc_cls_doc_cls", Storage:="_doc", ThisKey:="id_suc", OtherKey:="id_suc_cbz")>  _
	Public Property doc() As EntitySet(Of doc_cls)
		Get
			Return Me._doc
		End Get
		Set
			Me._doc.Assign(value)
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="suc_cls_doc_cls1", Storage:="_doc_cls", ThisKey:="id_suc", OtherKey:="id_suc_rcd")>  _
	Public Property doc_cls() As EntitySet(Of doc_cls)
		Get
			Return Me._doc_cls
		End Get
		Set
			Me._doc_cls.Assign(value)
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="suc_cls_dor_cls", Storage:="_dor", ThisKey:="id_suc", OtherKey:="id_suc")>  _
	Public Property dor() As EntitySet(Of dor_cls)
		Get
			Return Me._dor
		End Get
		Set
			Me._dor.Assign(value)
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="suc_cls_dor_cls1", Storage:="_dor_cls", ThisKey:="id_suc", OtherKey:="id_suc_orn")>  _
	Public Property dor_cls() As EntitySet(Of dor_cls)
		Get
			Return Me._dor_cls
		End Get
		Set
			Me._dor_cls.Assign(value)
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="suc_cls_gto_cls", Storage:="_gto_cls", ThisKey:="id_suc", OtherKey:="id_suc")>  _
	Public Property gto_cls() As EntitySet(Of gto_cls)
		Get
			Return Me._gto_cls
		End Get
		Set
			Me._gto_cls.Assign(value)
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="suc_cls_nes_cls", Storage:="_nes_cls", ThisKey:="id_suc", OtherKey:="id_suc")>  _
	Public Property nes_cls() As EntitySet(Of nes_cls)
		Get
			Return Me._nes_cls
		End Get
		Set
			Me._nes_cls.Assign(value)
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="suc_cls_nnc_cls", Storage:="_nnc_cls", ThisKey:="id_suc", OtherKey:="id_suc")>  _
	Public Property nnc_cls() As EntitySet(Of nnc_cls)
		Get
			Return Me._nnc_cls
		End Get
		Set
			Me._nnc_cls.Assign(value)
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="suc_cls_ntr_cls", Storage:="_ntr_cls", ThisKey:="id_suc", OtherKey:="id_suc")>  _
	Public Property ntr_cls() As EntitySet(Of ntr_cls)
		Get
			Return Me._ntr_cls
		End Get
		Set
			Me._ntr_cls.Assign(value)
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="suc_cls_opn_cls", Storage:="_opn_cls", ThisKey:="id_suc", OtherKey:="id_suc")>  _
	Public Property opn_cls() As EntitySet(Of opn_cls)
		Get
			Return Me._opn_cls
		End Get
		Set
			Me._opn_cls.Assign(value)
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="suc_cls_pds_cls", Storage:="_pds_cls", ThisKey:="id_suc", OtherKey:="id_suc")>  _
	Public Property pds_cls() As EntitySet(Of pds_cls)
		Get
			Return Me._pds_cls
		End Get
		Set
			Me._pds_cls.Assign(value)
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="suc_cls_sxa_cls", Storage:="_sxa_cls", ThisKey:="id_suc", OtherKey:="id_suc")>  _
	Public Property sxa_cls() As EntitySet(Of sxa_cls)
		Get
			Return Me._sxa_cls
		End Get
		Set
			Me._sxa_cls.Assign(value)
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="suc_cls_zon_cls", Storage:="_zon_cls", ThisKey:="id_suc", OtherKey:="id_suc")>  _
	Public Property zon_cls() As EntitySet(Of zon_cls)
		Get
			Return Me._zon_cls
		End Get
		Set
			Me._zon_cls.Assign(value)
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="suc_cls_eje_cls", Storage:="_eje_cls", ThisKey:="id_suc", OtherKey:="id_suc")>  _
	Public Property eje_cls() As EntitySet(Of eje_cls)
		Get
			Return Me._eje_cls
		End Get
		Set
			Me._eje_cls.Assign(value)
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
	
	Private Sub attach_cli_cls(ByVal entity As cli_cls)
		Me.SendPropertyChanging
		entity.suc_cls = Me
	End Sub
	
	Private Sub detach_cli_cls(ByVal entity As cli_cls)
		Me.SendPropertyChanging
		entity.suc_cls = Nothing
	End Sub
	
	Private Sub attach_cxs_cls(ByVal entity As cxs_cls)
		Me.SendPropertyChanging
		entity.suc_cls = Me
	End Sub
	
	Private Sub detach_cxs_cls(ByVal entity As cxs_cls)
		Me.SendPropertyChanging
		entity.suc_cls = Nothing
	End Sub
	
	Private Sub attach_deu_cls(ByVal entity As deu_cls)
		Me.SendPropertyChanging
		entity.suc_cls = Me
	End Sub
	
	Private Sub detach_deu_cls(ByVal entity As deu_cls)
		Me.SendPropertyChanging
		entity.suc_cls = Nothing
	End Sub
	
	Private Sub attach_doc(ByVal entity As doc_cls)
		Me.SendPropertyChanging
		entity.suc = Me
	End Sub
	
	Private Sub detach_doc(ByVal entity As doc_cls)
		Me.SendPropertyChanging
		entity.suc = Nothing
	End Sub
	
	Private Sub attach_doc_cls(ByVal entity As doc_cls)
		Me.SendPropertyChanging
		entity.suc_cls = Me
	End Sub
	
	Private Sub detach_doc_cls(ByVal entity As doc_cls)
		Me.SendPropertyChanging
		entity.suc_cls = Nothing
	End Sub
	
	Private Sub attach_dor(ByVal entity As dor_cls)
		Me.SendPropertyChanging
		entity.suc = Me
	End Sub
	
	Private Sub detach_dor(ByVal entity As dor_cls)
		Me.SendPropertyChanging
		entity.suc = Nothing
	End Sub
	
	Private Sub attach_dor_cls(ByVal entity As dor_cls)
		Me.SendPropertyChanging
		entity.suc_cls = Me
	End Sub
	
	Private Sub detach_dor_cls(ByVal entity As dor_cls)
		Me.SendPropertyChanging
		entity.suc_cls = Nothing
	End Sub
	
	Private Sub attach_gto_cls(ByVal entity As gto_cls)
		Me.SendPropertyChanging
		entity.suc_cls = Me
	End Sub
	
	Private Sub detach_gto_cls(ByVal entity As gto_cls)
		Me.SendPropertyChanging
		entity.suc_cls = Nothing
	End Sub
	
	Private Sub attach_nes_cls(ByVal entity As nes_cls)
		Me.SendPropertyChanging
		entity.suc_cls = Me
	End Sub
	
	Private Sub detach_nes_cls(ByVal entity As nes_cls)
		Me.SendPropertyChanging
		entity.suc_cls = Nothing
	End Sub
	
	Private Sub attach_nnc_cls(ByVal entity As nnc_cls)
		Me.SendPropertyChanging
		entity.suc_cls = Me
	End Sub
	
	Private Sub detach_nnc_cls(ByVal entity As nnc_cls)
		Me.SendPropertyChanging
		entity.suc_cls = Nothing
	End Sub
	
	Private Sub attach_ntr_cls(ByVal entity As ntr_cls)
		Me.SendPropertyChanging
		entity.suc_cls = Me
	End Sub
	
	Private Sub detach_ntr_cls(ByVal entity As ntr_cls)
		Me.SendPropertyChanging
		entity.suc_cls = Nothing
	End Sub
	
	Private Sub attach_opn_cls(ByVal entity As opn_cls)
		Me.SendPropertyChanging
		entity.suc_cls = Me
	End Sub
	
	Private Sub detach_opn_cls(ByVal entity As opn_cls)
		Me.SendPropertyChanging
		entity.suc_cls = Nothing
	End Sub
	
	Private Sub attach_pds_cls(ByVal entity As pds_cls)
		Me.SendPropertyChanging
		entity.suc_cls = Me
	End Sub
	
	Private Sub detach_pds_cls(ByVal entity As pds_cls)
		Me.SendPropertyChanging
		entity.suc_cls = Nothing
	End Sub
	
	Private Sub attach_sxa_cls(ByVal entity As sxa_cls)
		Me.SendPropertyChanging
		entity.suc_cls = Me
	End Sub
	
	Private Sub detach_sxa_cls(ByVal entity As sxa_cls)
		Me.SendPropertyChanging
		entity.suc_cls = Nothing
	End Sub
	
	Private Sub attach_zon_cls(ByVal entity As zon_cls)
		Me.SendPropertyChanging
		entity.suc_cls = Me
	End Sub
	
	Private Sub detach_zon_cls(ByVal entity As zon_cls)
		Me.SendPropertyChanging
		entity.suc_cls = Nothing
	End Sub
	
	Private Sub attach_eje_cls(ByVal entity As eje_cls)
		Me.SendPropertyChanging
		entity.suc_cls = Me
	End Sub
	
	Private Sub detach_eje_cls(ByVal entity As eje_cls)
		Me.SendPropertyChanging
		entity.suc_cls = Nothing
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.suc_aux")>  _
Partial Public Class suc_aux_cls
	
	Private _suc_cod_ftg As String
	
	Private _suc_tip_uni As System.Nullable(Of Decimal)
	
	Private _suc_nom_uni As String
	
	Private _suc_dug As System.Nullable(Of Decimal)
	
	Private _suc_terr_ito As System.Nullable(Of Decimal)
	
	Private _suc_dir_reg As System.Nullable(Of Decimal)
	
	Private _suc_area_ope As System.Nullable(Of Decimal)
	
	Private _suc_sup_area As System.Nullable(Of Decimal)
	
	Private _suc_par_est As System.Nullable(Of Integer)
	
	Private _suc_ofi_neg As String
	
	Private _SUC_FEC_CIE As System.Nullable(Of Date)
	
	Private _suc_dir As String
	
	Private _suc_tel As String
	
	Public Sub New()
		MyBase.New
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_suc_cod_ftg", DbType:="Char(4)")>  _
	Public Property suc_cod_ftg() As String
		Get
			Return Me._suc_cod_ftg
		End Get
		Set
			If (String.Equals(Me._suc_cod_ftg, value) = false) Then
				Me._suc_cod_ftg = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_suc_tip_uni", DbType:="Decimal(10,0)")>  _
	Public Property suc_tip_uni() As System.Nullable(Of Decimal)
		Get
			Return Me._suc_tip_uni
		End Get
		Set
			If (Me._suc_tip_uni.Equals(value) = false) Then
				Me._suc_tip_uni = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_suc_nom_uni", DbType:="VarChar(200)")>  _
	Public Property suc_nom_uni() As String
		Get
			Return Me._suc_nom_uni
		End Get
		Set
			If (String.Equals(Me._suc_nom_uni, value) = false) Then
				Me._suc_nom_uni = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_suc_dug", DbType:="Decimal(10,0)")>  _
	Public Property suc_dug() As System.Nullable(Of Decimal)
		Get
			Return Me._suc_dug
		End Get
		Set
			If (Me._suc_dug.Equals(value) = false) Then
				Me._suc_dug = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_suc_terr_ito", DbType:="Decimal(10,0)")>  _
	Public Property suc_terr_ito() As System.Nullable(Of Decimal)
		Get
			Return Me._suc_terr_ito
		End Get
		Set
			If (Me._suc_terr_ito.Equals(value) = false) Then
				Me._suc_terr_ito = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_suc_dir_reg", DbType:="Decimal(10,0)")>  _
	Public Property suc_dir_reg() As System.Nullable(Of Decimal)
		Get
			Return Me._suc_dir_reg
		End Get
		Set
			If (Me._suc_dir_reg.Equals(value) = false) Then
				Me._suc_dir_reg = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_suc_area_ope", DbType:="Decimal(10,0)")>  _
	Public Property suc_area_ope() As System.Nullable(Of Decimal)
		Get
			Return Me._suc_area_ope
		End Get
		Set
			If (Me._suc_area_ope.Equals(value) = false) Then
				Me._suc_area_ope = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_suc_sup_area", DbType:="Decimal(10,0)")>  _
	Public Property suc_sup_area() As System.Nullable(Of Decimal)
		Get
			Return Me._suc_sup_area
		End Get
		Set
			If (Me._suc_sup_area.Equals(value) = false) Then
				Me._suc_sup_area = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_suc_par_est", DbType:="Int")>  _
	Public Property suc_par_est() As System.Nullable(Of Integer)
		Get
			Return Me._suc_par_est
		End Get
		Set
			If (Me._suc_par_est.Equals(value) = false) Then
				Me._suc_par_est = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_suc_ofi_neg", DbType:="Char(4)")>  _
	Public Property suc_ofi_neg() As String
		Get
			Return Me._suc_ofi_neg
		End Get
		Set
			If (String.Equals(Me._suc_ofi_neg, value) = false) Then
				Me._suc_ofi_neg = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SUC_FEC_CIE", DbType:="DateTime")>  _
	Public Property SUC_FEC_CIE() As System.Nullable(Of Date)
		Get
			Return Me._SUC_FEC_CIE
		End Get
		Set
			If (Me._SUC_FEC_CIE.Equals(value) = false) Then
				Me._SUC_FEC_CIE = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_suc_dir", DbType:="VarChar(200)")>  _
	Public Property suc_dir() As String
		Get
			Return Me._suc_dir
		End Get
		Set
			If (String.Equals(Me._suc_dir, value) = false) Then
				Me._suc_dir = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_suc_tel", DbType:="VarChar(20)")>  _
	Public Property suc_tel() As String
		Get
			Return Me._suc_tel
		End Get
		Set
			If (String.Equals(Me._suc_tel, value) = false) Then
				Me._suc_tel = value
			End If
		End Set
	End Property
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.Svc_Inf")>  _
Partial Public Class Svc_Inf_cls
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _id_inf As Integer
	
	Private _id_cla As System.Nullable(Of Integer)
	
	Private _inf_nom As String
	
	Private _inf_path As String
	
    #Region "Definiciones de métodos de extensibilidad"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub Onid_infChanging(value As Integer)
    End Sub
    Partial Private Sub Onid_infChanged()
    End Sub
    Partial Private Sub Onid_claChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub Onid_claChanged()
    End Sub
    Partial Private Sub Oninf_nomChanging(value As String)
    End Sub
    Partial Private Sub Oninf_nomChanged()
    End Sub
    Partial Private Sub Oninf_pathChanging(value As String)
    End Sub
    Partial Private Sub Oninf_pathChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_id_inf", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property id_inf() As Integer
		Get
			Return Me._id_inf
		End Get
		Set
			If ((Me._id_inf = value)  _
						= false) Then
				Me.Onid_infChanging(value)
				Me.SendPropertyChanging
				Me._id_inf = value
				Me.SendPropertyChanged("id_inf")
				Me.Onid_infChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_id_cla", DbType:="Int")>  _
	Public Property id_cla() As System.Nullable(Of Integer)
		Get
			Return Me._id_cla
		End Get
		Set
			If (Me._id_cla.Equals(value) = false) Then
				Me.Onid_claChanging(value)
				Me.SendPropertyChanging
				Me._id_cla = value
				Me.SendPropertyChanged("id_cla")
				Me.Onid_claChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_inf_nom", DbType:="VarChar(50)")>  _
	Public Property inf_nom() As String
		Get
			Return Me._inf_nom
		End Get
		Set
			If (String.Equals(Me._inf_nom, value) = false) Then
				Me.Oninf_nomChanging(value)
				Me.SendPropertyChanging
				Me._inf_nom = value
				Me.SendPropertyChanged("inf_nom")
				Me.Oninf_nomChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_inf_path", DbType:="VarChar(150)")>  _
	Public Property inf_path() As String
		Get
			Return Me._inf_path
		End Get
		Set
			If (String.Equals(Me._inf_path, value) = false) Then
				Me.Oninf_pathChanging(value)
				Me.SendPropertyChanging
				Me._inf_path = value
				Me.SendPropertyChanged("inf_path")
				Me.Oninf_pathChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.sxa")>  _
Partial Public Class sxa_cls
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _id_sxa As Integer
	
	Private _id_cxs As System.Nullable(Of Integer)
	
	Private _id_suc As System.Nullable(Of Integer)
	
	Private _sxa_est As System.Nullable(Of Char)
	
	Private _cxs_cls As EntityRef(Of cxs_cls)
	
	Private _suc_cls As EntityRef(Of suc_cls)
	
    #Region "Definiciones de métodos de extensibilidad"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub Onid_sxaChanging(value As Integer)
    End Sub
    Partial Private Sub Onid_sxaChanged()
    End Sub
    Partial Private Sub Onid_cxsChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub Onid_cxsChanged()
    End Sub
    Partial Private Sub Onid_sucChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub Onid_sucChanged()
    End Sub
    Partial Private Sub Onsxa_estChanging(value As System.Nullable(Of Char))
    End Sub
    Partial Private Sub Onsxa_estChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		Me._cxs_cls = CType(Nothing, EntityRef(Of cxs_cls))
		Me._suc_cls = CType(Nothing, EntityRef(Of suc_cls))
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_id_sxa", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property id_sxa() As Integer
		Get
			Return Me._id_sxa
		End Get
		Set
			If ((Me._id_sxa = value)  _
						= false) Then
				Me.Onid_sxaChanging(value)
				Me.SendPropertyChanging
				Me._id_sxa = value
				Me.SendPropertyChanged("id_sxa")
				Me.Onid_sxaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_id_cxs", DbType:="Int")>  _
	Public Property id_cxs() As System.Nullable(Of Integer)
		Get
			Return Me._id_cxs
		End Get
		Set
			If (Me._id_cxs.Equals(value) = false) Then
				If Me._cxs_cls.HasLoadedOrAssignedValue Then
					Throw New System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException()
				End If
				Me.Onid_cxsChanging(value)
				Me.SendPropertyChanging
				Me._id_cxs = value
				Me.SendPropertyChanged("id_cxs")
				Me.Onid_cxsChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_id_suc", DbType:="Int")>  _
	Public Property id_suc() As System.Nullable(Of Integer)
		Get
			Return Me._id_suc
		End Get
		Set
			If (Me._id_suc.Equals(value) = false) Then
				If Me._suc_cls.HasLoadedOrAssignedValue Then
					Throw New System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException()
				End If
				Me.Onid_sucChanging(value)
				Me.SendPropertyChanging
				Me._id_suc = value
				Me.SendPropertyChanged("id_suc")
				Me.Onid_sucChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_sxa_est", DbType:="Char(1)")>  _
	Public Property sxa_est() As System.Nullable(Of Char)
		Get
			Return Me._sxa_est
		End Get
		Set
			If (Me._sxa_est.Equals(value) = false) Then
				Me.Onsxa_estChanging(value)
				Me.SendPropertyChanging
				Me._sxa_est = value
				Me.SendPropertyChanged("sxa_est")
				Me.Onsxa_estChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="cxs_cls_sxa_cls", Storage:="_cxs_cls", ThisKey:="id_cxs", OtherKey:="id_cxs", IsForeignKey:=true)>  _
	Public Property cxs_cls() As cxs_cls
		Get
			Return Me._cxs_cls.Entity
		End Get
		Set
			Dim previousValue As cxs_cls = Me._cxs_cls.Entity
			If ((Object.Equals(previousValue, value) = false)  _
						OrElse (Me._cxs_cls.HasLoadedOrAssignedValue = false)) Then
				Me.SendPropertyChanging
				If ((previousValue Is Nothing)  _
							= false) Then
					Me._cxs_cls.Entity = Nothing
					previousValue.sxa_cls.Remove(Me)
				End If
				Me._cxs_cls.Entity = value
				If ((value Is Nothing)  _
							= false) Then
					value.sxa_cls.Add(Me)
					Me._id_cxs = value.id_cxs
				Else
					Me._id_cxs = CType(Nothing, Nullable(Of Integer))
				End If
				Me.SendPropertyChanged("cxs_cls")
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="suc_cls_sxa_cls", Storage:="_suc_cls", ThisKey:="id_suc", OtherKey:="id_suc", IsForeignKey:=true)>  _
	Public Property suc_cls() As suc_cls
		Get
			Return Me._suc_cls.Entity
		End Get
		Set
			Dim previousValue As suc_cls = Me._suc_cls.Entity
			If ((Object.Equals(previousValue, value) = false)  _
						OrElse (Me._suc_cls.HasLoadedOrAssignedValue = false)) Then
				Me.SendPropertyChanging
				If ((previousValue Is Nothing)  _
							= false) Then
					Me._suc_cls.Entity = Nothing
					previousValue.sxa_cls.Remove(Me)
				End If
				Me._suc_cls.Entity = value
				If ((value Is Nothing)  _
							= false) Then
					value.sxa_cls.Add(Me)
					Me._id_suc = value.id_suc
				Else
					Me._id_suc = CType(Nothing, Nullable(Of Integer))
				End If
				Me.SendPropertyChanged("suc_cls")
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.tcf_temp")>  _
Partial Public Class tcf_temp_cls
	
	Private _cli_idc As String
	
	Private _cli_rso As String
	
	Private _opo_com_tot As System.Nullable(Of Decimal)
	
	Private _opo_iva_com As System.Nullable(Of Decimal)
	
	Private _tot_neto As System.Nullable(Of Decimal)
	
	Private _mto_iva As System.Nullable(Of Decimal)
	
	Private _id_eje_cod_eje As System.Nullable(Of Integer)
	
	Private _opo_fct As System.Nullable(Of Char)
	
	Private _tip_cta As System.Nullable(Of Integer)
	
	Private _id_p_0023 As System.Nullable(Of Integer)
	
	Public Sub New()
		MyBase.New
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_cli_idc", DbType:="Char(12) NOT NULL", CanBeNull:=false)>  _
	Public Property cli_idc() As String
		Get
			Return Me._cli_idc
		End Get
		Set
			If (String.Equals(Me._cli_idc, value) = false) Then
				Me._cli_idc = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_cli_rso", DbType:="VarChar(50)")>  _
	Public Property cli_rso() As String
		Get
			Return Me._cli_rso
		End Get
		Set
			If (String.Equals(Me._cli_rso, value) = false) Then
				Me._cli_rso = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_opo_com_tot", DbType:="Money")>  _
	Public Property opo_com_tot() As System.Nullable(Of Decimal)
		Get
			Return Me._opo_com_tot
		End Get
		Set
			If (Me._opo_com_tot.Equals(value) = false) Then
				Me._opo_com_tot = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_opo_iva_com", DbType:="Money")>  _
	Public Property opo_iva_com() As System.Nullable(Of Decimal)
		Get
			Return Me._opo_iva_com
		End Get
		Set
			If (Me._opo_iva_com.Equals(value) = false) Then
				Me._opo_iva_com = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_tot_neto", DbType:="Money")>  _
	Public Property tot_neto() As System.Nullable(Of Decimal)
		Get
			Return Me._tot_neto
		End Get
		Set
			If (Me._tot_neto.Equals(value) = false) Then
				Me._tot_neto = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_mto_iva", DbType:="Money")>  _
	Public Property mto_iva() As System.Nullable(Of Decimal)
		Get
			Return Me._mto_iva
		End Get
		Set
			If (Me._mto_iva.Equals(value) = false) Then
				Me._mto_iva = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_id_eje_cod_eje", DbType:="Int")>  _
	Public Property id_eje_cod_eje() As System.Nullable(Of Integer)
		Get
			Return Me._id_eje_cod_eje
		End Get
		Set
			If (Me._id_eje_cod_eje.Equals(value) = false) Then
				Me._id_eje_cod_eje = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_opo_fct", DbType:="Char(1)")>  _
	Public Property opo_fct() As System.Nullable(Of Char)
		Get
			Return Me._opo_fct
		End Get
		Set
			If (Me._opo_fct.Equals(value) = false) Then
				Me._opo_fct = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_tip_cta", DbType:="Int")>  _
	Public Property tip_cta() As System.Nullable(Of Integer)
		Get
			Return Me._tip_cta
		End Get
		Set
			If (Me._tip_cta.Equals(value) = false) Then
				Me._tip_cta = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_id_p_0023", DbType:="Int")>  _
	Public Property id_p_0023() As System.Nullable(Of Integer)
		Get
			Return Me._id_p_0023
		End Get
		Set
			If (Me._id_p_0023.Equals(value) = false) Then
				Me._id_p_0023 = value
			End If
		End Set
	End Property
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.temp01")>  _
Partial Public Class temp01_cls
	
	Private _cli_idc As String
	
	Private _cli_rso As String
	
	Private _cli_ape_ptn As String
	
	Private _cli_ape_mtn As String
	
	Private _cli_dig_ito As System.Nullable(Of Char)
	
	Private _mto_pgr As System.Nullable(Of Decimal)
	
	Private _mto_ope As System.Nullable(Of Decimal)
	
	Public Sub New()
		MyBase.New
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_cli_idc", DbType:="Char(12) NOT NULL", CanBeNull:=false)>  _
	Public Property cli_idc() As String
		Get
			Return Me._cli_idc
		End Get
		Set
			If (String.Equals(Me._cli_idc, value) = false) Then
				Me._cli_idc = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_cli_rso", DbType:="VarChar(80)")>  _
	Public Property cli_rso() As String
		Get
			Return Me._cli_rso
		End Get
		Set
			If (String.Equals(Me._cli_rso, value) = false) Then
				Me._cli_rso = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_cli_ape_ptn", DbType:="Char(15)")>  _
	Public Property cli_ape_ptn() As String
		Get
			Return Me._cli_ape_ptn
		End Get
		Set
			If (String.Equals(Me._cli_ape_ptn, value) = false) Then
				Me._cli_ape_ptn = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_cli_ape_mtn", DbType:="Char(15)")>  _
	Public Property cli_ape_mtn() As String
		Get
			Return Me._cli_ape_mtn
		End Get
		Set
			If (String.Equals(Me._cli_ape_mtn, value) = false) Then
				Me._cli_ape_mtn = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_cli_dig_ito", DbType:="Char(1)")>  _
	Public Property cli_dig_ito() As System.Nullable(Of Char)
		Get
			Return Me._cli_dig_ito
		End Get
		Set
			If (Me._cli_dig_ito.Equals(value) = false) Then
				Me._cli_dig_ito = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_mto_pgr", DbType:="Money")>  _
	Public Property mto_pgr() As System.Nullable(Of Decimal)
		Get
			Return Me._mto_pgr
		End Get
		Set
			If (Me._mto_pgr.Equals(value) = false) Then
				Me._mto_pgr = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_mto_ope", DbType:="Money")>  _
	Public Property mto_ope() As System.Nullable(Of Decimal)
		Get
			Return Me._mto_ope
		End Get
		Set
			If (Me._mto_ope.Equals(value) = false) Then
				Me._mto_ope = value
			End If
		End Set
	End Property
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.tim")>  _
Partial Public Class tim_cls
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _id_tim As Integer
	
	Private _tim_fec As Date
	
	Private _tim_val_vis As System.Nullable(Of Decimal)
	
	Private _tim_val_pla As System.Nullable(Of Decimal)
	
	Private _tim_est As String
	
    #Region "Definiciones de métodos de extensibilidad"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub Onid_timChanging(value As Integer)
    End Sub
    Partial Private Sub Onid_timChanged()
    End Sub
    Partial Private Sub Ontim_fecChanging(value As Date)
    End Sub
    Partial Private Sub Ontim_fecChanged()
    End Sub
    Partial Private Sub Ontim_val_visChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub Ontim_val_visChanged()
    End Sub
    Partial Private Sub Ontim_val_plaChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub Ontim_val_plaChanged()
    End Sub
    Partial Private Sub Ontim_estChanging(value As String)
    End Sub
    Partial Private Sub Ontim_estChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_id_tim", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property id_tim() As Integer
		Get
			Return Me._id_tim
		End Get
		Set
			If ((Me._id_tim = value)  _
						= false) Then
				Me.Onid_timChanging(value)
				Me.SendPropertyChanging
				Me._id_tim = value
				Me.SendPropertyChanged("id_tim")
				Me.Onid_timChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_tim_fec", DbType:="DateTime NOT NULL")>  _
	Public Property tim_fec() As Date
		Get
			Return Me._tim_fec
		End Get
		Set
			If ((Me._tim_fec = value)  _
						= false) Then
				Me.Ontim_fecChanging(value)
				Me.SendPropertyChanging
				Me._tim_fec = value
				Me.SendPropertyChanged("tim_fec")
				Me.Ontim_fecChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_tim_val_vis", DbType:="Decimal(7,4)")>  _
	Public Property tim_val_vis() As System.Nullable(Of Decimal)
		Get
			Return Me._tim_val_vis
		End Get
		Set
			If (Me._tim_val_vis.Equals(value) = false) Then
				Me.Ontim_val_visChanging(value)
				Me.SendPropertyChanging
				Me._tim_val_vis = value
				Me.SendPropertyChanged("tim_val_vis")
				Me.Ontim_val_visChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_tim_val_pla", DbType:="Decimal(7,4)")>  _
	Public Property tim_val_pla() As System.Nullable(Of Decimal)
		Get
			Return Me._tim_val_pla
		End Get
		Set
			If (Me._tim_val_pla.Equals(value) = false) Then
				Me.Ontim_val_plaChanging(value)
				Me.SendPropertyChanging
				Me._tim_val_pla = value
				Me.SendPropertyChanged("tim_val_pla")
				Me.Ontim_val_plaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_tim_est", DbType:="VarChar(1)")>  _
	Public Property tim_est() As String
		Get
			Return Me._tim_est
		End Get
		Set
			If (String.Equals(Me._tim_est, value) = false) Then
				Me.Ontim_estChanging(value)
				Me.SendPropertyChanging
				Me._tim_est = value
				Me.SendPropertyChanged("tim_est")
				Me.Ontim_estChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.typ")>  _
Partial Public Class typ_cls
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _id_typ As Integer
	
	Private _id_P_0023 As Integer
	
	Private _typ_fec As Date
	
	Private _typ_mto As System.Nullable(Of Decimal)
	
	Private _typ_dde As System.Nullable(Of Integer)
	
	Private _typ_hta As System.Nullable(Of Integer)
	
	Private _typ_des As String
	
	Private _typ_est As String
	
	Private _typ_spread As System.Nullable(Of Decimal)
	
	Private _P_0023_cls As EntityRef(Of P_0023_cls)
	
    #Region "Definiciones de métodos de extensibilidad"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub Onid_typChanging(value As Integer)
    End Sub
    Partial Private Sub Onid_typChanged()
    End Sub
    Partial Private Sub Onid_P_0023Changing(value As Integer)
    End Sub
    Partial Private Sub Onid_P_0023Changed()
    End Sub
    Partial Private Sub Ontyp_fecChanging(value As Date)
    End Sub
    Partial Private Sub Ontyp_fecChanged()
    End Sub
    Partial Private Sub Ontyp_mtoChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub Ontyp_mtoChanged()
    End Sub
    Partial Private Sub Ontyp_ddeChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub Ontyp_ddeChanged()
    End Sub
    Partial Private Sub Ontyp_htaChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub Ontyp_htaChanged()
    End Sub
    Partial Private Sub Ontyp_desChanging(value As String)
    End Sub
    Partial Private Sub Ontyp_desChanged()
    End Sub
    Partial Private Sub Ontyp_estChanging(value As String)
    End Sub
    Partial Private Sub Ontyp_estChanged()
    End Sub
    Partial Private Sub Ontyp_spreadChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub Ontyp_spreadChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		Me._P_0023_cls = CType(Nothing, EntityRef(Of P_0023_cls))
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_id_typ", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property id_typ() As Integer
		Get
			Return Me._id_typ
		End Get
		Set
			If ((Me._id_typ = value)  _
						= false) Then
				Me.Onid_typChanging(value)
				Me.SendPropertyChanging
				Me._id_typ = value
				Me.SendPropertyChanged("id_typ")
				Me.Onid_typChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_id_P_0023", DbType:="Int NOT NULL")>  _
	Public Property id_P_0023() As Integer
		Get
			Return Me._id_P_0023
		End Get
		Set
			If ((Me._id_P_0023 = value)  _
						= false) Then
				If Me._P_0023_cls.HasLoadedOrAssignedValue Then
					Throw New System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException()
				End If
				Me.Onid_P_0023Changing(value)
				Me.SendPropertyChanging
				Me._id_P_0023 = value
				Me.SendPropertyChanged("id_P_0023")
				Me.Onid_P_0023Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_typ_fec", DbType:="DateTime NOT NULL")>  _
	Public Property typ_fec() As Date
		Get
			Return Me._typ_fec
		End Get
		Set
			If ((Me._typ_fec = value)  _
						= false) Then
				Me.Ontyp_fecChanging(value)
				Me.SendPropertyChanging
				Me._typ_fec = value
				Me.SendPropertyChanged("typ_fec")
				Me.Ontyp_fecChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_typ_mto", DbType:="Decimal(5,2)")>  _
	Public Property typ_mto() As System.Nullable(Of Decimal)
		Get
			Return Me._typ_mto
		End Get
		Set
			If (Me._typ_mto.Equals(value) = false) Then
				Me.Ontyp_mtoChanging(value)
				Me.SendPropertyChanging
				Me._typ_mto = value
				Me.SendPropertyChanged("typ_mto")
				Me.Ontyp_mtoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_typ_dde", DbType:="Int")>  _
	Public Property typ_dde() As System.Nullable(Of Integer)
		Get
			Return Me._typ_dde
		End Get
		Set
			If (Me._typ_dde.Equals(value) = false) Then
				Me.Ontyp_ddeChanging(value)
				Me.SendPropertyChanging
				Me._typ_dde = value
				Me.SendPropertyChanged("typ_dde")
				Me.Ontyp_ddeChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_typ_hta", DbType:="Int")>  _
	Public Property typ_hta() As System.Nullable(Of Integer)
		Get
			Return Me._typ_hta
		End Get
		Set
			If (Me._typ_hta.Equals(value) = false) Then
				Me.Ontyp_htaChanging(value)
				Me.SendPropertyChanging
				Me._typ_hta = value
				Me.SendPropertyChanged("typ_hta")
				Me.Ontyp_htaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_typ_des", DbType:="VarChar(50)")>  _
	Public Property typ_des() As String
		Get
			Return Me._typ_des
		End Get
		Set
			If (String.Equals(Me._typ_des, value) = false) Then
				Me.Ontyp_desChanging(value)
				Me.SendPropertyChanging
				Me._typ_des = value
				Me.SendPropertyChanged("typ_des")
				Me.Ontyp_desChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_typ_est", DbType:="VarChar(1)")>  _
	Public Property typ_est() As String
		Get
			Return Me._typ_est
		End Get
		Set
			If (String.Equals(Me._typ_est, value) = false) Then
				Me.Ontyp_estChanging(value)
				Me.SendPropertyChanging
				Me._typ_est = value
				Me.SendPropertyChanged("typ_est")
				Me.Ontyp_estChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_typ_spread", DbType:="Decimal(5,2)")>  _
	Public Property typ_spread() As System.Nullable(Of Decimal)
		Get
			Return Me._typ_spread
		End Get
		Set
			If (Me._typ_spread.Equals(value) = false) Then
				Me.Ontyp_spreadChanging(value)
				Me.SendPropertyChanging
				Me._typ_spread = value
				Me.SendPropertyChanged("typ_spread")
				Me.Ontyp_spreadChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="P_0023_cls_typ_cls", Storage:="_P_0023_cls", ThisKey:="id_P_0023", OtherKey:="id_P_0023", IsForeignKey:=true)>  _
	Public Property P_0023_cls() As P_0023_cls
		Get
			Return Me._P_0023_cls.Entity
		End Get
		Set
			Dim previousValue As P_0023_cls = Me._P_0023_cls.Entity
			If ((Object.Equals(previousValue, value) = false)  _
						OrElse (Me._P_0023_cls.HasLoadedOrAssignedValue = false)) Then
				Me.SendPropertyChanging
				If ((previousValue Is Nothing)  _
							= false) Then
					Me._P_0023_cls.Entity = Nothing
					previousValue.typ_cls.Remove(Me)
				End If
				Me._P_0023_cls.Entity = value
				If ((value Is Nothing)  _
							= false) Then
					value.typ_cls.Add(Me)
					Me._id_P_0023 = value.id_P_0023
				Else
					Me._id_P_0023 = CType(Nothing, Integer)
				End If
				Me.SendPropertyChanged("P_0023_cls")
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.vst")>  _
Partial Public Class vst_cls
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _id_vst As Integer
	
	Private _cli_idc As String
	
	Private _vst_fec_ing As System.Nullable(Of Date)
	
	Private _vst_fec_prx As System.Nullable(Of Date)
	
	Private _vst_des_cor As String
	
	Private _vst_des_lar As String
	
	Private _cli_cls As EntityRef(Of cli_cls)
	
    #Region "Definiciones de métodos de extensibilidad"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub Onid_vstChanging(value As Integer)
    End Sub
    Partial Private Sub Onid_vstChanged()
    End Sub
    Partial Private Sub Oncli_idcChanging(value As String)
    End Sub
    Partial Private Sub Oncli_idcChanged()
    End Sub
    Partial Private Sub Onvst_fec_ingChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub Onvst_fec_ingChanged()
    End Sub
    Partial Private Sub Onvst_fec_prxChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub Onvst_fec_prxChanged()
    End Sub
    Partial Private Sub Onvst_des_corChanging(value As String)
    End Sub
    Partial Private Sub Onvst_des_corChanged()
    End Sub
    Partial Private Sub Onvst_des_larChanging(value As String)
    End Sub
    Partial Private Sub Onvst_des_larChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		Me._cli_cls = CType(Nothing, EntityRef(Of cli_cls))
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_id_vst", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property id_vst() As Integer
		Get
			Return Me._id_vst
		End Get
		Set
			If ((Me._id_vst = value)  _
						= false) Then
				Me.Onid_vstChanging(value)
				Me.SendPropertyChanging
				Me._id_vst = value
				Me.SendPropertyChanged("id_vst")
				Me.Onid_vstChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_cli_idc", DbType:="Char(12) NOT NULL", CanBeNull:=false)>  _
	Public Property cli_idc() As String
		Get
			Return Me._cli_idc
		End Get
		Set
			If (String.Equals(Me._cli_idc, value) = false) Then
				If Me._cli_cls.HasLoadedOrAssignedValue Then
					Throw New System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException()
				End If
				Me.Oncli_idcChanging(value)
				Me.SendPropertyChanging
				Me._cli_idc = value
				Me.SendPropertyChanged("cli_idc")
				Me.Oncli_idcChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_vst_fec_ing", DbType:="DateTime")>  _
	Public Property vst_fec_ing() As System.Nullable(Of Date)
		Get
			Return Me._vst_fec_ing
		End Get
		Set
			If (Me._vst_fec_ing.Equals(value) = false) Then
				Me.Onvst_fec_ingChanging(value)
				Me.SendPropertyChanging
				Me._vst_fec_ing = value
				Me.SendPropertyChanged("vst_fec_ing")
				Me.Onvst_fec_ingChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_vst_fec_prx", DbType:="DateTime")>  _
	Public Property vst_fec_prx() As System.Nullable(Of Date)
		Get
			Return Me._vst_fec_prx
		End Get
		Set
			If (Me._vst_fec_prx.Equals(value) = false) Then
				Me.Onvst_fec_prxChanging(value)
				Me.SendPropertyChanging
				Me._vst_fec_prx = value
				Me.SendPropertyChanged("vst_fec_prx")
				Me.Onvst_fec_prxChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_vst_des_cor", DbType:="VarChar(50)")>  _
	Public Property vst_des_cor() As String
		Get
			Return Me._vst_des_cor
		End Get
		Set
			If (String.Equals(Me._vst_des_cor, value) = false) Then
				Me.Onvst_des_corChanging(value)
				Me.SendPropertyChanging
				Me._vst_des_cor = value
				Me.SendPropertyChanged("vst_des_cor")
				Me.Onvst_des_corChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_vst_des_lar", DbType:="VarChar(255)")>  _
	Public Property vst_des_lar() As String
		Get
			Return Me._vst_des_lar
		End Get
		Set
			If (String.Equals(Me._vst_des_lar, value) = false) Then
				Me.Onvst_des_larChanging(value)
				Me.SendPropertyChanging
				Me._vst_des_lar = value
				Me.SendPropertyChanged("vst_des_lar")
				Me.Onvst_des_larChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="cli_cls_vst_cls", Storage:="_cli_cls", ThisKey:="cli_idc", OtherKey:="cli_idc", IsForeignKey:=true)>  _
	Public Property cli_cls() As cli_cls
		Get
			Return Me._cli_cls.Entity
		End Get
		Set
			Dim previousValue As cli_cls = Me._cli_cls.Entity
			If ((Object.Equals(previousValue, value) = false)  _
						OrElse (Me._cli_cls.HasLoadedOrAssignedValue = false)) Then
				Me.SendPropertyChanging
				If ((previousValue Is Nothing)  _
							= false) Then
					Me._cli_cls.Entity = Nothing
					previousValue.vst_cls.Remove(Me)
				End If
				Me._cli_cls.Entity = value
				If ((value Is Nothing)  _
							= false) Then
					value.vst_cls.Add(Me)
					Me._cli_idc = value.cli_idc
				Else
					Me._cli_idc = CType(Nothing, String)
				End If
				Me.SendPropertyChanged("cli_cls")
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.zon")>  _
Partial Public Class zon_cls
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _id_zon As Integer
	
	Private _id_suc As System.Nullable(Of Integer)
	
	Private _zon_des As String
	
	Private _zon_num_temporal As System.Nullable(Of Integer)
	
	Private _cmn_cls As EntitySet(Of cmn_cls)
	
	Private _NEZ_cls As EntitySet(Of NEZ_cls)
	
	Private _suc_cls As EntityRef(Of suc_cls)
	
    #Region "Definiciones de métodos de extensibilidad"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub Onid_zonChanging(value As Integer)
    End Sub
    Partial Private Sub Onid_zonChanged()
    End Sub
    Partial Private Sub Onid_sucChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub Onid_sucChanged()
    End Sub
    Partial Private Sub Onzon_desChanging(value As String)
    End Sub
    Partial Private Sub Onzon_desChanged()
    End Sub
    Partial Private Sub Onzon_num_temporalChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub Onzon_num_temporalChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		Me._cmn_cls = New EntitySet(Of cmn_cls)(AddressOf Me.attach_cmn_cls, AddressOf Me.detach_cmn_cls)
		Me._NEZ_cls = New EntitySet(Of NEZ_cls)(AddressOf Me.attach_NEZ_cls, AddressOf Me.detach_NEZ_cls)
		Me._suc_cls = CType(Nothing, EntityRef(Of suc_cls))
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_id_zon", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property id_zon() As Integer
		Get
			Return Me._id_zon
		End Get
		Set
			If ((Me._id_zon = value)  _
						= false) Then
				Me.Onid_zonChanging(value)
				Me.SendPropertyChanging
				Me._id_zon = value
				Me.SendPropertyChanged("id_zon")
				Me.Onid_zonChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_id_suc", DbType:="Int")>  _
	Public Property id_suc() As System.Nullable(Of Integer)
		Get
			Return Me._id_suc
		End Get
		Set
			If (Me._id_suc.Equals(value) = false) Then
				If Me._suc_cls.HasLoadedOrAssignedValue Then
					Throw New System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException()
				End If
				Me.Onid_sucChanging(value)
				Me.SendPropertyChanging
				Me._id_suc = value
				Me.SendPropertyChanged("id_suc")
				Me.Onid_sucChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_zon_des", DbType:="VarChar(50)")>  _
	Public Property zon_des() As String
		Get
			Return Me._zon_des
		End Get
		Set
			If (String.Equals(Me._zon_des, value) = false) Then
				Me.Onzon_desChanging(value)
				Me.SendPropertyChanging
				Me._zon_des = value
				Me.SendPropertyChanged("zon_des")
				Me.Onzon_desChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_zon_num_temporal", DbType:="Int")>  _
	Public Property zon_num_temporal() As System.Nullable(Of Integer)
		Get
			Return Me._zon_num_temporal
		End Get
		Set
			If (Me._zon_num_temporal.Equals(value) = false) Then
				Me.Onzon_num_temporalChanging(value)
				Me.SendPropertyChanging
				Me._zon_num_temporal = value
				Me.SendPropertyChanged("zon_num_temporal")
				Me.Onzon_num_temporalChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="zon_cls_cmn_cls", Storage:="_cmn_cls", ThisKey:="id_zon", OtherKey:="id_zon")>  _
	Public Property cmn_cls() As EntitySet(Of cmn_cls)
		Get
			Return Me._cmn_cls
		End Get
		Set
			Me._cmn_cls.Assign(value)
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="zon_cls_NEZ_cls", Storage:="_NEZ_cls", ThisKey:="id_zon", OtherKey:="id_zon")>  _
	Public Property NEZ_cls() As EntitySet(Of NEZ_cls)
		Get
			Return Me._NEZ_cls
		End Get
		Set
			Me._NEZ_cls.Assign(value)
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="suc_cls_zon_cls", Storage:="_suc_cls", ThisKey:="id_suc", OtherKey:="id_suc", IsForeignKey:=true)>  _
	Public Property suc_cls() As suc_cls
		Get
			Return Me._suc_cls.Entity
		End Get
		Set
			Dim previousValue As suc_cls = Me._suc_cls.Entity
			If ((Object.Equals(previousValue, value) = false)  _
						OrElse (Me._suc_cls.HasLoadedOrAssignedValue = false)) Then
				Me.SendPropertyChanging
				If ((previousValue Is Nothing)  _
							= false) Then
					Me._suc_cls.Entity = Nothing
					previousValue.zon_cls.Remove(Me)
				End If
				Me._suc_cls.Entity = value
				If ((value Is Nothing)  _
							= false) Then
					value.zon_cls.Add(Me)
					Me._id_suc = value.id_suc
				Else
					Me._id_suc = CType(Nothing, Nullable(Of Integer))
				End If
				Me.SendPropertyChanged("suc_cls")
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
	
	Private Sub attach_cmn_cls(ByVal entity As cmn_cls)
		Me.SendPropertyChanging
		entity.zon_cls = Me
	End Sub
	
	Private Sub detach_cmn_cls(ByVal entity As cmn_cls)
		Me.SendPropertyChanging
		entity.zon_cls = Nothing
	End Sub
	
	Private Sub attach_NEZ_cls(ByVal entity As NEZ_cls)
		Me.SendPropertyChanging
		entity.zon_cls = Me
	End Sub
	
	Private Sub detach_NEZ_cls(ByVal entity As NEZ_cls)
		Me.SendPropertyChanging
		entity.zon_cls = Nothing
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.frm")>  _
Partial Public Class frm_cls
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _id_frm As Integer
	
	Private _id_ccf As Integer
	
	Private _id_p_0045 As Integer
	
	Private _id_p_005 As Integer
	
	Private _frm_est As String
	
	Private _apb_cls As EntitySet(Of apb_cls)
	
	Private _ccf_cls As EntityRef(Of ccf_cls)
	
	Private _P_0045_cls As EntityRef(Of P_0045_cls)
	
	Private _P_005_cls As EntityRef(Of P_005_cls)
	
    #Region "Definiciones de métodos de extensibilidad"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub Onid_frmChanging(value As Integer)
    End Sub
    Partial Private Sub Onid_frmChanged()
    End Sub
    Partial Private Sub Onid_ccfChanging(value As Integer)
    End Sub
    Partial Private Sub Onid_ccfChanged()
    End Sub
    Partial Private Sub Onid_p_0045Changing(value As Integer)
    End Sub
    Partial Private Sub Onid_p_0045Changed()
    End Sub
    Partial Private Sub Onid_p_005Changing(value As Integer)
    End Sub
    Partial Private Sub Onid_p_005Changed()
    End Sub
    Partial Private Sub Onfrm_estChanging(value As String)
    End Sub
    Partial Private Sub Onfrm_estChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		Me._apb_cls = New EntitySet(Of apb_cls)(AddressOf Me.attach_apb_cls, AddressOf Me.detach_apb_cls)
		Me._ccf_cls = CType(Nothing, EntityRef(Of ccf_cls))
		Me._P_0045_cls = CType(Nothing, EntityRef(Of P_0045_cls))
		Me._P_005_cls = CType(Nothing, EntityRef(Of P_005_cls))
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_id_frm", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property id_frm() As Integer
		Get
			Return Me._id_frm
		End Get
		Set
			If ((Me._id_frm = value)  _
						= false) Then
				Me.Onid_frmChanging(value)
				Me.SendPropertyChanging
				Me._id_frm = value
				Me.SendPropertyChanged("id_frm")
				Me.Onid_frmChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_id_ccf", DbType:="Int NOT NULL")>  _
	Public Property id_ccf() As Integer
		Get
			Return Me._id_ccf
		End Get
		Set
			If ((Me._id_ccf = value)  _
						= false) Then
				If Me._ccf_cls.HasLoadedOrAssignedValue Then
					Throw New System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException()
				End If
				Me.Onid_ccfChanging(value)
				Me.SendPropertyChanging
				Me._id_ccf = value
				Me.SendPropertyChanged("id_ccf")
				Me.Onid_ccfChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_id_p_0045", DbType:="Int NOT NULL")>  _
	Public Property id_p_0045() As Integer
		Get
			Return Me._id_p_0045
		End Get
		Set
			If ((Me._id_p_0045 = value)  _
						= false) Then
				If Me._P_0045_cls.HasLoadedOrAssignedValue Then
					Throw New System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException()
				End If
				Me.Onid_p_0045Changing(value)
				Me.SendPropertyChanging
				Me._id_p_0045 = value
				Me.SendPropertyChanged("id_p_0045")
				Me.Onid_p_0045Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_id_p_005", DbType:="Int NOT NULL")>  _
	Public Property id_p_005() As Integer
		Get
			Return Me._id_p_005
		End Get
		Set
			If ((Me._id_p_005 = value)  _
						= false) Then
				If Me._P_005_cls.HasLoadedOrAssignedValue Then
					Throw New System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException()
				End If
				Me.Onid_p_005Changing(value)
				Me.SendPropertyChanging
				Me._id_p_005 = value
				Me.SendPropertyChanged("id_p_005")
				Me.Onid_p_005Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_frm_est", DbType:="VarChar(1)")>  _
	Public Property frm_est() As String
		Get
			Return Me._frm_est
		End Get
		Set
			If (String.Equals(Me._frm_est, value) = false) Then
				Me.Onfrm_estChanging(value)
				Me.SendPropertyChanging
				Me._frm_est = value
				Me.SendPropertyChanged("frm_est")
				Me.Onfrm_estChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="frm_cls_apb_cls", Storage:="_apb_cls", ThisKey:="id_frm", OtherKey:="id_frm")>  _
	Public Property apb_cls() As EntitySet(Of apb_cls)
		Get
			Return Me._apb_cls
		End Get
		Set
			Me._apb_cls.Assign(value)
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="ccf_cls_frm_cls", Storage:="_ccf_cls", ThisKey:="id_ccf", OtherKey:="id_ccf", IsForeignKey:=true)>  _
	Public Property ccf_cls() As ccf_cls
		Get
			Return Me._ccf_cls.Entity
		End Get
		Set
			Dim previousValue As ccf_cls = Me._ccf_cls.Entity
			If ((Object.Equals(previousValue, value) = false)  _
						OrElse (Me._ccf_cls.HasLoadedOrAssignedValue = false)) Then
				Me.SendPropertyChanging
				If ((previousValue Is Nothing)  _
							= false) Then
					Me._ccf_cls.Entity = Nothing
					previousValue.frm_cls.Remove(Me)
				End If
				Me._ccf_cls.Entity = value
				If ((value Is Nothing)  _
							= false) Then
					value.frm_cls.Add(Me)
					Me._id_ccf = value.id_ccf
				Else
					Me._id_ccf = CType(Nothing, Integer)
				End If
				Me.SendPropertyChanged("ccf_cls")
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="P_0045_cls_frm_cls", Storage:="_P_0045_cls", ThisKey:="id_p_0045", OtherKey:="id_P_0045", IsForeignKey:=true)>  _
	Public Property P_0045_cls() As P_0045_cls
		Get
			Return Me._P_0045_cls.Entity
		End Get
		Set
			Dim previousValue As P_0045_cls = Me._P_0045_cls.Entity
			If ((Object.Equals(previousValue, value) = false)  _
						OrElse (Me._P_0045_cls.HasLoadedOrAssignedValue = false)) Then
				Me.SendPropertyChanging
				If ((previousValue Is Nothing)  _
							= false) Then
					Me._P_0045_cls.Entity = Nothing
					previousValue.frm_cls.Remove(Me)
				End If
				Me._P_0045_cls.Entity = value
				If ((value Is Nothing)  _
							= false) Then
					value.frm_cls.Add(Me)
					Me._id_p_0045 = value.id_P_0045
				Else
					Me._id_p_0045 = CType(Nothing, Integer)
				End If
				Me.SendPropertyChanged("P_0045_cls")
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="P_005_cls_frm_cls", Storage:="_P_005_cls", ThisKey:="id_p_005", OtherKey:="id_P_005", IsForeignKey:=true)>  _
	Public Property P_005_cls() As P_005_cls
		Get
			Return Me._P_005_cls.Entity
		End Get
		Set
			Dim previousValue As P_005_cls = Me._P_005_cls.Entity
			If ((Object.Equals(previousValue, value) = false)  _
						OrElse (Me._P_005_cls.HasLoadedOrAssignedValue = false)) Then
				Me.SendPropertyChanging
				If ((previousValue Is Nothing)  _
							= false) Then
					Me._P_005_cls.Entity = Nothing
					previousValue.frm_cls.Remove(Me)
				End If
				Me._P_005_cls.Entity = value
				If ((value Is Nothing)  _
							= false) Then
					value.frm_cls.Add(Me)
					Me._id_p_005 = value.id_P_005
				Else
					Me._id_p_005 = CType(Nothing, Integer)
				End If
				Me.SendPropertyChanged("P_005_cls")
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
	
	Private Sub attach_apb_cls(ByVal entity As apb_cls)
		Me.SendPropertyChanging
		entity.frm_cls = Me
	End Sub
	
	Private Sub detach_apb_cls(ByVal entity As apb_cls)
		Me.SendPropertyChanging
		entity.frm_cls = Nothing
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.dim")>  _
Partial Public Class dim_cls
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _id_dim As Decimal
	
	Private _deu_ide As String
	
	Private _id_eva_temp As System.Nullable(Of Integer)
	
	Private _id_pl_000047 As String
	
	Private _id_bco As System.Nullable(Of Integer)
	
	Private _dig_deu As System.Nullable(Of Char)
	
	Private _dim_num As Decimal
	
	Private _dim_mto As System.Nullable(Of Decimal)
	
	Private _dim_mto_fin As System.Nullable(Of Decimal)
	
	Private _dim_flj As String
	
	Private _dim_flj_num As Integer
	
	Private _dim_fev As System.Nullable(Of Date)
	
	Private _dim_fev_rea As System.Nullable(Of Date)
	
    #Region "Definiciones de métodos de extensibilidad"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub Onid_dimChanging(value As Decimal)
    End Sub
    Partial Private Sub Onid_dimChanged()
    End Sub
    Partial Private Sub Ondeu_ideChanging(value As String)
    End Sub
    Partial Private Sub Ondeu_ideChanged()
    End Sub
    Partial Private Sub Onid_eva_tempChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub Onid_eva_tempChanged()
    End Sub
    Partial Private Sub Onid_pl_000047Changing(value As String)
    End Sub
    Partial Private Sub Onid_pl_000047Changed()
    End Sub
    Partial Private Sub Onid_bcoChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub Onid_bcoChanged()
    End Sub
    Partial Private Sub Ondig_deuChanging(value As System.Nullable(Of Char))
    End Sub
    Partial Private Sub Ondig_deuChanged()
    End Sub
    Partial Private Sub Ondim_numChanging(value As Decimal)
    End Sub
    Partial Private Sub Ondim_numChanged()
    End Sub
    Partial Private Sub Ondim_mtoChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub Ondim_mtoChanged()
    End Sub
    Partial Private Sub Ondim_mto_finChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub Ondim_mto_finChanged()
    End Sub
    Partial Private Sub Ondim_fljChanging(value As String)
    End Sub
    Partial Private Sub Ondim_fljChanged()
    End Sub
    Partial Private Sub Ondim_flj_numChanging(value As Integer)
    End Sub
    Partial Private Sub Ondim_flj_numChanged()
    End Sub
    Partial Private Sub Ondim_fevChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub Ondim_fevChanged()
    End Sub
    Partial Private Sub Ondim_fev_reaChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub Ondim_fev_reaChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_id_dim", AutoSync:=AutoSync.OnInsert, DbType:="Decimal(18,0) NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property id_dim() As Decimal
		Get
			Return Me._id_dim
		End Get
		Set
			If ((Me._id_dim = value)  _
						= false) Then
				Me.Onid_dimChanging(value)
				Me.SendPropertyChanging
				Me._id_dim = value
				Me.SendPropertyChanged("id_dim")
				Me.Onid_dimChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_deu_ide", DbType:="Char(12) NOT NULL", CanBeNull:=false)>  _
	Public Property deu_ide() As String
		Get
			Return Me._deu_ide
		End Get
		Set
			If (String.Equals(Me._deu_ide, value) = false) Then
				Me.Ondeu_ideChanging(value)
				Me.SendPropertyChanging
				Me._deu_ide = value
				Me.SendPropertyChanged("deu_ide")
				Me.Ondeu_ideChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_id_eva_temp", DbType:="Int")>  _
	Public Property id_eva_temp() As System.Nullable(Of Integer)
		Get
			Return Me._id_eva_temp
		End Get
		Set
			If (Me._id_eva_temp.Equals(value) = false) Then
				Me.Onid_eva_tempChanging(value)
				Me.SendPropertyChanging
				Me._id_eva_temp = value
				Me.SendPropertyChanged("id_eva_temp")
				Me.Onid_eva_tempChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_id_pl_000047", DbType:="Char(6)")>  _
	Public Property id_pl_000047() As String
		Get
			Return Me._id_pl_000047
		End Get
		Set
			If (String.Equals(Me._id_pl_000047, value) = false) Then
				Me.Onid_pl_000047Changing(value)
				Me.SendPropertyChanging
				Me._id_pl_000047 = value
				Me.SendPropertyChanged("id_pl_000047")
				Me.Onid_pl_000047Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_id_bco", DbType:="Int")>  _
	Public Property id_bco() As System.Nullable(Of Integer)
		Get
			Return Me._id_bco
		End Get
		Set
			If (Me._id_bco.Equals(value) = false) Then
				Me.Onid_bcoChanging(value)
				Me.SendPropertyChanging
				Me._id_bco = value
				Me.SendPropertyChanged("id_bco")
				Me.Onid_bcoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_dig_deu", DbType:="Char(1)")>  _
	Public Property dig_deu() As System.Nullable(Of Char)
		Get
			Return Me._dig_deu
		End Get
		Set
			If (Me._dig_deu.Equals(value) = false) Then
				Me.Ondig_deuChanging(value)
				Me.SendPropertyChanging
				Me._dig_deu = value
				Me.SendPropertyChanged("dig_deu")
				Me.Ondig_deuChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_dim_num", DbType:="Decimal(18,0) NOT NULL")>  _
	Public Property dim_num() As Decimal
		Get
			Return Me._dim_num
		End Get
		Set
			If ((Me._dim_num = value)  _
						= false) Then
				Me.Ondim_numChanging(value)
				Me.SendPropertyChanging
				Me._dim_num = value
				Me.SendPropertyChanged("dim_num")
				Me.Ondim_numChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_dim_mto", DbType:="Money")>  _
	Public Property dim_mto() As System.Nullable(Of Decimal)
		Get
			Return Me._dim_mto
		End Get
		Set
			If (Me._dim_mto.Equals(value) = false) Then
				Me.Ondim_mtoChanging(value)
				Me.SendPropertyChanging
				Me._dim_mto = value
				Me.SendPropertyChanged("dim_mto")
				Me.Ondim_mtoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_dim_mto_fin", DbType:="Money")>  _
	Public Property dim_mto_fin() As System.Nullable(Of Decimal)
		Get
			Return Me._dim_mto_fin
		End Get
		Set
			If (Me._dim_mto_fin.Equals(value) = false) Then
				Me.Ondim_mto_finChanging(value)
				Me.SendPropertyChanging
				Me._dim_mto_fin = value
				Me.SendPropertyChanged("dim_mto_fin")
				Me.Ondim_mto_finChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_dim_flj", DbType:="VarChar(1) NOT NULL", CanBeNull:=false)>  _
	Public Property dim_flj() As String
		Get
			Return Me._dim_flj
		End Get
		Set
			If (String.Equals(Me._dim_flj, value) = false) Then
				Me.Ondim_fljChanging(value)
				Me.SendPropertyChanging
				Me._dim_flj = value
				Me.SendPropertyChanged("dim_flj")
				Me.Ondim_fljChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_dim_flj_num", DbType:="Int NOT NULL")>  _
	Public Property dim_flj_num() As Integer
		Get
			Return Me._dim_flj_num
		End Get
		Set
			If ((Me._dim_flj_num = value)  _
						= false) Then
				Me.Ondim_flj_numChanging(value)
				Me.SendPropertyChanging
				Me._dim_flj_num = value
				Me.SendPropertyChanged("dim_flj_num")
				Me.Ondim_flj_numChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_dim_fev", DbType:="DateTime")>  _
	Public Property dim_fev() As System.Nullable(Of Date)
		Get
			Return Me._dim_fev
		End Get
		Set
			If (Me._dim_fev.Equals(value) = false) Then
				Me.Ondim_fevChanging(value)
				Me.SendPropertyChanging
				Me._dim_fev = value
				Me.SendPropertyChanged("dim_fev")
				Me.Ondim_fevChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_dim_fev_rea", DbType:="DateTime")>  _
	Public Property dim_fev_rea() As System.Nullable(Of Date)
		Get
			Return Me._dim_fev_rea
		End Get
		Set
			If (Me._dim_fev_rea.Equals(value) = false) Then
				Me.Ondim_fev_reaChanging(value)
				Me.SendPropertyChanging
				Me._dim_fev_rea = value
				Me.SendPropertyChanged("dim_fev_rea")
				Me.Ondim_fev_reaChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.eje")>  _
Partial Public Class eje_cls
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _id_eje As Integer
	
	Private _id_suc As System.Nullable(Of Integer)
	
	Private _eje_zon As System.Nullable(Of Integer)
	
	Private _id_P_0045 As System.Nullable(Of Integer)
	
	Private _grp_cod As Decimal
	
	Private _id_P_0048 As System.Nullable(Of Integer)
	
	Private _eje_nom As String
	
	Private _eje_tlf As String
	
	Private _eje_des_cra As String
	
	Private _eje_mail As String
	
	Private _eje_pwd As String
	
	Private _eje_aux As System.Nullable(Of Char)
	
	Private _eje_val_mar As System.Nullable(Of Char)
	
	Private _eje_cod_temporal As String
	
	Private _agd_cls As EntitySet(Of agd_cls)
	
	Private _apb_cls As EntitySet(Of apb_cls)
	
	Private _apl_cls As EntitySet(Of apl_cls)
	
	Private _apl_cls1 As EntitySet(Of apl_cls)
	
	Private _apl_cls2 As EntitySet(Of apl_cls)
	
	Private _cdn_cls As EntitySet(Of cdn_cls)
	
	Private _cdn_cls1 As EntitySet(Of cdn_cls)
	
	Private _cli_cls As EntitySet(Of cli_cls)
	
	Private _cli_cls1 As EntitySet(Of cli_cls)
	
	Private _deu_cls As EntitySet(Of deu_cls)
	
	Private _deu_cls1 As EntitySet(Of deu_cls)
	
	Private _deu_mon_cls As EntitySet(Of deu_mon_cls)
	
	Private _dgh_cls As EntitySet(Of dgh_cls)
	
	Private _dvf_cls As EntitySet(Of dvf_cls)
	
	Private _dxn_cls As EntitySet(Of dxn_cls)
	
	Private _egr_cls As EntitySet(Of egr_cls)
	
	Private _eva_cls As EntitySet(Of eva_cls)
	
	Private _gsn_cls As EntitySet(Of gsn_cls)
	
	Private _has_cls As EntitySet(Of has_cls)
	
	Private _has_cls1 As EntitySet(Of has_cls)
	
	Private _has_cls2 As EntitySet(Of has_cls)
	
	Private _hre_cls As EntitySet(Of hre_cls)
	
	Private _ing_cls As EntitySet(Of ing_cls)
	
	Private _ncr_cls As EntitySet(Of ncr_cls)
	
	Private _ncr_cls1 As EntitySet(Of ncr_cls)
	
	Private _nes_cls As EntitySet(Of nes_cls)
	
	Private _NEZ_cls As EntitySet(Of NEZ_cls)
	
	Private _nma_cls As EntitySet(Of nma_cls)
	
	Private _nma_cls1 As EntitySet(Of nma_cls)
	
	Private _ope_cls As EntitySet(Of ope_cls)
	
	Private _opn_cls As EntitySet(Of opn_cls)
	
	Private _opo_cls As EntitySet(Of opo_cls)
	
	Private _pta_cls As EntitySet(Of pta_cls)
	
	Private _rxo_cls As EntitySet(Of rxo_cls)
	
	Private _spg_cls As EntitySet(Of spg_cls)
	
	Private _spg_cls1 As EntitySet(Of spg_cls)
	
	Private _suc_cls As EntityRef(Of suc_cls)
	
	Private _P_0045_cls As EntityRef(Of P_0045_cls)
	
	Private _P_0048_cls As EntityRef(Of P_0048_cls)
	
    #Region "Definiciones de métodos de extensibilidad"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub Onid_ejeChanging(value As Integer)
    End Sub
    Partial Private Sub Onid_ejeChanged()
    End Sub
    Partial Private Sub Onid_sucChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub Onid_sucChanged()
    End Sub
    Partial Private Sub Oneje_zonChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub Oneje_zonChanged()
    End Sub
    Partial Private Sub Onid_P_0045Changing(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub Onid_P_0045Changed()
    End Sub
    Partial Private Sub Ongrp_codChanging(value As Decimal)
    End Sub
    Partial Private Sub Ongrp_codChanged()
    End Sub
    Partial Private Sub Onid_P_0048Changing(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub Onid_P_0048Changed()
    End Sub
    Partial Private Sub Oneje_nomChanging(value As String)
    End Sub
    Partial Private Sub Oneje_nomChanged()
    End Sub
    Partial Private Sub Oneje_tlfChanging(value As String)
    End Sub
    Partial Private Sub Oneje_tlfChanged()
    End Sub
    Partial Private Sub Oneje_des_craChanging(value As String)
    End Sub
    Partial Private Sub Oneje_des_craChanged()
    End Sub
    Partial Private Sub Oneje_mailChanging(value As String)
    End Sub
    Partial Private Sub Oneje_mailChanged()
    End Sub
    Partial Private Sub Oneje_pwdChanging(value As String)
    End Sub
    Partial Private Sub Oneje_pwdChanged()
    End Sub
    Partial Private Sub Oneje_auxChanging(value As System.Nullable(Of Char))
    End Sub
    Partial Private Sub Oneje_auxChanged()
    End Sub
    Partial Private Sub Oneje_val_marChanging(value As System.Nullable(Of Char))
    End Sub
    Partial Private Sub Oneje_val_marChanged()
    End Sub
    Partial Private Sub Oneje_cod_temporalChanging(value As String)
    End Sub
    Partial Private Sub Oneje_cod_temporalChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		Me._agd_cls = New EntitySet(Of agd_cls)(AddressOf Me.attach_agd_cls, AddressOf Me.detach_agd_cls)
		Me._apb_cls = New EntitySet(Of apb_cls)(AddressOf Me.attach_apb_cls, AddressOf Me.detach_apb_cls)
		Me._apl_cls = New EntitySet(Of apl_cls)(AddressOf Me.attach_apl_cls, AddressOf Me.detach_apl_cls)
		Me._apl_cls1 = New EntitySet(Of apl_cls)(AddressOf Me.attach_apl_cls1, AddressOf Me.detach_apl_cls1)
		Me._apl_cls2 = New EntitySet(Of apl_cls)(AddressOf Me.attach_apl_cls2, AddressOf Me.detach_apl_cls2)
		Me._cdn_cls = New EntitySet(Of cdn_cls)(AddressOf Me.attach_cdn_cls, AddressOf Me.detach_cdn_cls)
		Me._cdn_cls1 = New EntitySet(Of cdn_cls)(AddressOf Me.attach_cdn_cls1, AddressOf Me.detach_cdn_cls1)
		Me._cli_cls = New EntitySet(Of cli_cls)(AddressOf Me.attach_cli_cls, AddressOf Me.detach_cli_cls)
		Me._cli_cls1 = New EntitySet(Of cli_cls)(AddressOf Me.attach_cli_cls1, AddressOf Me.detach_cli_cls1)
		Me._deu_cls = New EntitySet(Of deu_cls)(AddressOf Me.attach_deu_cls, AddressOf Me.detach_deu_cls)
		Me._deu_cls1 = New EntitySet(Of deu_cls)(AddressOf Me.attach_deu_cls1, AddressOf Me.detach_deu_cls1)
		Me._deu_mon_cls = New EntitySet(Of deu_mon_cls)(AddressOf Me.attach_deu_mon_cls, AddressOf Me.detach_deu_mon_cls)
		Me._dgh_cls = New EntitySet(Of dgh_cls)(AddressOf Me.attach_dgh_cls, AddressOf Me.detach_dgh_cls)
		Me._dvf_cls = New EntitySet(Of dvf_cls)(AddressOf Me.attach_dvf_cls, AddressOf Me.detach_dvf_cls)
		Me._dxn_cls = New EntitySet(Of dxn_cls)(AddressOf Me.attach_dxn_cls, AddressOf Me.detach_dxn_cls)
		Me._egr_cls = New EntitySet(Of egr_cls)(AddressOf Me.attach_egr_cls, AddressOf Me.detach_egr_cls)
		Me._eva_cls = New EntitySet(Of eva_cls)(AddressOf Me.attach_eva_cls, AddressOf Me.detach_eva_cls)
		Me._gsn_cls = New EntitySet(Of gsn_cls)(AddressOf Me.attach_gsn_cls, AddressOf Me.detach_gsn_cls)
		Me._has_cls = New EntitySet(Of has_cls)(AddressOf Me.attach_has_cls, AddressOf Me.detach_has_cls)
		Me._has_cls1 = New EntitySet(Of has_cls)(AddressOf Me.attach_has_cls1, AddressOf Me.detach_has_cls1)
		Me._has_cls2 = New EntitySet(Of has_cls)(AddressOf Me.attach_has_cls2, AddressOf Me.detach_has_cls2)
		Me._hre_cls = New EntitySet(Of hre_cls)(AddressOf Me.attach_hre_cls, AddressOf Me.detach_hre_cls)
		Me._ing_cls = New EntitySet(Of ing_cls)(AddressOf Me.attach_ing_cls, AddressOf Me.detach_ing_cls)
		Me._ncr_cls = New EntitySet(Of ncr_cls)(AddressOf Me.attach_ncr_cls, AddressOf Me.detach_ncr_cls)
		Me._ncr_cls1 = New EntitySet(Of ncr_cls)(AddressOf Me.attach_ncr_cls1, AddressOf Me.detach_ncr_cls1)
		Me._nes_cls = New EntitySet(Of nes_cls)(AddressOf Me.attach_nes_cls, AddressOf Me.detach_nes_cls)
		Me._NEZ_cls = New EntitySet(Of NEZ_cls)(AddressOf Me.attach_NEZ_cls, AddressOf Me.detach_NEZ_cls)
		Me._nma_cls = New EntitySet(Of nma_cls)(AddressOf Me.attach_nma_cls, AddressOf Me.detach_nma_cls)
		Me._nma_cls1 = New EntitySet(Of nma_cls)(AddressOf Me.attach_nma_cls1, AddressOf Me.detach_nma_cls1)
		Me._ope_cls = New EntitySet(Of ope_cls)(AddressOf Me.attach_ope_cls, AddressOf Me.detach_ope_cls)
		Me._opn_cls = New EntitySet(Of opn_cls)(AddressOf Me.attach_opn_cls, AddressOf Me.detach_opn_cls)
		Me._opo_cls = New EntitySet(Of opo_cls)(AddressOf Me.attach_opo_cls, AddressOf Me.detach_opo_cls)
		Me._pta_cls = New EntitySet(Of pta_cls)(AddressOf Me.attach_pta_cls, AddressOf Me.detach_pta_cls)
		Me._rxo_cls = New EntitySet(Of rxo_cls)(AddressOf Me.attach_rxo_cls, AddressOf Me.detach_rxo_cls)
		Me._spg_cls = New EntitySet(Of spg_cls)(AddressOf Me.attach_spg_cls, AddressOf Me.detach_spg_cls)
		Me._spg_cls1 = New EntitySet(Of spg_cls)(AddressOf Me.attach_spg_cls1, AddressOf Me.detach_spg_cls1)
		Me._suc_cls = CType(Nothing, EntityRef(Of suc_cls))
		Me._P_0045_cls = CType(Nothing, EntityRef(Of P_0045_cls))
		Me._P_0048_cls = CType(Nothing, EntityRef(Of P_0048_cls))
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_id_eje", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property id_eje() As Integer
		Get
			Return Me._id_eje
		End Get
		Set
			If ((Me._id_eje = value)  _
						= false) Then
				Me.Onid_ejeChanging(value)
				Me.SendPropertyChanging
				Me._id_eje = value
				Me.SendPropertyChanged("id_eje")
				Me.Onid_ejeChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_id_suc", DbType:="Int")>  _
	Public Property id_suc() As System.Nullable(Of Integer)
		Get
			Return Me._id_suc
		End Get
		Set
			If (Me._id_suc.Equals(value) = false) Then
				If Me._suc_cls.HasLoadedOrAssignedValue Then
					Throw New System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException()
				End If
				Me.Onid_sucChanging(value)
				Me.SendPropertyChanging
				Me._id_suc = value
				Me.SendPropertyChanged("id_suc")
				Me.Onid_sucChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_eje_zon", DbType:="Int")>  _
	Public Property eje_zon() As System.Nullable(Of Integer)
		Get
			Return Me._eje_zon
		End Get
		Set
			If (Me._eje_zon.Equals(value) = false) Then
				Me.Oneje_zonChanging(value)
				Me.SendPropertyChanging
				Me._eje_zon = value
				Me.SendPropertyChanged("eje_zon")
				Me.Oneje_zonChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_id_P_0045", DbType:="Int")>  _
	Public Property id_P_0045() As System.Nullable(Of Integer)
		Get
			Return Me._id_P_0045
		End Get
		Set
			If (Me._id_P_0045.Equals(value) = false) Then
				If Me._P_0045_cls.HasLoadedOrAssignedValue Then
					Throw New System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException()
				End If
				Me.Onid_P_0045Changing(value)
				Me.SendPropertyChanging
				Me._id_P_0045 = value
				Me.SendPropertyChanged("id_P_0045")
				Me.Onid_P_0045Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_grp_cod", DbType:="Decimal(4,0) NOT NULL")>  _
	Public Property grp_cod() As Decimal
		Get
			Return Me._grp_cod
		End Get
		Set
			If ((Me._grp_cod = value)  _
						= false) Then
				Me.Ongrp_codChanging(value)
				Me.SendPropertyChanging
				Me._grp_cod = value
				Me.SendPropertyChanged("grp_cod")
				Me.Ongrp_codChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_id_P_0048", DbType:="Int")>  _
	Public Property id_P_0048() As System.Nullable(Of Integer)
		Get
			Return Me._id_P_0048
		End Get
		Set
			If (Me._id_P_0048.Equals(value) = false) Then
				If Me._P_0048_cls.HasLoadedOrAssignedValue Then
					Throw New System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException()
				End If
				Me.Onid_P_0048Changing(value)
				Me.SendPropertyChanging
				Me._id_P_0048 = value
				Me.SendPropertyChanged("id_P_0048")
				Me.Onid_P_0048Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_eje_nom", DbType:="Char(40)")>  _
	Public Property eje_nom() As String
		Get
			Return Me._eje_nom
		End Get
		Set
			If (String.Equals(Me._eje_nom, value) = false) Then
				Me.Oneje_nomChanging(value)
				Me.SendPropertyChanging
				Me._eje_nom = value
				Me.SendPropertyChanged("eje_nom")
				Me.Oneje_nomChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_eje_tlf", DbType:="Char(12)")>  _
	Public Property eje_tlf() As String
		Get
			Return Me._eje_tlf
		End Get
		Set
			If (String.Equals(Me._eje_tlf, value) = false) Then
				Me.Oneje_tlfChanging(value)
				Me.SendPropertyChanging
				Me._eje_tlf = value
				Me.SendPropertyChanged("eje_tlf")
				Me.Oneje_tlfChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_eje_des_cra", DbType:="VarChar(50)")>  _
	Public Property eje_des_cra() As String
		Get
			Return Me._eje_des_cra
		End Get
		Set
			If (String.Equals(Me._eje_des_cra, value) = false) Then
				Me.Oneje_des_craChanging(value)
				Me.SendPropertyChanging
				Me._eje_des_cra = value
				Me.SendPropertyChanged("eje_des_cra")
				Me.Oneje_des_craChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_eje_mail", DbType:="VarChar(50)")>  _
	Public Property eje_mail() As String
		Get
			Return Me._eje_mail
		End Get
		Set
			If (String.Equals(Me._eje_mail, value) = false) Then
				Me.Oneje_mailChanging(value)
				Me.SendPropertyChanging
				Me._eje_mail = value
				Me.SendPropertyChanged("eje_mail")
				Me.Oneje_mailChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_eje_pwd", DbType:="VarChar(100)")>  _
	Public Property eje_pwd() As String
		Get
			Return Me._eje_pwd
		End Get
		Set
			If (String.Equals(Me._eje_pwd, value) = false) Then
				Me.Oneje_pwdChanging(value)
				Me.SendPropertyChanging
				Me._eje_pwd = value
				Me.SendPropertyChanged("eje_pwd")
				Me.Oneje_pwdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_eje_aux", DbType:="Char(1)")>  _
	Public Property eje_aux() As System.Nullable(Of Char)
		Get
			Return Me._eje_aux
		End Get
		Set
			If (Me._eje_aux.Equals(value) = false) Then
				Me.Oneje_auxChanging(value)
				Me.SendPropertyChanging
				Me._eje_aux = value
				Me.SendPropertyChanged("eje_aux")
				Me.Oneje_auxChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_eje_val_mar", DbType:="Char(1)")>  _
	Public Property eje_val_mar() As System.Nullable(Of Char)
		Get
			Return Me._eje_val_mar
		End Get
		Set
			If (Me._eje_val_mar.Equals(value) = false) Then
				Me.Oneje_val_marChanging(value)
				Me.SendPropertyChanging
				Me._eje_val_mar = value
				Me.SendPropertyChanged("eje_val_mar")
				Me.Oneje_val_marChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_eje_cod_temporal", DbType:="VarChar(50)")>  _
	Public Property eje_cod_temporal() As String
		Get
			Return Me._eje_cod_temporal
		End Get
		Set
			If (String.Equals(Me._eje_cod_temporal, value) = false) Then
				Me.Oneje_cod_temporalChanging(value)
				Me.SendPropertyChanging
				Me._eje_cod_temporal = value
				Me.SendPropertyChanged("eje_cod_temporal")
				Me.Oneje_cod_temporalChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="eje_cls_agd_cls", Storage:="_agd_cls", ThisKey:="id_eje", OtherKey:="id_eje")>  _
	Public Property agd_cls() As EntitySet(Of agd_cls)
		Get
			Return Me._agd_cls
		End Get
		Set
			Me._agd_cls.Assign(value)
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="eje_cls_apb_cls", Storage:="_apb_cls", ThisKey:="id_eje", OtherKey:="id_eje")>  _
	Public Property apb_cls() As EntitySet(Of apb_cls)
		Get
			Return Me._apb_cls
		End Get
		Set
			Me._apb_cls.Assign(value)
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="eje_cls_apl_cls", Storage:="_apl_cls", ThisKey:="id_eje", OtherKey:="id_eje")>  _
	Public Property apl_cls() As EntitySet(Of apl_cls)
		Get
			Return Me._apl_cls
		End Get
		Set
			Me._apl_cls.Assign(value)
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="eje_cls_apl_cls1", Storage:="_apl_cls1", ThisKey:="id_eje", OtherKey:="id_eje_com")>  _
	Public Property apl_cls1() As EntitySet(Of apl_cls)
		Get
			Return Me._apl_cls1
		End Get
		Set
			Me._apl_cls1.Assign(value)
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="eje_cls_apl_cls2", Storage:="_apl_cls2", ThisKey:="id_eje", OtherKey:="id_eje_ope")>  _
	Public Property apl_cls2() As EntitySet(Of apl_cls)
		Get
			Return Me._apl_cls2
		End Get
		Set
			Me._apl_cls2.Assign(value)
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="eje_cls_cdn_cls", Storage:="_cdn_cls", ThisKey:="id_eje", OtherKey:="id_eje_apb")>  _
	Public Property cdn_cls() As EntitySet(Of cdn_cls)
		Get
			Return Me._cdn_cls
		End Get
		Set
			Me._cdn_cls.Assign(value)
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="eje_cls_cdn_cls1", Storage:="_cdn_cls1", ThisKey:="id_eje", OtherKey:="id_eje_ing")>  _
	Public Property cdn_cls1() As EntitySet(Of cdn_cls)
		Get
			Return Me._cdn_cls1
		End Get
		Set
			Me._cdn_cls1.Assign(value)
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="eje_cls_cli_cls", Storage:="_cli_cls", ThisKey:="id_eje", OtherKey:="id_eje_cod_cob")>  _
	Public Property cli_cls() As EntitySet(Of cli_cls)
		Get
			Return Me._cli_cls
		End Get
		Set
			Me._cli_cls.Assign(value)
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="eje_cls_cli_cls1", Storage:="_cli_cls1", ThisKey:="id_eje", OtherKey:="id_eje_cod_eje")>  _
	Public Property cli_cls1() As EntitySet(Of cli_cls)
		Get
			Return Me._cli_cls1
		End Get
		Set
			Me._cli_cls1.Assign(value)
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="eje_cls_deu_cls", Storage:="_deu_cls", ThisKey:="id_eje", OtherKey:="id_eje_cod_cob")>  _
	Public Property deu_cls() As EntitySet(Of deu_cls)
		Get
			Return Me._deu_cls
		End Get
		Set
			Me._deu_cls.Assign(value)
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="eje_cls_deu_cls1", Storage:="_deu_cls1", ThisKey:="id_eje", OtherKey:="id_eje")>  _
	Public Property deu_cls1() As EntitySet(Of deu_cls)
		Get
			Return Me._deu_cls1
		End Get
		Set
			Me._deu_cls1.Assign(value)
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="eje_cls_deu_mon_cls", Storage:="_deu_mon_cls", ThisKey:="id_eje", OtherKey:="id_eje")>  _
	Public Property deu_mon_cls() As EntitySet(Of deu_mon_cls)
		Get
			Return Me._deu_mon_cls
		End Get
		Set
			Me._deu_mon_cls.Assign(value)
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="eje_cls_dgh_cls", Storage:="_dgh_cls", ThisKey:="id_eje", OtherKey:="id_eje")>  _
	Public Property dgh_cls() As EntitySet(Of dgh_cls)
		Get
			Return Me._dgh_cls
		End Get
		Set
			Me._dgh_cls.Assign(value)
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="eje_cls_dvf_cls", Storage:="_dvf_cls", ThisKey:="id_eje", OtherKey:="id_eje_dvf")>  _
	Public Property dvf_cls() As EntitySet(Of dvf_cls)
		Get
			Return Me._dvf_cls
		End Get
		Set
			Me._dvf_cls.Assign(value)
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="eje_cls_dxn_cls", Storage:="_dxn_cls", ThisKey:="id_eje", OtherKey:="id_eje")>  _
	Public Property dxn_cls() As EntitySet(Of dxn_cls)
		Get
			Return Me._dxn_cls
		End Get
		Set
			Me._dxn_cls.Assign(value)
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="eje_cls_egr_cls", Storage:="_egr_cls", ThisKey:="id_eje", OtherKey:="id_eje")>  _
	Public Property egr_cls() As EntitySet(Of egr_cls)
		Get
			Return Me._egr_cls
		End Get
		Set
			Me._egr_cls.Assign(value)
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="eje_cls_eva_cls", Storage:="_eva_cls", ThisKey:="id_eje", OtherKey:="id_eje")>  _
	Public Property eva_cls() As EntitySet(Of eva_cls)
		Get
			Return Me._eva_cls
		End Get
		Set
			Me._eva_cls.Assign(value)
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="eje_cls_gsn_cls", Storage:="_gsn_cls", ThisKey:="id_eje", OtherKey:="id_eje_cob")>  _
	Public Property gsn_cls() As EntitySet(Of gsn_cls)
		Get
			Return Me._gsn_cls
		End Get
		Set
			Me._gsn_cls.Assign(value)
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="eje_cls_has_cls", Storage:="_has_cls", ThisKey:="id_eje", OtherKey:="id_eje")>  _
	Public Property has_cls() As EntitySet(Of has_cls)
		Get
			Return Me._has_cls
		End Get
		Set
			Me._has_cls.Assign(value)
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="eje_cls_has_cls1", Storage:="_has_cls1", ThisKey:="id_eje", OtherKey:="id_eje_ant")>  _
	Public Property has_cls1() As EntitySet(Of has_cls)
		Get
			Return Me._has_cls1
		End Get
		Set
			Me._has_cls1.Assign(value)
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="eje_cls_has_cls2", Storage:="_has_cls2", ThisKey:="id_eje", OtherKey:="id_eje_nue")>  _
	Public Property has_cls2() As EntitySet(Of has_cls)
		Get
			Return Me._has_cls2
		End Get
		Set
			Me._has_cls2.Assign(value)
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="eje_cls_hre_cls", Storage:="_hre_cls", ThisKey:="id_eje", OtherKey:="id_eje")>  _
	Public Property hre_cls() As EntitySet(Of hre_cls)
		Get
			Return Me._hre_cls
		End Get
		Set
			Me._hre_cls.Assign(value)
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="eje_cls_ing_cls", Storage:="_ing_cls", ThisKey:="id_eje", OtherKey:="id_eje")>  _
	Public Property ing_cls() As EntitySet(Of ing_cls)
		Get
			Return Me._ing_cls
		End Get
		Set
			Me._ing_cls.Assign(value)
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="eje_cls_ncr_cls", Storage:="_ncr_cls", ThisKey:="id_eje", OtherKey:="id_eje")>  _
	Public Property ncr_cls() As EntitySet(Of ncr_cls)
		Get
			Return Me._ncr_cls
		End Get
		Set
			Me._ncr_cls.Assign(value)
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="eje_cls_ncr_cls1", Storage:="_ncr_cls1", ThisKey:="id_eje", OtherKey:="id_eje_rpz")>  _
	Public Property ncr_cls1() As EntitySet(Of ncr_cls)
		Get
			Return Me._ncr_cls1
		End Get
		Set
			Me._ncr_cls1.Assign(value)
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="eje_cls_nes_cls", Storage:="_nes_cls", ThisKey:="id_eje", OtherKey:="id_eje")>  _
	Public Property nes_cls() As EntitySet(Of nes_cls)
		Get
			Return Me._nes_cls
		End Get
		Set
			Me._nes_cls.Assign(value)
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="eje_cls_NEZ_cls", Storage:="_NEZ_cls", ThisKey:="id_eje", OtherKey:="id_eje")>  _
	Public Property NEZ_cls() As EntitySet(Of NEZ_cls)
		Get
			Return Me._NEZ_cls
		End Get
		Set
			Me._NEZ_cls.Assign(value)
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="eje_cls_nma_cls", Storage:="_nma_cls", ThisKey:="id_eje", OtherKey:="id_eje_dep")>  _
	Public Property nma_cls() As EntitySet(Of nma_cls)
		Get
			Return Me._nma_cls
		End Get
		Set
			Me._nma_cls.Assign(value)
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="eje_cls_nma_cls1", Storage:="_nma_cls1", ThisKey:="id_eje", OtherKey:="id_eje_rpb")>  _
	Public Property nma_cls1() As EntitySet(Of nma_cls)
		Get
			Return Me._nma_cls1
		End Get
		Set
			Me._nma_cls1.Assign(value)
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="eje_cls_ope_cls", Storage:="_ope_cls", ThisKey:="id_eje", OtherKey:="id_eje")>  _
	Public Property ope_cls() As EntitySet(Of ope_cls)
		Get
			Return Me._ope_cls
		End Get
		Set
			Me._ope_cls.Assign(value)
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="eje_cls_opn_cls", Storage:="_opn_cls", ThisKey:="id_eje", OtherKey:="id_eje")>  _
	Public Property opn_cls() As EntitySet(Of opn_cls)
		Get
			Return Me._opn_cls
		End Get
		Set
			Me._opn_cls.Assign(value)
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="eje_cls_opo_cls", Storage:="_opo_cls", ThisKey:="id_eje", OtherKey:="id_eje")>  _
	Public Property opo_cls() As EntitySet(Of opo_cls)
		Get
			Return Me._opo_cls
		End Get
		Set
			Me._opo_cls.Assign(value)
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="eje_cls_pta_cls", Storage:="_pta_cls", ThisKey:="id_eje", OtherKey:="id_eje")>  _
	Public Property pta_cls() As EntitySet(Of pta_cls)
		Get
			Return Me._pta_cls
		End Get
		Set
			Me._pta_cls.Assign(value)
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="eje_cls_rxo_cls", Storage:="_rxo_cls", ThisKey:="id_eje", OtherKey:="id_eje")>  _
	Public Property rxo_cls() As EntitySet(Of rxo_cls)
		Get
			Return Me._rxo_cls
		End Get
		Set
			Me._rxo_cls.Assign(value)
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="eje_cls_spg_cls", Storage:="_spg_cls", ThisKey:="id_eje", OtherKey:="id_eje_sol")>  _
	Public Property spg_cls() As EntitySet(Of spg_cls)
		Get
			Return Me._spg_cls
		End Get
		Set
			Me._spg_cls.Assign(value)
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="eje_cls_spg_cls1", Storage:="_spg_cls1", ThisKey:="id_eje", OtherKey:="id_eje_apb")>  _
	Public Property spg_cls1() As EntitySet(Of spg_cls)
		Get
			Return Me._spg_cls1
		End Get
		Set
			Me._spg_cls1.Assign(value)
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="suc_cls_eje_cls", Storage:="_suc_cls", ThisKey:="id_suc", OtherKey:="id_suc", IsForeignKey:=true)>  _
	Public Property suc_cls() As suc_cls
		Get
			Return Me._suc_cls.Entity
		End Get
		Set
			Dim previousValue As suc_cls = Me._suc_cls.Entity
			If ((Object.Equals(previousValue, value) = false)  _
						OrElse (Me._suc_cls.HasLoadedOrAssignedValue = false)) Then
				Me.SendPropertyChanging
				If ((previousValue Is Nothing)  _
							= false) Then
					Me._suc_cls.Entity = Nothing
					previousValue.eje_cls.Remove(Me)
				End If
				Me._suc_cls.Entity = value
				If ((value Is Nothing)  _
							= false) Then
					value.eje_cls.Add(Me)
					Me._id_suc = value.id_suc
				Else
					Me._id_suc = CType(Nothing, Nullable(Of Integer))
				End If
				Me.SendPropertyChanged("suc_cls")
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="P_0045_cls_eje_cls", Storage:="_P_0045_cls", ThisKey:="id_P_0045", OtherKey:="id_P_0045", IsForeignKey:=true)>  _
	Public Property P_0045_cls() As P_0045_cls
		Get
			Return Me._P_0045_cls.Entity
		End Get
		Set
			Dim previousValue As P_0045_cls = Me._P_0045_cls.Entity
			If ((Object.Equals(previousValue, value) = false)  _
						OrElse (Me._P_0045_cls.HasLoadedOrAssignedValue = false)) Then
				Me.SendPropertyChanging
				If ((previousValue Is Nothing)  _
							= false) Then
					Me._P_0045_cls.Entity = Nothing
					previousValue.eje_cls.Remove(Me)
				End If
				Me._P_0045_cls.Entity = value
				If ((value Is Nothing)  _
							= false) Then
					value.eje_cls.Add(Me)
					Me._id_P_0045 = value.id_P_0045
				Else
					Me._id_P_0045 = CType(Nothing, Nullable(Of Integer))
				End If
				Me.SendPropertyChanged("P_0045_cls")
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="P_0048_cls_eje_cls", Storage:="_P_0048_cls", ThisKey:="id_P_0048", OtherKey:="id_P_0048", IsForeignKey:=true)>  _
	Public Property P_0048_cls() As P_0048_cls
		Get
			Return Me._P_0048_cls.Entity
		End Get
		Set
			Dim previousValue As P_0048_cls = Me._P_0048_cls.Entity
			If ((Object.Equals(previousValue, value) = false)  _
						OrElse (Me._P_0048_cls.HasLoadedOrAssignedValue = false)) Then
				Me.SendPropertyChanging
				If ((previousValue Is Nothing)  _
							= false) Then
					Me._P_0048_cls.Entity = Nothing
					previousValue.eje_cls.Remove(Me)
				End If
				Me._P_0048_cls.Entity = value
				If ((value Is Nothing)  _
							= false) Then
					value.eje_cls.Add(Me)
					Me._id_P_0048 = value.id_P_0048
				Else
					Me._id_P_0048 = CType(Nothing, Nullable(Of Integer))
				End If
				Me.SendPropertyChanged("P_0048_cls")
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
	
	Private Sub attach_agd_cls(ByVal entity As agd_cls)
		Me.SendPropertyChanging
		entity.eje_cls = Me
	End Sub
	
	Private Sub detach_agd_cls(ByVal entity As agd_cls)
		Me.SendPropertyChanging
		entity.eje_cls = Nothing
	End Sub
	
	Private Sub attach_apb_cls(ByVal entity As apb_cls)
		Me.SendPropertyChanging
		entity.eje_cls = Me
	End Sub
	
	Private Sub detach_apb_cls(ByVal entity As apb_cls)
		Me.SendPropertyChanging
		entity.eje_cls = Nothing
	End Sub
	
	Private Sub attach_apl_cls(ByVal entity As apl_cls)
		Me.SendPropertyChanging
		entity.eje = Me
	End Sub
	
	Private Sub detach_apl_cls(ByVal entity As apl_cls)
		Me.SendPropertyChanging
		entity.eje = Nothing
	End Sub
	
	Private Sub attach_apl_cls1(ByVal entity As apl_cls)
		Me.SendPropertyChanging
		entity.eje1 = Me
	End Sub
	
	Private Sub detach_apl_cls1(ByVal entity As apl_cls)
		Me.SendPropertyChanging
		entity.eje1 = Nothing
	End Sub
	
	Private Sub attach_apl_cls2(ByVal entity As apl_cls)
		Me.SendPropertyChanging
		entity.eje_cls = Me
	End Sub
	
	Private Sub detach_apl_cls2(ByVal entity As apl_cls)
		Me.SendPropertyChanging
		entity.eje_cls = Nothing
	End Sub
	
	Private Sub attach_cdn_cls(ByVal entity As cdn_cls)
		Me.SendPropertyChanging
		entity.eje = Me
	End Sub
	
	Private Sub detach_cdn_cls(ByVal entity As cdn_cls)
		Me.SendPropertyChanging
		entity.eje = Nothing
	End Sub
	
	Private Sub attach_cdn_cls1(ByVal entity As cdn_cls)
		Me.SendPropertyChanging
		entity.eje_cls = Me
	End Sub
	
	Private Sub detach_cdn_cls1(ByVal entity As cdn_cls)
		Me.SendPropertyChanging
		entity.eje_cls = Nothing
	End Sub
	
	Private Sub attach_cli_cls(ByVal entity As cli_cls)
		Me.SendPropertyChanging
		entity.eje = Me
	End Sub
	
	Private Sub detach_cli_cls(ByVal entity As cli_cls)
		Me.SendPropertyChanging
		entity.eje = Nothing
	End Sub
	
	Private Sub attach_cli_cls1(ByVal entity As cli_cls)
		Me.SendPropertyChanging
		entity.eje_cls = Me
	End Sub
	
	Private Sub detach_cli_cls1(ByVal entity As cli_cls)
		Me.SendPropertyChanging
		entity.eje_cls = Nothing
	End Sub
	
	Private Sub attach_deu_cls(ByVal entity As deu_cls)
		Me.SendPropertyChanging
		entity.eje = Me
	End Sub
	
	Private Sub detach_deu_cls(ByVal entity As deu_cls)
		Me.SendPropertyChanging
		entity.eje = Nothing
	End Sub
	
	Private Sub attach_deu_cls1(ByVal entity As deu_cls)
		Me.SendPropertyChanging
		entity.eje_cls = Me
	End Sub
	
	Private Sub detach_deu_cls1(ByVal entity As deu_cls)
		Me.SendPropertyChanging
		entity.eje_cls = Nothing
	End Sub
	
	Private Sub attach_deu_mon_cls(ByVal entity As deu_mon_cls)
		Me.SendPropertyChanging
		entity.eje_cls = Me
	End Sub
	
	Private Sub detach_deu_mon_cls(ByVal entity As deu_mon_cls)
		Me.SendPropertyChanging
		entity.eje_cls = Nothing
	End Sub
	
	Private Sub attach_dgh_cls(ByVal entity As dgh_cls)
		Me.SendPropertyChanging
		entity.eje_cls = Me
	End Sub
	
	Private Sub detach_dgh_cls(ByVal entity As dgh_cls)
		Me.SendPropertyChanging
		entity.eje_cls = Nothing
	End Sub
	
	Private Sub attach_dvf_cls(ByVal entity As dvf_cls)
		Me.SendPropertyChanging
		entity.eje_cls = Me
	End Sub
	
	Private Sub detach_dvf_cls(ByVal entity As dvf_cls)
		Me.SendPropertyChanging
		entity.eje_cls = Nothing
	End Sub
	
	Private Sub attach_dxn_cls(ByVal entity As dxn_cls)
		Me.SendPropertyChanging
		entity.eje_cls = Me
	End Sub
	
	Private Sub detach_dxn_cls(ByVal entity As dxn_cls)
		Me.SendPropertyChanging
		entity.eje_cls = Nothing
	End Sub
	
	Private Sub attach_egr_cls(ByVal entity As egr_cls)
		Me.SendPropertyChanging
		entity.eje_cls = Me
	End Sub
	
	Private Sub detach_egr_cls(ByVal entity As egr_cls)
		Me.SendPropertyChanging
		entity.eje_cls = Nothing
	End Sub
	
	Private Sub attach_eva_cls(ByVal entity As eva_cls)
		Me.SendPropertyChanging
		entity.eje_cls = Me
	End Sub
	
	Private Sub detach_eva_cls(ByVal entity As eva_cls)
		Me.SendPropertyChanging
		entity.eje_cls = Nothing
	End Sub
	
	Private Sub attach_gsn_cls(ByVal entity As gsn_cls)
		Me.SendPropertyChanging
		entity.eje_cls = Me
	End Sub
	
	Private Sub detach_gsn_cls(ByVal entity As gsn_cls)
		Me.SendPropertyChanging
		entity.eje_cls = Nothing
	End Sub
	
	Private Sub attach_has_cls(ByVal entity As has_cls)
		Me.SendPropertyChanging
		entity.eje = Me
	End Sub
	
	Private Sub detach_has_cls(ByVal entity As has_cls)
		Me.SendPropertyChanging
		entity.eje = Nothing
	End Sub
	
	Private Sub attach_has_cls1(ByVal entity As has_cls)
		Me.SendPropertyChanging
		entity.eje1 = Me
	End Sub
	
	Private Sub detach_has_cls1(ByVal entity As has_cls)
		Me.SendPropertyChanging
		entity.eje1 = Nothing
	End Sub
	
	Private Sub attach_has_cls2(ByVal entity As has_cls)
		Me.SendPropertyChanging
		entity.eje_cls = Me
	End Sub
	
	Private Sub detach_has_cls2(ByVal entity As has_cls)
		Me.SendPropertyChanging
		entity.eje_cls = Nothing
	End Sub
	
	Private Sub attach_hre_cls(ByVal entity As hre_cls)
		Me.SendPropertyChanging
		entity.eje_cls = Me
	End Sub
	
	Private Sub detach_hre_cls(ByVal entity As hre_cls)
		Me.SendPropertyChanging
		entity.eje_cls = Nothing
	End Sub
	
	Private Sub attach_ing_cls(ByVal entity As ing_cls)
		Me.SendPropertyChanging
		entity.eje_cls = Me
	End Sub
	
	Private Sub detach_ing_cls(ByVal entity As ing_cls)
		Me.SendPropertyChanging
		entity.eje_cls = Nothing
	End Sub
	
	Private Sub attach_ncr_cls(ByVal entity As ncr_cls)
		Me.SendPropertyChanging
		entity.eje = Me
	End Sub
	
	Private Sub detach_ncr_cls(ByVal entity As ncr_cls)
		Me.SendPropertyChanging
		entity.eje = Nothing
	End Sub
	
	Private Sub attach_ncr_cls1(ByVal entity As ncr_cls)
		Me.SendPropertyChanging
		entity.eje_cls = Me
	End Sub
	
	Private Sub detach_ncr_cls1(ByVal entity As ncr_cls)
		Me.SendPropertyChanging
		entity.eje_cls = Nothing
	End Sub
	
	Private Sub attach_nes_cls(ByVal entity As nes_cls)
		Me.SendPropertyChanging
		entity.eje_cls = Me
	End Sub
	
	Private Sub detach_nes_cls(ByVal entity As nes_cls)
		Me.SendPropertyChanging
		entity.eje_cls = Nothing
	End Sub
	
	Private Sub attach_NEZ_cls(ByVal entity As NEZ_cls)
		Me.SendPropertyChanging
		entity.eje_cls = Me
	End Sub
	
	Private Sub detach_NEZ_cls(ByVal entity As NEZ_cls)
		Me.SendPropertyChanging
		entity.eje_cls = Nothing
	End Sub
	
	Private Sub attach_nma_cls(ByVal entity As nma_cls)
		Me.SendPropertyChanging
		entity.eje = Me
	End Sub
	
	Private Sub detach_nma_cls(ByVal entity As nma_cls)
		Me.SendPropertyChanging
		entity.eje = Nothing
	End Sub
	
	Private Sub attach_nma_cls1(ByVal entity As nma_cls)
		Me.SendPropertyChanging
		entity.eje_cls = Me
	End Sub
	
	Private Sub detach_nma_cls1(ByVal entity As nma_cls)
		Me.SendPropertyChanging
		entity.eje_cls = Nothing
	End Sub
	
	Private Sub attach_ope_cls(ByVal entity As ope_cls)
		Me.SendPropertyChanging
		entity.eje_cls = Me
	End Sub
	
	Private Sub detach_ope_cls(ByVal entity As ope_cls)
		Me.SendPropertyChanging
		entity.eje_cls = Nothing
	End Sub
	
	Private Sub attach_opn_cls(ByVal entity As opn_cls)
		Me.SendPropertyChanging
		entity.eje_cls = Me
	End Sub
	
	Private Sub detach_opn_cls(ByVal entity As opn_cls)
		Me.SendPropertyChanging
		entity.eje_cls = Nothing
	End Sub
	
	Private Sub attach_opo_cls(ByVal entity As opo_cls)
		Me.SendPropertyChanging
		entity.eje_cls = Me
	End Sub
	
	Private Sub detach_opo_cls(ByVal entity As opo_cls)
		Me.SendPropertyChanging
		entity.eje_cls = Nothing
	End Sub
	
	Private Sub attach_pta_cls(ByVal entity As pta_cls)
		Me.SendPropertyChanging
		entity.eje_cls = Me
	End Sub
	
	Private Sub detach_pta_cls(ByVal entity As pta_cls)
		Me.SendPropertyChanging
		entity.eje_cls = Nothing
	End Sub
	
	Private Sub attach_rxo_cls(ByVal entity As rxo_cls)
		Me.SendPropertyChanging
		entity.eje_cls = Me
	End Sub
	
	Private Sub detach_rxo_cls(ByVal entity As rxo_cls)
		Me.SendPropertyChanging
		entity.eje_cls = Nothing
	End Sub
	
	Private Sub attach_spg_cls(ByVal entity As spg_cls)
		Me.SendPropertyChanging
		entity.eje = Me
	End Sub
	
	Private Sub detach_spg_cls(ByVal entity As spg_cls)
		Me.SendPropertyChanging
		entity.eje = Nothing
	End Sub
	
	Private Sub attach_spg_cls1(ByVal entity As spg_cls)
		Me.SendPropertyChanging
		entity.eje_cls = Me
	End Sub
	
	Private Sub detach_spg_cls1(ByVal entity As spg_cls)
		Me.SendPropertyChanging
		entity.eje_cls = Nothing
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.tmc")>  _
Partial Public Class tmc_cls
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _id_tmc As Integer
	
	Private _tmc_fec As Date
	
	Private _tmc_val As Decimal
	
	Private _tmc_est As Char
	
	Private _tmc_mor As Decimal
	
	Private _USUARIO As String
	
	Private _TMC_FEC_INI As System.Nullable(Of Date)
	
	Private _FEC_TAS_TER As System.Nullable(Of Date)
	
    #Region "Definiciones de métodos de extensibilidad"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub Onid_tmcChanging(value As Integer)
    End Sub
    Partial Private Sub Onid_tmcChanged()
    End Sub
    Partial Private Sub Ontmc_fecChanging(value As Date)
    End Sub
    Partial Private Sub Ontmc_fecChanged()
    End Sub
    Partial Private Sub Ontmc_valChanging(value As Decimal)
    End Sub
    Partial Private Sub Ontmc_valChanged()
    End Sub
    Partial Private Sub Ontmc_estChanging(value As Char)
    End Sub
    Partial Private Sub Ontmc_estChanged()
    End Sub
    Partial Private Sub Ontmc_morChanging(value As Decimal)
    End Sub
    Partial Private Sub Ontmc_morChanged()
    End Sub
    Partial Private Sub OnUSUARIOChanging(value As String)
    End Sub
    Partial Private Sub OnUSUARIOChanged()
    End Sub
    Partial Private Sub OnTMC_FEC_INIChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnTMC_FEC_INIChanged()
    End Sub
    Partial Private Sub OnFEC_TAS_TERChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnFEC_TAS_TERChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_id_tmc", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property id_tmc() As Integer
		Get
			Return Me._id_tmc
		End Get
		Set
			If ((Me._id_tmc = value)  _
						= false) Then
				Me.Onid_tmcChanging(value)
				Me.SendPropertyChanging
				Me._id_tmc = value
				Me.SendPropertyChanged("id_tmc")
				Me.Onid_tmcChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_tmc_fec", DbType:="DateTime NOT NULL")>  _
	Public Property tmc_fec() As Date
		Get
			Return Me._tmc_fec
		End Get
		Set
			If ((Me._tmc_fec = value)  _
						= false) Then
				Me.Ontmc_fecChanging(value)
				Me.SendPropertyChanging
				Me._tmc_fec = value
				Me.SendPropertyChanged("tmc_fec")
				Me.Ontmc_fecChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_tmc_val", DbType:="Decimal(5,2) NOT NULL")>  _
	Public Property tmc_val() As Decimal
		Get
			Return Me._tmc_val
		End Get
		Set
			If ((Me._tmc_val = value)  _
						= false) Then
				Me.Ontmc_valChanging(value)
				Me.SendPropertyChanging
				Me._tmc_val = value
				Me.SendPropertyChanged("tmc_val")
				Me.Ontmc_valChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_tmc_est", DbType:="Char(1) NOT NULL")>  _
	Public Property tmc_est() As Char
		Get
			Return Me._tmc_est
		End Get
		Set
			If ((Me._tmc_est = value)  _
						= false) Then
				Me.Ontmc_estChanging(value)
				Me.SendPropertyChanging
				Me._tmc_est = value
				Me.SendPropertyChanged("tmc_est")
				Me.Ontmc_estChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_tmc_mor", DbType:="Decimal(5,2) NOT NULL")>  _
	Public Property tmc_mor() As Decimal
		Get
			Return Me._tmc_mor
		End Get
		Set
			If ((Me._tmc_mor = value)  _
						= false) Then
				Me.Ontmc_morChanging(value)
				Me.SendPropertyChanging
				Me._tmc_mor = value
				Me.SendPropertyChanged("tmc_mor")
				Me.Ontmc_morChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_USUARIO", DbType:="VarChar(50)")>  _
	Public Property USUARIO() As String
		Get
			Return Me._USUARIO
		End Get
		Set
			If (String.Equals(Me._USUARIO, value) = false) Then
				Me.OnUSUARIOChanging(value)
				Me.SendPropertyChanging
				Me._USUARIO = value
				Me.SendPropertyChanged("USUARIO")
				Me.OnUSUARIOChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TMC_FEC_INI", DbType:="DateTime")>  _
	Public Property TMC_FEC_INI() As System.Nullable(Of Date)
		Get
			Return Me._TMC_FEC_INI
		End Get
		Set
			If (Me._TMC_FEC_INI.Equals(value) = false) Then
				Me.OnTMC_FEC_INIChanging(value)
				Me.SendPropertyChanging
				Me._TMC_FEC_INI = value
				Me.SendPropertyChanged("TMC_FEC_INI")
				Me.OnTMC_FEC_INIChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FEC_TAS_TER", DbType:="DateTime")>  _
	Public Property FEC_TAS_TER() As System.Nullable(Of Date)
		Get
			Return Me._FEC_TAS_TER
		End Get
		Set
			If (Me._FEC_TAS_TER.Equals(value) = false) Then
				Me.OnFEC_TAS_TERChanging(value)
				Me.SendPropertyChanging
				Me._FEC_TAS_TER = value
				Me.SendPropertyChanged("FEC_TAS_TER")
				Me.OnFEC_TAS_TERChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

Partial Public Class sp_op_cierre_clienteResult
	
	Private _Column1 As System.Nullable(Of Char)
	
	Public Sub New()
		MyBase.New
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Column1", DbType:="Char(1)")>  _
	Public Property Column1() As System.Nullable(Of Char)
		Get
			Return Me._Column1
		End Get
		Set
			If (Me._Column1.Equals(value) = false) Then
				Me._Column1 = value
			End If
		End Set
	End Property
End Class

Partial Public Class sp_Reporte_Radicar_FacturasResult
	
	Private _deu_ide As String
	
	Private _deu_dig_ito As System.Nullable(Of Char)
	
	Private _raz_soc As String
	
	Private _deu_dml As String
	
	Private _id_doc As Decimal
	
	Private _dsi_num As Decimal
	
	Private _doc_sdo_ddr As System.Nullable(Of Decimal)
	
	Private _dsi_fev_rea As System.Nullable(Of Date)
	
	Public Sub New()
		MyBase.New
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_deu_ide", DbType:="Char(12) NOT NULL", CanBeNull:=false)>  _
	Public Property deu_ide() As String
		Get
			Return Me._deu_ide
		End Get
		Set
			If (String.Equals(Me._deu_ide, value) = false) Then
				Me._deu_ide = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_deu_dig_ito", DbType:="Char(1)")>  _
	Public Property deu_dig_ito() As System.Nullable(Of Char)
		Get
			Return Me._deu_dig_ito
		End Get
		Set
			If (Me._deu_dig_ito.Equals(value) = false) Then
				Me._deu_dig_ito = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_raz_soc", DbType:="VarChar(112)")>  _
	Public Property raz_soc() As String
		Get
			Return Me._raz_soc
		End Get
		Set
			If (String.Equals(Me._raz_soc, value) = false) Then
				Me._raz_soc = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_deu_dml", DbType:="VarChar(50)")>  _
	Public Property deu_dml() As String
		Get
			Return Me._deu_dml
		End Get
		Set
			If (String.Equals(Me._deu_dml, value) = false) Then
				Me._deu_dml = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_id_doc", DbType:="Decimal(0,0) NOT NULL")>  _
	Public Property id_doc() As Decimal
		Get
			Return Me._id_doc
		End Get
		Set
			If ((Me._id_doc = value)  _
						= false) Then
				Me._id_doc = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_dsi_num", DbType:="Decimal(0,0) NOT NULL")>  _
	Public Property dsi_num() As Decimal
		Get
			Return Me._dsi_num
		End Get
		Set
			If ((Me._dsi_num = value)  _
						= false) Then
				Me._dsi_num = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_doc_sdo_ddr", DbType:="Money")>  _
	Public Property doc_sdo_ddr() As System.Nullable(Of Decimal)
		Get
			Return Me._doc_sdo_ddr
		End Get
		Set
			If (Me._doc_sdo_ddr.Equals(value) = false) Then
				Me._doc_sdo_ddr = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_dsi_fev_rea", DbType:="DateTime")>  _
	Public Property dsi_fev_rea() As System.Nullable(Of Date)
		Get
			Return Me._dsi_fev_rea
		End Get
		Set
			If (Me._dsi_fev_rea.Equals(value) = false) Then
				Me._dsi_fev_rea = value
			End If
		End Set
	End Property
End Class
